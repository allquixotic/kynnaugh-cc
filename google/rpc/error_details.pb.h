// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/rpc/error_details.proto

#ifndef PROTOBUF_google_2frpc_2ferror_5fdetails_2eproto__INCLUDED
#define PROTOBUF_google_2frpc_2ferror_5fdetails_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace rpc {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto();
void protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

class BadRequest;
class BadRequest_FieldViolation;
class DebugInfo;
class Help;
class Help_Link;
class LocalizedMessage;
class QuotaFailure;
class QuotaFailure_Violation;
class RequestInfo;
class ResourceInfo;
class RetryInfo;

// ===================================================================

class RetryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.RetryInfo) */ {
 public:
  RetryInfo();
  virtual ~RetryInfo();

  RetryInfo(const RetryInfo& from);

  inline RetryInfo& operator=(const RetryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetryInfo& default_instance();

  static const RetryInfo* internal_default_instance();

  void Swap(RetryInfo* other);

  // implements Message ----------------------------------------------

  inline RetryInfo* New() const { return New(NULL); }

  RetryInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetryInfo& from);
  void MergeFrom(const RetryInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RetryInfo* other);
  void UnsafeMergeFrom(const RetryInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Duration retry_delay = 1;
  bool has_retry_delay() const;
  void clear_retry_delay();
  static const int kRetryDelayFieldNumber = 1;
  const ::google::protobuf::Duration& retry_delay() const;
  ::google::protobuf::Duration* mutable_retry_delay();
  ::google::protobuf::Duration* release_retry_delay();
  void set_allocated_retry_delay(::google::protobuf::Duration* retry_delay);

  // @@protoc_insertion_point(class_scope:google.rpc.RetryInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Duration* retry_delay_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RetryInfo> RetryInfo_default_instance_;

// -------------------------------------------------------------------

class DebugInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.DebugInfo) */ {
 public:
  DebugInfo();
  virtual ~DebugInfo();

  DebugInfo(const DebugInfo& from);

  inline DebugInfo& operator=(const DebugInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugInfo& default_instance();

  static const DebugInfo* internal_default_instance();

  void Swap(DebugInfo* other);

  // implements Message ----------------------------------------------

  inline DebugInfo* New() const { return New(NULL); }

  DebugInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugInfo& from);
  void MergeFrom(const DebugInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DebugInfo* other);
  void UnsafeMergeFrom(const DebugInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string stack_entries = 1;
  int stack_entries_size() const;
  void clear_stack_entries();
  static const int kStackEntriesFieldNumber = 1;
  const ::std::string& stack_entries(int index) const;
  ::std::string* mutable_stack_entries(int index);
  void set_stack_entries(int index, const ::std::string& value);
  void set_stack_entries(int index, const char* value);
  void set_stack_entries(int index, const char* value, size_t size);
  ::std::string* add_stack_entries();
  void add_stack_entries(const ::std::string& value);
  void add_stack_entries(const char* value);
  void add_stack_entries(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& stack_entries() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stack_entries();

  // optional string detail = 2;
  void clear_detail();
  static const int kDetailFieldNumber = 2;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // @@protoc_insertion_point(class_scope:google.rpc.DebugInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> stack_entries_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DebugInfo> DebugInfo_default_instance_;

// -------------------------------------------------------------------

class QuotaFailure_Violation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.QuotaFailure.Violation) */ {
 public:
  QuotaFailure_Violation();
  virtual ~QuotaFailure_Violation();

  QuotaFailure_Violation(const QuotaFailure_Violation& from);

  inline QuotaFailure_Violation& operator=(const QuotaFailure_Violation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaFailure_Violation& default_instance();

  static const QuotaFailure_Violation* internal_default_instance();

  void Swap(QuotaFailure_Violation* other);

  // implements Message ----------------------------------------------

  inline QuotaFailure_Violation* New() const { return New(NULL); }

  QuotaFailure_Violation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuotaFailure_Violation& from);
  void MergeFrom(const QuotaFailure_Violation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuotaFailure_Violation* other);
  void UnsafeMergeFrom(const QuotaFailure_Violation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string subject = 1;
  void clear_subject();
  static const int kSubjectFieldNumber = 1;
  const ::std::string& subject() const;
  void set_subject(const ::std::string& value);
  void set_subject(const char* value);
  void set_subject(const char* value, size_t size);
  ::std::string* mutable_subject();
  ::std::string* release_subject();
  void set_allocated_subject(::std::string* subject);

  // optional string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:google.rpc.QuotaFailure.Violation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr subject_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuotaFailure_Violation> QuotaFailure_Violation_default_instance_;

// -------------------------------------------------------------------

class QuotaFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.QuotaFailure) */ {
 public:
  QuotaFailure();
  virtual ~QuotaFailure();

  QuotaFailure(const QuotaFailure& from);

  inline QuotaFailure& operator=(const QuotaFailure& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaFailure& default_instance();

  static const QuotaFailure* internal_default_instance();

  void Swap(QuotaFailure* other);

  // implements Message ----------------------------------------------

  inline QuotaFailure* New() const { return New(NULL); }

  QuotaFailure* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuotaFailure& from);
  void MergeFrom(const QuotaFailure& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuotaFailure* other);
  void UnsafeMergeFrom(const QuotaFailure& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QuotaFailure_Violation Violation;

  // accessors -------------------------------------------------------

  // repeated .google.rpc.QuotaFailure.Violation violations = 1;
  int violations_size() const;
  void clear_violations();
  static const int kViolationsFieldNumber = 1;
  const ::google::rpc::QuotaFailure_Violation& violations(int index) const;
  ::google::rpc::QuotaFailure_Violation* mutable_violations(int index);
  ::google::rpc::QuotaFailure_Violation* add_violations();
  ::google::protobuf::RepeatedPtrField< ::google::rpc::QuotaFailure_Violation >*
      mutable_violations();
  const ::google::protobuf::RepeatedPtrField< ::google::rpc::QuotaFailure_Violation >&
      violations() const;

  // @@protoc_insertion_point(class_scope:google.rpc.QuotaFailure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::rpc::QuotaFailure_Violation > violations_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuotaFailure> QuotaFailure_default_instance_;

// -------------------------------------------------------------------

class BadRequest_FieldViolation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.BadRequest.FieldViolation) */ {
 public:
  BadRequest_FieldViolation();
  virtual ~BadRequest_FieldViolation();

  BadRequest_FieldViolation(const BadRequest_FieldViolation& from);

  inline BadRequest_FieldViolation& operator=(const BadRequest_FieldViolation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BadRequest_FieldViolation& default_instance();

  static const BadRequest_FieldViolation* internal_default_instance();

  void Swap(BadRequest_FieldViolation* other);

  // implements Message ----------------------------------------------

  inline BadRequest_FieldViolation* New() const { return New(NULL); }

  BadRequest_FieldViolation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BadRequest_FieldViolation& from);
  void MergeFrom(const BadRequest_FieldViolation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BadRequest_FieldViolation* other);
  void UnsafeMergeFrom(const BadRequest_FieldViolation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string field = 1;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  const ::std::string& field() const;
  void set_field(const ::std::string& value);
  void set_field(const char* value);
  void set_field(const char* value, size_t size);
  ::std::string* mutable_field();
  ::std::string* release_field();
  void set_allocated_field(::std::string* field);

  // optional string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:google.rpc.BadRequest.FieldViolation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr field_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BadRequest_FieldViolation> BadRequest_FieldViolation_default_instance_;

// -------------------------------------------------------------------

class BadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.BadRequest) */ {
 public:
  BadRequest();
  virtual ~BadRequest();

  BadRequest(const BadRequest& from);

  inline BadRequest& operator=(const BadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BadRequest& default_instance();

  static const BadRequest* internal_default_instance();

  void Swap(BadRequest* other);

  // implements Message ----------------------------------------------

  inline BadRequest* New() const { return New(NULL); }

  BadRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BadRequest& from);
  void MergeFrom(const BadRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BadRequest* other);
  void UnsafeMergeFrom(const BadRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BadRequest_FieldViolation FieldViolation;

  // accessors -------------------------------------------------------

  // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1;
  int field_violations_size() const;
  void clear_field_violations();
  static const int kFieldViolationsFieldNumber = 1;
  const ::google::rpc::BadRequest_FieldViolation& field_violations(int index) const;
  ::google::rpc::BadRequest_FieldViolation* mutable_field_violations(int index);
  ::google::rpc::BadRequest_FieldViolation* add_field_violations();
  ::google::protobuf::RepeatedPtrField< ::google::rpc::BadRequest_FieldViolation >*
      mutable_field_violations();
  const ::google::protobuf::RepeatedPtrField< ::google::rpc::BadRequest_FieldViolation >&
      field_violations() const;

  // @@protoc_insertion_point(class_scope:google.rpc.BadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::rpc::BadRequest_FieldViolation > field_violations_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BadRequest> BadRequest_default_instance_;

// -------------------------------------------------------------------

class RequestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.RequestInfo) */ {
 public:
  RequestInfo();
  virtual ~RequestInfo();

  RequestInfo(const RequestInfo& from);

  inline RequestInfo& operator=(const RequestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestInfo& default_instance();

  static const RequestInfo* internal_default_instance();

  void Swap(RequestInfo* other);

  // implements Message ----------------------------------------------

  inline RequestInfo* New() const { return New(NULL); }

  RequestInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestInfo& from);
  void MergeFrom(const RequestInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestInfo* other);
  void UnsafeMergeFrom(const RequestInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // optional string serving_data = 2;
  void clear_serving_data();
  static const int kServingDataFieldNumber = 2;
  const ::std::string& serving_data() const;
  void set_serving_data(const ::std::string& value);
  void set_serving_data(const char* value);
  void set_serving_data(const char* value, size_t size);
  ::std::string* mutable_serving_data();
  ::std::string* release_serving_data();
  void set_allocated_serving_data(::std::string* serving_data);

  // @@protoc_insertion_point(class_scope:google.rpc.RequestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr serving_data_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RequestInfo> RequestInfo_default_instance_;

// -------------------------------------------------------------------

class ResourceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.ResourceInfo) */ {
 public:
  ResourceInfo();
  virtual ~ResourceInfo();

  ResourceInfo(const ResourceInfo& from);

  inline ResourceInfo& operator=(const ResourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceInfo& default_instance();

  static const ResourceInfo* internal_default_instance();

  void Swap(ResourceInfo* other);

  // implements Message ----------------------------------------------

  inline ResourceInfo* New() const { return New(NULL); }

  ResourceInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceInfo& from);
  void MergeFrom(const ResourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceInfo* other);
  void UnsafeMergeFrom(const ResourceInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string resource_type = 1;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 1;
  const ::std::string& resource_type() const;
  void set_resource_type(const ::std::string& value);
  void set_resource_type(const char* value);
  void set_resource_type(const char* value, size_t size);
  ::std::string* mutable_resource_type();
  ::std::string* release_resource_type();
  void set_allocated_resource_type(::std::string* resource_type);

  // optional string resource_name = 2;
  void clear_resource_name();
  static const int kResourceNameFieldNumber = 2;
  const ::std::string& resource_name() const;
  void set_resource_name(const ::std::string& value);
  void set_resource_name(const char* value);
  void set_resource_name(const char* value, size_t size);
  ::std::string* mutable_resource_name();
  ::std::string* release_resource_name();
  void set_allocated_resource_name(::std::string* resource_name);

  // optional string owner = 3;
  void clear_owner();
  static const int kOwnerFieldNumber = 3;
  const ::std::string& owner() const;
  void set_owner(const ::std::string& value);
  void set_owner(const char* value);
  void set_owner(const char* value, size_t size);
  ::std::string* mutable_owner();
  ::std::string* release_owner();
  void set_allocated_owner(::std::string* owner);

  // optional string description = 4;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:google.rpc.ResourceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr resource_type_;
  ::google::protobuf::internal::ArenaStringPtr resource_name_;
  ::google::protobuf::internal::ArenaStringPtr owner_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceInfo> ResourceInfo_default_instance_;

// -------------------------------------------------------------------

class Help_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.Help.Link) */ {
 public:
  Help_Link();
  virtual ~Help_Link();

  Help_Link(const Help_Link& from);

  inline Help_Link& operator=(const Help_Link& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Help_Link& default_instance();

  static const Help_Link* internal_default_instance();

  void Swap(Help_Link* other);

  // implements Message ----------------------------------------------

  inline Help_Link* New() const { return New(NULL); }

  Help_Link* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Help_Link& from);
  void MergeFrom(const Help_Link& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Help_Link* other);
  void UnsafeMergeFrom(const Help_Link& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:google.rpc.Help.Link)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Help_Link> Help_Link_default_instance_;

// -------------------------------------------------------------------

class Help : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.Help) */ {
 public:
  Help();
  virtual ~Help();

  Help(const Help& from);

  inline Help& operator=(const Help& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Help& default_instance();

  static const Help* internal_default_instance();

  void Swap(Help* other);

  // implements Message ----------------------------------------------

  inline Help* New() const { return New(NULL); }

  Help* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Help& from);
  void MergeFrom(const Help& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Help* other);
  void UnsafeMergeFrom(const Help& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Help_Link Link;

  // accessors -------------------------------------------------------

  // repeated .google.rpc.Help.Link links = 1;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 1;
  const ::google::rpc::Help_Link& links(int index) const;
  ::google::rpc::Help_Link* mutable_links(int index);
  ::google::rpc::Help_Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Help_Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::google::rpc::Help_Link >&
      links() const;

  // @@protoc_insertion_point(class_scope:google.rpc.Help)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Help_Link > links_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Help> Help_default_instance_;

// -------------------------------------------------------------------

class LocalizedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.rpc.LocalizedMessage) */ {
 public:
  LocalizedMessage();
  virtual ~LocalizedMessage();

  LocalizedMessage(const LocalizedMessage& from);

  inline LocalizedMessage& operator=(const LocalizedMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalizedMessage& default_instance();

  static const LocalizedMessage* internal_default_instance();

  void Swap(LocalizedMessage* other);

  // implements Message ----------------------------------------------

  inline LocalizedMessage* New() const { return New(NULL); }

  LocalizedMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocalizedMessage& from);
  void MergeFrom(const LocalizedMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LocalizedMessage* other);
  void UnsafeMergeFrom(const LocalizedMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string locale = 1;
  void clear_locale();
  static const int kLocaleFieldNumber = 1;
  const ::std::string& locale() const;
  void set_locale(const ::std::string& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  ::std::string* mutable_locale();
  ::std::string* release_locale();
  void set_allocated_locale(::std::string* locale);

  // optional string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:google.rpc.LocalizedMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr locale_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl();
  friend void protobuf_AssignDesc_google_2frpc_2ferror_5fdetails_2eproto();
  friend void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LocalizedMessage> LocalizedMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RetryInfo

// optional .google.protobuf.Duration retry_delay = 1;
inline bool RetryInfo::has_retry_delay() const {
  return this != internal_default_instance() && retry_delay_ != NULL;
}
inline void RetryInfo::clear_retry_delay() {
  if (GetArenaNoVirtual() == NULL && retry_delay_ != NULL) delete retry_delay_;
  retry_delay_ = NULL;
}
inline const ::google::protobuf::Duration& RetryInfo::retry_delay() const {
  // @@protoc_insertion_point(field_get:google.rpc.RetryInfo.retry_delay)
  return retry_delay_ != NULL ? *retry_delay_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* RetryInfo::mutable_retry_delay() {
  
  if (retry_delay_ == NULL) {
    retry_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.RetryInfo.retry_delay)
  return retry_delay_;
}
inline ::google::protobuf::Duration* RetryInfo::release_retry_delay() {
  // @@protoc_insertion_point(field_release:google.rpc.RetryInfo.retry_delay)
  
  ::google::protobuf::Duration* temp = retry_delay_;
  retry_delay_ = NULL;
  return temp;
}
inline void RetryInfo::set_allocated_retry_delay(::google::protobuf::Duration* retry_delay) {
  delete retry_delay_;
  if (retry_delay != NULL && retry_delay->GetArena() != NULL) {
    ::google::protobuf::Duration* new_retry_delay = new ::google::protobuf::Duration;
    new_retry_delay->CopyFrom(*retry_delay);
    retry_delay = new_retry_delay;
  }
  retry_delay_ = retry_delay;
  if (retry_delay) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.RetryInfo.retry_delay)
}

inline const RetryInfo* RetryInfo::internal_default_instance() {
  return &RetryInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// DebugInfo

// repeated string stack_entries = 1;
inline int DebugInfo::stack_entries_size() const {
  return stack_entries_.size();
}
inline void DebugInfo::clear_stack_entries() {
  stack_entries_.Clear();
}
inline const ::std::string& DebugInfo::stack_entries(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.DebugInfo.stack_entries)
  return stack_entries_.Get(index);
}
inline ::std::string* DebugInfo::mutable_stack_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.DebugInfo.stack_entries)
  return stack_entries_.Mutable(index);
}
inline void DebugInfo::set_stack_entries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.rpc.DebugInfo.stack_entries)
  stack_entries_.Mutable(index)->assign(value);
}
inline void DebugInfo::set_stack_entries(int index, const char* value) {
  stack_entries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.rpc.DebugInfo.stack_entries)
}
inline void DebugInfo::set_stack_entries(int index, const char* value, size_t size) {
  stack_entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.rpc.DebugInfo.stack_entries)
}
inline ::std::string* DebugInfo::add_stack_entries() {
  // @@protoc_insertion_point(field_add_mutable:google.rpc.DebugInfo.stack_entries)
  return stack_entries_.Add();
}
inline void DebugInfo::add_stack_entries(const ::std::string& value) {
  stack_entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.rpc.DebugInfo.stack_entries)
}
inline void DebugInfo::add_stack_entries(const char* value) {
  stack_entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.rpc.DebugInfo.stack_entries)
}
inline void DebugInfo::add_stack_entries(const char* value, size_t size) {
  stack_entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.rpc.DebugInfo.stack_entries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DebugInfo::stack_entries() const {
  // @@protoc_insertion_point(field_list:google.rpc.DebugInfo.stack_entries)
  return stack_entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DebugInfo::mutable_stack_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.DebugInfo.stack_entries)
  return &stack_entries_;
}

// optional string detail = 2;
inline void DebugInfo::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugInfo::detail() const {
  // @@protoc_insertion_point(field_get:google.rpc.DebugInfo.detail)
  return detail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugInfo::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.DebugInfo.detail)
}
inline void DebugInfo::set_detail(const char* value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.DebugInfo.detail)
}
inline void DebugInfo::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.DebugInfo.detail)
}
inline ::std::string* DebugInfo::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.DebugInfo.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugInfo::release_detail() {
  // @@protoc_insertion_point(field_release:google.rpc.DebugInfo.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugInfo::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.DebugInfo.detail)
}

inline const DebugInfo* DebugInfo::internal_default_instance() {
  return &DebugInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// QuotaFailure_Violation

// optional string subject = 1;
inline void QuotaFailure_Violation::clear_subject() {
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuotaFailure_Violation::subject() const {
  // @@protoc_insertion_point(field_get:google.rpc.QuotaFailure.Violation.subject)
  return subject_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaFailure_Violation::set_subject(const ::std::string& value) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.QuotaFailure.Violation.subject)
}
inline void QuotaFailure_Violation::set_subject(const char* value) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.QuotaFailure.Violation.subject)
}
inline void QuotaFailure_Violation::set_subject(const char* value, size_t size) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.QuotaFailure.Violation.subject)
}
inline ::std::string* QuotaFailure_Violation::mutable_subject() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.QuotaFailure.Violation.subject)
  return subject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuotaFailure_Violation::release_subject() {
  // @@protoc_insertion_point(field_release:google.rpc.QuotaFailure.Violation.subject)
  
  return subject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaFailure_Violation::set_allocated_subject(::std::string* subject) {
  if (subject != NULL) {
    
  } else {
    
  }
  subject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.QuotaFailure.Violation.subject)
}

// optional string description = 2;
inline void QuotaFailure_Violation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuotaFailure_Violation::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.QuotaFailure.Violation.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaFailure_Violation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.QuotaFailure.Violation.description)
}
inline void QuotaFailure_Violation::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.QuotaFailure.Violation.description)
}
inline void QuotaFailure_Violation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.QuotaFailure.Violation.description)
}
inline ::std::string* QuotaFailure_Violation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.QuotaFailure.Violation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuotaFailure_Violation::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.QuotaFailure.Violation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuotaFailure_Violation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.QuotaFailure.Violation.description)
}

inline const QuotaFailure_Violation* QuotaFailure_Violation::internal_default_instance() {
  return &QuotaFailure_Violation_default_instance_.get();
}
// -------------------------------------------------------------------

// QuotaFailure

// repeated .google.rpc.QuotaFailure.Violation violations = 1;
inline int QuotaFailure::violations_size() const {
  return violations_.size();
}
inline void QuotaFailure::clear_violations() {
  violations_.Clear();
}
inline const ::google::rpc::QuotaFailure_Violation& QuotaFailure::violations(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.QuotaFailure.violations)
  return violations_.Get(index);
}
inline ::google::rpc::QuotaFailure_Violation* QuotaFailure::mutable_violations(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.QuotaFailure.violations)
  return violations_.Mutable(index);
}
inline ::google::rpc::QuotaFailure_Violation* QuotaFailure::add_violations() {
  // @@protoc_insertion_point(field_add:google.rpc.QuotaFailure.violations)
  return violations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::rpc::QuotaFailure_Violation >*
QuotaFailure::mutable_violations() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.QuotaFailure.violations)
  return &violations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::rpc::QuotaFailure_Violation >&
QuotaFailure::violations() const {
  // @@protoc_insertion_point(field_list:google.rpc.QuotaFailure.violations)
  return violations_;
}

inline const QuotaFailure* QuotaFailure::internal_default_instance() {
  return &QuotaFailure_default_instance_.get();
}
// -------------------------------------------------------------------

// BadRequest_FieldViolation

// optional string field = 1;
inline void BadRequest_FieldViolation::clear_field() {
  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BadRequest_FieldViolation::field() const {
  // @@protoc_insertion_point(field_get:google.rpc.BadRequest.FieldViolation.field)
  return field_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BadRequest_FieldViolation::set_field(const ::std::string& value) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.BadRequest.FieldViolation.field)
}
inline void BadRequest_FieldViolation::set_field(const char* value) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.BadRequest.FieldViolation.field)
}
inline void BadRequest_FieldViolation::set_field(const char* value, size_t size) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.BadRequest.FieldViolation.field)
}
inline ::std::string* BadRequest_FieldViolation::mutable_field() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.BadRequest.FieldViolation.field)
  return field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BadRequest_FieldViolation::release_field() {
  // @@protoc_insertion_point(field_release:google.rpc.BadRequest.FieldViolation.field)
  
  return field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BadRequest_FieldViolation::set_allocated_field(::std::string* field) {
  if (field != NULL) {
    
  } else {
    
  }
  field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.BadRequest.FieldViolation.field)
}

// optional string description = 2;
inline void BadRequest_FieldViolation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BadRequest_FieldViolation::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.BadRequest.FieldViolation.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BadRequest_FieldViolation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.BadRequest.FieldViolation.description)
}
inline void BadRequest_FieldViolation::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.BadRequest.FieldViolation.description)
}
inline void BadRequest_FieldViolation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.BadRequest.FieldViolation.description)
}
inline ::std::string* BadRequest_FieldViolation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.BadRequest.FieldViolation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BadRequest_FieldViolation::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.BadRequest.FieldViolation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BadRequest_FieldViolation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.BadRequest.FieldViolation.description)
}

inline const BadRequest_FieldViolation* BadRequest_FieldViolation::internal_default_instance() {
  return &BadRequest_FieldViolation_default_instance_.get();
}
// -------------------------------------------------------------------

// BadRequest

// repeated .google.rpc.BadRequest.FieldViolation field_violations = 1;
inline int BadRequest::field_violations_size() const {
  return field_violations_.size();
}
inline void BadRequest::clear_field_violations() {
  field_violations_.Clear();
}
inline const ::google::rpc::BadRequest_FieldViolation& BadRequest::field_violations(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.BadRequest.field_violations)
  return field_violations_.Get(index);
}
inline ::google::rpc::BadRequest_FieldViolation* BadRequest::mutable_field_violations(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.BadRequest.field_violations)
  return field_violations_.Mutable(index);
}
inline ::google::rpc::BadRequest_FieldViolation* BadRequest::add_field_violations() {
  // @@protoc_insertion_point(field_add:google.rpc.BadRequest.field_violations)
  return field_violations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::rpc::BadRequest_FieldViolation >*
BadRequest::mutable_field_violations() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.BadRequest.field_violations)
  return &field_violations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::rpc::BadRequest_FieldViolation >&
BadRequest::field_violations() const {
  // @@protoc_insertion_point(field_list:google.rpc.BadRequest.field_violations)
  return field_violations_;
}

inline const BadRequest* BadRequest::internal_default_instance() {
  return &BadRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// RequestInfo

// optional string request_id = 1;
inline void RequestInfo::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestInfo::request_id() const {
  // @@protoc_insertion_point(field_get:google.rpc.RequestInfo.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestInfo::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.RequestInfo.request_id)
}
inline void RequestInfo::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.RequestInfo.request_id)
}
inline void RequestInfo::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.RequestInfo.request_id)
}
inline ::std::string* RequestInfo::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.RequestInfo.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestInfo::release_request_id() {
  // @@protoc_insertion_point(field_release:google.rpc.RequestInfo.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestInfo::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.RequestInfo.request_id)
}

// optional string serving_data = 2;
inline void RequestInfo::clear_serving_data() {
  serving_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestInfo::serving_data() const {
  // @@protoc_insertion_point(field_get:google.rpc.RequestInfo.serving_data)
  return serving_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestInfo::set_serving_data(const ::std::string& value) {
  
  serving_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.RequestInfo.serving_data)
}
inline void RequestInfo::set_serving_data(const char* value) {
  
  serving_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.RequestInfo.serving_data)
}
inline void RequestInfo::set_serving_data(const char* value, size_t size) {
  
  serving_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.RequestInfo.serving_data)
}
inline ::std::string* RequestInfo::mutable_serving_data() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.RequestInfo.serving_data)
  return serving_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestInfo::release_serving_data() {
  // @@protoc_insertion_point(field_release:google.rpc.RequestInfo.serving_data)
  
  return serving_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestInfo::set_allocated_serving_data(::std::string* serving_data) {
  if (serving_data != NULL) {
    
  } else {
    
  }
  serving_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serving_data);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.RequestInfo.serving_data)
}

inline const RequestInfo* RequestInfo::internal_default_instance() {
  return &RequestInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceInfo

// optional string resource_type = 1;
inline void ResourceInfo::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResourceInfo::resource_type() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.resource_type)
  return resource_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.resource_type)
}
inline void ResourceInfo::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.resource_type)
}
inline void ResourceInfo::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.resource_type)
}
inline ::std::string* ResourceInfo::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResourceInfo::release_resource_type() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.resource_type)
}

// optional string resource_name = 2;
inline void ResourceInfo::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResourceInfo::resource_name() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.resource_name)
  return resource_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.resource_name)
}
inline void ResourceInfo::set_resource_name(const char* value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.resource_name)
}
inline void ResourceInfo::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.resource_name)
}
inline ::std::string* ResourceInfo::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResourceInfo::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.resource_name)
}

// optional string owner = 3;
inline void ResourceInfo::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResourceInfo::owner() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.owner)
  return owner_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.owner)
}
inline void ResourceInfo::set_owner(const char* value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.owner)
}
inline void ResourceInfo::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.owner)
}
inline ::std::string* ResourceInfo::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResourceInfo::release_owner() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.owner)
}

// optional string description = 4;
inline void ResourceInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResourceInfo::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.description)
}
inline void ResourceInfo::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.description)
}
inline void ResourceInfo::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.description)
}
inline ::std::string* ResourceInfo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResourceInfo::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.description)
}

inline const ResourceInfo* ResourceInfo::internal_default_instance() {
  return &ResourceInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// Help_Link

// optional string description = 1;
inline void Help_Link::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Help_Link::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.Help.Link.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Help_Link::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.Help.Link.description)
}
inline void Help_Link::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.Help.Link.description)
}
inline void Help_Link::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.Help.Link.description)
}
inline ::std::string* Help_Link::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.Help.Link.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Help_Link::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.Help.Link.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Help_Link::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.Help.Link.description)
}

// optional string url = 2;
inline void Help_Link::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Help_Link::url() const {
  // @@protoc_insertion_point(field_get:google.rpc.Help.Link.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Help_Link::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.Help.Link.url)
}
inline void Help_Link::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.Help.Link.url)
}
inline void Help_Link::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.Help.Link.url)
}
inline ::std::string* Help_Link::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.Help.Link.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Help_Link::release_url() {
  // @@protoc_insertion_point(field_release:google.rpc.Help.Link.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Help_Link::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.Help.Link.url)
}

inline const Help_Link* Help_Link::internal_default_instance() {
  return &Help_Link_default_instance_.get();
}
// -------------------------------------------------------------------

// Help

// repeated .google.rpc.Help.Link links = 1;
inline int Help::links_size() const {
  return links_.size();
}
inline void Help::clear_links() {
  links_.Clear();
}
inline const ::google::rpc::Help_Link& Help::links(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.Help.links)
  return links_.Get(index);
}
inline ::google::rpc::Help_Link* Help::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.Help.links)
  return links_.Mutable(index);
}
inline ::google::rpc::Help_Link* Help::add_links() {
  // @@protoc_insertion_point(field_add:google.rpc.Help.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::rpc::Help_Link >*
Help::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.Help.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::rpc::Help_Link >&
Help::links() const {
  // @@protoc_insertion_point(field_list:google.rpc.Help.links)
  return links_;
}

inline const Help* Help::internal_default_instance() {
  return &Help_default_instance_.get();
}
// -------------------------------------------------------------------

// LocalizedMessage

// optional string locale = 1;
inline void LocalizedMessage::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedMessage::locale() const {
  // @@protoc_insertion_point(field_get:google.rpc.LocalizedMessage.locale)
  return locale_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedMessage::set_locale(const ::std::string& value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.LocalizedMessage.locale)
}
inline void LocalizedMessage::set_locale(const char* value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.LocalizedMessage.locale)
}
inline void LocalizedMessage::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.LocalizedMessage.locale)
}
inline ::std::string* LocalizedMessage::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.LocalizedMessage.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedMessage::release_locale() {
  // @@protoc_insertion_point(field_release:google.rpc.LocalizedMessage.locale)
  
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedMessage::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.LocalizedMessage.locale)
}

// optional string message = 2;
inline void LocalizedMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalizedMessage::message() const {
  // @@protoc_insertion_point(field_get:google.rpc.LocalizedMessage.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.LocalizedMessage.message)
}
inline void LocalizedMessage::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.LocalizedMessage.message)
}
inline void LocalizedMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.LocalizedMessage.message)
}
inline ::std::string* LocalizedMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.LocalizedMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalizedMessage::release_message() {
  // @@protoc_insertion_point(field_release:google.rpc.LocalizedMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalizedMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.LocalizedMessage.message)
}

inline const LocalizedMessage* LocalizedMessage::internal_default_instance() {
  return &LocalizedMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2frpc_2ferror_5fdetails_2eproto__INCLUDED
