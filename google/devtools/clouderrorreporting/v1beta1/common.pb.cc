// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/clouderrorreporting/v1beta1/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

namespace {

const ::google::protobuf::Descriptor* ErrorGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrackingIssue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrackingIssue_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceContext_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorContext_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpRequestContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpRequestContext_reflection_ = NULL;
const ::google::protobuf::Descriptor* SourceLocation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SourceLocation_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto() {
  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/devtools/clouderrorreporting/v1beta1/common.proto");
  GOOGLE_CHECK(file != NULL);
  ErrorGroup_descriptor_ = file->message_type(0);
  static const int ErrorGroup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroup, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroup, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroup, tracking_issues_),
  };
  ErrorGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorGroup_descriptor_,
      ErrorGroup::internal_default_instance(),
      ErrorGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroup, _internal_metadata_));
  TrackingIssue_descriptor_ = file->message_type(1);
  static const int TrackingIssue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIssue, url_),
  };
  TrackingIssue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrackingIssue_descriptor_,
      TrackingIssue::internal_default_instance(),
      TrackingIssue_offsets_,
      -1,
      -1,
      -1,
      sizeof(TrackingIssue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackingIssue, _internal_metadata_));
  ErrorEvent_descriptor_ = file->message_type(2);
  static const int ErrorEvent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorEvent, event_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorEvent, service_context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorEvent, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorEvent, context_),
  };
  ErrorEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorEvent_descriptor_,
      ErrorEvent::internal_default_instance(),
      ErrorEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorEvent, _internal_metadata_));
  ServiceContext_descriptor_ = file->message_type(3);
  static const int ServiceContext_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContext, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContext, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContext, resource_type_),
  };
  ServiceContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceContext_descriptor_,
      ServiceContext::internal_default_instance(),
      ServiceContext_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContext, _internal_metadata_));
  ErrorContext_descriptor_ = file->message_type(4);
  static const int ErrorContext_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorContext, http_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorContext, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorContext, report_location_),
  };
  ErrorContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorContext_descriptor_,
      ErrorContext::internal_default_instance(),
      ErrorContext_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorContext, _internal_metadata_));
  HttpRequestContext_descriptor_ = file->message_type(5);
  static const int HttpRequestContext_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequestContext, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequestContext, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequestContext, user_agent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequestContext, referrer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequestContext, response_status_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequestContext, remote_ip_),
  };
  HttpRequestContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpRequestContext_descriptor_,
      HttpRequestContext::internal_default_instance(),
      HttpRequestContext_offsets_,
      -1,
      -1,
      -1,
      sizeof(HttpRequestContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequestContext, _internal_metadata_));
  SourceLocation_descriptor_ = file->message_type(6);
  static const int SourceLocation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, file_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, line_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, function_name_),
  };
  SourceLocation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SourceLocation_descriptor_,
      SourceLocation::internal_default_instance(),
      SourceLocation_offsets_,
      -1,
      -1,
      -1,
      sizeof(SourceLocation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorGroup_descriptor_, ErrorGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrackingIssue_descriptor_, TrackingIssue::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorEvent_descriptor_, ErrorEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceContext_descriptor_, ServiceContext::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorContext_descriptor_, ErrorContext::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpRequestContext_descriptor_, HttpRequestContext::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SourceLocation_descriptor_, SourceLocation::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto() {
  ErrorGroup_default_instance_.Shutdown();
  delete ErrorGroup_reflection_;
  TrackingIssue_default_instance_.Shutdown();
  delete TrackingIssue_reflection_;
  ErrorEvent_default_instance_.Shutdown();
  delete ErrorEvent_reflection_;
  ServiceContext_default_instance_.Shutdown();
  delete ServiceContext_reflection_;
  ErrorContext_default_instance_.Shutdown();
  delete ErrorContext_reflection_;
  HttpRequestContext_default_instance_.Shutdown();
  delete HttpRequestContext_reflection_;
  SourceLocation_default_instance_.Shutdown();
  delete SourceLocation_reflection_;
}

void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ErrorGroup_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TrackingIssue_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ErrorEvent_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ServiceContext_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ErrorContext_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HttpRequestContext_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SourceLocation_default_instance_.DefaultConstruct();
  ErrorGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  TrackingIssue_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServiceContext_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorContext_default_instance_.get_mutable()->InitAsDefaultInstance();
  HttpRequestContext_default_instance_.get_mutable()->InitAsDefaultInstance();
  SourceLocation_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_once_);
void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_once_,
                 &protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl);
}
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n8google/devtools/clouderrorreporting/v1"
    "beta1/common.proto\022+google.devtools.clou"
    "derrorreporting.v1beta1\032\034google/api/anno"
    "tations.proto\032#google/api/monitored_reso"
    "urce.proto\032\037google/protobuf/timestamp.pr"
    "oto\"\201\001\n\nErrorGroup\022\014\n\004name\030\001 \001(\t\022\020\n\010grou"
    "p_id\030\002 \001(\t\022S\n\017tracking_issues\030\003 \003(\0132:.go"
    "ogle.devtools.clouderrorreporting.v1beta"
    "1.TrackingIssue\"\034\n\rTrackingIssue\022\013\n\003url\030"
    "\001 \001(\t\"\357\001\n\nErrorEvent\022.\n\nevent_time\030\001 \001(\013"
    "2\032.google.protobuf.Timestamp\022T\n\017service_"
    "context\030\002 \001(\0132;.google.devtools.clouderr"
    "orreporting.v1beta1.ServiceContext\022\017\n\007me"
    "ssage\030\003 \001(\t\022J\n\007context\030\005 \001(\01329.google.de"
    "vtools.clouderrorreporting.v1beta1.Error"
    "Context\"I\n\016ServiceContext\022\017\n\007service\030\002 \001"
    "(\t\022\017\n\007version\030\003 \001(\t\022\025\n\rresource_type\030\004 \001"
    "(\t\"\311\001\n\014ErrorContext\022U\n\014http_request\030\001 \001("
    "\0132\?.google.devtools.clouderrorreporting."
    "v1beta1.HttpRequestContext\022\014\n\004user\030\002 \001(\t"
    "\022T\n\017report_location\030\003 \001(\0132;.google.devto"
    "ols.clouderrorreporting.v1beta1.SourceLo"
    "cation\"\210\001\n\022HttpRequestContext\022\016\n\006method\030"
    "\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\022\n\nuser_agent\030\003 \001(\t\022\020"
    "\n\010referrer\030\004 \001(\t\022\034\n\024response_status_code"
    "\030\005 \001(\005\022\021\n\tremote_ip\030\006 \001(\t\"O\n\016SourceLocat"
    "ion\022\021\n\tfile_path\030\001 \001(\t\022\023\n\013line_number\030\002 "
    "\001(\005\022\025\n\rfunction_name\030\004 \001(\tB\306\001\n/com.googl"
    "e.devtools.clouderrorreporting.v1beta1B\013"
    "CommonProtoP\001Z^google.golang.org/genprot"
    "o/googleapis/devtools/clouderrorreportin"
    "g/v1beta1;clouderrorreporting\252\002#Google.C"
    "loud.ErrorReporting.V1Beta1b\006proto3", 1315);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouderrorreporting/v1beta1/common.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_once_);
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_once_,
                 &protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto {
  StaticDescriptorInitializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto() {
    protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  }
} static_descriptor_initializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorGroup::kNameFieldNumber;
const int ErrorGroup::kGroupIdFieldNumber;
const int ErrorGroup::kTrackingIssuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorGroup::ErrorGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
}

void ErrorGroup::InitAsDefaultInstance() {
}

ErrorGroup::ErrorGroup(const ErrorGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
}

void ErrorGroup::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ErrorGroup::~ErrorGroup() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  SharedDtor();
}

void ErrorGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorGroup_descriptor_;
}

const ErrorGroup& ErrorGroup::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorGroup> ErrorGroup_default_instance_;

ErrorGroup* ErrorGroup::New(::google::protobuf::Arena* arena) const {
  ErrorGroup* n = new ErrorGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tracking_issues_.Clear();
}

bool ErrorGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // optional string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tracking_issues;
        break;
      }

      // repeated .google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
      case 3: {
        if (tag == 26) {
         parse_tracking_issues:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tracking_issues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tracking_issues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_tracking_issues;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  return false;
#undef DO_
}

void ErrorGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
  for (unsigned int i = 0, n = this->tracking_issues_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tracking_issues(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
}

::google::protobuf::uint8* ErrorGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
  for (unsigned int i = 0, n = this->tracking_issues_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->tracking_issues(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  return target;
}

size_t ErrorGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string group_id = 2;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
  {
    unsigned int count = this->tracking_issues_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracking_issues(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
    UnsafeMergeFrom(*source);
  }
}

void ErrorGroup::MergeFrom(const ErrorGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorGroup::UnsafeMergeFrom(const ErrorGroup& from) {
  GOOGLE_DCHECK(&from != this);
  tracking_issues_.MergeFrom(from.tracking_issues_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
}

void ErrorGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorGroup::CopyFrom(const ErrorGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorGroup::IsInitialized() const {

  return true;
}

void ErrorGroup::Swap(ErrorGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorGroup::InternalSwap(ErrorGroup* other) {
  name_.Swap(&other->name_);
  group_id_.Swap(&other->group_id_);
  tracking_issues_.UnsafeArenaSwap(&other->tracking_issues_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorGroup_descriptor_;
  metadata.reflection = ErrorGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorGroup

// optional string name = 1;
void ErrorGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorGroup::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}
void ErrorGroup::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}
void ErrorGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}
::std::string* ErrorGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorGroup::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}

// optional string group_id = 2;
void ErrorGroup::clear_group_id() {
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorGroup::group_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
  return group_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorGroup::set_group_id(const ::std::string& value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}
void ErrorGroup::set_group_id(const char* value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}
void ErrorGroup::set_group_id(const char* value, size_t size) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}
::std::string* ErrorGroup::mutable_group_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
  return group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorGroup::release_group_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
  
  return group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id != NULL) {
    
  } else {
    
  }
  group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}

// repeated .google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
int ErrorGroup::tracking_issues_size() const {
  return tracking_issues_.size();
}
void ErrorGroup::clear_tracking_issues() {
  tracking_issues_.Clear();
}
const ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue& ErrorGroup::tracking_issues(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_.Get(index);
}
::google::devtools::clouderrorreporting::v1beta1::TrackingIssue* ErrorGroup::mutable_tracking_issues(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_.Mutable(index);
}
::google::devtools::clouderrorreporting::v1beta1::TrackingIssue* ErrorGroup::add_tracking_issues() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue >*
ErrorGroup::mutable_tracking_issues() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return &tracking_issues_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue >&
ErrorGroup::tracking_issues() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_;
}

inline const ErrorGroup* ErrorGroup::internal_default_instance() {
  return &ErrorGroup_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackingIssue::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackingIssue::TrackingIssue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
}

void TrackingIssue::InitAsDefaultInstance() {
}

TrackingIssue::TrackingIssue(const TrackingIssue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
}

void TrackingIssue::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TrackingIssue::~TrackingIssue() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  SharedDtor();
}

void TrackingIssue::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrackingIssue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackingIssue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrackingIssue_descriptor_;
}

const TrackingIssue& TrackingIssue::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TrackingIssue> TrackingIssue_default_instance_;

TrackingIssue* TrackingIssue::New(::google::protobuf::Arena* arena) const {
  TrackingIssue* n = new TrackingIssue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackingIssue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TrackingIssue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  return false;
#undef DO_
}

void TrackingIssue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  // optional string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
}

::google::protobuf::uint8* TrackingIssue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  // optional string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  return target;
}

size_t TrackingIssue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  size_t total_size = 0;

  // optional string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackingIssue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrackingIssue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackingIssue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
    UnsafeMergeFrom(*source);
  }
}

void TrackingIssue::MergeFrom(const TrackingIssue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TrackingIssue::UnsafeMergeFrom(const TrackingIssue& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void TrackingIssue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackingIssue::CopyFrom(const TrackingIssue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TrackingIssue::IsInitialized() const {

  return true;
}

void TrackingIssue::Swap(TrackingIssue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackingIssue::InternalSwap(TrackingIssue* other) {
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackingIssue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrackingIssue_descriptor_;
  metadata.reflection = TrackingIssue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackingIssue

// optional string url = 1;
void TrackingIssue::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackingIssue::url() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIssue::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}
void TrackingIssue::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}
void TrackingIssue::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}
::std::string* TrackingIssue::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackingIssue::release_url() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackingIssue::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}

inline const TrackingIssue* TrackingIssue::internal_default_instance() {
  return &TrackingIssue_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorEvent::kEventTimeFieldNumber;
const int ErrorEvent::kServiceContextFieldNumber;
const int ErrorEvent::kMessageFieldNumber;
const int ErrorEvent::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorEvent::ErrorEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
}

void ErrorEvent::InitAsDefaultInstance() {
  event_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  service_context_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext*>(
      ::google::devtools::clouderrorreporting::v1beta1::ServiceContext::internal_default_instance());
  context_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorContext*>(
      ::google::devtools::clouderrorreporting::v1beta1::ErrorContext::internal_default_instance());
}

ErrorEvent::ErrorEvent(const ErrorEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
}

void ErrorEvent::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_time_ = NULL;
  service_context_ = NULL;
  context_ = NULL;
  _cached_size_ = 0;
}

ErrorEvent::~ErrorEvent() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  SharedDtor();
}

void ErrorEvent::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ErrorEvent_default_instance_.get()) {
    delete event_time_;
    delete service_context_;
    delete context_;
  }
}

void ErrorEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorEvent_descriptor_;
}

const ErrorEvent& ErrorEvent::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorEvent> ErrorEvent_default_instance_;

ErrorEvent* ErrorEvent::New(::google::protobuf::Arena* arena) const {
  ErrorEvent* n = new ErrorEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) delete event_time_;
  event_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && service_context_ != NULL) delete service_context_;
  service_context_ = NULL;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}

bool ErrorEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Timestamp event_time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_service_context;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
      case 2: {
        if (tag == 18) {
         parse_service_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_service_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional string message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_context;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
      case 5: {
        if (tag == 42) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  return false;
#undef DO_
}

void ErrorEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  // optional .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->event_time_, output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->service_context_, output);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->context_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
}

::google::protobuf::uint8* ErrorEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  // optional .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->event_time_, false, target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->service_context_, false, target);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->context_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  return target;
}

size_t ErrorEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  size_t total_size = 0;

  // optional .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->event_time_);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->service_context_);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
    UnsafeMergeFrom(*source);
  }
}

void ErrorEvent::MergeFrom(const ErrorEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorEvent::UnsafeMergeFrom(const ErrorEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_event_time()) {
    mutable_event_time()->::google::protobuf::Timestamp::MergeFrom(from.event_time());
  }
  if (from.has_service_context()) {
    mutable_service_context()->::google::devtools::clouderrorreporting::v1beta1::ServiceContext::MergeFrom(from.service_context());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_context()) {
    mutable_context()->::google::devtools::clouderrorreporting::v1beta1::ErrorContext::MergeFrom(from.context());
  }
}

void ErrorEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorEvent::CopyFrom(const ErrorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorEvent::IsInitialized() const {

  return true;
}

void ErrorEvent::Swap(ErrorEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorEvent::InternalSwap(ErrorEvent* other) {
  std::swap(event_time_, other->event_time_);
  std::swap(service_context_, other->service_context_);
  message_.Swap(&other->message_);
  std::swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorEvent_descriptor_;
  metadata.reflection = ErrorEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorEvent

// optional .google.protobuf.Timestamp event_time = 1;
bool ErrorEvent::has_event_time() const {
  return this != internal_default_instance() && event_time_ != NULL;
}
void ErrorEvent::clear_event_time() {
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) delete event_time_;
  event_time_ = NULL;
}
const ::google::protobuf::Timestamp& ErrorEvent::event_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
  return event_time_ != NULL ? *event_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ErrorEvent::mutable_event_time() {
  
  if (event_time_ == NULL) {
    event_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
  return event_time_;
}
::google::protobuf::Timestamp* ErrorEvent::release_event_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
  
  ::google::protobuf::Timestamp* temp = event_time_;
  event_time_ = NULL;
  return temp;
}
void ErrorEvent::set_allocated_event_time(::google::protobuf::Timestamp* event_time) {
  delete event_time_;
  if (event_time != NULL && event_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_event_time = new ::google::protobuf::Timestamp;
    new_event_time->CopyFrom(*event_time);
    event_time = new_event_time;
  }
  event_time_ = event_time;
  if (event_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
bool ErrorEvent::has_service_context() const {
  return this != internal_default_instance() && service_context_ != NULL;
}
void ErrorEvent::clear_service_context() {
  if (GetArenaNoVirtual() == NULL && service_context_ != NULL) delete service_context_;
  service_context_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ServiceContext& ErrorEvent::service_context() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
  return service_context_ != NULL ? *service_context_
                         : *::google::devtools::clouderrorreporting::v1beta1::ServiceContext::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorEvent::mutable_service_context() {
  
  if (service_context_ == NULL) {
    service_context_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
  return service_context_;
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorEvent::release_service_context() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
  
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* temp = service_context_;
  service_context_ = NULL;
  return temp;
}
void ErrorEvent::set_allocated_service_context(::google::devtools::clouderrorreporting::v1beta1::ServiceContext* service_context) {
  delete service_context_;
  service_context_ = service_context;
  if (service_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
}

// optional string message = 3;
void ErrorEvent::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorEvent::message() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorEvent::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}
void ErrorEvent::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}
void ErrorEvent::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}
::std::string* ErrorEvent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorEvent::release_message() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorEvent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
bool ErrorEvent::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
void ErrorEvent::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ErrorContext& ErrorEvent::context() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
  return context_ != NULL ? *context_
                         : *::google::devtools::clouderrorreporting::v1beta1::ErrorContext::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ErrorContext* ErrorEvent::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
  return context_;
}
::google::devtools::clouderrorreporting::v1beta1::ErrorContext* ErrorEvent::release_context() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* temp = context_;
  context_ = NULL;
  return temp;
}
void ErrorEvent::set_allocated_context(::google::devtools::clouderrorreporting::v1beta1::ErrorContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
}

inline const ErrorEvent* ErrorEvent::internal_default_instance() {
  return &ErrorEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceContext::kServiceFieldNumber;
const int ServiceContext::kVersionFieldNumber;
const int ServiceContext::kResourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceContext::ServiceContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
}

void ServiceContext::InitAsDefaultInstance() {
}

ServiceContext::ServiceContext(const ServiceContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
}

void ServiceContext::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ServiceContext::~ServiceContext() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  SharedDtor();
}

void ServiceContext::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceContext_descriptor_;
}

const ServiceContext& ServiceContext::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServiceContext> ServiceContext_default_instance_;

ServiceContext* ServiceContext::New(::google::protobuf::Arena* arena) const {
  ServiceContext* n = new ServiceContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ServiceContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContext.service"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_version;
        break;
      }

      // optional string version = 3;
      case 3: {
        if (tag == 26) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContext.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_resource_type;
        break;
      }

      // optional string resource_type = 4;
      case 4: {
        if (tag == 34) {
         parse_resource_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_type().data(), this->resource_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  return false;
#undef DO_
}

void ServiceContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  // optional string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContext.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContext.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // optional string resource_type = 4;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->resource_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
}

::google::protobuf::uint8* ServiceContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  // optional string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContext.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContext.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional string resource_type = 4;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->resource_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  return target;
}

size_t ServiceContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  size_t total_size = 0;

  // optional string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional string resource_type = 4;
  if (this->resource_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
    UnsafeMergeFrom(*source);
  }
}

void ServiceContext::MergeFrom(const ServiceContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServiceContext::UnsafeMergeFrom(const ServiceContext& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.resource_type().size() > 0) {

    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
}

void ServiceContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceContext::CopyFrom(const ServiceContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServiceContext::IsInitialized() const {

  return true;
}

void ServiceContext::Swap(ServiceContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceContext::InternalSwap(ServiceContext* other) {
  service_.Swap(&other->service_);
  version_.Swap(&other->version_);
  resource_type_.Swap(&other->resource_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceContext_descriptor_;
  metadata.reflection = ServiceContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceContext

// optional string service = 2;
void ServiceContext::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceContext::service() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
  return service_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContext::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}
void ServiceContext::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}
void ServiceContext::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}
::std::string* ServiceContext::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceContext::release_service() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContext::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}

// optional string version = 3;
void ServiceContext::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceContext::version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContext::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}
void ServiceContext::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}
void ServiceContext::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}
::std::string* ServiceContext::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceContext::release_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContext::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}

// optional string resource_type = 4;
void ServiceContext::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceContext::resource_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
  return resource_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContext::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}
void ServiceContext::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}
void ServiceContext::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}
::std::string* ServiceContext::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceContext::release_resource_type() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContext::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}

inline const ServiceContext* ServiceContext::internal_default_instance() {
  return &ServiceContext_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorContext::kHttpRequestFieldNumber;
const int ErrorContext::kUserFieldNumber;
const int ErrorContext::kReportLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorContext::ErrorContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
}

void ErrorContext::InitAsDefaultInstance() {
  http_request_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext*>(
      ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext::internal_default_instance());
  report_location_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::SourceLocation*>(
      ::google::devtools::clouderrorreporting::v1beta1::SourceLocation::internal_default_instance());
}

ErrorContext::ErrorContext(const ErrorContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
}

void ErrorContext::SharedCtor() {
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_request_ = NULL;
  report_location_ = NULL;
  _cached_size_ = 0;
}

ErrorContext::~ErrorContext() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  SharedDtor();
}

void ErrorContext::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ErrorContext_default_instance_.get()) {
    delete http_request_;
    delete report_location_;
  }
}

void ErrorContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorContext_descriptor_;
}

const ErrorContext& ErrorContext::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorContext> ErrorContext_default_instance_;

ErrorContext* ErrorContext::New(::google::protobuf::Arena* arena) const {
  ErrorContext* n = new ErrorContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  if (GetArenaNoVirtual() == NULL && http_request_ != NULL) delete http_request_;
  http_request_ = NULL;
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && report_location_ != NULL) delete report_location_;
  report_location_ = NULL;
}

bool ErrorContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user;
        break;
      }

      // optional string user = 2;
      case 2: {
        if (tag == 18) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ErrorContext.user"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_report_location;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
      case 3: {
        if (tag == 26) {
         parse_report_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_report_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  return false;
#undef DO_
}

void ErrorContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  // optional .google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
  if (this->has_http_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->http_request_, output);
  }

  // optional string user = 2;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorContext.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user(), output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
  if (this->has_report_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->report_location_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
}

::google::protobuf::uint8* ErrorContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  // optional .google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
  if (this->has_http_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->http_request_, false, target);
  }

  // optional string user = 2;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ErrorContext.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user(), target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
  if (this->has_report_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->report_location_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  return target;
}

size_t ErrorContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  size_t total_size = 0;

  // optional .google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
  if (this->has_http_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->http_request_);
  }

  // optional string user = 2;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
  if (this->has_report_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->report_location_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
    UnsafeMergeFrom(*source);
  }
}

void ErrorContext::MergeFrom(const ErrorContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorContext::UnsafeMergeFrom(const ErrorContext& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_http_request()) {
    mutable_http_request()->::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext::MergeFrom(from.http_request());
  }
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.has_report_location()) {
    mutable_report_location()->::google::devtools::clouderrorreporting::v1beta1::SourceLocation::MergeFrom(from.report_location());
  }
}

void ErrorContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorContext::CopyFrom(const ErrorContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorContext::IsInitialized() const {

  return true;
}

void ErrorContext::Swap(ErrorContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorContext::InternalSwap(ErrorContext* other) {
  std::swap(http_request_, other->http_request_);
  user_.Swap(&other->user_);
  std::swap(report_location_, other->report_location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorContext_descriptor_;
  metadata.reflection = ErrorContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorContext

// optional .google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
bool ErrorContext::has_http_request() const {
  return this != internal_default_instance() && http_request_ != NULL;
}
void ErrorContext::clear_http_request() {
  if (GetArenaNoVirtual() == NULL && http_request_ != NULL) delete http_request_;
  http_request_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext& ErrorContext::http_request() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
  return http_request_ != NULL ? *http_request_
                         : *::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* ErrorContext::mutable_http_request() {
  
  if (http_request_ == NULL) {
    http_request_ = new ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
  return http_request_;
}
::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* ErrorContext::release_http_request() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
  
  ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* temp = http_request_;
  http_request_ = NULL;
  return temp;
}
void ErrorContext::set_allocated_http_request(::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* http_request) {
  delete http_request_;
  http_request_ = http_request;
  if (http_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
}

// optional string user = 2;
void ErrorContext::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorContext::user() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorContext::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}
void ErrorContext::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}
void ErrorContext::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}
::std::string* ErrorContext::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorContext::release_user() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorContext::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}

// optional .google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
bool ErrorContext::has_report_location() const {
  return this != internal_default_instance() && report_location_ != NULL;
}
void ErrorContext::clear_report_location() {
  if (GetArenaNoVirtual() == NULL && report_location_ != NULL) delete report_location_;
  report_location_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::SourceLocation& ErrorContext::report_location() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
  return report_location_ != NULL ? *report_location_
                         : *::google::devtools::clouderrorreporting::v1beta1::SourceLocation::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::SourceLocation* ErrorContext::mutable_report_location() {
  
  if (report_location_ == NULL) {
    report_location_ = new ::google::devtools::clouderrorreporting::v1beta1::SourceLocation;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
  return report_location_;
}
::google::devtools::clouderrorreporting::v1beta1::SourceLocation* ErrorContext::release_report_location() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
  
  ::google::devtools::clouderrorreporting::v1beta1::SourceLocation* temp = report_location_;
  report_location_ = NULL;
  return temp;
}
void ErrorContext::set_allocated_report_location(::google::devtools::clouderrorreporting::v1beta1::SourceLocation* report_location) {
  delete report_location_;
  report_location_ = report_location;
  if (report_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
}

inline const ErrorContext* ErrorContext::internal_default_instance() {
  return &ErrorContext_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpRequestContext::kMethodFieldNumber;
const int HttpRequestContext::kUrlFieldNumber;
const int HttpRequestContext::kUserAgentFieldNumber;
const int HttpRequestContext::kReferrerFieldNumber;
const int HttpRequestContext::kResponseStatusCodeFieldNumber;
const int HttpRequestContext::kRemoteIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpRequestContext::HttpRequestContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
}

void HttpRequestContext::InitAsDefaultInstance() {
}

HttpRequestContext::HttpRequestContext(const HttpRequestContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
}

void HttpRequestContext::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_status_code_ = 0;
  _cached_size_ = 0;
}

HttpRequestContext::~HttpRequestContext() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  SharedDtor();
}

void HttpRequestContext::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HttpRequestContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpRequestContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpRequestContext_descriptor_;
}

const HttpRequestContext& HttpRequestContext::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HttpRequestContext> HttpRequestContext_default_instance_;

HttpRequestContext* HttpRequestContext::New(::google::protobuf::Arena* arena) const {
  HttpRequestContext* n = new HttpRequestContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpRequestContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_status_code_ = 0;
  remote_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HttpRequestContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // optional string url = 2;
      case 2: {
        if (tag == 18) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_user_agent;
        break;
      }

      // optional string user_agent = 3;
      case 3: {
        if (tag == 26) {
         parse_user_agent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_agent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_agent().data(), this->user_agent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_referrer;
        break;
      }

      // optional string referrer = 4;
      case 4: {
        if (tag == 34) {
         parse_referrer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referrer().data(), this->referrer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_response_status_code;
        break;
      }

      // optional int32 response_status_code = 5;
      case 5: {
        if (tag == 40) {
         parse_response_status_code:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_status_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_remote_ip;
        break;
      }

      // optional string remote_ip = 6;
      case 6: {
        if (tag == 50) {
         parse_remote_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_ip().data(), this->remote_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  return false;
#undef DO_
}

void HttpRequestContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  // optional string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // optional string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string user_agent = 3;
  if (this->user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_agent(), output);
  }

  // optional string referrer = 4;
  if (this->referrer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrer().data(), this->referrer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->referrer(), output);
  }

  // optional int32 response_status_code = 5;
  if (this->response_status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->response_status_code(), output);
  }

  // optional string remote_ip = 6;
  if (this->remote_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_ip().data(), this->remote_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->remote_ip(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
}

::google::protobuf::uint8* HttpRequestContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  // optional string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // optional string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string user_agent = 3;
  if (this->user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_agent(), target);
  }

  // optional string referrer = 4;
  if (this->referrer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrer().data(), this->referrer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->referrer(), target);
  }

  // optional int32 response_status_code = 5;
  if (this->response_status_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->response_status_code(), target);
  }

  // optional string remote_ip = 6;
  if (this->remote_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_ip().data(), this->remote_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->remote_ip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  return target;
}

size_t HttpRequestContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  size_t total_size = 0;

  // optional string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // optional string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // optional string user_agent = 3;
  if (this->user_agent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_agent());
  }

  // optional string referrer = 4;
  if (this->referrer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referrer());
  }

  // optional int32 response_status_code = 5;
  if (this->response_status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_status_code());
  }

  // optional string remote_ip = 6;
  if (this->remote_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpRequestContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpRequestContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpRequestContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
    UnsafeMergeFrom(*source);
  }
}

void HttpRequestContext::MergeFrom(const HttpRequestContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HttpRequestContext::UnsafeMergeFrom(const HttpRequestContext& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.user_agent().size() > 0) {

    user_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_agent_);
  }
  if (from.referrer().size() > 0) {

    referrer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrer_);
  }
  if (from.response_status_code() != 0) {
    set_response_status_code(from.response_status_code());
  }
  if (from.remote_ip().size() > 0) {

    remote_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_ip_);
  }
}

void HttpRequestContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpRequestContext::CopyFrom(const HttpRequestContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HttpRequestContext::IsInitialized() const {

  return true;
}

void HttpRequestContext::Swap(HttpRequestContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpRequestContext::InternalSwap(HttpRequestContext* other) {
  method_.Swap(&other->method_);
  url_.Swap(&other->url_);
  user_agent_.Swap(&other->user_agent_);
  referrer_.Swap(&other->referrer_);
  std::swap(response_status_code_, other->response_status_code_);
  remote_ip_.Swap(&other->remote_ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpRequestContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpRequestContext_descriptor_;
  metadata.reflection = HttpRequestContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpRequestContext

// optional string method = 1;
void HttpRequestContext::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HttpRequestContext::method() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}
void HttpRequestContext::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}
void HttpRequestContext::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}
::std::string* HttpRequestContext::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HttpRequestContext::release_method() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}

// optional string url = 2;
void HttpRequestContext::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HttpRequestContext::url() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}
void HttpRequestContext::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}
void HttpRequestContext::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}
::std::string* HttpRequestContext::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HttpRequestContext::release_url() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}

// optional string user_agent = 3;
void HttpRequestContext::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HttpRequestContext::user_agent() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
  return user_agent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_user_agent(const ::std::string& value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}
void HttpRequestContext::set_user_agent(const char* value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}
void HttpRequestContext::set_user_agent(const char* value, size_t size) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}
::std::string* HttpRequestContext::mutable_user_agent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HttpRequestContext::release_user_agent() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
  
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    
  } else {
    
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}

// optional string referrer = 4;
void HttpRequestContext::clear_referrer() {
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HttpRequestContext::referrer() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
  return referrer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_referrer(const ::std::string& value) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}
void HttpRequestContext::set_referrer(const char* value) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}
void HttpRequestContext::set_referrer(const char* value, size_t size) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}
::std::string* HttpRequestContext::mutable_referrer() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
  return referrer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HttpRequestContext::release_referrer() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
  
  return referrer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_allocated_referrer(::std::string* referrer) {
  if (referrer != NULL) {
    
  } else {
    
  }
  referrer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}

// optional int32 response_status_code = 5;
void HttpRequestContext::clear_response_status_code() {
  response_status_code_ = 0;
}
::google::protobuf::int32 HttpRequestContext::response_status_code() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.response_status_code)
  return response_status_code_;
}
void HttpRequestContext::set_response_status_code(::google::protobuf::int32 value) {
  
  response_status_code_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.response_status_code)
}

// optional string remote_ip = 6;
void HttpRequestContext::clear_remote_ip() {
  remote_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HttpRequestContext::remote_ip() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
  return remote_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_remote_ip(const ::std::string& value) {
  
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}
void HttpRequestContext::set_remote_ip(const char* value) {
  
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}
void HttpRequestContext::set_remote_ip(const char* value, size_t size) {
  
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}
::std::string* HttpRequestContext::mutable_remote_ip() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
  return remote_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HttpRequestContext::release_remote_ip() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
  
  return remote_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpRequestContext::set_allocated_remote_ip(::std::string* remote_ip) {
  if (remote_ip != NULL) {
    
  } else {
    
  }
  remote_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remote_ip);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}

inline const HttpRequestContext* HttpRequestContext::internal_default_instance() {
  return &HttpRequestContext_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceLocation::kFilePathFieldNumber;
const int SourceLocation::kLineNumberFieldNumber;
const int SourceLocation::kFunctionNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceLocation::SourceLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
}

void SourceLocation::InitAsDefaultInstance() {
}

SourceLocation::SourceLocation(const SourceLocation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
}

void SourceLocation::SharedCtor() {
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_number_ = 0;
  _cached_size_ = 0;
}

SourceLocation::~SourceLocation() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  SharedDtor();
}

void SourceLocation::SharedDtor() {
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourceLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceLocation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SourceLocation_descriptor_;
}

const SourceLocation& SourceLocation::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SourceLocation> SourceLocation_default_instance_;

SourceLocation* SourceLocation::New(::google::protobuf::Arena* arena) const {
  SourceLocation* n = new SourceLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_number_ = 0;
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SourceLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), this->file_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_line_number;
        break;
      }

      // optional int32 line_number = 2;
      case 2: {
        if (tag == 16) {
         parse_line_number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_function_name;
        break;
      }

      // optional string function_name = 4;
      case 4: {
        if (tag == 34) {
         parse_function_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), this->function_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  return false;
#undef DO_
}

void SourceLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_path(), output);
  }

  // optional int32 line_number = 2;
  if (this->line_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->line_number(), output);
  }

  // optional string function_name = 4;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), this->function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->function_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
}

::google::protobuf::uint8* SourceLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), this->file_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_path(), target);
  }

  // optional int32 line_number = 2;
  if (this->line_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->line_number(), target);
  }

  // optional string function_name = 4;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), this->function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->function_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  return target;
}

size_t SourceLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  size_t total_size = 0;

  // optional string file_path = 1;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  // optional int32 line_number = 2;
  if (this->line_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line_number());
  }

  // optional string function_name = 4;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SourceLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
    UnsafeMergeFrom(*source);
  }
}

void SourceLocation::MergeFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SourceLocation::UnsafeMergeFrom(const SourceLocation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.file_path().size() > 0) {

    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  if (from.line_number() != 0) {
    set_line_number(from.line_number());
  }
  if (from.function_name().size() > 0) {

    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
}

void SourceLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceLocation::CopyFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SourceLocation::IsInitialized() const {

  return true;
}

void SourceLocation::Swap(SourceLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceLocation::InternalSwap(SourceLocation* other) {
  file_path_.Swap(&other->file_path_);
  std::swap(line_number_, other->line_number_);
  function_name_.Swap(&other->function_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceLocation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SourceLocation_descriptor_;
  metadata.reflection = SourceLocation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceLocation

// optional string file_path = 1;
void SourceLocation::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceLocation::file_path() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}
void SourceLocation::set_file_path(const char* value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}
void SourceLocation::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}
::std::string* SourceLocation::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceLocation::release_file_path() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}

// optional int32 line_number = 2;
void SourceLocation::clear_line_number() {
  line_number_ = 0;
}
::google::protobuf::int32 SourceLocation::line_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.SourceLocation.line_number)
  return line_number_;
}
void SourceLocation::set_line_number(::google::protobuf::int32 value) {
  
  line_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.SourceLocation.line_number)
}

// optional string function_name = 4;
void SourceLocation::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceLocation::function_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
  return function_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_function_name(const ::std::string& value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}
void SourceLocation::set_function_name(const char* value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}
void SourceLocation::set_function_name(const char* value, size_t size) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}
::std::string* SourceLocation::mutable_function_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceLocation::release_function_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
  
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_allocated_function_name(::std::string* function_name) {
  if (function_name != NULL) {
    
  } else {
    
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}

inline const SourceLocation* SourceLocation::internal_default_instance() {
  return &SourceLocation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
