// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/documentation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/documentation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

namespace {

const ::google::protobuf::Descriptor* Documentation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Documentation_reflection_ = NULL;
const ::google::protobuf::Descriptor* DocumentationRule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DocumentationRule_reflection_ = NULL;
const ::google::protobuf::Descriptor* Page_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Page_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fdocumentation_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fdocumentation_2eproto() {
  protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/documentation.proto");
  GOOGLE_CHECK(file != NULL);
  Documentation_descriptor_ = file->message_type(0);
  static const int Documentation_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, summary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, pages_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, rules_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, documentation_root_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, overview_),
  };
  Documentation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Documentation_descriptor_,
      Documentation::internal_default_instance(),
      Documentation_offsets_,
      -1,
      -1,
      -1,
      sizeof(Documentation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, _internal_metadata_));
  DocumentationRule_descriptor_ = file->message_type(1);
  static const int DocumentationRule_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentationRule, selector_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentationRule, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentationRule, deprecation_description_),
  };
  DocumentationRule_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DocumentationRule_descriptor_,
      DocumentationRule::internal_default_instance(),
      DocumentationRule_offsets_,
      -1,
      -1,
      -1,
      sizeof(DocumentationRule),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentationRule, _internal_metadata_));
  Page_descriptor_ = file->message_type(2);
  static const int Page_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, subpages_),
  };
  Page_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Page_descriptor_,
      Page::internal_default_instance(),
      Page_offsets_,
      -1,
      -1,
      -1,
      sizeof(Page),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fdocumentation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Documentation_descriptor_, Documentation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DocumentationRule_descriptor_, DocumentationRule::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Page_descriptor_, Page::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fdocumentation_2eproto() {
  Documentation_default_instance_.Shutdown();
  delete Documentation_reflection_;
  DocumentationRule_default_instance_.Shutdown();
  delete DocumentationRule_reflection_;
  Page_default_instance_.Shutdown();
  delete Page_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Documentation_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DocumentationRule_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Page_default_instance_.DefaultConstruct();
  Documentation_default_instance_.get_mutable()->InitAsDefaultInstance();
  DocumentationRule_default_instance_.get_mutable()->InitAsDefaultInstance();
  Page_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036google/api/documentation.proto\022\ngoogle"
    ".api\"\241\001\n\rDocumentation\022\017\n\007summary\030\001 \001(\t\022"
    "\037\n\005pages\030\005 \003(\0132\020.google.api.Page\022,\n\005rule"
    "s\030\003 \003(\0132\035.google.api.DocumentationRule\022\036"
    "\n\026documentation_root_url\030\004 \001(\t\022\020\n\010overvi"
    "ew\030\002 \001(\t\"[\n\021DocumentationRule\022\020\n\010selecto"
    "r\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\037\n\027deprecat"
    "ion_description\030\003 \001(\t\"I\n\004Page\022\014\n\004name\030\001 "
    "\001(\t\022\017\n\007content\030\002 \001(\t\022\"\n\010subpages\030\003 \003(\0132\020"
    ".google.api.PageBt\n\016com.google.apiB\022Docu"
    "mentationProtoP\001ZEgoogle.golang.org/genp"
    "roto/googleapis/api/serviceconfig;servic"
    "econfig\242\002\004GAPIb\006proto3", 502);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/documentation.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fdocumentation_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fdocumentation_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fdocumentation_2eproto() {
    protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fdocumentation_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Documentation::kSummaryFieldNumber;
const int Documentation::kPagesFieldNumber;
const int Documentation::kRulesFieldNumber;
const int Documentation::kDocumentationRootUrlFieldNumber;
const int Documentation::kOverviewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Documentation::Documentation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Documentation)
}

void Documentation::InitAsDefaultInstance() {
}

Documentation::Documentation(const Documentation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.Documentation)
}

void Documentation::SharedCtor() {
  summary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_root_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overview_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Documentation::~Documentation() {
  // @@protoc_insertion_point(destructor:google.api.Documentation)
  SharedDtor();
}

void Documentation::SharedDtor() {
  summary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_root_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overview_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Documentation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Documentation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Documentation_descriptor_;
}

const Documentation& Documentation::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Documentation> Documentation_default_instance_;

Documentation* Documentation::New(::google::protobuf::Arena* arena) const {
  Documentation* n = new Documentation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Documentation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Documentation)
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentation_root_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overview_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pages_.Clear();
  rules_.Clear();
}

bool Documentation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Documentation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string summary = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_summary()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->summary().data(), this->summary().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Documentation.summary"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_overview;
        break;
      }

      // optional string overview = 2;
      case 2: {
        if (tag == 18) {
         parse_overview:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_overview()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->overview().data(), this->overview().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Documentation.overview"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rules;
        break;
      }

      // repeated .google.api.DocumentationRule rules = 3;
      case 3: {
        if (tag == 26) {
         parse_rules:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rules()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_rules;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_documentation_root_url;
        break;
      }

      // optional string documentation_root_url = 4;
      case 4: {
        if (tag == 34) {
         parse_documentation_root_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentation_root_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->documentation_root_url().data(), this->documentation_root_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Documentation.documentation_root_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_pages;
        break;
      }

      // repeated .google.api.Page pages = 5;
      case 5: {
        if (tag == 42) {
         parse_pages:
          DO_(input->IncrementRecursionDepth());
         parse_loop_pages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pages()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_pages;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Documentation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Documentation)
  return false;
#undef DO_
}

void Documentation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Documentation)
  // optional string summary = 1;
  if (this->summary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary().data(), this->summary().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Documentation.summary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->summary(), output);
  }

  // optional string overview = 2;
  if (this->overview().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->overview().data(), this->overview().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Documentation.overview");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->overview(), output);
  }

  // repeated .google.api.DocumentationRule rules = 3;
  for (unsigned int i = 0, n = this->rules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rules(i), output);
  }

  // optional string documentation_root_url = 4;
  if (this->documentation_root_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation_root_url().data(), this->documentation_root_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Documentation.documentation_root_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->documentation_root_url(), output);
  }

  // repeated .google.api.Page pages = 5;
  for (unsigned int i = 0, n = this->pages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->pages(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.Documentation)
}

::google::protobuf::uint8* Documentation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Documentation)
  // optional string summary = 1;
  if (this->summary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary().data(), this->summary().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Documentation.summary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->summary(), target);
  }

  // optional string overview = 2;
  if (this->overview().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->overview().data(), this->overview().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Documentation.overview");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->overview(), target);
  }

  // repeated .google.api.DocumentationRule rules = 3;
  for (unsigned int i = 0, n = this->rules_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rules(i), false, target);
  }

  // optional string documentation_root_url = 4;
  if (this->documentation_root_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->documentation_root_url().data(), this->documentation_root_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Documentation.documentation_root_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->documentation_root_url(), target);
  }

  // repeated .google.api.Page pages = 5;
  for (unsigned int i = 0, n = this->pages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->pages(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.Documentation)
  return target;
}

size_t Documentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Documentation)
  size_t total_size = 0;

  // optional string summary = 1;
  if (this->summary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->summary());
  }

  // optional string documentation_root_url = 4;
  if (this->documentation_root_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->documentation_root_url());
  }

  // optional string overview = 2;
  if (this->overview().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->overview());
  }

  // repeated .google.api.Page pages = 5;
  {
    unsigned int count = this->pages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pages(i));
    }
  }

  // repeated .google.api.DocumentationRule rules = 3;
  {
    unsigned int count = this->rules_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rules(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Documentation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Documentation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Documentation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Documentation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Documentation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Documentation)
    UnsafeMergeFrom(*source);
  }
}

void Documentation::MergeFrom(const Documentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Documentation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Documentation::UnsafeMergeFrom(const Documentation& from) {
  GOOGLE_DCHECK(&from != this);
  pages_.MergeFrom(from.pages_);
  rules_.MergeFrom(from.rules_);
  if (from.summary().size() > 0) {

    summary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_);
  }
  if (from.documentation_root_url().size() > 0) {

    documentation_root_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.documentation_root_url_);
  }
  if (from.overview().size() > 0) {

    overview_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.overview_);
  }
}

void Documentation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Documentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Documentation::CopyFrom(const Documentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Documentation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Documentation::IsInitialized() const {

  return true;
}

void Documentation::Swap(Documentation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Documentation::InternalSwap(Documentation* other) {
  summary_.Swap(&other->summary_);
  pages_.UnsafeArenaSwap(&other->pages_);
  rules_.UnsafeArenaSwap(&other->rules_);
  documentation_root_url_.Swap(&other->documentation_root_url_);
  overview_.Swap(&other->overview_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Documentation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Documentation_descriptor_;
  metadata.reflection = Documentation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Documentation

// optional string summary = 1;
void Documentation::clear_summary() {
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Documentation::summary() const {
  // @@protoc_insertion_point(field_get:google.api.Documentation.summary)
  return summary_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_summary(const ::std::string& value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Documentation.summary)
}
void Documentation::set_summary(const char* value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Documentation.summary)
}
void Documentation::set_summary(const char* value, size_t size) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Documentation.summary)
}
::std::string* Documentation::mutable_summary() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Documentation.summary)
  return summary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Documentation::release_summary() {
  // @@protoc_insertion_point(field_release:google.api.Documentation.summary)
  
  return summary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_allocated_summary(::std::string* summary) {
  if (summary != NULL) {
    
  } else {
    
  }
  summary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), summary);
  // @@protoc_insertion_point(field_set_allocated:google.api.Documentation.summary)
}

// repeated .google.api.Page pages = 5;
int Documentation::pages_size() const {
  return pages_.size();
}
void Documentation::clear_pages() {
  pages_.Clear();
}
const ::google::api::Page& Documentation::pages(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Documentation.pages)
  return pages_.Get(index);
}
::google::api::Page* Documentation::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Documentation.pages)
  return pages_.Mutable(index);
}
::google::api::Page* Documentation::add_pages() {
  // @@protoc_insertion_point(field_add:google.api.Documentation.pages)
  return pages_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::Page >*
Documentation::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Documentation.pages)
  return &pages_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::Page >&
Documentation::pages() const {
  // @@protoc_insertion_point(field_list:google.api.Documentation.pages)
  return pages_;
}

// repeated .google.api.DocumentationRule rules = 3;
int Documentation::rules_size() const {
  return rules_.size();
}
void Documentation::clear_rules() {
  rules_.Clear();
}
const ::google::api::DocumentationRule& Documentation::rules(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Documentation.rules)
  return rules_.Get(index);
}
::google::api::DocumentationRule* Documentation::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Documentation.rules)
  return rules_.Mutable(index);
}
::google::api::DocumentationRule* Documentation::add_rules() {
  // @@protoc_insertion_point(field_add:google.api.Documentation.rules)
  return rules_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::DocumentationRule >*
Documentation::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Documentation.rules)
  return &rules_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::DocumentationRule >&
Documentation::rules() const {
  // @@protoc_insertion_point(field_list:google.api.Documentation.rules)
  return rules_;
}

// optional string documentation_root_url = 4;
void Documentation::clear_documentation_root_url() {
  documentation_root_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Documentation::documentation_root_url() const {
  // @@protoc_insertion_point(field_get:google.api.Documentation.documentation_root_url)
  return documentation_root_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_documentation_root_url(const ::std::string& value) {
  
  documentation_root_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Documentation.documentation_root_url)
}
void Documentation::set_documentation_root_url(const char* value) {
  
  documentation_root_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Documentation.documentation_root_url)
}
void Documentation::set_documentation_root_url(const char* value, size_t size) {
  
  documentation_root_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Documentation.documentation_root_url)
}
::std::string* Documentation::mutable_documentation_root_url() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Documentation.documentation_root_url)
  return documentation_root_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Documentation::release_documentation_root_url() {
  // @@protoc_insertion_point(field_release:google.api.Documentation.documentation_root_url)
  
  return documentation_root_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_allocated_documentation_root_url(::std::string* documentation_root_url) {
  if (documentation_root_url != NULL) {
    
  } else {
    
  }
  documentation_root_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), documentation_root_url);
  // @@protoc_insertion_point(field_set_allocated:google.api.Documentation.documentation_root_url)
}

// optional string overview = 2;
void Documentation::clear_overview() {
  overview_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Documentation::overview() const {
  // @@protoc_insertion_point(field_get:google.api.Documentation.overview)
  return overview_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_overview(const ::std::string& value) {
  
  overview_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Documentation.overview)
}
void Documentation::set_overview(const char* value) {
  
  overview_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Documentation.overview)
}
void Documentation::set_overview(const char* value, size_t size) {
  
  overview_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Documentation.overview)
}
::std::string* Documentation::mutable_overview() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Documentation.overview)
  return overview_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Documentation::release_overview() {
  // @@protoc_insertion_point(field_release:google.api.Documentation.overview)
  
  return overview_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_allocated_overview(::std::string* overview) {
  if (overview != NULL) {
    
  } else {
    
  }
  overview_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), overview);
  // @@protoc_insertion_point(field_set_allocated:google.api.Documentation.overview)
}

inline const Documentation* Documentation::internal_default_instance() {
  return &Documentation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentationRule::kSelectorFieldNumber;
const int DocumentationRule::kDescriptionFieldNumber;
const int DocumentationRule::kDeprecationDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentationRule::DocumentationRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.DocumentationRule)
}

void DocumentationRule::InitAsDefaultInstance() {
}

DocumentationRule::DocumentationRule(const DocumentationRule& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.DocumentationRule)
}

void DocumentationRule::SharedCtor() {
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deprecation_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DocumentationRule::~DocumentationRule() {
  // @@protoc_insertion_point(destructor:google.api.DocumentationRule)
  SharedDtor();
}

void DocumentationRule::SharedDtor() {
  selector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deprecation_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DocumentationRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentationRule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DocumentationRule_descriptor_;
}

const DocumentationRule& DocumentationRule::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DocumentationRule> DocumentationRule_default_instance_;

DocumentationRule* DocumentationRule::New(::google::protobuf::Arena* arena) const {
  DocumentationRule* n = new DocumentationRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentationRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.DocumentationRule)
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deprecation_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DocumentationRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.DocumentationRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string selector = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selector().data(), this->selector().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DocumentationRule.selector"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }

      // optional string description = 2;
      case 2: {
        if (tag == 18) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DocumentationRule.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_deprecation_description;
        break;
      }

      // optional string deprecation_description = 3;
      case 3: {
        if (tag == 26) {
         parse_deprecation_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deprecation_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deprecation_description().data(), this->deprecation_description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.DocumentationRule.deprecation_description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.DocumentationRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.DocumentationRule)
  return false;
#undef DO_
}

void DocumentationRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.DocumentationRule)
  // optional string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), this->selector().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DocumentationRule.selector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->selector(), output);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DocumentationRule.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // optional string deprecation_description = 3;
  if (this->deprecation_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deprecation_description().data(), this->deprecation_description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DocumentationRule.deprecation_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deprecation_description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.DocumentationRule)
}

::google::protobuf::uint8* DocumentationRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.DocumentationRule)
  // optional string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), this->selector().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DocumentationRule.selector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->selector(), target);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DocumentationRule.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // optional string deprecation_description = 3;
  if (this->deprecation_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deprecation_description().data(), this->deprecation_description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.DocumentationRule.deprecation_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deprecation_description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.DocumentationRule)
  return target;
}

size_t DocumentationRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.DocumentationRule)
  size_t total_size = 0;

  // optional string selector = 1;
  if (this->selector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selector());
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional string deprecation_description = 3;
  if (this->deprecation_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deprecation_description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DocumentationRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.DocumentationRule)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DocumentationRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DocumentationRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.DocumentationRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.DocumentationRule)
    UnsafeMergeFrom(*source);
  }
}

void DocumentationRule::MergeFrom(const DocumentationRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.DocumentationRule)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DocumentationRule::UnsafeMergeFrom(const DocumentationRule& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.selector().size() > 0) {

    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.deprecation_description().size() > 0) {

    deprecation_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deprecation_description_);
  }
}

void DocumentationRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.DocumentationRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DocumentationRule::CopyFrom(const DocumentationRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.DocumentationRule)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DocumentationRule::IsInitialized() const {

  return true;
}

void DocumentationRule::Swap(DocumentationRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentationRule::InternalSwap(DocumentationRule* other) {
  selector_.Swap(&other->selector_);
  description_.Swap(&other->description_);
  deprecation_description_.Swap(&other->deprecation_description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DocumentationRule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DocumentationRule_descriptor_;
  metadata.reflection = DocumentationRule_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentationRule

// optional string selector = 1;
void DocumentationRule::clear_selector() {
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DocumentationRule::selector() const {
  // @@protoc_insertion_point(field_get:google.api.DocumentationRule.selector)
  return selector_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentationRule::set_selector(const ::std::string& value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.DocumentationRule.selector)
}
void DocumentationRule::set_selector(const char* value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.DocumentationRule.selector)
}
void DocumentationRule::set_selector(const char* value, size_t size) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.DocumentationRule.selector)
}
::std::string* DocumentationRule::mutable_selector() {
  
  // @@protoc_insertion_point(field_mutable:google.api.DocumentationRule.selector)
  return selector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DocumentationRule::release_selector() {
  // @@protoc_insertion_point(field_release:google.api.DocumentationRule.selector)
  
  return selector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentationRule::set_allocated_selector(::std::string* selector) {
  if (selector != NULL) {
    
  } else {
    
  }
  selector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selector);
  // @@protoc_insertion_point(field_set_allocated:google.api.DocumentationRule.selector)
}

// optional string description = 2;
void DocumentationRule::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DocumentationRule::description() const {
  // @@protoc_insertion_point(field_get:google.api.DocumentationRule.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentationRule::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.DocumentationRule.description)
}
void DocumentationRule::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.DocumentationRule.description)
}
void DocumentationRule::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.DocumentationRule.description)
}
::std::string* DocumentationRule::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.api.DocumentationRule.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DocumentationRule::release_description() {
  // @@protoc_insertion_point(field_release:google.api.DocumentationRule.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentationRule::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.api.DocumentationRule.description)
}

// optional string deprecation_description = 3;
void DocumentationRule::clear_deprecation_description() {
  deprecation_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DocumentationRule::deprecation_description() const {
  // @@protoc_insertion_point(field_get:google.api.DocumentationRule.deprecation_description)
  return deprecation_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentationRule::set_deprecation_description(const ::std::string& value) {
  
  deprecation_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.DocumentationRule.deprecation_description)
}
void DocumentationRule::set_deprecation_description(const char* value) {
  
  deprecation_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.DocumentationRule.deprecation_description)
}
void DocumentationRule::set_deprecation_description(const char* value, size_t size) {
  
  deprecation_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.DocumentationRule.deprecation_description)
}
::std::string* DocumentationRule::mutable_deprecation_description() {
  
  // @@protoc_insertion_point(field_mutable:google.api.DocumentationRule.deprecation_description)
  return deprecation_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DocumentationRule::release_deprecation_description() {
  // @@protoc_insertion_point(field_release:google.api.DocumentationRule.deprecation_description)
  
  return deprecation_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DocumentationRule::set_allocated_deprecation_description(::std::string* deprecation_description) {
  if (deprecation_description != NULL) {
    
  } else {
    
  }
  deprecation_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecation_description);
  // @@protoc_insertion_point(field_set_allocated:google.api.DocumentationRule.deprecation_description)
}

inline const DocumentationRule* DocumentationRule::internal_default_instance() {
  return &DocumentationRule_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Page::kNameFieldNumber;
const int Page::kContentFieldNumber;
const int Page::kSubpagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Page::Page()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Page)
}

void Page::InitAsDefaultInstance() {
}

Page::Page(const Page& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.Page)
}

void Page::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Page::~Page() {
  // @@protoc_insertion_point(destructor:google.api.Page)
  SharedDtor();
}

void Page::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Page::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Page::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Page_descriptor_;
}

const Page& Page::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Page> Page_default_instance_;

Page* Page::New(::google::protobuf::Arena* arena) const {
  Page* n = new Page;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Page)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subpages_.Clear();
}

bool Page::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Page)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Page.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // optional string content = 2;
      case 2: {
        if (tag == 18) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Page.content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_subpages;
        break;
      }

      // repeated .google.api.Page subpages = 3;
      case 3: {
        if (tag == 26) {
         parse_subpages:
          DO_(input->IncrementRecursionDepth());
         parse_loop_subpages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_subpages()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_subpages;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Page)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Page)
  return false;
#undef DO_
}

void Page::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Page)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Page.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Page.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // repeated .google.api.Page subpages = 3;
  for (unsigned int i = 0, n = this->subpages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->subpages(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.Page)
}

::google::protobuf::uint8* Page::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Page)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Page.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Page.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // repeated .google.api.Page subpages = 3;
  for (unsigned int i = 0, n = this->subpages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->subpages(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.Page)
  return target;
}

size_t Page::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Page)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // repeated .google.api.Page subpages = 3;
  {
    unsigned int count = this->subpages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subpages(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Page::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Page)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Page* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Page>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Page)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Page)
    UnsafeMergeFrom(*source);
  }
}

void Page::MergeFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Page)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Page::UnsafeMergeFrom(const Page& from) {
  GOOGLE_DCHECK(&from != this);
  subpages_.MergeFrom(from.subpages_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void Page::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Page)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Page::IsInitialized() const {

  return true;
}

void Page::Swap(Page* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Page::InternalSwap(Page* other) {
  name_.Swap(&other->name_);
  content_.Swap(&other->content_);
  subpages_.UnsafeArenaSwap(&other->subpages_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Page::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Page_descriptor_;
  metadata.reflection = Page_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Page

// optional string name = 1;
void Page::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Page::name() const {
  // @@protoc_insertion_point(field_get:google.api.Page.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Page::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Page.name)
}
void Page::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Page.name)
}
void Page::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Page.name)
}
::std::string* Page::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Page.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Page::release_name() {
  // @@protoc_insertion_point(field_release:google.api.Page.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Page::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.api.Page.name)
}

// optional string content = 2;
void Page::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Page::content() const {
  // @@protoc_insertion_point(field_get:google.api.Page.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Page::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Page.content)
}
void Page::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Page.content)
}
void Page::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Page.content)
}
::std::string* Page::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Page.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Page::release_content() {
  // @@protoc_insertion_point(field_release:google.api.Page.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Page::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:google.api.Page.content)
}

// repeated .google.api.Page subpages = 3;
int Page::subpages_size() const {
  return subpages_.size();
}
void Page::clear_subpages() {
  subpages_.Clear();
}
const ::google::api::Page& Page::subpages(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Page.subpages)
  return subpages_.Get(index);
}
::google::api::Page* Page::mutable_subpages(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Page.subpages)
  return subpages_.Mutable(index);
}
::google::api::Page* Page::add_subpages() {
  // @@protoc_insertion_point(field_add:google.api.Page.subpages)
  return subpages_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::Page >*
Page::mutable_subpages() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Page.subpages)
  return &subpages_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::Page >&
Page::subpages() const {
  // @@protoc_insertion_point(field_list:google.api.Page.subpages)
  return subpages_;
}

inline const Page* Page::internal_default_instance() {
  return &Page_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
