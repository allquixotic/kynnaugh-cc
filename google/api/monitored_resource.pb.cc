// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/monitored_resource.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/monitored_resource.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

namespace {

const ::google::protobuf::Descriptor* MonitoredResourceDescriptor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonitoredResourceDescriptor_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonitoredResource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonitoredResource_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonitoredResource_LabelsEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fmonitored_5fresource_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fmonitored_5fresource_2eproto() {
  protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/monitored_resource.proto");
  GOOGLE_CHECK(file != NULL);
  MonitoredResourceDescriptor_descriptor_ = file->message_type(0);
  static const int MonitoredResourceDescriptor_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResourceDescriptor, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResourceDescriptor, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResourceDescriptor, display_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResourceDescriptor, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResourceDescriptor, labels_),
  };
  MonitoredResourceDescriptor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MonitoredResourceDescriptor_descriptor_,
      MonitoredResourceDescriptor::internal_default_instance(),
      MonitoredResourceDescriptor_offsets_,
      -1,
      -1,
      -1,
      sizeof(MonitoredResourceDescriptor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResourceDescriptor, _internal_metadata_));
  MonitoredResource_descriptor_ = file->message_type(1);
  static const int MonitoredResource_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResource, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResource, labels_),
  };
  MonitoredResource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MonitoredResource_descriptor_,
      MonitoredResource::internal_default_instance(),
      MonitoredResource_offsets_,
      -1,
      -1,
      -1,
      sizeof(MonitoredResource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitoredResource, _internal_metadata_));
  MonitoredResource_LabelsEntry_descriptor_ = MonitoredResource_descriptor_->nested_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fmonitored_5fresource_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MonitoredResourceDescriptor_descriptor_, MonitoredResourceDescriptor::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MonitoredResource_descriptor_, MonitoredResource::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        MonitoredResource_LabelsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                MonitoredResource_LabelsEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fmonitored_5fresource_2eproto() {
  MonitoredResourceDescriptor_default_instance_.Shutdown();
  delete MonitoredResourceDescriptor_reflection_;
  MonitoredResource_default_instance_.Shutdown();
  delete MonitoredResource_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2flabel_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  MonitoredResourceDescriptor_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MonitoredResource_default_instance_.DefaultConstruct();
  MonitoredResourceDescriptor_default_instance_.get_mutable()->InitAsDefaultInstance();
  MonitoredResource_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#google/api/monitored_resource.proto\022\ng"
    "oogle.api\032\026google/api/label.proto\"\221\001\n\033Mo"
    "nitoredResourceDescriptor\022\014\n\004name\030\005 \001(\t\022"
    "\014\n\004type\030\001 \001(\t\022\024\n\014display_name\030\002 \001(\t\022\023\n\013d"
    "escription\030\003 \001(\t\022+\n\006labels\030\004 \003(\0132\033.googl"
    "e.api.LabelDescriptor\"\213\001\n\021MonitoredResou"
    "rce\022\014\n\004type\030\001 \001(\t\0229\n\006labels\030\002 \003(\0132).goog"
    "le.api.MonitoredResource.LabelsEntry\032-\n\013"
    "LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
    "\0028\001By\n\016com.google.apiB\026MonitoredResource"
    "ProtoP\001ZCgoogle.golang.org/genproto/goog"
    "leapis/api/monitoredres;monitoredres\370\001\001\242"
    "\002\004GAPIb\006proto3", 494);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/monitored_resource.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2flabel_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fmonitored_5fresource_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fmonitored_5fresource_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fmonitored_5fresource_2eproto() {
    protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fmonitored_5fresource_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitoredResourceDescriptor::kNameFieldNumber;
const int MonitoredResourceDescriptor::kTypeFieldNumber;
const int MonitoredResourceDescriptor::kDisplayNameFieldNumber;
const int MonitoredResourceDescriptor::kDescriptionFieldNumber;
const int MonitoredResourceDescriptor::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitoredResourceDescriptor::MonitoredResourceDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResourceDescriptor)
}
MonitoredResourceDescriptor::MonitoredResourceDescriptor(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResourceDescriptor)
}

void MonitoredResourceDescriptor::InitAsDefaultInstance() {
}

MonitoredResourceDescriptor::MonitoredResourceDescriptor(const MonitoredResourceDescriptor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResourceDescriptor)
}

void MonitoredResourceDescriptor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MonitoredResourceDescriptor::~MonitoredResourceDescriptor() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResourceDescriptor)
  SharedDtor();
}

void MonitoredResourceDescriptor::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  display_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  description_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void MonitoredResourceDescriptor::ArenaDtor(void* object) {
  MonitoredResourceDescriptor* _this = reinterpret_cast< MonitoredResourceDescriptor* >(object);
  (void)_this;
}
void MonitoredResourceDescriptor::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MonitoredResourceDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitoredResourceDescriptor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonitoredResourceDescriptor_descriptor_;
}

const MonitoredResourceDescriptor& MonitoredResourceDescriptor::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MonitoredResourceDescriptor> MonitoredResourceDescriptor_default_instance_;

MonitoredResourceDescriptor* MonitoredResourceDescriptor::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MonitoredResourceDescriptor>(arena);
}

void MonitoredResourceDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResourceDescriptor)
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  labels_.Clear();
}

bool MonitoredResourceDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.MonitoredResourceDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_display_name;
        break;
      }

      // optional string display_name = 2;
      case 2: {
        if (tag == 18) {
         parse_display_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), this->display_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.display_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_labels;
        break;
      }

      // repeated .google.api.LabelDescriptor labels = 4;
      case 4: {
        if (tag == 34) {
         parse_labels:
          DO_(input->IncrementRecursionDepth());
         parse_loop_labels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_labels()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_labels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResourceDescriptor.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MonitoredResourceDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MonitoredResourceDescriptor)
  return false;
#undef DO_
}

void MonitoredResourceDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MonitoredResourceDescriptor)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // repeated .google.api.LabelDescriptor labels = 4;
  for (unsigned int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->labels(i), output);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.MonitoredResourceDescriptor)
}

::google::protobuf::uint8* MonitoredResourceDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResourceDescriptor)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), this->display_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // repeated .google.api.LabelDescriptor labels = 4;
  for (unsigned int i = 0, n = this->labels_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->labels(i), false, target);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResourceDescriptor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResourceDescriptor)
  return target;
}

size_t MonitoredResourceDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResourceDescriptor)
  size_t total_size = 0;

  // optional string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // repeated .google.api.LabelDescriptor labels = 4;
  {
    unsigned int count = this->labels_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->labels(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitoredResourceDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MonitoredResourceDescriptor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MonitoredResourceDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitoredResourceDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MonitoredResourceDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MonitoredResourceDescriptor)
    UnsafeMergeFrom(*source);
  }
}

void MonitoredResourceDescriptor::MergeFrom(const MonitoredResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResourceDescriptor)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MonitoredResourceDescriptor::UnsafeMergeFrom(const MonitoredResourceDescriptor& from) {
  GOOGLE_DCHECK(&from != this);
  labels_.MergeFrom(from.labels_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.type().size() > 0) {
    set_type(from.type());
  }
  if (from.display_name().size() > 0) {
    set_display_name(from.display_name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
}

void MonitoredResourceDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MonitoredResourceDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitoredResourceDescriptor::CopyFrom(const MonitoredResourceDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResourceDescriptor)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MonitoredResourceDescriptor::IsInitialized() const {

  return true;
}

void MonitoredResourceDescriptor::Swap(MonitoredResourceDescriptor* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MonitoredResourceDescriptor temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void MonitoredResourceDescriptor::UnsafeArenaSwap(MonitoredResourceDescriptor* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MonitoredResourceDescriptor::InternalSwap(MonitoredResourceDescriptor* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  display_name_.Swap(&other->display_name_);
  description_.Swap(&other->description_);
  labels_.UnsafeArenaSwap(&other->labels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitoredResourceDescriptor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonitoredResourceDescriptor_descriptor_;
  metadata.reflection = MonitoredResourceDescriptor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonitoredResourceDescriptor

// optional string name = 5;
void MonitoredResourceDescriptor::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& MonitoredResourceDescriptor::name() const {
  // @@protoc_insertion_point(field_get:google.api.MonitoredResourceDescriptor.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitoredResourceDescriptor::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.MonitoredResourceDescriptor.name)
}
void MonitoredResourceDescriptor::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.MonitoredResourceDescriptor.name)
}
void MonitoredResourceDescriptor::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.MonitoredResourceDescriptor.name)
}
::std::string* MonitoredResourceDescriptor::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.MonitoredResourceDescriptor.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::release_name() {
  // @@protoc_insertion_point(field_release:google.api.MonitoredResourceDescriptor.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.MonitoredResourceDescriptor.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void MonitoredResourceDescriptor::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.MonitoredResourceDescriptor.name)
}
void MonitoredResourceDescriptor::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.MonitoredResourceDescriptor.name)
}

// optional string type = 1;
void MonitoredResourceDescriptor::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& MonitoredResourceDescriptor::type() const {
  // @@protoc_insertion_point(field_get:google.api.MonitoredResourceDescriptor.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitoredResourceDescriptor::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.MonitoredResourceDescriptor.type)
}
void MonitoredResourceDescriptor::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.MonitoredResourceDescriptor.type)
}
void MonitoredResourceDescriptor::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.MonitoredResourceDescriptor.type)
}
::std::string* MonitoredResourceDescriptor::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.MonitoredResourceDescriptor.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::release_type() {
  // @@protoc_insertion_point(field_release:google.api.MonitoredResourceDescriptor.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.MonitoredResourceDescriptor.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void MonitoredResourceDescriptor::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.MonitoredResourceDescriptor.type)
}
void MonitoredResourceDescriptor::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.MonitoredResourceDescriptor.type)
}

// optional string display_name = 2;
void MonitoredResourceDescriptor::clear_display_name() {
  display_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& MonitoredResourceDescriptor::display_name() const {
  // @@protoc_insertion_point(field_get:google.api.MonitoredResourceDescriptor.display_name)
  return display_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitoredResourceDescriptor::set_display_name(const ::std::string& value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.MonitoredResourceDescriptor.display_name)
}
void MonitoredResourceDescriptor::set_display_name(const char* value) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.MonitoredResourceDescriptor.display_name)
}
void MonitoredResourceDescriptor::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.MonitoredResourceDescriptor.display_name)
}
::std::string* MonitoredResourceDescriptor::mutable_display_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.MonitoredResourceDescriptor.display_name)
  return display_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::release_display_name() {
  // @@protoc_insertion_point(field_release:google.api.MonitoredResourceDescriptor.display_name)
  
  return display_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.MonitoredResourceDescriptor.display_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return display_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void MonitoredResourceDescriptor::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.MonitoredResourceDescriptor.display_name)
}
void MonitoredResourceDescriptor::unsafe_arena_set_allocated_display_name(
    ::std::string* display_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (display_name != NULL) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.MonitoredResourceDescriptor.display_name)
}

// optional string description = 3;
void MonitoredResourceDescriptor::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& MonitoredResourceDescriptor::description() const {
  // @@protoc_insertion_point(field_get:google.api.MonitoredResourceDescriptor.description)
  return description_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitoredResourceDescriptor::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.MonitoredResourceDescriptor.description)
}
void MonitoredResourceDescriptor::set_description(const char* value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.MonitoredResourceDescriptor.description)
}
void MonitoredResourceDescriptor::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.MonitoredResourceDescriptor.description)
}
::std::string* MonitoredResourceDescriptor::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.api.MonitoredResourceDescriptor.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::release_description() {
  // @@protoc_insertion_point(field_release:google.api.MonitoredResourceDescriptor.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResourceDescriptor::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.MonitoredResourceDescriptor.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void MonitoredResourceDescriptor::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.MonitoredResourceDescriptor.description)
}
void MonitoredResourceDescriptor::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.MonitoredResourceDescriptor.description)
}

// repeated .google.api.LabelDescriptor labels = 4;
int MonitoredResourceDescriptor::labels_size() const {
  return labels_.size();
}
void MonitoredResourceDescriptor::clear_labels() {
  labels_.Clear();
}
const ::google::api::LabelDescriptor& MonitoredResourceDescriptor::labels(int index) const {
  // @@protoc_insertion_point(field_get:google.api.MonitoredResourceDescriptor.labels)
  return labels_.Get(index);
}
::google::api::LabelDescriptor* MonitoredResourceDescriptor::mutable_labels(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.MonitoredResourceDescriptor.labels)
  return labels_.Mutable(index);
}
::google::api::LabelDescriptor* MonitoredResourceDescriptor::add_labels() {
  // @@protoc_insertion_point(field_add:google.api.MonitoredResourceDescriptor.labels)
  return labels_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::LabelDescriptor >*
MonitoredResourceDescriptor::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:google.api.MonitoredResourceDescriptor.labels)
  return &labels_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::LabelDescriptor >&
MonitoredResourceDescriptor::labels() const {
  // @@protoc_insertion_point(field_list:google.api.MonitoredResourceDescriptor.labels)
  return labels_;
}

inline const MonitoredResourceDescriptor* MonitoredResourceDescriptor::internal_default_instance() {
  return &MonitoredResourceDescriptor_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitoredResource::kTypeFieldNumber;
const int MonitoredResource::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitoredResource::MonitoredResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MonitoredResource)
}
MonitoredResource::MonitoredResource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.MonitoredResource)
}

void MonitoredResource::InitAsDefaultInstance() {
}

MonitoredResource::MonitoredResource(const MonitoredResource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.MonitoredResource)
}

void MonitoredResource::SharedCtor() {
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &::google::api::MonitoredResource_LabelsEntry_descriptor_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MonitoredResource::~MonitoredResource() {
  // @@protoc_insertion_point(destructor:google.api.MonitoredResource)
  SharedDtor();
}

void MonitoredResource::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void MonitoredResource::ArenaDtor(void* object) {
  MonitoredResource* _this = reinterpret_cast< MonitoredResource* >(object);
  (void)_this;
}
void MonitoredResource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MonitoredResource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitoredResource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonitoredResource_descriptor_;
}

const MonitoredResource& MonitoredResource::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MonitoredResource> MonitoredResource_default_instance_;

MonitoredResource* MonitoredResource::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MonitoredResource>(arena);
}

void MonitoredResource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MonitoredResource)
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  labels_.Clear();
}

bool MonitoredResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.MonitoredResource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResource.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_labels;
        break;
      }

      // map<string, string> labels = 2;
      case 2: {
        if (tag == 18) {
         parse_labels:
          DO_(input->IncrementRecursionDepth());
         parse_loop_labels:
          MonitoredResource_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResource.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MonitoredResource.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_labels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MonitoredResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MonitoredResource)
  return false;
#undef DO_
}

void MonitoredResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MonitoredResource)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResource.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MonitoredResource_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MonitoredResource_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.api.MonitoredResource)
}

::google::protobuf::uint8* MonitoredResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MonitoredResource)
  // optional string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MonitoredResource.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.MonitoredResource.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MonitoredResource_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MonitoredResource_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.MonitoredResource)
  return target;
}

size_t MonitoredResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MonitoredResource)
  size_t total_size = 0;

  // optional string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // map<string, string> labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<MonitoredResource_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitoredResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MonitoredResource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MonitoredResource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitoredResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MonitoredResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MonitoredResource)
    UnsafeMergeFrom(*source);
  }
}

void MonitoredResource::MergeFrom(const MonitoredResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MonitoredResource)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MonitoredResource::UnsafeMergeFrom(const MonitoredResource& from) {
  GOOGLE_DCHECK(&from != this);
  labels_.MergeFrom(from.labels_);
  if (from.type().size() > 0) {
    set_type(from.type());
  }
}

void MonitoredResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MonitoredResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitoredResource::CopyFrom(const MonitoredResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MonitoredResource)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MonitoredResource::IsInitialized() const {

  return true;
}

void MonitoredResource::Swap(MonitoredResource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MonitoredResource temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void MonitoredResource::UnsafeArenaSwap(MonitoredResource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MonitoredResource::InternalSwap(MonitoredResource* other) {
  type_.Swap(&other->type_);
  labels_.Swap(&other->labels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitoredResource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonitoredResource_descriptor_;
  metadata.reflection = MonitoredResource_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonitoredResource

// optional string type = 1;
void MonitoredResource::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& MonitoredResource::type() const {
  // @@protoc_insertion_point(field_get:google.api.MonitoredResource.type)
  return type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitoredResource::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.MonitoredResource.type)
}
void MonitoredResource::set_type(const char* value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.MonitoredResource.type)
}
void MonitoredResource::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.MonitoredResource.type)
}
::std::string* MonitoredResource::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.MonitoredResource.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResource::release_type() {
  // @@protoc_insertion_point(field_release:google.api.MonitoredResource.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MonitoredResource::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.MonitoredResource.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void MonitoredResource::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.MonitoredResource.type)
}
void MonitoredResource::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.MonitoredResource.type)
}

// map<string, string> labels = 2;
int MonitoredResource::labels_size() const {
  return labels_.size();
}
void MonitoredResource::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
MonitoredResource::labels() const {
  // @@protoc_insertion_point(field_map:google.api.MonitoredResource.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
MonitoredResource::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.api.MonitoredResource.labels)
  return labels_.MutableMap();
}

inline const MonitoredResource* MonitoredResource::internal_default_instance() {
  return &MonitoredResource_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
