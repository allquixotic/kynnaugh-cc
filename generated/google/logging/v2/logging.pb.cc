// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/logging/v2/logging.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace logging {
namespace v2 {
class DeleteLogRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteLogRequest> {};
DeleteLogRequestDefaultTypeInternal _DeleteLogRequest_default_instance_;
class WriteLogEntriesRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WriteLogEntriesRequest> {};
WriteLogEntriesRequestDefaultTypeInternal _WriteLogEntriesRequest_default_instance_;
class WriteLogEntriesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WriteLogEntriesResponse> {};
WriteLogEntriesResponseDefaultTypeInternal _WriteLogEntriesResponse_default_instance_;
class ListLogEntriesRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListLogEntriesRequest> {};
ListLogEntriesRequestDefaultTypeInternal _ListLogEntriesRequest_default_instance_;
class ListLogEntriesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListLogEntriesResponse> {};
ListLogEntriesResponseDefaultTypeInternal _ListLogEntriesResponse_default_instance_;
class ListMonitoredResourceDescriptorsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsRequest> {};
ListMonitoredResourceDescriptorsRequestDefaultTypeInternal _ListMonitoredResourceDescriptorsRequest_default_instance_;
class ListMonitoredResourceDescriptorsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsResponse> {};
ListMonitoredResourceDescriptorsResponseDefaultTypeInternal _ListMonitoredResourceDescriptorsResponse_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteLogRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteLogRequest, log_name_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteLogEntriesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteLogEntriesRequest, log_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteLogEntriesRequest, resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteLogEntriesRequest, labels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteLogEntriesRequest, entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteLogEntriesRequest, partial_success_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteLogEntriesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesRequest, project_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesRequest, resource_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesRequest, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesRequest, order_by_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesRequest, page_token_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesResponse, entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogEntriesResponse, next_page_token_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, page_token_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsResponse, resource_descriptors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsResponse, next_page_token_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DeleteLogRequest)},
  { 5, -1, sizeof(WriteLogEntriesRequest)},
  { 14, -1, sizeof(WriteLogEntriesResponse)},
  { 18, -1, sizeof(ListLogEntriesRequest)},
  { 28, -1, sizeof(ListLogEntriesResponse)},
  { 34, -1, sizeof(ListMonitoredResourceDescriptorsRequest)},
  { 40, -1, sizeof(ListMonitoredResourceDescriptorsResponse)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteLogRequest_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_WriteLogEntriesRequest_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_WriteLogEntriesResponse_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_ListLogEntriesRequest_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_ListLogEntriesResponse_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_ListMonitoredResourceDescriptorsRequest_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_ListMonitoredResourceDescriptorsResponse_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/logging/v2/logging.proto", schemas, file_default_instances, protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
  const ::google::protobuf::Descriptor* WriteLogEntriesRequest_LabelsEntry_descriptor = file_level_metadata[1].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        WriteLogEntriesRequest_LabelsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                WriteLogEntriesRequest_LabelsEntry_descriptor));
}

}  // namespace

void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto() {
  _DeleteLogRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _WriteLogEntriesRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _WriteLogEntriesResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ListLogEntriesRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ListLogEntriesResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ListMonitoredResourceDescriptorsRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ListMonitoredResourceDescriptorsResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::logging::v2::protobuf_InitDefaults_google_2flogging_2fv2_2flog_5fentry_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::rpc::protobuf_InitDefaults_google_2frpc_2fstatus_2eproto();
  ::google::protobuf::internal::InitProtobufDefaults();
  _DeleteLogRequest_default_instance_.DefaultConstruct();
  _WriteLogEntriesRequest_default_instance_.DefaultConstruct();
  _WriteLogEntriesResponse_default_instance_.DefaultConstruct();
  _ListLogEntriesRequest_default_instance_.DefaultConstruct();
  _ListLogEntriesResponse_default_instance_.DefaultConstruct();
  _ListMonitoredResourceDescriptorsRequest_default_instance_.DefaultConstruct();
  _ListMonitoredResourceDescriptorsResponse_default_instance_.DefaultConstruct();
  _WriteLogEntriesRequest_default_instance_.get_mutable()->resource_ = const_cast< ::google::api::MonitoredResource*>(
      ::google::api::MonitoredResource::internal_default_instance());
}

void protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl);
}
void protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  static const char descriptor[] = {
      "\n\037google/logging/v2/logging.proto\022\021googl"
      "e.logging.v2\032\034google/api/annotations.pro"
      "to\032#google/api/monitored_resource.proto\032"
      "!google/logging/v2/log_entry.proto\032\036goog"
      "le/protobuf/duration.proto\032\033google/proto"
      "buf/empty.proto\032\037google/protobuf/timesta"
      "mp.proto\032\027google/rpc/status.proto\"$\n\020Del"
      "eteLogRequest\022\020\n\010log_name\030\001 \001(\t\"\230\002\n\026Writ"
      "eLogEntriesRequest\022\020\n\010log_name\030\001 \001(\t\022/\n\010"
      "resource\030\002 \001(\0132\035.google.api.MonitoredRes"
      "ource\022E\n\006labels\030\003 \003(\01325.google.logging.v"
      "2.WriteLogEntriesRequest.LabelsEntry\022,\n\007"
      "entries\030\004 \003(\0132\033.google.logging.v2.LogEnt"
      "ry\022\027\n\017partial_success\030\005 \001(\010\032-\n\013LabelsEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\031\n\027Wr"
      "iteLogEntriesResponse\"\215\001\n\025ListLogEntries"
      "Request\022\023\n\013project_ids\030\001 \003(\t\022\026\n\016resource"
      "_names\030\010 \003(\t\022\016\n\006filter\030\002 \001(\t\022\020\n\010order_by"
      "\030\003 \001(\t\022\021\n\tpage_size\030\004 \001(\005\022\022\n\npage_token\030"
      "\005 \001(\t\"_\n\026ListLogEntriesResponse\022,\n\007entri"
      "es\030\001 \003(\0132\033.google.logging.v2.LogEntry\022\027\n"
      "\017next_page_token\030\002 \001(\t\"P\n\'ListMonitoredR"
      "esourceDescriptorsRequest\022\021\n\tpage_size\030\001"
      " \001(\005\022\022\n\npage_token\030\002 \001(\t\"\212\001\n(ListMonitor"
      "edResourceDescriptorsResponse\022E\n\024resourc"
      "e_descriptors\030\001 \003(\0132\'.google.api.Monitor"
      "edResourceDescriptor\022\027\n\017next_page_token\030"
      "\002 \001(\t2\341\004\n\020LoggingServiceV2\022w\n\tDeleteLog\022"
      "#.google.logging.v2.DeleteLogRequest\032\026.g"
      "oogle.protobuf.Empty\"-\202\323\344\223\002\'*%/v2beta1/{"
      "log_name=projects/*/logs/*}\022\206\001\n\017WriteLog"
      "Entries\022).google.logging.v2.WriteLogEntr"
      "iesRequest\032*.google.logging.v2.WriteLogE"
      "ntriesResponse\"\034\202\323\344\223\002\026\"\021/v2/entries:writ"
      "e:\001*\022\202\001\n\016ListLogEntries\022(.google.logging"
      ".v2.ListLogEntriesRequest\032).google.loggi"
      "ng.v2.ListLogEntriesResponse\"\033\202\323\344\223\002\025\"\020/v"
      "2/entries:list:\001*\022\305\001\n ListMonitoredResou"
      "rceDescriptors\022:.google.logging.v2.ListM"
      "onitoredResourceDescriptorsRequest\032;.goo"
      "gle.logging.v2.ListMonitoredResourceDesc"
      "riptorsResponse\"(\202\323\344\223\002\"\022 /v2/monitoredRe"
      "sourceDescriptorsB*\n\025com.google.logging."
      "v2B\014LoggingProtoP\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1749);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/logging/v2/logging.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::logging::v2::protobuf_AddDesc_google_2flogging_2fv2_2flog_5fentry_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::rpc::protobuf_AddDesc_google_2frpc_2fstatus_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_once_);
void protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_once_,
                 &protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2flogging_2fv2_2flogging_2eproto {
  StaticDescriptorInitializer_google_2flogging_2fv2_2flogging_2eproto() {
    protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto();
  }
} static_descriptor_initializer_google_2flogging_2fv2_2flogging_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteLogRequest::kLogNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteLogRequest::DeleteLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteLogRequest)
}
DeleteLogRequest::DeleteLogRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteLogRequest)
}
DeleteLogRequest::DeleteLogRequest(const DeleteLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_name().size() > 0) {
    log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteLogRequest)
}

void DeleteLogRequest::SharedCtor() {
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteLogRequest::~DeleteLogRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteLogRequest)
  SharedDtor();
}

void DeleteLogRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  log_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void DeleteLogRequest::ArenaDtor(void* object) {
  DeleteLogRequest* _this = reinterpret_cast< DeleteLogRequest* >(object);
  (void)_this;
}
void DeleteLogRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteLogRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const DeleteLogRequest& DeleteLogRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  return *internal_default_instance();
}

DeleteLogRequest* DeleteLogRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeleteLogRequest>(arena);
}

void DeleteLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteLogRequest)
  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool DeleteLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string log_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_name().data(), this->log_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteLogRequest.log_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteLogRequest)
  return false;
#undef DO_
}

void DeleteLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteLogRequest)
  // string log_name = 1;
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), this->log_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogRequest.log_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteLogRequest)
}

::google::protobuf::uint8* DeleteLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteLogRequest)
  // string log_name = 1;
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), this->log_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogRequest.log_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteLogRequest)
  return target;
}

size_t DeleteLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteLogRequest)
  size_t total_size = 0;

  // string log_name = 1;
  if (this->log_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteLogRequest)
    MergeFrom(*source);
  }
}

void DeleteLogRequest::MergeFrom(const DeleteLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.log_name().size() > 0) {
    set_log_name(from.log_name());
  }
}

void DeleteLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogRequest::CopyFrom(const DeleteLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogRequest::IsInitialized() const {
  return true;
}

void DeleteLogRequest::Swap(DeleteLogRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteLogRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeleteLogRequest::UnsafeArenaSwap(DeleteLogRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteLogRequest::InternalSwap(DeleteLogRequest* other) {
  log_name_.Swap(&other->log_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteLogRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteLogRequest

// string log_name = 1;
void DeleteLogRequest::clear_log_name() {
  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& DeleteLogRequest::log_name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.DeleteLogRequest.log_name)
  return log_name_.Get();
}
void DeleteLogRequest::set_log_name(const ::std::string& value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.DeleteLogRequest.log_name)
}
void DeleteLogRequest::set_log_name(const char* value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.DeleteLogRequest.log_name)
}
void DeleteLogRequest::set_log_name(const char* value,
    size_t size) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.DeleteLogRequest.log_name)
}
::std::string* DeleteLogRequest::mutable_log_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.DeleteLogRequest.log_name)
  return log_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* DeleteLogRequest::release_log_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.DeleteLogRequest.log_name)
  
  return log_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* DeleteLogRequest::unsafe_arena_release_log_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.DeleteLogRequest.log_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return log_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void DeleteLogRequest::set_allocated_log_name(::std::string* log_name) {
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.DeleteLogRequest.log_name)
}
void DeleteLogRequest::unsafe_arena_set_allocated_log_name(
    ::std::string* log_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      log_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.DeleteLogRequest.log_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void WriteLogEntriesRequest::_slow_mutable_resource() {
  resource_ = ::google::protobuf::Arena::CreateMessage< ::google::api::MonitoredResource >(
      GetArenaNoVirtual());
}
::google::api::MonitoredResource* WriteLogEntriesRequest::_slow_release_resource() {
  if (resource_ == NULL) {
    return NULL;
  } else {
    ::google::api::MonitoredResource* temp = new ::google::api::MonitoredResource(*resource_);
    resource_ = NULL;
    return temp;
  }
}
::google::api::MonitoredResource* WriteLogEntriesRequest::unsafe_arena_release_resource() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.WriteLogEntriesRequest.resource)
  
  ::google::api::MonitoredResource* temp = resource_;
  resource_ = NULL;
  return temp;
}
void WriteLogEntriesRequest::_slow_set_allocated_resource(
    ::google::protobuf::Arena* message_arena, ::google::api::MonitoredResource** resource) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*resource) == NULL) {
      message_arena->Own(*resource);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*resource)) {
      ::google::api::MonitoredResource* new_resource = 
            ::google::protobuf::Arena::CreateMessage< ::google::api::MonitoredResource >(
            message_arena);
      new_resource->CopyFrom(**resource);
      *resource = new_resource;
    }
}
void WriteLogEntriesRequest::unsafe_arena_set_allocated_resource(
    ::google::api::MonitoredResource* resource) {
  if (GetArenaNoVirtual() == NULL) {
    delete resource_;
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.WriteLogEntriesRequest.resource)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteLogEntriesRequest::kLogNameFieldNumber;
const int WriteLogEntriesRequest::kResourceFieldNumber;
const int WriteLogEntriesRequest::kLabelsFieldNumber;
const int WriteLogEntriesRequest::kEntriesFieldNumber;
const int WriteLogEntriesRequest::kPartialSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteLogEntriesRequest::WriteLogEntriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesRequest)
}
WriteLogEntriesRequest::WriteLogEntriesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena),
  entries_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesRequest)
}
WriteLogEntriesRequest::WriteLogEntriesRequest(const WriteLogEntriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& WriteLogEntriesRequest_LabelsEntry_descriptor = file_level_metadata[1].descriptor;
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &WriteLogEntriesRequest_LabelsEntry_descriptor);
  labels_.MergeFrom(from.labels_);
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_name().size() > 0) {
    log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_name(),
      GetArenaNoVirtual());
  }
  if (from.has_resource()) {
    resource_ = new ::google::api::MonitoredResource(*from.resource_);
  } else {
    resource_ = NULL;
  }
  partial_success_ = from.partial_success_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesRequest)
}

void WriteLogEntriesRequest::SharedCtor() {
  const ::google::protobuf::Descriptor*& WriteLogEntriesRequest_LabelsEntry_descriptor = file_level_metadata[1].descriptor;
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &WriteLogEntriesRequest_LabelsEntry_descriptor);
  log_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resource_, 0, reinterpret_cast<char*>(&partial_success_) -
    reinterpret_cast<char*>(&resource_) + sizeof(partial_success_));
  _cached_size_ = 0;
}

WriteLogEntriesRequest::~WriteLogEntriesRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesRequest)
  SharedDtor();
}

void WriteLogEntriesRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  log_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) {
    delete resource_;
  }
}

void WriteLogEntriesRequest::ArenaDtor(void* object) {
  WriteLogEntriesRequest* _this = reinterpret_cast< WriteLogEntriesRequest* >(object);
  (void)_this;
}
void WriteLogEntriesRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WriteLogEntriesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteLogEntriesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2].descriptor;
}

const WriteLogEntriesRequest& WriteLogEntriesRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  return *internal_default_instance();
}

WriteLogEntriesRequest* WriteLogEntriesRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WriteLogEntriesRequest>(arena);
}

void WriteLogEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesRequest)
  labels_.Clear();
  entries_.Clear();
  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) {
    delete resource_;
  }
  resource_ = NULL;
  partial_success_ = false;
}

bool WriteLogEntriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.WriteLogEntriesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string log_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_name().data(), this->log_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.WriteLogEntriesRequest.log_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.MonitoredResource resource = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          WriteLogEntriesRequest_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.logging.v2.LogEntry entries = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // bool partial_success = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &partial_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.WriteLogEntriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.WriteLogEntriesRequest)
  return false;
#undef DO_
}

void WriteLogEntriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.WriteLogEntriesRequest)
  // string log_name = 1;
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), this->log_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.WriteLogEntriesRequest.log_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_name(), output);
  }

  // .google.api.MonitoredResource resource = 2;
  if (this->has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resource_, output);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<WriteLogEntriesRequest_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<WriteLogEntriesRequest_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .google.logging.v2.LogEntry entries = 4;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->entries(i), output);
  }

  // bool partial_success = 5;
  if (this->partial_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->partial_success(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.WriteLogEntriesRequest)
}

::google::protobuf::uint8* WriteLogEntriesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesRequest)
  // string log_name = 1;
  if (this->log_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_name().data(), this->log_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.WriteLogEntriesRequest.log_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_name(), target);
  }

  // .google.api.MonitoredResource resource = 2;
  if (this->has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resource_, false, target);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<WriteLogEntriesRequest_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<WriteLogEntriesRequest_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .google.logging.v2.LogEntry entries = 4;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->entries(i), false, target);
  }

  // bool partial_success = 5;
  if (this->partial_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->partial_success(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesRequest)
  return target;
}

size_t WriteLogEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesRequest)
  size_t total_size = 0;

  // map<string, string> labels = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<WriteLogEntriesRequest_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // repeated .google.logging.v2.LogEntry entries = 4;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  // string log_name = 1;
  if (this->log_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_name());
  }

  // .google.api.MonitoredResource resource = 2;
  if (this->has_resource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resource_);
  }

  // bool partial_success = 5;
  if (this->partial_success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteLogEntriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteLogEntriesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesRequest)
    MergeFrom(*source);
  }
}

void WriteLogEntriesRequest::MergeFrom(const WriteLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  entries_.MergeFrom(from.entries_);
  if (from.log_name().size() > 0) {
    set_log_name(from.log_name());
  }
  if (from.has_resource()) {
    mutable_resource()->::google::api::MonitoredResource::MergeFrom(from.resource());
  }
  if (from.partial_success() != 0) {
    set_partial_success(from.partial_success());
  }
}

void WriteLogEntriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesRequest::CopyFrom(const WriteLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesRequest::IsInitialized() const {
  return true;
}

void WriteLogEntriesRequest::Swap(WriteLogEntriesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WriteLogEntriesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WriteLogEntriesRequest::UnsafeArenaSwap(WriteLogEntriesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WriteLogEntriesRequest::InternalSwap(WriteLogEntriesRequest* other) {
  labels_.Swap(&other->labels_);
  entries_.UnsafeArenaSwap(&other->entries_);
  log_name_.Swap(&other->log_name_);
  std::swap(resource_, other->resource_);
  std::swap(partial_success_, other->partial_success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteLogEntriesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteLogEntriesRequest

// string log_name = 1;
void WriteLogEntriesRequest::clear_log_name() {
  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WriteLogEntriesRequest::log_name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.log_name)
  return log_name_.Get();
}
void WriteLogEntriesRequest::set_log_name(const ::std::string& value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.WriteLogEntriesRequest.log_name)
}
void WriteLogEntriesRequest::set_log_name(const char* value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.WriteLogEntriesRequest.log_name)
}
void WriteLogEntriesRequest::set_log_name(const char* value,
    size_t size) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.WriteLogEntriesRequest.log_name)
}
::std::string* WriteLogEntriesRequest::mutable_log_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.WriteLogEntriesRequest.log_name)
  return log_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WriteLogEntriesRequest::release_log_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.WriteLogEntriesRequest.log_name)
  
  return log_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WriteLogEntriesRequest::unsafe_arena_release_log_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.WriteLogEntriesRequest.log_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return log_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WriteLogEntriesRequest::set_allocated_log_name(::std::string* log_name) {
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.WriteLogEntriesRequest.log_name)
}
void WriteLogEntriesRequest::unsafe_arena_set_allocated_log_name(
    ::std::string* log_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      log_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.WriteLogEntriesRequest.log_name)
}

// .google.api.MonitoredResource resource = 2;
bool WriteLogEntriesRequest::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
void WriteLogEntriesRequest::clear_resource() {
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) delete resource_;
  resource_ = NULL;
}
const ::google::api::MonitoredResource& WriteLogEntriesRequest::resource() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.resource)
  return resource_ != NULL ? *resource_
                         : *::google::api::MonitoredResource::internal_default_instance();
}
::google::api::MonitoredResource* WriteLogEntriesRequest::mutable_resource() {
  
  if (resource_ == NULL) {
    _slow_mutable_resource();
  }
  // @@protoc_insertion_point(field_mutable:google.logging.v2.WriteLogEntriesRequest.resource)
  return resource_;
}
::google::api::MonitoredResource* WriteLogEntriesRequest::release_resource() {
  // @@protoc_insertion_point(field_release:google.logging.v2.WriteLogEntriesRequest.resource)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_resource();
  } else {
    ::google::api::MonitoredResource* temp = resource_;
    resource_ = NULL;
    return temp;
  }
}
 void WriteLogEntriesRequest::set_allocated_resource(::google::api::MonitoredResource* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resource_;
  }
  if (resource != NULL) {
    _slow_set_allocated_resource(message_arena, &resource);
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.WriteLogEntriesRequest.resource)
}

// map<string, string> labels = 3;
int WriteLogEntriesRequest::labels_size() const {
  return labels_.size();
}
void WriteLogEntriesRequest::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
WriteLogEntriesRequest::labels() const {
  // @@protoc_insertion_point(field_map:google.logging.v2.WriteLogEntriesRequest.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
WriteLogEntriesRequest::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.logging.v2.WriteLogEntriesRequest.labels)
  return labels_.MutableMap();
}

// repeated .google.logging.v2.LogEntry entries = 4;
int WriteLogEntriesRequest::entries_size() const {
  return entries_.size();
}
void WriteLogEntriesRequest::clear_entries() {
  entries_.Clear();
}
const ::google::logging::v2::LogEntry& WriteLogEntriesRequest::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_.Get(index);
}
::google::logging::v2::LogEntry* WriteLogEntriesRequest::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_.Mutable(index);
}
::google::logging::v2::LogEntry* WriteLogEntriesRequest::add_entries() {
  // @@protoc_insertion_point(field_add:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >*
WriteLogEntriesRequest::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.WriteLogEntriesRequest.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >&
WriteLogEntriesRequest::entries() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_;
}

// bool partial_success = 5;
void WriteLogEntriesRequest::clear_partial_success() {
  partial_success_ = false;
}
bool WriteLogEntriesRequest::partial_success() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.partial_success)
  return partial_success_;
}
void WriteLogEntriesRequest::set_partial_success(bool value) {
  
  partial_success_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.WriteLogEntriesRequest.partial_success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteLogEntriesResponse::WriteLogEntriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesResponse)
}
WriteLogEntriesResponse::WriteLogEntriesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesResponse)
}
WriteLogEntriesResponse::WriteLogEntriesResponse(const WriteLogEntriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesResponse)
}

void WriteLogEntriesResponse::SharedCtor() {
  _cached_size_ = 0;
}

WriteLogEntriesResponse::~WriteLogEntriesResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesResponse)
  SharedDtor();
}

void WriteLogEntriesResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void WriteLogEntriesResponse::ArenaDtor(void* object) {
  WriteLogEntriesResponse* _this = reinterpret_cast< WriteLogEntriesResponse* >(object);
  (void)_this;
}
void WriteLogEntriesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WriteLogEntriesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteLogEntriesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3].descriptor;
}

const WriteLogEntriesResponse& WriteLogEntriesResponse::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  return *internal_default_instance();
}

WriteLogEntriesResponse* WriteLogEntriesResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WriteLogEntriesResponse>(arena);
}

void WriteLogEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesResponse)
}

bool WriteLogEntriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.WriteLogEntriesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.WriteLogEntriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.WriteLogEntriesResponse)
  return false;
#undef DO_
}

void WriteLogEntriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.WriteLogEntriesResponse)
  // @@protoc_insertion_point(serialize_end:google.logging.v2.WriteLogEntriesResponse)
}

::google::protobuf::uint8* WriteLogEntriesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesResponse)
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesResponse)
  return target;
}

size_t WriteLogEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteLogEntriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteLogEntriesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesResponse)
    MergeFrom(*source);
  }
}

void WriteLogEntriesResponse::MergeFrom(const WriteLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void WriteLogEntriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesResponse::CopyFrom(const WriteLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesResponse::IsInitialized() const {
  return true;
}

void WriteLogEntriesResponse::Swap(WriteLogEntriesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WriteLogEntriesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WriteLogEntriesResponse::UnsafeArenaSwap(WriteLogEntriesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WriteLogEntriesResponse::InternalSwap(WriteLogEntriesResponse* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteLogEntriesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteLogEntriesResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogEntriesRequest::kProjectIdsFieldNumber;
const int ListLogEntriesRequest::kResourceNamesFieldNumber;
const int ListLogEntriesRequest::kFilterFieldNumber;
const int ListLogEntriesRequest::kOrderByFieldNumber;
const int ListLogEntriesRequest::kPageSizeFieldNumber;
const int ListLogEntriesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogEntriesRequest::ListLogEntriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogEntriesRequest)
}
ListLogEntriesRequest::ListLogEntriesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  project_ids_(arena),
  resource_names_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogEntriesRequest)
}
ListLogEntriesRequest::ListLogEntriesRequest(const ListLogEntriesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      project_ids_(from.project_ids_),
      resource_names_(from.resource_names_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter(),
      GetArenaNoVirtual());
  }
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_by().size() > 0) {
    order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogEntriesRequest)
}

void ListLogEntriesRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListLogEntriesRequest::~ListLogEntriesRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogEntriesRequest)
  SharedDtor();
}

void ListLogEntriesRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  filter_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  order_by_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  page_token_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ListLogEntriesRequest::ArenaDtor(void* object) {
  ListLogEntriesRequest* _this = reinterpret_cast< ListLogEntriesRequest* >(object);
  (void)_this;
}
void ListLogEntriesRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListLogEntriesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListLogEntriesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4].descriptor;
}

const ListLogEntriesRequest& ListLogEntriesRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  return *internal_default_instance();
}

ListLogEntriesRequest* ListLogEntriesRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListLogEntriesRequest>(arena);
}

void ListLogEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogEntriesRequest)
  project_ids_.Clear();
  resource_names_.Clear();
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  order_by_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
}

bool ListLogEntriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogEntriesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string project_ids = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_project_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_ids(this->project_ids_size() - 1).data(),
            this->project_ids(this->project_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.project_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_by = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_by().data(), this->order_by().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.order_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string resource_names = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resource_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_names(this->resource_names_size() - 1).data(),
            this->resource_names(this->resource_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesRequest.resource_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogEntriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogEntriesRequest)
  return false;
#undef DO_
}

void ListLogEntriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogEntriesRequest)
  // repeated string project_ids = 1;
  for (int i = 0; i < this->project_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_ids(i).data(), this->project_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.project_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->project_ids(i), output);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // string order_by = 3;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), this->order_by().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.order_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->order_by(), output);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->page_token(), output);
  }

  // repeated string resource_names = 8;
  for (int i = 0; i < this->resource_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), this->resource_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.resource_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->resource_names(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogEntriesRequest)
}

::google::protobuf::uint8* ListLogEntriesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogEntriesRequest)
  // repeated string project_ids = 1;
  for (int i = 0; i < this->project_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_ids(i).data(), this->project_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.project_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->project_ids(i), target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // string order_by = 3;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), this->order_by().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.order_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->order_by(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->page_token(), target);
  }

  // repeated string resource_names = 8;
  for (int i = 0; i < this->resource_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_names(i).data(), this->resource_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.resource_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->resource_names(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogEntriesRequest)
  return target;
}

size_t ListLogEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogEntriesRequest)
  size_t total_size = 0;

  // repeated string project_ids = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->project_ids_size());
  for (int i = 0; i < this->project_ids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->project_ids(i));
  }

  // repeated string resource_names = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resource_names_size());
  for (int i = 0; i < this->resource_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resource_names(i));
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // string order_by = 3;
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_by());
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListLogEntriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogEntriesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListLogEntriesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogEntriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogEntriesRequest)
    MergeFrom(*source);
  }
}

void ListLogEntriesRequest::MergeFrom(const ListLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_ids_.MergeFrom(from.project_ids_);
  resource_names_.MergeFrom(from.resource_names_);
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.order_by().size() > 0) {
    set_order_by(from.order_by());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListLogEntriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogEntriesRequest::CopyFrom(const ListLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogEntriesRequest::IsInitialized() const {
  return true;
}

void ListLogEntriesRequest::Swap(ListLogEntriesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogEntriesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListLogEntriesRequest::UnsafeArenaSwap(ListLogEntriesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogEntriesRequest::InternalSwap(ListLogEntriesRequest* other) {
  project_ids_.UnsafeArenaSwap(&other->project_ids_);
  resource_names_.UnsafeArenaSwap(&other->resource_names_);
  filter_.Swap(&other->filter_);
  order_by_.Swap(&other->order_by_);
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListLogEntriesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListLogEntriesRequest

// repeated string project_ids = 1;
int ListLogEntriesRequest::project_ids_size() const {
  return project_ids_.size();
}
void ListLogEntriesRequest::clear_project_ids() {
  project_ids_.Clear();
}
const ::std::string& ListLogEntriesRequest::project_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_.Get(index);
}
::std::string* ListLogEntriesRequest::mutable_project_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_.Mutable(index);
}
void ListLogEntriesRequest::set_project_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.project_ids)
  project_ids_.Mutable(index)->assign(value);
}
void ListLogEntriesRequest::set_project_ids(int index, const char* value) {
  project_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.project_ids)
}
void ListLogEntriesRequest::set_project_ids(int index, const char* value, size_t size) {
  project_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.project_ids)
}
::std::string* ListLogEntriesRequest::add_project_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_.Add();
}
void ListLogEntriesRequest::add_project_ids(const ::std::string& value) {
  project_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.logging.v2.ListLogEntriesRequest.project_ids)
}
void ListLogEntriesRequest::add_project_ids(const char* value) {
  project_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.logging.v2.ListLogEntriesRequest.project_ids)
}
void ListLogEntriesRequest::add_project_ids(const char* value, size_t size) {
  project_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.logging.v2.ListLogEntriesRequest.project_ids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListLogEntriesRequest::project_ids() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListLogEntriesRequest::mutable_project_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListLogEntriesRequest.project_ids)
  return &project_ids_;
}

// repeated string resource_names = 8;
int ListLogEntriesRequest::resource_names_size() const {
  return resource_names_.size();
}
void ListLogEntriesRequest::clear_resource_names() {
  resource_names_.Clear();
}
const ::std::string& ListLogEntriesRequest::resource_names(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_.Get(index);
}
::std::string* ListLogEntriesRequest::mutable_resource_names(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_.Mutable(index);
}
void ListLogEntriesRequest::set_resource_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.resource_names)
  resource_names_.Mutable(index)->assign(value);
}
void ListLogEntriesRequest::set_resource_names(int index, const char* value) {
  resource_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.resource_names)
}
void ListLogEntriesRequest::set_resource_names(int index, const char* value, size_t size) {
  resource_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.resource_names)
}
::std::string* ListLogEntriesRequest::add_resource_names() {
  // @@protoc_insertion_point(field_add_mutable:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_.Add();
}
void ListLogEntriesRequest::add_resource_names(const ::std::string& value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.logging.v2.ListLogEntriesRequest.resource_names)
}
void ListLogEntriesRequest::add_resource_names(const char* value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.logging.v2.ListLogEntriesRequest.resource_names)
}
void ListLogEntriesRequest::add_resource_names(const char* value, size_t size) {
  resource_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.logging.v2.ListLogEntriesRequest.resource_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListLogEntriesRequest::resource_names() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListLogEntriesRequest::mutable_resource_names() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListLogEntriesRequest.resource_names)
  return &resource_names_;
}

// string filter = 2;
void ListLogEntriesRequest::clear_filter() {
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListLogEntriesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.filter)
  return filter_.Get();
}
void ListLogEntriesRequest::set_filter(const ::std::string& value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.filter)
}
void ListLogEntriesRequest::set_filter(const char* value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.filter)
}
void ListLogEntriesRequest::set_filter(const char* value,
    size_t size) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.filter)
}
::std::string* ListLogEntriesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.filter)
  return filter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesRequest.filter)
  
  return filter_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesRequest::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesRequest.filter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return filter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListLogEntriesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesRequest.filter)
}
void ListLogEntriesRequest::unsafe_arena_set_allocated_filter(
    ::std::string* filter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      filter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesRequest.filter)
}

// string order_by = 3;
void ListLogEntriesRequest::clear_order_by() {
  order_by_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListLogEntriesRequest::order_by() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.order_by)
  return order_by_.Get();
}
void ListLogEntriesRequest::set_order_by(const ::std::string& value) {
  
  order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.order_by)
}
void ListLogEntriesRequest::set_order_by(const char* value) {
  
  order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.order_by)
}
void ListLogEntriesRequest::set_order_by(const char* value,
    size_t size) {
  
  order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.order_by)
}
::std::string* ListLogEntriesRequest::mutable_order_by() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.order_by)
  return order_by_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesRequest::release_order_by() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesRequest.order_by)
  
  return order_by_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesRequest::unsafe_arena_release_order_by() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesRequest.order_by)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return order_by_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListLogEntriesRequest::set_allocated_order_by(::std::string* order_by) {
  if (order_by != NULL) {
    
  } else {
    
  }
  order_by_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_by,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesRequest.order_by)
}
void ListLogEntriesRequest::unsafe_arena_set_allocated_order_by(
    ::std::string* order_by) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (order_by != NULL) {
    
  } else {
    
  }
  order_by_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      order_by, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesRequest.order_by)
}

// int32 page_size = 4;
void ListLogEntriesRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListLogEntriesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.page_size)
  return page_size_;
}
void ListLogEntriesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.page_size)
}

// string page_token = 5;
void ListLogEntriesRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListLogEntriesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.page_token)
  return page_token_.Get();
}
void ListLogEntriesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.page_token)
}
void ListLogEntriesRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.page_token)
}
void ListLogEntriesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.page_token)
}
::std::string* ListLogEntriesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListLogEntriesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesRequest.page_token)
}
void ListLogEntriesRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogEntriesResponse::kEntriesFieldNumber;
const int ListLogEntriesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogEntriesResponse::ListLogEntriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogEntriesResponse)
}
ListLogEntriesResponse::ListLogEntriesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogEntriesResponse)
}
ListLogEntriesResponse::ListLogEntriesResponse(const ListLogEntriesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogEntriesResponse)
}

void ListLogEntriesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListLogEntriesResponse::~ListLogEntriesResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogEntriesResponse)
  SharedDtor();
}

void ListLogEntriesResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  next_page_token_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ListLogEntriesResponse::ArenaDtor(void* object) {
  ListLogEntriesResponse* _this = reinterpret_cast< ListLogEntriesResponse* >(object);
  (void)_this;
}
void ListLogEntriesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListLogEntriesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListLogEntriesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5].descriptor;
}

const ListLogEntriesResponse& ListLogEntriesResponse::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  return *internal_default_instance();
}

ListLogEntriesResponse* ListLogEntriesResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListLogEntriesResponse>(arena);
}

void ListLogEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogEntriesResponse)
  entries_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ListLogEntriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogEntriesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogEntry entries = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogEntriesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogEntriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogEntriesResponse)
  return false;
#undef DO_
}

void ListLogEntriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogEntriesResponse)
  // repeated .google.logging.v2.LogEntry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogEntriesResponse)
}

::google::protobuf::uint8* ListLogEntriesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogEntriesResponse)
  // repeated .google.logging.v2.LogEntry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), false, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogEntriesResponse)
  return target;
}

size_t ListLogEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogEntriesResponse)
  size_t total_size = 0;

  // repeated .google.logging.v2.LogEntry entries = 1;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListLogEntriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogEntriesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListLogEntriesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogEntriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogEntriesResponse)
    MergeFrom(*source);
  }
}

void ListLogEntriesResponse::MergeFrom(const ListLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListLogEntriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogEntriesResponse::CopyFrom(const ListLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogEntriesResponse::IsInitialized() const {
  return true;
}

void ListLogEntriesResponse::Swap(ListLogEntriesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListLogEntriesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListLogEntriesResponse::UnsafeArenaSwap(ListLogEntriesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListLogEntriesResponse::InternalSwap(ListLogEntriesResponse* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListLogEntriesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListLogEntriesResponse

// repeated .google.logging.v2.LogEntry entries = 1;
int ListLogEntriesResponse::entries_size() const {
  return entries_.size();
}
void ListLogEntriesResponse::clear_entries() {
  entries_.Clear();
}
const ::google::logging::v2::LogEntry& ListLogEntriesResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_.Get(index);
}
::google::logging::v2::LogEntry* ListLogEntriesResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_.Mutable(index);
}
::google::logging::v2::LogEntry* ListLogEntriesResponse::add_entries() {
  // @@protoc_insertion_point(field_add:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >*
ListLogEntriesResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListLogEntriesResponse.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >&
ListLogEntriesResponse::entries() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_;
}

// string next_page_token = 2;
void ListLogEntriesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListLogEntriesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesResponse.next_page_token)
  return next_page_token_.Get();
}
void ListLogEntriesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
void ListLogEntriesResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
void ListLogEntriesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
::std::string* ListLogEntriesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListLogEntriesResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListLogEntriesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
void ListLogEntriesResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsRequest::kPageSizeFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}

void ListMonitoredResourceDescriptorsRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListMonitoredResourceDescriptorsRequest::~ListMonitoredResourceDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  page_token_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ListMonitoredResourceDescriptorsRequest::ArenaDtor(void* object) {
  ListMonitoredResourceDescriptorsRequest* _this = reinterpret_cast< ListMonitoredResourceDescriptorsRequest* >(object);
  (void)_this;
}
void ListMonitoredResourceDescriptorsRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListMonitoredResourceDescriptorsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6].descriptor;
}

const ListMonitoredResourceDescriptorsRequest& ListMonitoredResourceDescriptorsRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  return *internal_default_instance();
}

ListMonitoredResourceDescriptorsRequest* ListMonitoredResourceDescriptorsRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListMonitoredResourceDescriptorsRequest>(arena);
}

void ListMonitoredResourceDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
}

bool ListMonitoredResourceDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  // int32 page_size = 1;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_size(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  // int32 page_size = 1;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_size(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  return target;
}

size_t ListMonitoredResourceDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  size_t total_size = 0;

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMonitoredResourceDescriptorsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsRequest::Swap(ListMonitoredResourceDescriptorsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListMonitoredResourceDescriptorsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListMonitoredResourceDescriptorsRequest::UnsafeArenaSwap(ListMonitoredResourceDescriptorsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsRequest::InternalSwap(ListMonitoredResourceDescriptorsRequest* other) {
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMonitoredResourceDescriptorsRequest

// int32 page_size = 1;
void ListMonitoredResourceDescriptorsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListMonitoredResourceDescriptorsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_size)
  return page_size_;
}
void ListMonitoredResourceDescriptorsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_size)
}

// string page_token = 2;
void ListMonitoredResourceDescriptorsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListMonitoredResourceDescriptorsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.Get();
}
void ListMonitoredResourceDescriptorsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
::std::string* ListMonitoredResourceDescriptorsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListMonitoredResourceDescriptorsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListMonitoredResourceDescriptorsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListMonitoredResourceDescriptorsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
void ListMonitoredResourceDescriptorsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsResponse::kResourceDescriptorsFieldNumber;
const int ListMonitoredResourceDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  resource_descriptors_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resource_descriptors_(from.resource_descriptors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}

void ListMonitoredResourceDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListMonitoredResourceDescriptorsResponse::~ListMonitoredResourceDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  next_page_token_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ListMonitoredResourceDescriptorsResponse::ArenaDtor(void* object) {
  ListMonitoredResourceDescriptorsResponse* _this = reinterpret_cast< ListMonitoredResourceDescriptorsResponse* >(object);
  (void)_this;
}
void ListMonitoredResourceDescriptorsResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListMonitoredResourceDescriptorsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7].descriptor;
}

const ListMonitoredResourceDescriptorsResponse& ListMonitoredResourceDescriptorsResponse::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();
  return *internal_default_instance();
}

ListMonitoredResourceDescriptorsResponse* ListMonitoredResourceDescriptorsResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListMonitoredResourceDescriptorsResponse>(arena);
}

void ListMonitoredResourceDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  resource_descriptors_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ListMonitoredResourceDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_resource_descriptors()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0, n = this->resource_descriptors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resource_descriptors(i), output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0, n = this->resource_descriptors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->resource_descriptors(i), false, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  return target;
}

size_t ListMonitoredResourceDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  size_t total_size = 0;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  {
    unsigned int count = this->resource_descriptors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resource_descriptors(i));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMonitoredResourceDescriptorsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_descriptors_.MergeFrom(from.resource_descriptors_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsResponse::Swap(ListMonitoredResourceDescriptorsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListMonitoredResourceDescriptorsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListMonitoredResourceDescriptorsResponse::UnsafeArenaSwap(ListMonitoredResourceDescriptorsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsResponse::InternalSwap(ListMonitoredResourceDescriptorsResponse* other) {
  resource_descriptors_.UnsafeArenaSwap(&other->resource_descriptors_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMonitoredResourceDescriptorsResponse

// repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
int ListMonitoredResourceDescriptorsResponse::resource_descriptors_size() const {
  return resource_descriptors_.size();
}
void ListMonitoredResourceDescriptorsResponse::clear_resource_descriptors() {
  resource_descriptors_.Clear();
}
const ::google::api::MonitoredResourceDescriptor& ListMonitoredResourceDescriptorsResponse::resource_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Get(index);
}
::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Mutable(index);
}
::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::add_resource_descriptors() {
  // @@protoc_insertion_point(field_add:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return &resource_descriptors_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
ListMonitoredResourceDescriptorsResponse::resource_descriptors() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_;
}

// string next_page_token = 2;
void ListMonitoredResourceDescriptorsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListMonitoredResourceDescriptorsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.Get();
}
void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
::std::string* ListMonitoredResourceDescriptorsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListMonitoredResourceDescriptorsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListMonitoredResourceDescriptorsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListMonitoredResourceDescriptorsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
void ListMonitoredResourceDescriptorsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace logging
}  // namespace google

// @@protoc_insertion_point(global_scope)
