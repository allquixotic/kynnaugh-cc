// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/monitoring/v3/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace monitoring {
namespace v3 {

namespace {

const ::google::protobuf::Descriptor* TypedValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypedValue_reflection_ = NULL;
struct TypedValueOneofInstance {
  bool bool_value_;
  ::google::protobuf::int64 int64_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  const ::google::api::Distribution* distribution_value_;
}* TypedValue_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TimeInterval_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimeInterval_reflection_ = NULL;
const ::google::protobuf::Descriptor* Aggregation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Aggregation_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Aggregation_Aligner_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Aggregation_Reducer_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fmonitoring_2fv3_2fcommon_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fmonitoring_2fv3_2fcommon_2eproto() {
  protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/monitoring/v3/common.proto");
  GOOGLE_CHECK(file != NULL);
  TypedValue_descriptor_ = file->message_type(0);
  static const int TypedValue_offsets_[6] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypedValue_default_oneof_instance_, bool_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypedValue_default_oneof_instance_, int64_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypedValue_default_oneof_instance_, double_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypedValue_default_oneof_instance_, string_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypedValue_default_oneof_instance_, distribution_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypedValue, value_),
  };
  TypedValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypedValue_descriptor_,
      TypedValue::internal_default_instance(),
      TypedValue_offsets_,
      -1,
      -1,
      -1,
      TypedValue_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypedValue, _oneof_case_[0]),
      sizeof(TypedValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypedValue, _internal_metadata_));
  TimeInterval_descriptor_ = file->message_type(1);
  static const int TimeInterval_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeInterval, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeInterval, start_time_),
  };
  TimeInterval_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimeInterval_descriptor_,
      TimeInterval::internal_default_instance(),
      TimeInterval_offsets_,
      -1,
      -1,
      -1,
      sizeof(TimeInterval),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeInterval, _internal_metadata_));
  Aggregation_descriptor_ = file->message_type(2);
  static const int Aggregation_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Aggregation, alignment_period_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Aggregation, per_series_aligner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Aggregation, cross_series_reducer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Aggregation, group_by_fields_),
  };
  Aggregation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Aggregation_descriptor_,
      Aggregation::internal_default_instance(),
      Aggregation_offsets_,
      -1,
      -1,
      -1,
      sizeof(Aggregation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Aggregation, _internal_metadata_));
  Aggregation_Aligner_descriptor_ = Aggregation_descriptor_->enum_type(0);
  Aggregation_Reducer_descriptor_ = Aggregation_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fmonitoring_2fv3_2fcommon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypedValue_descriptor_, TypedValue::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimeInterval_descriptor_, TimeInterval::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Aggregation_descriptor_, Aggregation::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fmonitoring_2fv3_2fcommon_2eproto() {
  TypedValue_default_instance_.Shutdown();
  delete TypedValue_default_oneof_instance_;
  delete TypedValue_reflection_;
  TimeInterval_default_instance_.Shutdown();
  delete TimeInterval_reflection_;
  Aggregation_default_instance_.Shutdown();
  delete Aggregation_reflection_;
}

void protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fdistribution_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  TypedValue_default_instance_.DefaultConstruct();
  TypedValue_default_oneof_instance_ = new TypedValueOneofInstance();
  TimeInterval_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Aggregation_default_instance_.DefaultConstruct();
  TypedValue_default_instance_.get_mutable()->InitAsDefaultInstance();
  TimeInterval_default_instance_.get_mutable()->InitAsDefaultInstance();
  Aggregation_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto_once_);
void protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto_once_,
                 &protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto_impl);
}
void protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!google/monitoring/v3/common.proto\022\024goo"
    "gle.monitoring.v3\032\035google/api/distributi"
    "on.proto\032\036google/protobuf/duration.proto"
    "\032\037google/protobuf/timestamp.proto\"\252\001\n\nTy"
    "pedValue\022\024\n\nbool_value\030\001 \001(\010H\000\022\025\n\013int64_"
    "value\030\002 \001(\003H\000\022\026\n\014double_value\030\003 \001(\001H\000\022\026\n"
    "\014string_value\030\004 \001(\tH\000\0226\n\022distribution_va"
    "lue\030\005 \001(\0132\030.google.api.DistributionH\000B\007\n"
    "\005value\"l\n\014TimeInterval\022,\n\010end_time\030\002 \001(\013"
    "2\032.google.protobuf.Timestamp\022.\n\nstart_ti"
    "me\030\001 \001(\0132\032.google.protobuf.Timestamp\"\344\006\n"
    "\013Aggregation\0223\n\020alignment_period\030\001 \001(\0132\031"
    ".google.protobuf.Duration\022E\n\022per_series_"
    "aligner\030\002 \001(\0162).google.monitoring.v3.Agg"
    "regation.Aligner\022G\n\024cross_series_reducer"
    "\030\004 \001(\0162).google.monitoring.v3.Aggregatio"
    "n.Reducer\022\027\n\017group_by_fields\030\005 \003(\t\"\332\002\n\007A"
    "ligner\022\016\n\nALIGN_NONE\020\000\022\017\n\013ALIGN_DELTA\020\001\022"
    "\016\n\nALIGN_RATE\020\002\022\025\n\021ALIGN_INTERPOLATE\020\003\022\024"
    "\n\020ALIGN_NEXT_OLDER\020\004\022\r\n\tALIGN_MIN\020\n\022\r\n\tA"
    "LIGN_MAX\020\013\022\016\n\nALIGN_MEAN\020\014\022\017\n\013ALIGN_COUN"
    "T\020\r\022\r\n\tALIGN_SUM\020\016\022\020\n\014ALIGN_STDDEV\020\017\022\024\n\020"
    "ALIGN_COUNT_TRUE\020\020\022\027\n\023ALIGN_FRACTION_TRU"
    "E\020\021\022\027\n\023ALIGN_PERCENTILE_99\020\022\022\027\n\023ALIGN_PE"
    "RCENTILE_95\020\023\022\027\n\023ALIGN_PERCENTILE_50\020\024\022\027"
    "\n\023ALIGN_PERCENTILE_05\020\025\"\231\002\n\007Reducer\022\017\n\013R"
    "EDUCE_NONE\020\000\022\017\n\013REDUCE_MEAN\020\001\022\016\n\nREDUCE_"
    "MIN\020\002\022\016\n\nREDUCE_MAX\020\003\022\016\n\nREDUCE_SUM\020\004\022\021\n"
    "\rREDUCE_STDDEV\020\005\022\020\n\014REDUCE_COUNT\020\006\022\025\n\021RE"
    "DUCE_COUNT_TRUE\020\007\022\030\n\024REDUCE_FRACTION_TRU"
    "E\020\010\022\030\n\024REDUCE_PERCENTILE_99\020\t\022\030\n\024REDUCE_"
    "PERCENTILE_95\020\n\022\030\n\024REDUCE_PERCENTILE_50\020"
    "\013\022\030\n\024REDUCE_PERCENTILE_05\020\014B\206\001\n\030com.goog"
    "le.monitoring.v3B\013CommonProtoP\001Z>google."
    "golang.org/genproto/googleapis/monitorin"
    "g/v3;monitoring\252\002\032Google.Cloud.Monitorin"
    "g.V3b\006proto3", 1452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/common.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fdistribution_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fmonitoring_2fv3_2fcommon_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto_once_);
void protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto_once_,
                 &protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fmonitoring_2fv3_2fcommon_2eproto {
  StaticDescriptorInitializer_google_2fmonitoring_2fv3_2fcommon_2eproto() {
    protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto();
  }
} static_descriptor_initializer_google_2fmonitoring_2fv3_2fcommon_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypedValue::kBoolValueFieldNumber;
const int TypedValue::kInt64ValueFieldNumber;
const int TypedValue::kDoubleValueFieldNumber;
const int TypedValue::kStringValueFieldNumber;
const int TypedValue::kDistributionValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypedValue::TypedValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.TypedValue)
}

void TypedValue::InitAsDefaultInstance() {
  TypedValue_default_oneof_instance_->bool_value_ = false;
  TypedValue_default_oneof_instance_->int64_value_ = GOOGLE_LONGLONG(0);
  TypedValue_default_oneof_instance_->double_value_ = 0;
  TypedValue_default_oneof_instance_->string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  TypedValue_default_oneof_instance_->distribution_value_ = const_cast< ::google::api::Distribution*>(
      ::google::api::Distribution::internal_default_instance());
}

TypedValue::TypedValue(const TypedValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.TypedValue)
}

void TypedValue::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

TypedValue::~TypedValue() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.TypedValue)
  SharedDtor();
}

void TypedValue::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void TypedValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypedValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypedValue_descriptor_;
}

const TypedValue& TypedValue::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypedValue> TypedValue_default_instance_;

TypedValue* TypedValue::New(::google::protobuf::Arena* arena) const {
  TypedValue* n = new TypedValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypedValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.monitoring.v3.TypedValue)
  switch (value_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDistributionValue: {
      delete value_.distribution_value_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypedValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.TypedValue)
  clear_value();
}

bool TypedValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.TypedValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bool_value = 1;
      case 1: {
        if (tag == 8) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        goto after_distribution_value;
        break;
      }

      // optional int64 int64_value = 2;
      case 2: {
        if (tag == 16) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        goto after_distribution_value;
        break;
      }

      // optional double double_value = 3;
      case 3: {
        if (tag == 25) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        goto after_distribution_value;
        break;
      }

      // optional string string_value = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.TypedValue.string_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_distribution_value;
        break;
      }

      // optional .google.api.Distribution distribution_value = 5;
      case 5: {
        if (tag == 42) {
         parse_distribution_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_distribution_value()));
        } else {
          goto handle_unusual;
        }
       after_distribution_value:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.TypedValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.TypedValue)
  return false;
#undef DO_
}

void TypedValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.TypedValue)
  // optional bool bool_value = 1;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bool_value(), output);
  }

  // optional int64 int64_value = 2;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int64_value(), output);
  }

  // optional double double_value = 3;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  // optional string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.TypedValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->string_value(), output);
  }

  // optional .google.api.Distribution distribution_value = 5;
  if (has_distribution_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *value_.distribution_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.TypedValue)
}

::google::protobuf::uint8* TypedValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.TypedValue)
  // optional bool bool_value = 1;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bool_value(), target);
  }

  // optional int64 int64_value = 2;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int64_value(), target);
  }

  // optional double double_value = 3;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  // optional string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.TypedValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string_value(), target);
  }

  // optional .google.api.Distribution distribution_value = 5;
  if (has_distribution_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *value_.distribution_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.TypedValue)
  return target;
}

size_t TypedValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.TypedValue)
  size_t total_size = 0;

  switch (value_case()) {
    // optional bool bool_value = 1;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // optional int64 int64_value = 2;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // optional double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // optional string string_value = 4;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // optional .google.api.Distribution distribution_value = 5;
    case kDistributionValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.distribution_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypedValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.TypedValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypedValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypedValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.TypedValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.TypedValue)
    UnsafeMergeFrom(*source);
  }
}

void TypedValue::MergeFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.TypedValue)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypedValue::UnsafeMergeFrom(const TypedValue& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.value_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kDistributionValue: {
      mutable_distribution_value()->::google::api::Distribution::MergeFrom(from.distribution_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void TypedValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.TypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypedValue::CopyFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.TypedValue)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypedValue::IsInitialized() const {

  return true;
}

void TypedValue::Swap(TypedValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypedValue::InternalSwap(TypedValue* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypedValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypedValue_descriptor_;
  metadata.reflection = TypedValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypedValue

// optional bool bool_value = 1;
bool TypedValue::has_bool_value() const {
  return value_case() == kBoolValue;
}
void TypedValue::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
void TypedValue::clear_bool_value() {
  if (has_bool_value()) {
    value_.bool_value_ = false;
    clear_has_value();
  }
}
bool TypedValue::bool_value() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.TypedValue.bool_value)
  if (has_bool_value()) {
    return value_.bool_value_;
  }
  return false;
}
void TypedValue::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_value();
    set_has_bool_value();
  }
  value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.TypedValue.bool_value)
}

// optional int64 int64_value = 2;
bool TypedValue::has_int64_value() const {
  return value_case() == kInt64Value;
}
void TypedValue::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
void TypedValue::clear_int64_value() {
  if (has_int64_value()) {
    value_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 TypedValue::int64_value() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.TypedValue.int64_value)
  if (has_int64_value()) {
    return value_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
void TypedValue::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_value();
    set_has_int64_value();
  }
  value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.TypedValue.int64_value)
}

// optional double double_value = 3;
bool TypedValue::has_double_value() const {
  return value_case() == kDoubleValue;
}
void TypedValue::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
void TypedValue::clear_double_value() {
  if (has_double_value()) {
    value_.double_value_ = 0;
    clear_has_value();
  }
}
double TypedValue::double_value() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.TypedValue.double_value)
  if (has_double_value()) {
    return value_.double_value_;
  }
  return 0;
}
void TypedValue::set_double_value(double value) {
  if (!has_double_value()) {
    clear_value();
    set_has_double_value();
  }
  value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.TypedValue.double_value)
}

// optional string string_value = 4;
bool TypedValue::has_string_value() const {
  return value_case() == kStringValue;
}
void TypedValue::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
void TypedValue::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TypedValue::string_value() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.TypedValue.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TypedValue::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.TypedValue.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.TypedValue.string_value)
}
void TypedValue::set_string_value(const char* value) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.TypedValue.string_value)
}
void TypedValue::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.TypedValue.string_value)
}
::std::string* TypedValue::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.TypedValue.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypedValue::release_string_value() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.TypedValue.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.TypedValue.string_value)
}

// optional .google.api.Distribution distribution_value = 5;
bool TypedValue::has_distribution_value() const {
  return value_case() == kDistributionValue;
}
void TypedValue::set_has_distribution_value() {
  _oneof_case_[0] = kDistributionValue;
}
void TypedValue::clear_distribution_value() {
  if (has_distribution_value()) {
    delete value_.distribution_value_;
    clear_has_value();
  }
}
 const ::google::api::Distribution& TypedValue::distribution_value() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.TypedValue.distribution_value)
  return has_distribution_value()
      ? *value_.distribution_value_
      : ::google::api::Distribution::default_instance();
}
::google::api::Distribution* TypedValue::mutable_distribution_value() {
  if (!has_distribution_value()) {
    clear_value();
    set_has_distribution_value();
    value_.distribution_value_ = new ::google::api::Distribution;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.TypedValue.distribution_value)
  return value_.distribution_value_;
}
::google::api::Distribution* TypedValue::release_distribution_value() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.TypedValue.distribution_value)
  if (has_distribution_value()) {
    clear_has_value();
    ::google::api::Distribution* temp = value_.distribution_value_;
    value_.distribution_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_distribution_value(::google::api::Distribution* distribution_value) {
  clear_value();
  if (distribution_value) {
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.TypedValue.distribution_value)
}

bool TypedValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void TypedValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
TypedValue::ValueCase TypedValue::value_case() const {
  return TypedValue::ValueCase(_oneof_case_[0]);
}
inline const TypedValue* TypedValue::internal_default_instance() {
  return &TypedValue_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeInterval::kEndTimeFieldNumber;
const int TimeInterval::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeInterval::TimeInterval()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.TimeInterval)
}

void TimeInterval::InitAsDefaultInstance() {
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

TimeInterval::TimeInterval(const TimeInterval& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.TimeInterval)
}

void TimeInterval::SharedCtor() {
  end_time_ = NULL;
  start_time_ = NULL;
  _cached_size_ = 0;
}

TimeInterval::~TimeInterval() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.TimeInterval)
  SharedDtor();
}

void TimeInterval::SharedDtor() {
  if (this != &TimeInterval_default_instance_.get()) {
    delete end_time_;
    delete start_time_;
  }
}

void TimeInterval::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeInterval::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimeInterval_descriptor_;
}

const TimeInterval& TimeInterval::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TimeInterval> TimeInterval_default_instance_;

TimeInterval* TimeInterval::New(::google::protobuf::Arena* arena) const {
  TimeInterval* n = new TimeInterval;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeInterval::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.TimeInterval)
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}

bool TimeInterval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.TimeInterval)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (tag == 18) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.TimeInterval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.TimeInterval)
  return false;
#undef DO_
}

void TimeInterval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.TimeInterval)
  // optional .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->end_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.TimeInterval)
}

::google::protobuf::uint8* TimeInterval::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.TimeInterval)
  // optional .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->end_time_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.TimeInterval)
  return target;
}

size_t TimeInterval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.TimeInterval)
  size_t total_size = 0;

  // optional .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  // optional .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeInterval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.TimeInterval)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TimeInterval* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeInterval>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.TimeInterval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.TimeInterval)
    UnsafeMergeFrom(*source);
  }
}

void TimeInterval::MergeFrom(const TimeInterval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.TimeInterval)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TimeInterval::UnsafeMergeFrom(const TimeInterval& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
}

void TimeInterval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.TimeInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeInterval::CopyFrom(const TimeInterval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.TimeInterval)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TimeInterval::IsInitialized() const {

  return true;
}

void TimeInterval::Swap(TimeInterval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeInterval::InternalSwap(TimeInterval* other) {
  std::swap(end_time_, other->end_time_);
  std::swap(start_time_, other->start_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeInterval::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimeInterval_descriptor_;
  metadata.reflection = TimeInterval_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimeInterval

// optional .google.protobuf.Timestamp end_time = 2;
bool TimeInterval::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void TimeInterval::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& TimeInterval::end_time() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.TimeInterval.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TimeInterval::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.TimeInterval.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* TimeInterval::release_end_time() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.TimeInterval.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void TimeInterval::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.TimeInterval.end_time)
}

// optional .google.protobuf.Timestamp start_time = 1;
bool TimeInterval::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void TimeInterval::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& TimeInterval::start_time() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.TimeInterval.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TimeInterval::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.TimeInterval.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* TimeInterval::release_start_time() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.TimeInterval.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void TimeInterval::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.TimeInterval.start_time)
}

inline const TimeInterval* TimeInterval::internal_default_instance() {
  return &TimeInterval_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Aggregation_Aligner_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Aggregation_Aligner_descriptor_;
}
bool Aggregation_Aligner_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Aggregation_Aligner Aggregation::ALIGN_NONE;
const Aggregation_Aligner Aggregation::ALIGN_DELTA;
const Aggregation_Aligner Aggregation::ALIGN_RATE;
const Aggregation_Aligner Aggregation::ALIGN_INTERPOLATE;
const Aggregation_Aligner Aggregation::ALIGN_NEXT_OLDER;
const Aggregation_Aligner Aggregation::ALIGN_MIN;
const Aggregation_Aligner Aggregation::ALIGN_MAX;
const Aggregation_Aligner Aggregation::ALIGN_MEAN;
const Aggregation_Aligner Aggregation::ALIGN_COUNT;
const Aggregation_Aligner Aggregation::ALIGN_SUM;
const Aggregation_Aligner Aggregation::ALIGN_STDDEV;
const Aggregation_Aligner Aggregation::ALIGN_COUNT_TRUE;
const Aggregation_Aligner Aggregation::ALIGN_FRACTION_TRUE;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_99;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_95;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_50;
const Aggregation_Aligner Aggregation::ALIGN_PERCENTILE_05;
const Aggregation_Aligner Aggregation::Aligner_MIN;
const Aggregation_Aligner Aggregation::Aligner_MAX;
const int Aggregation::Aligner_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Aggregation_Reducer_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Aggregation_Reducer_descriptor_;
}
bool Aggregation_Reducer_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Aggregation_Reducer Aggregation::REDUCE_NONE;
const Aggregation_Reducer Aggregation::REDUCE_MEAN;
const Aggregation_Reducer Aggregation::REDUCE_MIN;
const Aggregation_Reducer Aggregation::REDUCE_MAX;
const Aggregation_Reducer Aggregation::REDUCE_SUM;
const Aggregation_Reducer Aggregation::REDUCE_STDDEV;
const Aggregation_Reducer Aggregation::REDUCE_COUNT;
const Aggregation_Reducer Aggregation::REDUCE_COUNT_TRUE;
const Aggregation_Reducer Aggregation::REDUCE_FRACTION_TRUE;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_99;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_95;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_50;
const Aggregation_Reducer Aggregation::REDUCE_PERCENTILE_05;
const Aggregation_Reducer Aggregation::Reducer_MIN;
const Aggregation_Reducer Aggregation::Reducer_MAX;
const int Aggregation::Reducer_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Aggregation::kAlignmentPeriodFieldNumber;
const int Aggregation::kPerSeriesAlignerFieldNumber;
const int Aggregation::kCrossSeriesReducerFieldNumber;
const int Aggregation::kGroupByFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Aggregation::Aggregation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.Aggregation)
}

void Aggregation::InitAsDefaultInstance() {
  alignment_period_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

Aggregation::Aggregation(const Aggregation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.Aggregation)
}

void Aggregation::SharedCtor() {
  alignment_period_ = NULL;
  ::memset(&per_series_aligner_, 0, reinterpret_cast<char*>(&cross_series_reducer_) -
    reinterpret_cast<char*>(&per_series_aligner_) + sizeof(cross_series_reducer_));
  _cached_size_ = 0;
}

Aggregation::~Aggregation() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.Aggregation)
  SharedDtor();
}

void Aggregation::SharedDtor() {
  if (this != &Aggregation_default_instance_.get()) {
    delete alignment_period_;
  }
}

void Aggregation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Aggregation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Aggregation_descriptor_;
}

const Aggregation& Aggregation::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Aggregation> Aggregation_default_instance_;

Aggregation* Aggregation::New(::google::protobuf::Arena* arena) const {
  Aggregation* n = new Aggregation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Aggregation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.Aggregation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Aggregation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Aggregation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(per_series_aligner_, cross_series_reducer_);
  if (GetArenaNoVirtual() == NULL && alignment_period_ != NULL) delete alignment_period_;
  alignment_period_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  group_by_fields_.Clear();
}

bool Aggregation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.Aggregation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Duration alignment_period = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alignment_period()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_per_series_aligner;
        break;
      }

      // optional .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
      case 2: {
        if (tag == 16) {
         parse_per_series_aligner:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_per_series_aligner(static_cast< ::google::monitoring::v3::Aggregation_Aligner >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cross_series_reducer;
        break;
      }

      // optional .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
      case 4: {
        if (tag == 32) {
         parse_cross_series_reducer:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cross_series_reducer(static_cast< ::google::monitoring::v3::Aggregation_Reducer >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_group_by_fields;
        break;
      }

      // repeated string group_by_fields = 5;
      case 5: {
        if (tag == 42) {
         parse_group_by_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_by_fields()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_by_fields(this->group_by_fields_size() - 1).data(),
            this->group_by_fields(this->group_by_fields_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.Aggregation.group_by_fields"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_group_by_fields;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.Aggregation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.Aggregation)
  return false;
#undef DO_
}

void Aggregation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.Aggregation)
  // optional .google.protobuf.Duration alignment_period = 1;
  if (this->has_alignment_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->alignment_period_, output);
  }

  // optional .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
  if (this->per_series_aligner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->per_series_aligner(), output);
  }

  // optional .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
  if (this->cross_series_reducer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->cross_series_reducer(), output);
  }

  // repeated string group_by_fields = 5;
  for (int i = 0; i < this->group_by_fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_by_fields(i).data(), this->group_by_fields(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.Aggregation.group_by_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->group_by_fields(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.Aggregation)
}

::google::protobuf::uint8* Aggregation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.Aggregation)
  // optional .google.protobuf.Duration alignment_period = 1;
  if (this->has_alignment_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->alignment_period_, false, target);
  }

  // optional .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
  if (this->per_series_aligner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->per_series_aligner(), target);
  }

  // optional .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
  if (this->cross_series_reducer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->cross_series_reducer(), target);
  }

  // repeated string group_by_fields = 5;
  for (int i = 0; i < this->group_by_fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_by_fields(i).data(), this->group_by_fields(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.Aggregation.group_by_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->group_by_fields(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.Aggregation)
  return target;
}

size_t Aggregation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.Aggregation)
  size_t total_size = 0;

  // optional .google.protobuf.Duration alignment_period = 1;
  if (this->has_alignment_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->alignment_period_);
  }

  // optional .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
  if (this->per_series_aligner() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->per_series_aligner());
  }

  // optional .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
  if (this->cross_series_reducer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cross_series_reducer());
  }

  // repeated string group_by_fields = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_by_fields_size());
  for (int i = 0; i < this->group_by_fields_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_by_fields(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Aggregation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.Aggregation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Aggregation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Aggregation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.Aggregation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.Aggregation)
    UnsafeMergeFrom(*source);
  }
}

void Aggregation::MergeFrom(const Aggregation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.Aggregation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Aggregation::UnsafeMergeFrom(const Aggregation& from) {
  GOOGLE_DCHECK(&from != this);
  group_by_fields_.UnsafeMergeFrom(from.group_by_fields_);
  if (from.has_alignment_period()) {
    mutable_alignment_period()->::google::protobuf::Duration::MergeFrom(from.alignment_period());
  }
  if (from.per_series_aligner() != 0) {
    set_per_series_aligner(from.per_series_aligner());
  }
  if (from.cross_series_reducer() != 0) {
    set_cross_series_reducer(from.cross_series_reducer());
  }
}

void Aggregation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.Aggregation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aggregation::CopyFrom(const Aggregation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.Aggregation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Aggregation::IsInitialized() const {

  return true;
}

void Aggregation::Swap(Aggregation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Aggregation::InternalSwap(Aggregation* other) {
  std::swap(alignment_period_, other->alignment_period_);
  std::swap(per_series_aligner_, other->per_series_aligner_);
  std::swap(cross_series_reducer_, other->cross_series_reducer_);
  group_by_fields_.UnsafeArenaSwap(&other->group_by_fields_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Aggregation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Aggregation_descriptor_;
  metadata.reflection = Aggregation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Aggregation

// optional .google.protobuf.Duration alignment_period = 1;
bool Aggregation::has_alignment_period() const {
  return this != internal_default_instance() && alignment_period_ != NULL;
}
void Aggregation::clear_alignment_period() {
  if (GetArenaNoVirtual() == NULL && alignment_period_ != NULL) delete alignment_period_;
  alignment_period_ = NULL;
}
const ::google::protobuf::Duration& Aggregation::alignment_period() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.Aggregation.alignment_period)
  return alignment_period_ != NULL ? *alignment_period_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* Aggregation::mutable_alignment_period() {
  
  if (alignment_period_ == NULL) {
    alignment_period_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.Aggregation.alignment_period)
  return alignment_period_;
}
::google::protobuf::Duration* Aggregation::release_alignment_period() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.Aggregation.alignment_period)
  
  ::google::protobuf::Duration* temp = alignment_period_;
  alignment_period_ = NULL;
  return temp;
}
void Aggregation::set_allocated_alignment_period(::google::protobuf::Duration* alignment_period) {
  delete alignment_period_;
  if (alignment_period != NULL && alignment_period->GetArena() != NULL) {
    ::google::protobuf::Duration* new_alignment_period = new ::google::protobuf::Duration;
    new_alignment_period->CopyFrom(*alignment_period);
    alignment_period = new_alignment_period;
  }
  alignment_period_ = alignment_period;
  if (alignment_period) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.Aggregation.alignment_period)
}

// optional .google.monitoring.v3.Aggregation.Aligner per_series_aligner = 2;
void Aggregation::clear_per_series_aligner() {
  per_series_aligner_ = 0;
}
::google::monitoring::v3::Aggregation_Aligner Aggregation::per_series_aligner() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.Aggregation.per_series_aligner)
  return static_cast< ::google::monitoring::v3::Aggregation_Aligner >(per_series_aligner_);
}
void Aggregation::set_per_series_aligner(::google::monitoring::v3::Aggregation_Aligner value) {
  
  per_series_aligner_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.Aggregation.per_series_aligner)
}

// optional .google.monitoring.v3.Aggregation.Reducer cross_series_reducer = 4;
void Aggregation::clear_cross_series_reducer() {
  cross_series_reducer_ = 0;
}
::google::monitoring::v3::Aggregation_Reducer Aggregation::cross_series_reducer() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.Aggregation.cross_series_reducer)
  return static_cast< ::google::monitoring::v3::Aggregation_Reducer >(cross_series_reducer_);
}
void Aggregation::set_cross_series_reducer(::google::monitoring::v3::Aggregation_Reducer value) {
  
  cross_series_reducer_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.Aggregation.cross_series_reducer)
}

// repeated string group_by_fields = 5;
int Aggregation::group_by_fields_size() const {
  return group_by_fields_.size();
}
void Aggregation::clear_group_by_fields() {
  group_by_fields_.Clear();
}
const ::std::string& Aggregation::group_by_fields(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.Aggregation.group_by_fields)
  return group_by_fields_.Get(index);
}
::std::string* Aggregation::mutable_group_by_fields(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.Aggregation.group_by_fields)
  return group_by_fields_.Mutable(index);
}
void Aggregation::set_group_by_fields(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.Aggregation.group_by_fields)
  group_by_fields_.Mutable(index)->assign(value);
}
void Aggregation::set_group_by_fields(int index, const char* value) {
  group_by_fields_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.Aggregation.group_by_fields)
}
void Aggregation::set_group_by_fields(int index, const char* value, size_t size) {
  group_by_fields_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.Aggregation.group_by_fields)
}
::std::string* Aggregation::add_group_by_fields() {
  // @@protoc_insertion_point(field_add_mutable:google.monitoring.v3.Aggregation.group_by_fields)
  return group_by_fields_.Add();
}
void Aggregation::add_group_by_fields(const ::std::string& value) {
  group_by_fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.monitoring.v3.Aggregation.group_by_fields)
}
void Aggregation::add_group_by_fields(const char* value) {
  group_by_fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.monitoring.v3.Aggregation.group_by_fields)
}
void Aggregation::add_group_by_fields(const char* value, size_t size) {
  group_by_fields_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.monitoring.v3.Aggregation.group_by_fields)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Aggregation::group_by_fields() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.Aggregation.group_by_fields)
  return group_by_fields_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Aggregation::mutable_group_by_fields() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.Aggregation.group_by_fields)
  return &group_by_fields_;
}

inline const Aggregation* Aggregation::internal_default_instance() {
  return &Aggregation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v3
}  // namespace monitoring
}  // namespace google

// @@protoc_insertion_point(global_scope)
