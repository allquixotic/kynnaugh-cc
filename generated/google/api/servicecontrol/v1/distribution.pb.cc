// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/distribution.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/servicecontrol/v1/distribution.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
class Distribution_LinearBucketsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Distribution_LinearBuckets> {};
Distribution_LinearBucketsDefaultTypeInternal _Distribution_LinearBuckets_default_instance_;
class Distribution_ExponentialBucketsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Distribution_ExponentialBuckets> {};
Distribution_ExponentialBucketsDefaultTypeInternal _Distribution_ExponentialBuckets_default_instance_;
class Distribution_ExplicitBucketsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Distribution_ExplicitBuckets> {};
Distribution_ExplicitBucketsDefaultTypeInternal _Distribution_ExplicitBuckets_default_instance_;
class DistributionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Distribution> {};
DistributionDefaultTypeInternal _Distribution_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[4];
struct DistributionOneofInstance {
  const ::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets_;
  const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets_;
  const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets_;
} Distribution_default_oneof_instance_;

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, num_finite_buckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, offset_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, num_finite_buckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, growth_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, scale_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExplicitBuckets, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExplicitBuckets, bounds_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, _internal_metadata_),
    ~0u,  // no _extensions_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, _oneof_case_[0]),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, mean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, sum_of_squared_deviation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, bucket_counts_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&Distribution_default_oneof_instance_), linear_buckets_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&Distribution_default_oneof_instance_), exponential_buckets_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&Distribution_default_oneof_instance_), explicit_buckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, bucket_option_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Distribution_LinearBuckets)},
  { 7, -1, sizeof(Distribution_ExponentialBuckets)},
  { 14, -1, sizeof(Distribution_ExplicitBuckets)},
  { 19, -1, sizeof(Distribution)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Distribution_LinearBuckets_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Distribution_ExponentialBuckets_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Distribution_ExplicitBuckets_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Distribution_default_instance_), &Distribution_default_oneof_instance_},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/api/servicecontrol/v1/distribution.proto", schemas, file_default_instances, protobuf_Offsets_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  _Distribution_LinearBuckets_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Distribution_ExponentialBuckets_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Distribution_ExplicitBuckets_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Distribution_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Distribution_LinearBuckets_default_instance_.DefaultConstruct();
  _Distribution_ExponentialBuckets_default_instance_.DefaultConstruct();
  _Distribution_ExplicitBuckets_default_instance_.DefaultConstruct();
  _Distribution_default_instance_.DefaultConstruct();
  Distribution_default_oneof_instance_.linear_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_LinearBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets::internal_default_instance());
  Distribution_default_oneof_instance_.exponential_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::internal_default_instance());
  Distribution_default_oneof_instance_.explicit_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::internal_default_instance());
}

void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  static const char descriptor[] = {
      "\n/google/api/servicecontrol/v1/distribut"
      "ion.proto\022\034google.api.servicecontrol.v1\""
      "\350\004\n\014Distribution\022\r\n\005count\030\001 \001(\003\022\014\n\004mean\030"
      "\002 \001(\001\022\017\n\007minimum\030\003 \001(\001\022\017\n\007maximum\030\004 \001(\001\022"
      " \n\030sum_of_squared_deviation\030\005 \001(\001\022\025\n\rbuc"
      "ket_counts\030\006 \003(\003\022R\n\016linear_buckets\030\007 \001(\013"
      "28.google.api.servicecontrol.v1.Distribu"
      "tion.LinearBucketsH\000\022\\\n\023exponential_buck"
      "ets\030\010 \001(\0132=.google.api.servicecontrol.v1"
      ".Distribution.ExponentialBucketsH\000\022V\n\020ex"
      "plicit_buckets\030\t \001(\0132:.google.api.servic"
      "econtrol.v1.Distribution.ExplicitBuckets"
      "H\000\032J\n\rLinearBuckets\022\032\n\022num_finite_bucket"
      "s\030\001 \001(\005\022\r\n\005width\030\002 \001(\001\022\016\n\006offset\030\003 \001(\001\032V"
      "\n\022ExponentialBuckets\022\032\n\022num_finite_bucke"
      "ts\030\001 \001(\005\022\025\n\rgrowth_factor\030\002 \001(\001\022\r\n\005scale"
      "\030\003 \001(\001\032!\n\017ExplicitBuckets\022\016\n\006bounds\030\001 \003("
      "\001B\017\n\rbucket_optionB:\n com.google.api.ser"
      "vicecontrol.v1B\021DistributionProtoP\001\370\001\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 766);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicecontrol/v1/distribution.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
    protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_LinearBuckets::kNumFiniteBucketsFieldNumber;
const int Distribution_LinearBuckets::kWidthFieldNumber;
const int Distribution_LinearBuckets::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_LinearBuckets::Distribution_LinearBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}
Distribution_LinearBuckets::Distribution_LinearBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}
Distribution_LinearBuckets::Distribution_LinearBuckets(const Distribution_LinearBuckets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&width_) + sizeof(num_finite_buckets_));
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}

void Distribution_LinearBuckets::SharedCtor() {
  ::memset(&width_, 0, reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&width_) + sizeof(num_finite_buckets_));
  _cached_size_ = 0;
}

Distribution_LinearBuckets::~Distribution_LinearBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  SharedDtor();
}

void Distribution_LinearBuckets::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Distribution_LinearBuckets::ArenaDtor(void* object) {
  Distribution_LinearBuckets* _this = reinterpret_cast< Distribution_LinearBuckets* >(object);
  (void)_this;
}
void Distribution_LinearBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_LinearBuckets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution_LinearBuckets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const Distribution_LinearBuckets& Distribution_LinearBuckets::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

Distribution_LinearBuckets* Distribution_LinearBuckets::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution_LinearBuckets>(arena);
}

void Distribution_LinearBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  ::memset(&width_, 0, reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&width_) + sizeof(num_finite_buckets_));
}

bool Distribution_LinearBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_finite_buckets = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double width = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double offset = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return false;
#undef DO_
}

void Distribution_LinearBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // double width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->width(), output);
  }

  // double offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}

::google::protobuf::uint8* Distribution_LinearBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // double width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->width(), target);
  }

  // double offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return target;
}

size_t Distribution_LinearBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  size_t total_size = 0;

  // double width = 2;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // double offset = 3;
  if (this->offset() != 0) {
    total_size += 1 + 8;
  }

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution_LinearBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_LinearBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_LinearBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    MergeFrom(*source);
  }
}

void Distribution_LinearBuckets::MergeFrom(const Distribution_LinearBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
}

void Distribution_LinearBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_LinearBuckets::CopyFrom(const Distribution_LinearBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_LinearBuckets::IsInitialized() const {
  return true;
}

void Distribution_LinearBuckets::Swap(Distribution_LinearBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_LinearBuckets* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution_LinearBuckets::UnsafeArenaSwap(Distribution_LinearBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_LinearBuckets::InternalSwap(Distribution_LinearBuckets* other) {
  std::swap(width_, other->width_);
  std::swap(offset_, other->offset_);
  std::swap(num_finite_buckets_, other->num_finite_buckets_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution_LinearBuckets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Distribution_LinearBuckets

// int32 num_finite_buckets = 1;
void Distribution_LinearBuckets::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
::google::protobuf::int32 Distribution_LinearBuckets::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.num_finite_buckets)
  return num_finite_buckets_;
}
void Distribution_LinearBuckets::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.num_finite_buckets)
}

// double width = 2;
void Distribution_LinearBuckets::clear_width() {
  width_ = 0;
}
double Distribution_LinearBuckets::width() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.width)
  return width_;
}
void Distribution_LinearBuckets::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.width)
}

// double offset = 3;
void Distribution_LinearBuckets::clear_offset() {
  offset_ = 0;
}
double Distribution_LinearBuckets::offset() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.offset)
  return offset_;
}
void Distribution_LinearBuckets::set_offset(double value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_ExponentialBuckets::kNumFiniteBucketsFieldNumber;
const int Distribution_ExponentialBuckets::kGrowthFactorFieldNumber;
const int Distribution_ExponentialBuckets::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_ExponentialBuckets::Distribution_ExponentialBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}
Distribution_ExponentialBuckets::Distribution_ExponentialBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}
Distribution_ExponentialBuckets::Distribution_ExponentialBuckets(const Distribution_ExponentialBuckets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&growth_factor_, &from.growth_factor_,
    reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&growth_factor_) + sizeof(num_finite_buckets_));
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}

void Distribution_ExponentialBuckets::SharedCtor() {
  ::memset(&growth_factor_, 0, reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&growth_factor_) + sizeof(num_finite_buckets_));
  _cached_size_ = 0;
}

Distribution_ExponentialBuckets::~Distribution_ExponentialBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  SharedDtor();
}

void Distribution_ExponentialBuckets::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Distribution_ExponentialBuckets::ArenaDtor(void* object) {
  Distribution_ExponentialBuckets* _this = reinterpret_cast< Distribution_ExponentialBuckets* >(object);
  (void)_this;
}
void Distribution_ExponentialBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_ExponentialBuckets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution_ExponentialBuckets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1].descriptor;
}

const Distribution_ExponentialBuckets& Distribution_ExponentialBuckets::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

Distribution_ExponentialBuckets* Distribution_ExponentialBuckets::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution_ExponentialBuckets>(arena);
}

void Distribution_ExponentialBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  ::memset(&growth_factor_, 0, reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&growth_factor_) + sizeof(num_finite_buckets_));
}

bool Distribution_ExponentialBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_finite_buckets = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double growth_factor = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &growth_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double scale = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return false;
#undef DO_
}

void Distribution_ExponentialBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->growth_factor(), output);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->scale(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}

::google::protobuf::uint8* Distribution_ExponentialBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->growth_factor(), target);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->scale(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return target;
}

size_t Distribution_ExponentialBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  size_t total_size = 0;

  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    total_size += 1 + 8;
  }

  // double scale = 3;
  if (this->scale() != 0) {
    total_size += 1 + 8;
  }

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution_ExponentialBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_ExponentialBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_ExponentialBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    MergeFrom(*source);
  }
}

void Distribution_ExponentialBuckets::MergeFrom(const Distribution_ExponentialBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.growth_factor() != 0) {
    set_growth_factor(from.growth_factor());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
}

void Distribution_ExponentialBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_ExponentialBuckets::CopyFrom(const Distribution_ExponentialBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_ExponentialBuckets::IsInitialized() const {
  return true;
}

void Distribution_ExponentialBuckets::Swap(Distribution_ExponentialBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_ExponentialBuckets* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution_ExponentialBuckets::UnsafeArenaSwap(Distribution_ExponentialBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_ExponentialBuckets::InternalSwap(Distribution_ExponentialBuckets* other) {
  std::swap(growth_factor_, other->growth_factor_);
  std::swap(scale_, other->scale_);
  std::swap(num_finite_buckets_, other->num_finite_buckets_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution_ExponentialBuckets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Distribution_ExponentialBuckets

// int32 num_finite_buckets = 1;
void Distribution_ExponentialBuckets::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
::google::protobuf::int32 Distribution_ExponentialBuckets::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.num_finite_buckets)
  return num_finite_buckets_;
}
void Distribution_ExponentialBuckets::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.num_finite_buckets)
}

// double growth_factor = 2;
void Distribution_ExponentialBuckets::clear_growth_factor() {
  growth_factor_ = 0;
}
double Distribution_ExponentialBuckets::growth_factor() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.growth_factor)
  return growth_factor_;
}
void Distribution_ExponentialBuckets::set_growth_factor(double value) {
  
  growth_factor_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.growth_factor)
}

// double scale = 3;
void Distribution_ExponentialBuckets::clear_scale() {
  scale_ = 0;
}
double Distribution_ExponentialBuckets::scale() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.scale)
  return scale_;
}
void Distribution_ExponentialBuckets::set_scale(double value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.scale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_ExplicitBuckets::kBoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_ExplicitBuckets::Distribution_ExplicitBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}
Distribution_ExplicitBuckets::Distribution_ExplicitBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bounds_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}
Distribution_ExplicitBuckets::Distribution_ExplicitBuckets(const Distribution_ExplicitBuckets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bounds_(from.bounds_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}

void Distribution_ExplicitBuckets::SharedCtor() {
  _cached_size_ = 0;
}

Distribution_ExplicitBuckets::~Distribution_ExplicitBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  SharedDtor();
}

void Distribution_ExplicitBuckets::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Distribution_ExplicitBuckets::ArenaDtor(void* object) {
  Distribution_ExplicitBuckets* _this = reinterpret_cast< Distribution_ExplicitBuckets* >(object);
  (void)_this;
}
void Distribution_ExplicitBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_ExplicitBuckets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution_ExplicitBuckets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2].descriptor;
}

const Distribution_ExplicitBuckets& Distribution_ExplicitBuckets::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

Distribution_ExplicitBuckets* Distribution_ExplicitBuckets::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution_ExplicitBuckets>(arena);
}

void Distribution_ExplicitBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  bounds_.Clear();
}

bool Distribution_ExplicitBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double bounds = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bounds())));
        } else if (tag == 9u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_bounds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return false;
#undef DO_
}

void Distribution_ExplicitBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bounds_cached_byte_size_);
  }
  for (int i = 0; i < this->bounds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->bounds(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}

::google::protobuf::uint8* Distribution_ExplicitBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bounds_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bounds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->bounds(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return target;
}

size_t Distribution_ExplicitBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  size_t total_size = 0;

  // repeated double bounds = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->bounds_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bounds_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution_ExplicitBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_ExplicitBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_ExplicitBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    MergeFrom(*source);
  }
}

void Distribution_ExplicitBuckets::MergeFrom(const Distribution_ExplicitBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bounds_.MergeFrom(from.bounds_);
}

void Distribution_ExplicitBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_ExplicitBuckets::CopyFrom(const Distribution_ExplicitBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_ExplicitBuckets::IsInitialized() const {
  return true;
}

void Distribution_ExplicitBuckets::Swap(Distribution_ExplicitBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_ExplicitBuckets* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution_ExplicitBuckets::UnsafeArenaSwap(Distribution_ExplicitBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_ExplicitBuckets::InternalSwap(Distribution_ExplicitBuckets* other) {
  bounds_.UnsafeArenaSwap(&other->bounds_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution_ExplicitBuckets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Distribution_ExplicitBuckets

// repeated double bounds = 1;
int Distribution_ExplicitBuckets::bounds_size() const {
  return bounds_.size();
}
void Distribution_ExplicitBuckets::clear_bounds() {
  bounds_.Clear();
}
double Distribution_ExplicitBuckets::bounds(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return bounds_.Get(index);
}
void Distribution_ExplicitBuckets::set_bounds(int index, double value) {
  bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
}
void Distribution_ExplicitBuckets::add_bounds(double value) {
  bounds_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
}
const ::google::protobuf::RepeatedField< double >&
Distribution_ExplicitBuckets::bounds() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return bounds_;
}
::google::protobuf::RepeatedField< double >*
Distribution_ExplicitBuckets::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return &bounds_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution::kCountFieldNumber;
const int Distribution::kMeanFieldNumber;
const int Distribution::kMinimumFieldNumber;
const int Distribution::kMaximumFieldNumber;
const int Distribution::kSumOfSquaredDeviationFieldNumber;
const int Distribution::kBucketCountsFieldNumber;
const int Distribution::kLinearBucketsFieldNumber;
const int Distribution::kExponentialBucketsFieldNumber;
const int Distribution::kExplicitBucketsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution::Distribution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution)
}
Distribution::Distribution(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bucket_counts_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution)
}
Distribution::Distribution(const Distribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bucket_counts_(from.bucket_counts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&sum_of_squared_deviation_) -
    reinterpret_cast<char*>(&count_) + sizeof(sum_of_squared_deviation_));
  clear_has_bucket_option();
  switch (from.bucket_option_case()) {
    case kLinearBuckets: {
      mutable_linear_buckets()->::google::api::servicecontrol::v1::Distribution_LinearBuckets::MergeFrom(from.linear_buckets());
      break;
    }
    case kExponentialBuckets: {
      mutable_exponential_buckets()->::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::MergeFrom(from.exponential_buckets());
      break;
    }
    case kExplicitBuckets: {
      mutable_explicit_buckets()->::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::MergeFrom(from.explicit_buckets());
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution)
}

void Distribution::SharedCtor() {
  ::memset(&count_, 0, reinterpret_cast<char*>(&sum_of_squared_deviation_) -
    reinterpret_cast<char*>(&count_) + sizeof(sum_of_squared_deviation_));
  clear_has_bucket_option();
  _cached_size_ = 0;
}

Distribution::~Distribution() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution)
  SharedDtor();
}

void Distribution::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (has_bucket_option()) {
    clear_bucket_option();
  }
}

void Distribution::ArenaDtor(void* object) {
  Distribution* _this = reinterpret_cast< Distribution* >(object);
  (void)_this;
}
void Distribution::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3].descriptor;
}

const Distribution& Distribution::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

Distribution* Distribution::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution>(arena);
}

void Distribution::clear_bucket_option() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicecontrol.v1.Distribution)
  switch (bucket_option_case()) {
    case kLinearBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.linear_buckets_;
      }
      break;
    }
    case kExponentialBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.exponential_buckets_;
      }
      break;
    }
    case kExplicitBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.explicit_buckets_;
      }
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BUCKET_OPTION_NOT_SET;
}


void Distribution::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution)
  bucket_counts_.Clear();
  ::memset(&count_, 0, reinterpret_cast<char*>(&sum_of_squared_deviation_) -
    reinterpret_cast<char*>(&count_) + sizeof(sum_of_squared_deviation_));
  clear_bucket_option();
}

bool Distribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 count = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double mean = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double minimum = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double maximum = 4;
      case 4: {
        if (tag == 33u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sum_of_squared_deviation = 5;
      case 5: {
        if (tag == 41u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sum_of_squared_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 bucket_counts = 6;
      case 6: {
        if (tag == 50u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bucket_counts())));
        } else if (tag == 48u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 50u, input, this->mutable_bucket_counts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linear_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exponential_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_explicit_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution)
  return false;
#undef DO_
}

void Distribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution)
  // int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // double mean = 2;
  if (this->mean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->mean(), output);
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->minimum(), output);
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->maximum(), output);
  }

  // double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->sum_of_squared_deviation(), output);
  }

  // repeated int64 bucket_counts = 6;
  if (this->bucket_counts_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bucket_counts_cached_byte_size_);
  }
  for (int i = 0; i < this->bucket_counts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bucket_counts(i), output);
  }

  // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
  if (has_linear_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *bucket_option_.linear_buckets_, output);
  }

  // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
  if (has_exponential_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *bucket_option_.exponential_buckets_, output);
  }

  // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
  if (has_explicit_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *bucket_option_.explicit_buckets_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution)
}

::google::protobuf::uint8* Distribution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution)
  // int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // double mean = 2;
  if (this->mean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->mean(), target);
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->minimum(), target);
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->maximum(), target);
  }

  // double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->sum_of_squared_deviation(), target);
  }

  // repeated int64 bucket_counts = 6;
  if (this->bucket_counts_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bucket_counts_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bucket_counts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bucket_counts(i), target);
  }

  // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
  if (has_linear_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *bucket_option_.linear_buckets_, false, target);
  }

  // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
  if (has_exponential_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *bucket_option_.exponential_buckets_, false, target);
  }

  // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
  if (has_explicit_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *bucket_option_.explicit_buckets_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution)
  return target;
}

size_t Distribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution)
  size_t total_size = 0;

  // repeated int64 bucket_counts = 6;
  {
    size_t data_size = 0;
    unsigned int count = this->bucket_counts_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->bucket_counts(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bucket_counts_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // double mean = 2;
  if (this->mean() != 0) {
    total_size += 1 + 8;
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    total_size += 1 + 8;
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    total_size += 1 + 8;
  }

  // double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    total_size += 1 + 8;
  }

  switch (bucket_option_case()) {
    // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
    case kLinearBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *bucket_option_.linear_buckets_);
      break;
    }
    // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
    case kExponentialBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *bucket_option_.exponential_buckets_);
      break;
    }
    // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
    case kExplicitBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *bucket_option_.explicit_buckets_);
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution)
    MergeFrom(*source);
  }
}

void Distribution::MergeFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bucket_counts_.MergeFrom(from.bucket_counts_);
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.mean() != 0) {
    set_mean(from.mean());
  }
  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
  if (from.sum_of_squared_deviation() != 0) {
    set_sum_of_squared_deviation(from.sum_of_squared_deviation());
  }
  switch (from.bucket_option_case()) {
    case kLinearBuckets: {
      mutable_linear_buckets()->::google::api::servicecontrol::v1::Distribution_LinearBuckets::MergeFrom(from.linear_buckets());
      break;
    }
    case kExponentialBuckets: {
      mutable_exponential_buckets()->::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::MergeFrom(from.exponential_buckets());
      break;
    }
    case kExplicitBuckets: {
      mutable_explicit_buckets()->::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::MergeFrom(from.explicit_buckets());
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
}

void Distribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution::CopyFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution::IsInitialized() const {
  return true;
}

void Distribution::Swap(Distribution* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution::UnsafeArenaSwap(Distribution* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution::InternalSwap(Distribution* other) {
  bucket_counts_.UnsafeArenaSwap(&other->bucket_counts_);
  std::swap(count_, other->count_);
  std::swap(mean_, other->mean_);
  std::swap(minimum_, other->minimum_);
  std::swap(maximum_, other->maximum_);
  std::swap(sum_of_squared_deviation_, other->sum_of_squared_deviation_);
  std::swap(bucket_option_, other->bucket_option_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Distribution

// int64 count = 1;
void Distribution::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Distribution::count() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.count)
  return count_;
}
void Distribution::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.count)
}

// double mean = 2;
void Distribution::clear_mean() {
  mean_ = 0;
}
double Distribution::mean() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.mean)
  return mean_;
}
void Distribution::set_mean(double value) {
  
  mean_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.mean)
}

// double minimum = 3;
void Distribution::clear_minimum() {
  minimum_ = 0;
}
double Distribution::minimum() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.minimum)
  return minimum_;
}
void Distribution::set_minimum(double value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.minimum)
}

// double maximum = 4;
void Distribution::clear_maximum() {
  maximum_ = 0;
}
double Distribution::maximum() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.maximum)
  return maximum_;
}
void Distribution::set_maximum(double value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.maximum)
}

// double sum_of_squared_deviation = 5;
void Distribution::clear_sum_of_squared_deviation() {
  sum_of_squared_deviation_ = 0;
}
double Distribution::sum_of_squared_deviation() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.sum_of_squared_deviation)
  return sum_of_squared_deviation_;
}
void Distribution::set_sum_of_squared_deviation(double value) {
  
  sum_of_squared_deviation_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.sum_of_squared_deviation)
}

// repeated int64 bucket_counts = 6;
int Distribution::bucket_counts_size() const {
  return bucket_counts_.size();
}
void Distribution::clear_bucket_counts() {
  bucket_counts_.Clear();
}
::google::protobuf::int64 Distribution::bucket_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return bucket_counts_.Get(index);
}
void Distribution::set_bucket_counts(int index, ::google::protobuf::int64 value) {
  bucket_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.bucket_counts)
}
void Distribution::add_bucket_counts(::google::protobuf::int64 value) {
  bucket_counts_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.Distribution.bucket_counts)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Distribution::bucket_counts() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return bucket_counts_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Distribution::mutable_bucket_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return &bucket_counts_;
}

// .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
bool Distribution::has_linear_buckets() const {
  return bucket_option_case() == kLinearBuckets;
}
void Distribution::set_has_linear_buckets() {
  _oneof_case_[0] = kLinearBuckets;
}
void Distribution::clear_linear_buckets() {
  if (has_linear_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.linear_buckets_;
    }
    clear_has_bucket_option();
  }
}
 const ::google::api::servicecontrol::v1::Distribution_LinearBuckets& Distribution::linear_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.linear_buckets)
  return has_linear_buckets()
      ? *bucket_option_.linear_buckets_
      : ::google::api::servicecontrol::v1::Distribution_LinearBuckets::default_instance();
}
::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::mutable_linear_buckets() {
  if (!has_linear_buckets()) {
    clear_bucket_option();
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_LinearBuckets >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.linear_buckets)
  return bucket_option_.linear_buckets_;
}
::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::release_linear_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.linear_buckets)
  if (has_linear_buckets()) {
    clear_has_bucket_option();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = new ::google::api::servicecontrol::v1::Distribution_LinearBuckets(*bucket_option_.linear_buckets_);
      bucket_option_.linear_buckets_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = bucket_option_.linear_buckets_;
      bucket_option_.linear_buckets_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void Distribution::set_allocated_linear_buckets(::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets) {
  clear_bucket_option();
  if (linear_buckets) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(linear_buckets) == NULL) {
      GetArenaNoVirtual()->Own(linear_buckets);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(linear_buckets)) {
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* new_linear_buckets = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_LinearBuckets >(
          GetArenaNoVirtual());
      new_linear_buckets->CopyFrom(*linear_buckets);
      linear_buckets = new_linear_buckets;
    }
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.linear_buckets)
}
 ::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::unsafe_arena_release_linear_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.linear_buckets)
  if (has_linear_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = bucket_option_.linear_buckets_;
    bucket_option_.linear_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void Distribution::unsafe_arena_set_allocated_linear_buckets(::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets) {
  clear_bucket_option();
  if (linear_buckets) {
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.linear_buckets)
}

// .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
bool Distribution::has_exponential_buckets() const {
  return bucket_option_case() == kExponentialBuckets;
}
void Distribution::set_has_exponential_buckets() {
  _oneof_case_[0] = kExponentialBuckets;
}
void Distribution::clear_exponential_buckets() {
  if (has_exponential_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.exponential_buckets_;
    }
    clear_has_bucket_option();
  }
}
 const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets& Distribution::exponential_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  return has_exponential_buckets()
      ? *bucket_option_.exponential_buckets_
      : ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::default_instance();
}
::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::mutable_exponential_buckets() {
  if (!has_exponential_buckets()) {
    clear_bucket_option();
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  return bucket_option_.exponential_buckets_;
}
::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::release_exponential_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  if (has_exponential_buckets()) {
    clear_has_bucket_option();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = new ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets(*bucket_option_.exponential_buckets_);
      bucket_option_.exponential_buckets_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = bucket_option_.exponential_buckets_;
      bucket_option_.exponential_buckets_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void Distribution::set_allocated_exponential_buckets(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets) {
  clear_bucket_option();
  if (exponential_buckets) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(exponential_buckets) == NULL) {
      GetArenaNoVirtual()->Own(exponential_buckets);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(exponential_buckets)) {
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* new_exponential_buckets = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets >(
          GetArenaNoVirtual());
      new_exponential_buckets->CopyFrom(*exponential_buckets);
      exponential_buckets = new_exponential_buckets;
    }
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.exponential_buckets)
}
 ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::unsafe_arena_release_exponential_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  if (has_exponential_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = bucket_option_.exponential_buckets_;
    bucket_option_.exponential_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void Distribution::unsafe_arena_set_allocated_exponential_buckets(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets) {
  clear_bucket_option();
  if (exponential_buckets) {
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.exponential_buckets)
}

// .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
bool Distribution::has_explicit_buckets() const {
  return bucket_option_case() == kExplicitBuckets;
}
void Distribution::set_has_explicit_buckets() {
  _oneof_case_[0] = kExplicitBuckets;
}
void Distribution::clear_explicit_buckets() {
  if (has_explicit_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.explicit_buckets_;
    }
    clear_has_bucket_option();
  }
}
 const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets& Distribution::explicit_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  return has_explicit_buckets()
      ? *bucket_option_.explicit_buckets_
      : ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::default_instance();
}
::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::mutable_explicit_buckets() {
  if (!has_explicit_buckets()) {
    clear_bucket_option();
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  return bucket_option_.explicit_buckets_;
}
::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::release_explicit_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  if (has_explicit_buckets()) {
    clear_has_bucket_option();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = new ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets(*bucket_option_.explicit_buckets_);
      bucket_option_.explicit_buckets_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = bucket_option_.explicit_buckets_;
      bucket_option_.explicit_buckets_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void Distribution::set_allocated_explicit_buckets(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets) {
  clear_bucket_option();
  if (explicit_buckets) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(explicit_buckets) == NULL) {
      GetArenaNoVirtual()->Own(explicit_buckets);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(explicit_buckets)) {
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* new_explicit_buckets = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets >(
          GetArenaNoVirtual());
      new_explicit_buckets->CopyFrom(*explicit_buckets);
      explicit_buckets = new_explicit_buckets;
    }
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.explicit_buckets)
}
 ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::unsafe_arena_release_explicit_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  if (has_explicit_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = bucket_option_.explicit_buckets_;
    bucket_option_.explicit_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void Distribution::unsafe_arena_set_allocated_explicit_buckets(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets) {
  clear_bucket_option();
  if (explicit_buckets) {
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.explicit_buckets)
}

bool Distribution::has_bucket_option() const {
  return bucket_option_case() != BUCKET_OPTION_NOT_SET;
}
void Distribution::clear_has_bucket_option() {
  _oneof_case_[0] = BUCKET_OPTION_NOT_SET;
}
Distribution::BucketOptionCase Distribution::bucket_option_case() const {
  return Distribution::BucketOptionCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
