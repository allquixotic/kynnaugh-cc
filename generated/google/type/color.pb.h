// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/color.proto

#ifndef PROTOBUF_google_2ftype_2fcolor_2eproto__INCLUDED
#define PROTOBUF_google_2ftype_2fcolor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class BoolValue;
class BoolValueDefaultTypeInternal;
extern BoolValueDefaultTypeInternal _BoolValue_default_instance_;
class BytesValue;
class BytesValueDefaultTypeInternal;
extern BytesValueDefaultTypeInternal _BytesValue_default_instance_;
class DoubleValue;
class DoubleValueDefaultTypeInternal;
extern DoubleValueDefaultTypeInternal _DoubleValue_default_instance_;
class FloatValue;
class FloatValueDefaultTypeInternal;
extern FloatValueDefaultTypeInternal _FloatValue_default_instance_;
class Int32Value;
class Int32ValueDefaultTypeInternal;
extern Int32ValueDefaultTypeInternal _Int32Value_default_instance_;
class Int64Value;
class Int64ValueDefaultTypeInternal;
extern Int64ValueDefaultTypeInternal _Int64Value_default_instance_;
class StringValue;
class StringValueDefaultTypeInternal;
extern StringValueDefaultTypeInternal _StringValue_default_instance_;
class UInt32Value;
class UInt32ValueDefaultTypeInternal;
extern UInt32ValueDefaultTypeInternal _UInt32Value_default_instance_;
class UInt64Value;
class UInt64ValueDefaultTypeInternal;
extern UInt64ValueDefaultTypeInternal _UInt64Value_default_instance_;
}  // namespace protobuf
namespace type {
class Color;
class ColorDefaultTypeInternal;
extern ColorDefaultTypeInternal _Color_default_instance_;
}  // namespace type
}  // namespace google

namespace google {
namespace type {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2ftype_2fcolor_2eproto();
void protobuf_InitDefaults_google_2ftype_2fcolor_2eproto();

// ===================================================================

class Color : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.type.Color) */ {
 public:
  Color();
  virtual ~Color();

  Color(const Color& from);

  inline Color& operator=(const Color& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Color& default_instance();

  static inline const Color* internal_default_instance() {
    return reinterpret_cast<const Color*>(
               &_Color_default_instance_);
  }

  void Swap(Color* other);

  // implements Message ----------------------------------------------

  inline Color* New() const PROTOBUF_FINAL { return New(NULL); }

  Color* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Color& from);
  void MergeFrom(const Color& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Color* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float red = 1;
  void clear_red();
  static const int kRedFieldNumber = 1;
  float red() const;
  void set_red(float value);

  // float green = 2;
  void clear_green();
  static const int kGreenFieldNumber = 2;
  float green() const;
  void set_green(float value);

  // float blue = 3;
  void clear_blue();
  static const int kBlueFieldNumber = 3;
  float blue() const;
  void set_blue(float value);

  // .google.protobuf.FloatValue alpha = 4;
  bool has_alpha() const;
  void clear_alpha();
  static const int kAlphaFieldNumber = 4;
  const ::google::protobuf::FloatValue& alpha() const;
  ::google::protobuf::FloatValue* mutable_alpha();
  ::google::protobuf::FloatValue* release_alpha();
  void set_allocated_alpha(::google::protobuf::FloatValue* alpha);

  // @@protoc_insertion_point(class_scope:google.type.Color)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::FloatValue* alpha_;
  float red_;
  float green_;
  float blue_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2ftype_2fcolor_2eproto_impl();
  friend void  protobuf_AddDesc_google_2ftype_2fcolor_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2ftype_2fcolor_2eproto();
  friend void protobuf_ShutdownFile_google_2ftype_2fcolor_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Color

// float red = 1;
inline void Color::clear_red() {
  red_ = 0;
}
inline float Color::red() const {
  // @@protoc_insertion_point(field_get:google.type.Color.red)
  return red_;
}
inline void Color::set_red(float value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:google.type.Color.red)
}

// float green = 2;
inline void Color::clear_green() {
  green_ = 0;
}
inline float Color::green() const {
  // @@protoc_insertion_point(field_get:google.type.Color.green)
  return green_;
}
inline void Color::set_green(float value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:google.type.Color.green)
}

// float blue = 3;
inline void Color::clear_blue() {
  blue_ = 0;
}
inline float Color::blue() const {
  // @@protoc_insertion_point(field_get:google.type.Color.blue)
  return blue_;
}
inline void Color::set_blue(float value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:google.type.Color.blue)
}

// .google.protobuf.FloatValue alpha = 4;
inline bool Color::has_alpha() const {
  return this != internal_default_instance() && alpha_ != NULL;
}
inline void Color::clear_alpha() {
  if (GetArenaNoVirtual() == NULL && alpha_ != NULL) delete alpha_;
  alpha_ = NULL;
}
inline const ::google::protobuf::FloatValue& Color::alpha() const {
  // @@protoc_insertion_point(field_get:google.type.Color.alpha)
  return alpha_ != NULL ? *alpha_
                         : *::google::protobuf::FloatValue::internal_default_instance();
}
inline ::google::protobuf::FloatValue* Color::mutable_alpha() {
  
  if (alpha_ == NULL) {
    alpha_ = new ::google::protobuf::FloatValue;
  }
  // @@protoc_insertion_point(field_mutable:google.type.Color.alpha)
  return alpha_;
}
inline ::google::protobuf::FloatValue* Color::release_alpha() {
  // @@protoc_insertion_point(field_release:google.type.Color.alpha)
  
  ::google::protobuf::FloatValue* temp = alpha_;
  alpha_ = NULL;
  return temp;
}
inline void Color::set_allocated_alpha(::google::protobuf::FloatValue* alpha) {
  delete alpha_;
  if (alpha != NULL && alpha->GetArena() != NULL) {
    ::google::protobuf::FloatValue* new_alpha = new ::google::protobuf::FloatValue;
    new_alpha->CopyFrom(*alpha);
    alpha = new_alpha;
  }
  alpha_ = alpha;
  if (alpha) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.type.Color.alpha)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace type
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2ftype_2fcolor_2eproto__INCLUDED
