// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storagetransfer/v1/transfer_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/storagetransfer/v1/transfer_types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace storagetransfer {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* GoogleServiceAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GoogleServiceAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* AwsAccessKey_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AwsAccessKey_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectConditions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectConditions_reflection_ = NULL;
const ::google::protobuf::Descriptor* GcsData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GcsData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AwsS3Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AwsS3Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferSpec_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferSpec_reflection_ = NULL;
struct TransferSpecOneofInstance {
  const ::google::storagetransfer::v1::GcsData* gcs_data_source_;
  const ::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source_;
  const ::google::storagetransfer::v1::HttpData* http_data_source_;
  const ::google::storagetransfer::v1::GcsData* gcs_data_sink_;
}* TransferSpec_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Schedule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Schedule_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferJob_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferJob_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TransferJob_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ErrorLogEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorLogEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorSummary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorSummary_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferCounters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferCounters_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferOperation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferOperation_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TransferOperation_Status_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto() {
  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/storagetransfer/v1/transfer_types.proto");
  GOOGLE_CHECK(file != NULL);
  GoogleServiceAccount_descriptor_ = file->message_type(0);
  static const int GoogleServiceAccount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoogleServiceAccount, account_email_),
  };
  GoogleServiceAccount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GoogleServiceAccount_descriptor_,
      GoogleServiceAccount::internal_default_instance(),
      GoogleServiceAccount_offsets_,
      -1,
      -1,
      -1,
      sizeof(GoogleServiceAccount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoogleServiceAccount, _internal_metadata_));
  AwsAccessKey_descriptor_ = file->message_type(1);
  static const int AwsAccessKey_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwsAccessKey, access_key_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwsAccessKey, secret_access_key_),
  };
  AwsAccessKey_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AwsAccessKey_descriptor_,
      AwsAccessKey::internal_default_instance(),
      AwsAccessKey_offsets_,
      -1,
      -1,
      -1,
      sizeof(AwsAccessKey),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwsAccessKey, _internal_metadata_));
  ObjectConditions_descriptor_ = file->message_type(2);
  static const int ObjectConditions_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectConditions, min_time_elapsed_since_last_modification_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectConditions, max_time_elapsed_since_last_modification_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectConditions, include_prefixes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectConditions, exclude_prefixes_),
  };
  ObjectConditions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectConditions_descriptor_,
      ObjectConditions::internal_default_instance(),
      ObjectConditions_offsets_,
      -1,
      -1,
      -1,
      sizeof(ObjectConditions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectConditions, _internal_metadata_));
  GcsData_descriptor_ = file->message_type(3);
  static const int GcsData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GcsData, bucket_name_),
  };
  GcsData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GcsData_descriptor_,
      GcsData::internal_default_instance(),
      GcsData_offsets_,
      -1,
      -1,
      -1,
      sizeof(GcsData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GcsData, _internal_metadata_));
  AwsS3Data_descriptor_ = file->message_type(4);
  static const int AwsS3Data_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwsS3Data, bucket_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwsS3Data, aws_access_key_),
  };
  AwsS3Data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AwsS3Data_descriptor_,
      AwsS3Data::internal_default_instance(),
      AwsS3Data_offsets_,
      -1,
      -1,
      -1,
      sizeof(AwsS3Data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AwsS3Data, _internal_metadata_));
  HttpData_descriptor_ = file->message_type(5);
  static const int HttpData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpData, list_url_),
  };
  HttpData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpData_descriptor_,
      HttpData::internal_default_instance(),
      HttpData_offsets_,
      -1,
      -1,
      -1,
      sizeof(HttpData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpData, _internal_metadata_));
  TransferOptions_descriptor_ = file->message_type(6);
  static const int TransferOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOptions, overwrite_objects_already_existing_in_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOptions, delete_objects_unique_in_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOptions, delete_objects_from_source_after_transfer_),
  };
  TransferOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferOptions_descriptor_,
      TransferOptions::internal_default_instance(),
      TransferOptions_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOptions, _internal_metadata_));
  TransferSpec_descriptor_ = file->message_type(7);
  static const int TransferSpec_offsets_[8] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TransferSpec_default_oneof_instance_, gcs_data_source_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TransferSpec_default_oneof_instance_, aws_s3_data_source_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TransferSpec_default_oneof_instance_, http_data_source_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TransferSpec_default_oneof_instance_, gcs_data_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferSpec, object_conditions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferSpec, transfer_options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferSpec, data_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferSpec, data_sink_),
  };
  TransferSpec_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferSpec_descriptor_,
      TransferSpec::internal_default_instance(),
      TransferSpec_offsets_,
      -1,
      -1,
      -1,
      TransferSpec_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferSpec, _oneof_case_[0]),
      sizeof(TransferSpec),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferSpec, _internal_metadata_));
  Schedule_descriptor_ = file->message_type(8);
  static const int Schedule_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Schedule, schedule_start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Schedule, schedule_end_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Schedule, start_time_of_day_),
  };
  Schedule_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Schedule_descriptor_,
      Schedule::internal_default_instance(),
      Schedule_offsets_,
      -1,
      -1,
      -1,
      sizeof(Schedule),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Schedule, _internal_metadata_));
  TransferJob_descriptor_ = file->message_type(9);
  static const int TransferJob_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, transfer_spec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, schedule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, creation_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, last_modification_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, deletion_time_),
  };
  TransferJob_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferJob_descriptor_,
      TransferJob::internal_default_instance(),
      TransferJob_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferJob),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferJob, _internal_metadata_));
  TransferJob_Status_descriptor_ = TransferJob_descriptor_->enum_type(0);
  ErrorLogEntry_descriptor_ = file->message_type(10);
  static const int ErrorLogEntry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorLogEntry, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorLogEntry, error_details_),
  };
  ErrorLogEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorLogEntry_descriptor_,
      ErrorLogEntry::internal_default_instance(),
      ErrorLogEntry_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorLogEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorLogEntry, _internal_metadata_));
  ErrorSummary_descriptor_ = file->message_type(11);
  static const int ErrorSummary_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorSummary, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorSummary, error_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorSummary, error_log_entries_),
  };
  ErrorSummary_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorSummary_descriptor_,
      ErrorSummary::internal_default_instance(),
      ErrorSummary_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorSummary),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorSummary, _internal_metadata_));
  TransferCounters_descriptor_ = file->message_type(12);
  static const int TransferCounters_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_found_from_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_found_from_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_found_only_from_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_found_only_from_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_from_source_skipped_by_sync_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_from_source_skipped_by_sync_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_copied_to_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_copied_to_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_deleted_from_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_deleted_from_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_deleted_from_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_deleted_from_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_from_source_failed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_from_source_failed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, objects_failed_to_delete_from_sink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, bytes_failed_to_delete_from_sink_),
  };
  TransferCounters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferCounters_descriptor_,
      TransferCounters::internal_default_instance(),
      TransferCounters_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferCounters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferCounters, _internal_metadata_));
  TransferOperation_descriptor_ = file->message_type(13);
  static const int TransferOperation_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, transfer_spec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, counters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, error_breakdowns_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, transfer_job_name_),
  };
  TransferOperation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferOperation_descriptor_,
      TransferOperation::internal_default_instance(),
      TransferOperation_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferOperation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferOperation, _internal_metadata_));
  TransferOperation_Status_descriptor_ = TransferOperation_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GoogleServiceAccount_descriptor_, GoogleServiceAccount::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AwsAccessKey_descriptor_, AwsAccessKey::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectConditions_descriptor_, ObjectConditions::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GcsData_descriptor_, GcsData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AwsS3Data_descriptor_, AwsS3Data::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpData_descriptor_, HttpData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferOptions_descriptor_, TransferOptions::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferSpec_descriptor_, TransferSpec::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Schedule_descriptor_, Schedule::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferJob_descriptor_, TransferJob::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorLogEntry_descriptor_, ErrorLogEntry::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorSummary_descriptor_, ErrorSummary::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferCounters_descriptor_, TransferCounters::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferOperation_descriptor_, TransferOperation::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto() {
  GoogleServiceAccount_default_instance_.Shutdown();
  delete GoogleServiceAccount_reflection_;
  AwsAccessKey_default_instance_.Shutdown();
  delete AwsAccessKey_reflection_;
  ObjectConditions_default_instance_.Shutdown();
  delete ObjectConditions_reflection_;
  GcsData_default_instance_.Shutdown();
  delete GcsData_reflection_;
  AwsS3Data_default_instance_.Shutdown();
  delete AwsS3Data_reflection_;
  HttpData_default_instance_.Shutdown();
  delete HttpData_reflection_;
  TransferOptions_default_instance_.Shutdown();
  delete TransferOptions_reflection_;
  TransferSpec_default_instance_.Shutdown();
  delete TransferSpec_default_oneof_instance_;
  delete TransferSpec_reflection_;
  Schedule_default_instance_.Shutdown();
  delete Schedule_reflection_;
  TransferJob_default_instance_.Shutdown();
  delete TransferJob_reflection_;
  ErrorLogEntry_default_instance_.Shutdown();
  delete ErrorLogEntry_reflection_;
  ErrorSummary_default_instance_.Shutdown();
  delete ErrorSummary_reflection_;
  TransferCounters_default_instance_.Shutdown();
  delete TransferCounters_reflection_;
  TransferOperation_default_instance_.Shutdown();
  delete TransferOperation_reflection_;
}

void protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::rpc::protobuf_InitDefaults_google_2frpc_2fcode_2eproto();
  ::google::type::protobuf_InitDefaults_google_2ftype_2fdate_2eproto();
  ::google::type::protobuf_InitDefaults_google_2ftype_2ftimeofday_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  GoogleServiceAccount_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AwsAccessKey_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ObjectConditions_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GcsData_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AwsS3Data_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HttpData_default_instance_.DefaultConstruct();
  TransferOptions_default_instance_.DefaultConstruct();
  TransferSpec_default_instance_.DefaultConstruct();
  TransferSpec_default_oneof_instance_ = new TransferSpecOneofInstance();
  Schedule_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TransferJob_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ErrorLogEntry_default_instance_.DefaultConstruct();
  ErrorSummary_default_instance_.DefaultConstruct();
  TransferCounters_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TransferOperation_default_instance_.DefaultConstruct();
  GoogleServiceAccount_default_instance_.get_mutable()->InitAsDefaultInstance();
  AwsAccessKey_default_instance_.get_mutable()->InitAsDefaultInstance();
  ObjectConditions_default_instance_.get_mutable()->InitAsDefaultInstance();
  GcsData_default_instance_.get_mutable()->InitAsDefaultInstance();
  AwsS3Data_default_instance_.get_mutable()->InitAsDefaultInstance();
  HttpData_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransferOptions_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransferSpec_default_instance_.get_mutable()->InitAsDefaultInstance();
  Schedule_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransferJob_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorLogEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorSummary_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransferCounters_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransferOperation_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_once_);
void protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_once_,
                 &protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_impl);
}
void protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.google/storagetransfer/v1/transfer_typ"
    "es.proto\022\031google.storagetransfer.v1\032\034goo"
    "gle/api/annotations.proto\032\036google/protob"
    "uf/duration.proto\032\037google/protobuf/times"
    "tamp.proto\032\025google/rpc/code.proto\032\026googl"
    "e/type/date.proto\032\033google/type/timeofday"
    ".proto\"-\n\024GoogleServiceAccount\022\025\n\raccoun"
    "t_email\030\001 \001(\t\"@\n\014AwsAccessKey\022\025\n\raccess_"
    "key_id\030\001 \001(\t\022\031\n\021secret_access_key\030\002 \001(\t\""
    "\340\001\n\020ObjectConditions\022K\n(min_time_elapsed"
    "_since_last_modification\030\001 \001(\0132\031.google."
    "protobuf.Duration\022K\n(max_time_elapsed_si"
    "nce_last_modification\030\002 \001(\0132\031.google.pro"
    "tobuf.Duration\022\030\n\020include_prefixes\030\003 \003(\t"
    "\022\030\n\020exclude_prefixes\030\004 \003(\t\"\036\n\007GcsData\022\023\n"
    "\013bucket_name\030\001 \001(\t\"a\n\tAwsS3Data\022\023\n\013bucke"
    "t_name\030\001 \001(\t\022\?\n\016aws_access_key\030\002 \001(\0132\'.g"
    "oogle.storagetransfer.v1.AwsAccessKey\"\034\n"
    "\010HttpData\022\020\n\010list_url\030\001 \001(\t\"\237\001\n\017Transfer"
    "Options\0222\n*overwrite_objects_already_exi"
    "sting_in_sink\030\001 \001(\010\022%\n\035delete_objects_un"
    "ique_in_sink\030\002 \001(\010\0221\n)delete_objects_fro"
    "m_source_after_transfer\030\003 \001(\010\"\271\003\n\014Transf"
    "erSpec\022=\n\017gcs_data_source\030\001 \001(\0132\".google"
    ".storagetransfer.v1.GcsDataH\000\022B\n\022aws_s3_"
    "data_source\030\002 \001(\0132$.google.storagetransf"
    "er.v1.AwsS3DataH\000\022\?\n\020http_data_source\030\003 "
    "\001(\0132#.google.storagetransfer.v1.HttpData"
    "H\000\022;\n\rgcs_data_sink\030\004 \001(\0132\".google.stora"
    "getransfer.v1.GcsDataH\001\022F\n\021object_condit"
    "ions\030\005 \001(\0132+.google.storagetransfer.v1.O"
    "bjectConditions\022D\n\020transfer_options\030\006 \001("
    "\0132*.google.storagetransfer.v1.TransferOp"
    "tionsB\r\n\013data_sourceB\013\n\tdata_sink\"\233\001\n\010Sc"
    "hedule\022.\n\023schedule_start_date\030\001 \001(\0132\021.go"
    "ogle.type.Date\022,\n\021schedule_end_date\030\002 \001("
    "\0132\021.google.type.Date\0221\n\021start_time_of_da"
    "y\030\003 \001(\0132\026.google.type.TimeOfDay\"\346\003\n\013Tran"
    "sferJob\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001"
    "(\t\022\022\n\nproject_id\030\003 \001(\t\022>\n\rtransfer_spec\030"
    "\004 \001(\0132\'.google.storagetransfer.v1.Transf"
    "erSpec\0225\n\010schedule\030\005 \001(\0132#.google.storag"
    "etransfer.v1.Schedule\022=\n\006status\030\006 \001(\0162-."
    "google.storagetransfer.v1.TransferJob.St"
    "atus\0221\n\rcreation_time\030\007 \001(\0132\032.google.pro"
    "tobuf.Timestamp\022:\n\026last_modification_tim"
    "e\030\010 \001(\0132\032.google.protobuf.Timestamp\0221\n\rd"
    "eletion_time\030\t \001(\0132\032.google.protobuf.Tim"
    "estamp\"H\n\006Status\022\026\n\022STATUS_UNSPECIFIED\020\000"
    "\022\013\n\007ENABLED\020\001\022\014\n\010DISABLED\020\002\022\013\n\007DELETED\020\003"
    "\"3\n\rErrorLogEntry\022\013\n\003url\030\001 \001(\t\022\025\n\rerror_"
    "details\030\003 \003(\t\"\216\001\n\014ErrorSummary\022$\n\nerror_"
    "code\030\001 \001(\0162\020.google.rpc.Code\022\023\n\013error_co"
    "unt\030\002 \001(\003\022C\n\021error_log_entries\030\003 \003(\0132(.g"
    "oogle.storagetransfer.v1.ErrorLogEntry\"\336"
    "\004\n\020TransferCounters\022!\n\031objects_found_fro"
    "m_source\030\001 \001(\003\022\037\n\027bytes_found_from_sourc"
    "e\030\002 \001(\003\022$\n\034objects_found_only_from_sink\030"
    "\003 \001(\003\022\"\n\032bytes_found_only_from_sink\030\004 \001("
    "\003\022+\n#objects_from_source_skipped_by_sync"
    "\030\005 \001(\003\022)\n!bytes_from_source_skipped_by_s"
    "ync\030\006 \001(\003\022\036\n\026objects_copied_to_sink\030\007 \001("
    "\003\022\034\n\024bytes_copied_to_sink\030\010 \001(\003\022#\n\033objec"
    "ts_deleted_from_source\030\t \001(\003\022!\n\031bytes_de"
    "leted_from_source\030\n \001(\003\022!\n\031objects_delet"
    "ed_from_sink\030\013 \001(\003\022\037\n\027bytes_deleted_from"
    "_sink\030\014 \001(\003\022\"\n\032objects_from_source_faile"
    "d\030\r \001(\003\022 \n\030bytes_from_source_failed\030\016 \001("
    "\003\022*\n\"objects_failed_to_delete_from_sink\030"
    "\017 \001(\003\022(\n bytes_failed_to_delete_from_sin"
    "k\030\020 \001(\003\"\232\004\n\021TransferOperation\022\014\n\004name\030\001 "
    "\001(\t\022\022\n\nproject_id\030\002 \001(\t\022>\n\rtransfer_spec"
    "\030\003 \001(\0132\'.google.storagetransfer.v1.Trans"
    "ferSpec\022.\n\nstart_time\030\004 \001(\0132\032.google.pro"
    "tobuf.Timestamp\022,\n\010end_time\030\005 \001(\0132\032.goog"
    "le.protobuf.Timestamp\022C\n\006status\030\006 \001(\01623."
    "google.storagetransfer.v1.TransferOperat"
    "ion.Status\022=\n\010counters\030\007 \001(\0132+.google.st"
    "oragetransfer.v1.TransferCounters\022A\n\020err"
    "or_breakdowns\030\010 \003(\0132\'.google.storagetran"
    "sfer.v1.ErrorSummary\022\031\n\021transfer_job_nam"
    "e\030\t \001(\t\"c\n\006Status\022\026\n\022STATUS_UNSPECIFIED\020"
    "\000\022\017\n\013IN_PROGRESS\020\001\022\n\n\006PAUSED\020\002\022\013\n\007SUCCES"
    "S\020\003\022\n\n\006FAILED\020\004\022\013\n\007ABORTED\020\005B\201\001\n#com.goo"
    "gle.storagetransfer.v1.protoB\rTransferTy"
    "pesZHgoogle.golang.org/genproto/googleap"
    "is/storagetransfer/v1;storagetransfer\370\001\001"
    "b\006proto3", 3488);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/storagetransfer/v1/transfer_types.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::rpc::protobuf_AddDesc_google_2frpc_2fcode_2eproto();
  ::google::type::protobuf_AddDesc_google_2ftype_2fdate_2eproto();
  ::google::type::protobuf_AddDesc_google_2ftype_2ftimeofday_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_once_);
void protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_once_,
                 &protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto {
  StaticDescriptorInitializer_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto() {
    protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  }
} static_descriptor_initializer_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoogleServiceAccount::kAccountEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoogleServiceAccount::GoogleServiceAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.GoogleServiceAccount)
}
GoogleServiceAccount::GoogleServiceAccount(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.GoogleServiceAccount)
}

void GoogleServiceAccount::InitAsDefaultInstance() {
}

GoogleServiceAccount::GoogleServiceAccount(const GoogleServiceAccount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.GoogleServiceAccount)
}

void GoogleServiceAccount::SharedCtor() {
  account_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GoogleServiceAccount::~GoogleServiceAccount() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.GoogleServiceAccount)
  SharedDtor();
}

void GoogleServiceAccount::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  account_email_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void GoogleServiceAccount::ArenaDtor(void* object) {
  GoogleServiceAccount* _this = reinterpret_cast< GoogleServiceAccount* >(object);
  (void)_this;
}
void GoogleServiceAccount::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GoogleServiceAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoogleServiceAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GoogleServiceAccount_descriptor_;
}

const GoogleServiceAccount& GoogleServiceAccount::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GoogleServiceAccount> GoogleServiceAccount_default_instance_;

GoogleServiceAccount* GoogleServiceAccount::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GoogleServiceAccount>(arena);
}

void GoogleServiceAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.GoogleServiceAccount)
  account_email_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool GoogleServiceAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.GoogleServiceAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_email = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_email().data(), this->account_email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.GoogleServiceAccount.account_email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.GoogleServiceAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.GoogleServiceAccount)
  return false;
#undef DO_
}

void GoogleServiceAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.GoogleServiceAccount)
  // optional string account_email = 1;
  if (this->account_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_email().data(), this->account_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GoogleServiceAccount.account_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_email(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.GoogleServiceAccount)
}

::google::protobuf::uint8* GoogleServiceAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.GoogleServiceAccount)
  // optional string account_email = 1;
  if (this->account_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_email().data(), this->account_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GoogleServiceAccount.account_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_email(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.GoogleServiceAccount)
  return target;
}

size_t GoogleServiceAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.GoogleServiceAccount)
  size_t total_size = 0;

  // optional string account_email = 1;
  if (this->account_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoogleServiceAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GoogleServiceAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoogleServiceAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.GoogleServiceAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.GoogleServiceAccount)
    UnsafeMergeFrom(*source);
  }
}

void GoogleServiceAccount::MergeFrom(const GoogleServiceAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GoogleServiceAccount::UnsafeMergeFrom(const GoogleServiceAccount& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.account_email().size() > 0) {
    set_account_email(from.account_email());
  }
}

void GoogleServiceAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoogleServiceAccount::CopyFrom(const GoogleServiceAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GoogleServiceAccount::IsInitialized() const {

  return true;
}

void GoogleServiceAccount::Swap(GoogleServiceAccount* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GoogleServiceAccount temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void GoogleServiceAccount::UnsafeArenaSwap(GoogleServiceAccount* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GoogleServiceAccount::InternalSwap(GoogleServiceAccount* other) {
  account_email_.Swap(&other->account_email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoogleServiceAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GoogleServiceAccount_descriptor_;
  metadata.reflection = GoogleServiceAccount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoogleServiceAccount

// optional string account_email = 1;
void GoogleServiceAccount::clear_account_email() {
  account_email_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& GoogleServiceAccount::account_email() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  return account_email_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoogleServiceAccount::set_account_email(const ::std::string& value) {
  
  account_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
void GoogleServiceAccount::set_account_email(const char* value) {
  
  account_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
void GoogleServiceAccount::set_account_email(const char* value,
    size_t size) {
  
  account_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
::std::string* GoogleServiceAccount::mutable_account_email() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  return account_email_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GoogleServiceAccount::release_account_email() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  
  return account_email_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GoogleServiceAccount::unsafe_arena_release_account_email() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GoogleServiceAccount.account_email)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return account_email_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void GoogleServiceAccount::set_allocated_account_email(::std::string* account_email) {
  if (account_email != NULL) {
    
  } else {
    
  }
  account_email_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_email,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}
void GoogleServiceAccount::unsafe_arena_set_allocated_account_email(
    ::std::string* account_email) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (account_email != NULL) {
    
  } else {
    
  }
  account_email_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      account_email, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GoogleServiceAccount.account_email)
}

inline const GoogleServiceAccount* GoogleServiceAccount::internal_default_instance() {
  return &GoogleServiceAccount_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AwsAccessKey::kAccessKeyIdFieldNumber;
const int AwsAccessKey::kSecretAccessKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AwsAccessKey::AwsAccessKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.AwsAccessKey)
}
AwsAccessKey::AwsAccessKey(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.AwsAccessKey)
}

void AwsAccessKey::InitAsDefaultInstance() {
}

AwsAccessKey::AwsAccessKey(const AwsAccessKey& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.AwsAccessKey)
}

void AwsAccessKey::SharedCtor() {
  access_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_access_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AwsAccessKey::~AwsAccessKey() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.AwsAccessKey)
  SharedDtor();
}

void AwsAccessKey::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  access_key_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  secret_access_key_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void AwsAccessKey::ArenaDtor(void* object) {
  AwsAccessKey* _this = reinterpret_cast< AwsAccessKey* >(object);
  (void)_this;
}
void AwsAccessKey::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AwsAccessKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AwsAccessKey::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AwsAccessKey_descriptor_;
}

const AwsAccessKey& AwsAccessKey::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AwsAccessKey> AwsAccessKey_default_instance_;

AwsAccessKey* AwsAccessKey::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AwsAccessKey>(arena);
}

void AwsAccessKey::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.AwsAccessKey)
  access_key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  secret_access_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool AwsAccessKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.AwsAccessKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string access_key_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_key_id().data(), this->access_key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.AwsAccessKey.access_key_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_secret_access_key;
        break;
      }

      // optional string secret_access_key = 2;
      case 2: {
        if (tag == 18) {
         parse_secret_access_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret_access_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret_access_key().data(), this->secret_access_key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.AwsAccessKey.secret_access_key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.AwsAccessKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.AwsAccessKey)
  return false;
#undef DO_
}

void AwsAccessKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.AwsAccessKey)
  // optional string access_key_id = 1;
  if (this->access_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_key_id().data(), this->access_key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.access_key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_key_id(), output);
  }

  // optional string secret_access_key = 2;
  if (this->secret_access_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_access_key().data(), this->secret_access_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.secret_access_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret_access_key(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.AwsAccessKey)
}

::google::protobuf::uint8* AwsAccessKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.AwsAccessKey)
  // optional string access_key_id = 1;
  if (this->access_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_key_id().data(), this->access_key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.access_key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_key_id(), target);
  }

  // optional string secret_access_key = 2;
  if (this->secret_access_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_access_key().data(), this->secret_access_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.secret_access_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secret_access_key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.AwsAccessKey)
  return target;
}

size_t AwsAccessKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.AwsAccessKey)
  size_t total_size = 0;

  // optional string access_key_id = 1;
  if (this->access_key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_key_id());
  }

  // optional string secret_access_key = 2;
  if (this->secret_access_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret_access_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AwsAccessKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.AwsAccessKey)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AwsAccessKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AwsAccessKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.AwsAccessKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.AwsAccessKey)
    UnsafeMergeFrom(*source);
  }
}

void AwsAccessKey::MergeFrom(const AwsAccessKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.AwsAccessKey)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AwsAccessKey::UnsafeMergeFrom(const AwsAccessKey& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.access_key_id().size() > 0) {
    set_access_key_id(from.access_key_id());
  }
  if (from.secret_access_key().size() > 0) {
    set_secret_access_key(from.secret_access_key());
  }
}

void AwsAccessKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.AwsAccessKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwsAccessKey::CopyFrom(const AwsAccessKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.AwsAccessKey)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AwsAccessKey::IsInitialized() const {

  return true;
}

void AwsAccessKey::Swap(AwsAccessKey* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AwsAccessKey temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AwsAccessKey::UnsafeArenaSwap(AwsAccessKey* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AwsAccessKey::InternalSwap(AwsAccessKey* other) {
  access_key_id_.Swap(&other->access_key_id_);
  secret_access_key_.Swap(&other->secret_access_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AwsAccessKey::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AwsAccessKey_descriptor_;
  metadata.reflection = AwsAccessKey_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AwsAccessKey

// optional string access_key_id = 1;
void AwsAccessKey::clear_access_key_id() {
  access_key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AwsAccessKey::access_key_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  return access_key_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AwsAccessKey::set_access_key_id(const ::std::string& value) {
  
  access_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
void AwsAccessKey::set_access_key_id(const char* value) {
  
  access_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
void AwsAccessKey::set_access_key_id(const char* value,
    size_t size) {
  
  access_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
::std::string* AwsAccessKey::mutable_access_key_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  return access_key_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AwsAccessKey::release_access_key_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  
  return access_key_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AwsAccessKey::unsafe_arena_release_access_key_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsAccessKey.access_key_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return access_key_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AwsAccessKey::set_allocated_access_key_id(::std::string* access_key_id) {
  if (access_key_id != NULL) {
    
  } else {
    
  }
  access_key_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_key_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}
void AwsAccessKey::unsafe_arena_set_allocated_access_key_id(
    ::std::string* access_key_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (access_key_id != NULL) {
    
  } else {
    
  }
  access_key_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      access_key_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsAccessKey.access_key_id)
}

// optional string secret_access_key = 2;
void AwsAccessKey::clear_secret_access_key() {
  secret_access_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AwsAccessKey::secret_access_key() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  return secret_access_key_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AwsAccessKey::set_secret_access_key(const ::std::string& value) {
  
  secret_access_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
void AwsAccessKey::set_secret_access_key(const char* value) {
  
  secret_access_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
void AwsAccessKey::set_secret_access_key(const char* value,
    size_t size) {
  
  secret_access_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
::std::string* AwsAccessKey::mutable_secret_access_key() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  return secret_access_key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AwsAccessKey::release_secret_access_key() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  
  return secret_access_key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AwsAccessKey::unsafe_arena_release_secret_access_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return secret_access_key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AwsAccessKey::set_allocated_secret_access_key(::std::string* secret_access_key) {
  if (secret_access_key != NULL) {
    
  } else {
    
  }
  secret_access_key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_access_key,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}
void AwsAccessKey::unsafe_arena_set_allocated_secret_access_key(
    ::std::string* secret_access_key) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (secret_access_key != NULL) {
    
  } else {
    
  }
  secret_access_key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      secret_access_key, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsAccessKey.secret_access_key)
}

inline const AwsAccessKey* AwsAccessKey::internal_default_instance() {
  return &AwsAccessKey_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ObjectConditions::_slow_mutable_min_time_elapsed_since_last_modification() {
  min_time_elapsed_since_last_modification_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
      GetArenaNoVirtual());
}
::google::protobuf::Duration* ObjectConditions::_slow_release_min_time_elapsed_since_last_modification() {
  if (min_time_elapsed_since_last_modification_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Duration* temp = new ::google::protobuf::Duration(*min_time_elapsed_since_last_modification_);
    min_time_elapsed_since_last_modification_ = NULL;
    return temp;
  }
}
::google::protobuf::Duration* ObjectConditions::unsafe_arena_release_min_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  
  ::google::protobuf::Duration* temp = min_time_elapsed_since_last_modification_;
  min_time_elapsed_since_last_modification_ = NULL;
  return temp;
}
void ObjectConditions::_slow_set_allocated_min_time_elapsed_since_last_modification(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Duration** min_time_elapsed_since_last_modification) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*min_time_elapsed_since_last_modification) == NULL) {
      message_arena->Own(*min_time_elapsed_since_last_modification);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*min_time_elapsed_since_last_modification)) {
      ::google::protobuf::Duration* new_min_time_elapsed_since_last_modification = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
            message_arena);
      new_min_time_elapsed_since_last_modification->CopyFrom(**min_time_elapsed_since_last_modification);
      *min_time_elapsed_since_last_modification = new_min_time_elapsed_since_last_modification;
    }
}
void ObjectConditions::unsafe_arena_set_allocated_min_time_elapsed_since_last_modification(
    ::google::protobuf::Duration* min_time_elapsed_since_last_modification) {
  if (GetArenaNoVirtual() == NULL) {
    delete min_time_elapsed_since_last_modification_;
  }
  min_time_elapsed_since_last_modification_ = min_time_elapsed_since_last_modification;
  if (min_time_elapsed_since_last_modification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
}
void ObjectConditions::_slow_mutable_max_time_elapsed_since_last_modification() {
  max_time_elapsed_since_last_modification_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
      GetArenaNoVirtual());
}
::google::protobuf::Duration* ObjectConditions::_slow_release_max_time_elapsed_since_last_modification() {
  if (max_time_elapsed_since_last_modification_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Duration* temp = new ::google::protobuf::Duration(*max_time_elapsed_since_last_modification_);
    max_time_elapsed_since_last_modification_ = NULL;
    return temp;
  }
}
::google::protobuf::Duration* ObjectConditions::unsafe_arena_release_max_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  
  ::google::protobuf::Duration* temp = max_time_elapsed_since_last_modification_;
  max_time_elapsed_since_last_modification_ = NULL;
  return temp;
}
void ObjectConditions::_slow_set_allocated_max_time_elapsed_since_last_modification(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Duration** max_time_elapsed_since_last_modification) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*max_time_elapsed_since_last_modification) == NULL) {
      message_arena->Own(*max_time_elapsed_since_last_modification);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*max_time_elapsed_since_last_modification)) {
      ::google::protobuf::Duration* new_max_time_elapsed_since_last_modification = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
            message_arena);
      new_max_time_elapsed_since_last_modification->CopyFrom(**max_time_elapsed_since_last_modification);
      *max_time_elapsed_since_last_modification = new_max_time_elapsed_since_last_modification;
    }
}
void ObjectConditions::unsafe_arena_set_allocated_max_time_elapsed_since_last_modification(
    ::google::protobuf::Duration* max_time_elapsed_since_last_modification) {
  if (GetArenaNoVirtual() == NULL) {
    delete max_time_elapsed_since_last_modification_;
  }
  max_time_elapsed_since_last_modification_ = max_time_elapsed_since_last_modification;
  if (max_time_elapsed_since_last_modification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectConditions::kMinTimeElapsedSinceLastModificationFieldNumber;
const int ObjectConditions::kMaxTimeElapsedSinceLastModificationFieldNumber;
const int ObjectConditions::kIncludePrefixesFieldNumber;
const int ObjectConditions::kExcludePrefixesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectConditions::ObjectConditions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ObjectConditions)
}
ObjectConditions::ObjectConditions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  include_prefixes_(arena),
  exclude_prefixes_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ObjectConditions)
}

void ObjectConditions::InitAsDefaultInstance() {
  min_time_elapsed_since_last_modification_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  max_time_elapsed_since_last_modification_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

ObjectConditions::ObjectConditions(const ObjectConditions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ObjectConditions)
}

void ObjectConditions::SharedCtor() {
  min_time_elapsed_since_last_modification_ = NULL;
  max_time_elapsed_since_last_modification_ = NULL;
  _cached_size_ = 0;
}

ObjectConditions::~ObjectConditions() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ObjectConditions)
  SharedDtor();
}

void ObjectConditions::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &ObjectConditions_default_instance_.get()) {
    delete min_time_elapsed_since_last_modification_;
    delete max_time_elapsed_since_last_modification_;
  }
}

void ObjectConditions::ArenaDtor(void* object) {
  ObjectConditions* _this = reinterpret_cast< ObjectConditions* >(object);
  (void)_this;
}
void ObjectConditions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectConditions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectConditions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectConditions_descriptor_;
}

const ObjectConditions& ObjectConditions::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ObjectConditions> ObjectConditions_default_instance_;

ObjectConditions* ObjectConditions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ObjectConditions>(arena);
}

void ObjectConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ObjectConditions)
  if (GetArenaNoVirtual() == NULL && min_time_elapsed_since_last_modification_ != NULL) delete min_time_elapsed_since_last_modification_;
  min_time_elapsed_since_last_modification_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_time_elapsed_since_last_modification_ != NULL) delete max_time_elapsed_since_last_modification_;
  max_time_elapsed_since_last_modification_ = NULL;
  include_prefixes_.Clear();
  exclude_prefixes_.Clear();
}

bool ObjectConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ObjectConditions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_min_time_elapsed_since_last_modification()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_max_time_elapsed_since_last_modification;
        break;
      }

      // optional .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
      case 2: {
        if (tag == 18) {
         parse_max_time_elapsed_since_last_modification:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_max_time_elapsed_since_last_modification()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_include_prefixes;
        break;
      }

      // repeated string include_prefixes = 3;
      case 3: {
        if (tag == 26) {
         parse_include_prefixes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_include_prefixes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->include_prefixes(this->include_prefixes_size() - 1).data(),
            this->include_prefixes(this->include_prefixes_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ObjectConditions.include_prefixes"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_include_prefixes;
        if (input->ExpectTag(34)) goto parse_exclude_prefixes;
        break;
      }

      // repeated string exclude_prefixes = 4;
      case 4: {
        if (tag == 34) {
         parse_exclude_prefixes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_exclude_prefixes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exclude_prefixes(this->exclude_prefixes_size() - 1).data(),
            this->exclude_prefixes(this->exclude_prefixes_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ObjectConditions.exclude_prefixes"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exclude_prefixes;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ObjectConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ObjectConditions)
  return false;
#undef DO_
}

void ObjectConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ObjectConditions)
  // optional .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
  if (this->has_min_time_elapsed_since_last_modification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->min_time_elapsed_since_last_modification_, output);
  }

  // optional .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
  if (this->has_max_time_elapsed_since_last_modification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->max_time_elapsed_since_last_modification_, output);
  }

  // repeated string include_prefixes = 3;
  for (int i = 0; i < this->include_prefixes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->include_prefixes(i).data(), this->include_prefixes(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.include_prefixes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->include_prefixes(i), output);
  }

  // repeated string exclude_prefixes = 4;
  for (int i = 0; i < this->exclude_prefixes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exclude_prefixes(i).data(), this->exclude_prefixes(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.exclude_prefixes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->exclude_prefixes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ObjectConditions)
}

::google::protobuf::uint8* ObjectConditions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ObjectConditions)
  // optional .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
  if (this->has_min_time_elapsed_since_last_modification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->min_time_elapsed_since_last_modification_, false, target);
  }

  // optional .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
  if (this->has_max_time_elapsed_since_last_modification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->max_time_elapsed_since_last_modification_, false, target);
  }

  // repeated string include_prefixes = 3;
  for (int i = 0; i < this->include_prefixes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->include_prefixes(i).data(), this->include_prefixes(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.include_prefixes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->include_prefixes(i), target);
  }

  // repeated string exclude_prefixes = 4;
  for (int i = 0; i < this->exclude_prefixes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exclude_prefixes(i).data(), this->exclude_prefixes(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.exclude_prefixes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->exclude_prefixes(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ObjectConditions)
  return target;
}

size_t ObjectConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ObjectConditions)
  size_t total_size = 0;

  // optional .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
  if (this->has_min_time_elapsed_since_last_modification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->min_time_elapsed_since_last_modification_);
  }

  // optional .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
  if (this->has_max_time_elapsed_since_last_modification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->max_time_elapsed_since_last_modification_);
  }

  // repeated string include_prefixes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->include_prefixes_size());
  for (int i = 0; i < this->include_prefixes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->include_prefixes(i));
  }

  // repeated string exclude_prefixes = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->exclude_prefixes_size());
  for (int i = 0; i < this->exclude_prefixes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->exclude_prefixes(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ObjectConditions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ObjectConditions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectConditions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ObjectConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ObjectConditions)
    UnsafeMergeFrom(*source);
  }
}

void ObjectConditions::MergeFrom(const ObjectConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ObjectConditions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ObjectConditions::UnsafeMergeFrom(const ObjectConditions& from) {
  GOOGLE_DCHECK(&from != this);
  include_prefixes_.UnsafeMergeFrom(from.include_prefixes_);
  exclude_prefixes_.UnsafeMergeFrom(from.exclude_prefixes_);
  if (from.has_min_time_elapsed_since_last_modification()) {
    mutable_min_time_elapsed_since_last_modification()->::google::protobuf::Duration::MergeFrom(from.min_time_elapsed_since_last_modification());
  }
  if (from.has_max_time_elapsed_since_last_modification()) {
    mutable_max_time_elapsed_since_last_modification()->::google::protobuf::Duration::MergeFrom(from.max_time_elapsed_since_last_modification());
  }
}

void ObjectConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ObjectConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectConditions::CopyFrom(const ObjectConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ObjectConditions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ObjectConditions::IsInitialized() const {

  return true;
}

void ObjectConditions::Swap(ObjectConditions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectConditions temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ObjectConditions::UnsafeArenaSwap(ObjectConditions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectConditions::InternalSwap(ObjectConditions* other) {
  std::swap(min_time_elapsed_since_last_modification_, other->min_time_elapsed_since_last_modification_);
  std::swap(max_time_elapsed_since_last_modification_, other->max_time_elapsed_since_last_modification_);
  include_prefixes_.UnsafeArenaSwap(&other->include_prefixes_);
  exclude_prefixes_.UnsafeArenaSwap(&other->exclude_prefixes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectConditions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectConditions_descriptor_;
  metadata.reflection = ObjectConditions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectConditions

// optional .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
bool ObjectConditions::has_min_time_elapsed_since_last_modification() const {
  return this != internal_default_instance() && min_time_elapsed_since_last_modification_ != NULL;
}
void ObjectConditions::clear_min_time_elapsed_since_last_modification() {
  if (GetArenaNoVirtual() == NULL && min_time_elapsed_since_last_modification_ != NULL) delete min_time_elapsed_since_last_modification_;
  min_time_elapsed_since_last_modification_ = NULL;
}
const ::google::protobuf::Duration& ObjectConditions::min_time_elapsed_since_last_modification() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  return min_time_elapsed_since_last_modification_ != NULL ? *min_time_elapsed_since_last_modification_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* ObjectConditions::mutable_min_time_elapsed_since_last_modification() {
  
  if (min_time_elapsed_since_last_modification_ == NULL) {
    _slow_mutable_min_time_elapsed_since_last_modification();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  return min_time_elapsed_since_last_modification_;
}
::google::protobuf::Duration* ObjectConditions::release_min_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_min_time_elapsed_since_last_modification();
  } else {
    ::google::protobuf::Duration* temp = min_time_elapsed_since_last_modification_;
    min_time_elapsed_since_last_modification_ = NULL;
    return temp;
  }
}
 void ObjectConditions::set_allocated_min_time_elapsed_since_last_modification(::google::protobuf::Duration* min_time_elapsed_since_last_modification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete min_time_elapsed_since_last_modification_;
  }
  if (min_time_elapsed_since_last_modification != NULL) {
    _slow_set_allocated_min_time_elapsed_since_last_modification(message_arena, &min_time_elapsed_since_last_modification);
  }
  min_time_elapsed_since_last_modification_ = min_time_elapsed_since_last_modification;
  if (min_time_elapsed_since_last_modification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
}

// optional .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
bool ObjectConditions::has_max_time_elapsed_since_last_modification() const {
  return this != internal_default_instance() && max_time_elapsed_since_last_modification_ != NULL;
}
void ObjectConditions::clear_max_time_elapsed_since_last_modification() {
  if (GetArenaNoVirtual() == NULL && max_time_elapsed_since_last_modification_ != NULL) delete max_time_elapsed_since_last_modification_;
  max_time_elapsed_since_last_modification_ = NULL;
}
const ::google::protobuf::Duration& ObjectConditions::max_time_elapsed_since_last_modification() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  return max_time_elapsed_since_last_modification_ != NULL ? *max_time_elapsed_since_last_modification_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* ObjectConditions::mutable_max_time_elapsed_since_last_modification() {
  
  if (max_time_elapsed_since_last_modification_ == NULL) {
    _slow_mutable_max_time_elapsed_since_last_modification();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  return max_time_elapsed_since_last_modification_;
}
::google::protobuf::Duration* ObjectConditions::release_max_time_elapsed_since_last_modification() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_max_time_elapsed_since_last_modification();
  } else {
    ::google::protobuf::Duration* temp = max_time_elapsed_since_last_modification_;
    max_time_elapsed_since_last_modification_ = NULL;
    return temp;
  }
}
 void ObjectConditions::set_allocated_max_time_elapsed_since_last_modification(::google::protobuf::Duration* max_time_elapsed_since_last_modification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete max_time_elapsed_since_last_modification_;
  }
  if (max_time_elapsed_since_last_modification != NULL) {
    _slow_set_allocated_max_time_elapsed_since_last_modification(message_arena, &max_time_elapsed_since_last_modification);
  }
  max_time_elapsed_since_last_modification_ = max_time_elapsed_since_last_modification;
  if (max_time_elapsed_since_last_modification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
}

// repeated string include_prefixes = 3;
int ObjectConditions::include_prefixes_size() const {
  return include_prefixes_.size();
}
void ObjectConditions::clear_include_prefixes() {
  include_prefixes_.Clear();
}
const ::std::string& ObjectConditions::include_prefixes(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_.Get(index);
}
::std::string* ObjectConditions::mutable_include_prefixes(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_.Mutable(index);
}
void ObjectConditions::set_include_prefixes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  include_prefixes_.Mutable(index)->assign(value);
}
void ObjectConditions::set_include_prefixes(int index, const char* value) {
  include_prefixes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
void ObjectConditions::set_include_prefixes(int index, const char* value, size_t size) {
  include_prefixes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
::std::string* ObjectConditions::add_include_prefixes() {
  // @@protoc_insertion_point(field_add_mutable:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_.Add();
}
void ObjectConditions::add_include_prefixes(const ::std::string& value) {
  include_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
void ObjectConditions::add_include_prefixes(const char* value) {
  include_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
void ObjectConditions::add_include_prefixes(const char* value, size_t size) {
  include_prefixes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storagetransfer.v1.ObjectConditions.include_prefixes)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ObjectConditions::include_prefixes() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return include_prefixes_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ObjectConditions::mutable_include_prefixes() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ObjectConditions.include_prefixes)
  return &include_prefixes_;
}

// repeated string exclude_prefixes = 4;
int ObjectConditions::exclude_prefixes_size() const {
  return exclude_prefixes_.size();
}
void ObjectConditions::clear_exclude_prefixes() {
  exclude_prefixes_.Clear();
}
const ::std::string& ObjectConditions::exclude_prefixes(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_.Get(index);
}
::std::string* ObjectConditions::mutable_exclude_prefixes(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_.Mutable(index);
}
void ObjectConditions::set_exclude_prefixes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  exclude_prefixes_.Mutable(index)->assign(value);
}
void ObjectConditions::set_exclude_prefixes(int index, const char* value) {
  exclude_prefixes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
void ObjectConditions::set_exclude_prefixes(int index, const char* value, size_t size) {
  exclude_prefixes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
::std::string* ObjectConditions::add_exclude_prefixes() {
  // @@protoc_insertion_point(field_add_mutable:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_.Add();
}
void ObjectConditions::add_exclude_prefixes(const ::std::string& value) {
  exclude_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
void ObjectConditions::add_exclude_prefixes(const char* value) {
  exclude_prefixes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
void ObjectConditions::add_exclude_prefixes(const char* value, size_t size) {
  exclude_prefixes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ObjectConditions::exclude_prefixes() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return exclude_prefixes_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ObjectConditions::mutable_exclude_prefixes() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ObjectConditions.exclude_prefixes)
  return &exclude_prefixes_;
}

inline const ObjectConditions* ObjectConditions::internal_default_instance() {
  return &ObjectConditions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GcsData::kBucketNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GcsData::GcsData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.GcsData)
}
GcsData::GcsData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.GcsData)
}

void GcsData::InitAsDefaultInstance() {
}

GcsData::GcsData(const GcsData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.GcsData)
}

void GcsData::SharedCtor() {
  bucket_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GcsData::~GcsData() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.GcsData)
  SharedDtor();
}

void GcsData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  bucket_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void GcsData::ArenaDtor(void* object) {
  GcsData* _this = reinterpret_cast< GcsData* >(object);
  (void)_this;
}
void GcsData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GcsData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GcsData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GcsData_descriptor_;
}

const GcsData& GcsData::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GcsData> GcsData_default_instance_;

GcsData* GcsData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GcsData>(arena);
}

void GcsData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.GcsData)
  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool GcsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.GcsData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bucket_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket_name().data(), this->bucket_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.GcsData.bucket_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.GcsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.GcsData)
  return false;
#undef DO_
}

void GcsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.GcsData)
  // optional string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), this->bucket_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GcsData.bucket_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bucket_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.GcsData)
}

::google::protobuf::uint8* GcsData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.GcsData)
  // optional string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), this->bucket_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GcsData.bucket_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.GcsData)
  return target;
}

size_t GcsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.GcsData)
  size_t total_size = 0;

  // optional string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GcsData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.GcsData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GcsData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GcsData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.GcsData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.GcsData)
    UnsafeMergeFrom(*source);
  }
}

void GcsData::MergeFrom(const GcsData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.GcsData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GcsData::UnsafeMergeFrom(const GcsData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bucket_name().size() > 0) {
    set_bucket_name(from.bucket_name());
  }
}

void GcsData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.GcsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GcsData::CopyFrom(const GcsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.GcsData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GcsData::IsInitialized() const {

  return true;
}

void GcsData::Swap(GcsData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GcsData temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void GcsData::UnsafeArenaSwap(GcsData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GcsData::InternalSwap(GcsData* other) {
  bucket_name_.Swap(&other->bucket_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GcsData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GcsData_descriptor_;
  metadata.reflection = GcsData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GcsData

// optional string bucket_name = 1;
void GcsData::clear_bucket_name() {
  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& GcsData::bucket_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GcsData.bucket_name)
  return bucket_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GcsData::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GcsData.bucket_name)
}
void GcsData::set_bucket_name(const char* value) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GcsData.bucket_name)
}
void GcsData::set_bucket_name(const char* value,
    size_t size) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GcsData.bucket_name)
}
::std::string* GcsData::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GcsData.bucket_name)
  return bucket_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GcsData::release_bucket_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GcsData.bucket_name)
  
  return bucket_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GcsData::unsafe_arena_release_bucket_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GcsData.bucket_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bucket_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void GcsData::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GcsData.bucket_name)
}
void GcsData::unsafe_arena_set_allocated_bucket_name(
    ::std::string* bucket_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bucket_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GcsData.bucket_name)
}

inline const GcsData* GcsData::internal_default_instance() {
  return &GcsData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void AwsS3Data::_slow_mutable_aws_access_key() {
  aws_access_key_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::AwsAccessKey >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::AwsAccessKey* AwsS3Data::_slow_release_aws_access_key() {
  if (aws_access_key_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::AwsAccessKey* temp = new ::google::storagetransfer::v1::AwsAccessKey(*aws_access_key_);
    aws_access_key_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::AwsAccessKey* AwsS3Data::unsafe_arena_release_aws_access_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  
  ::google::storagetransfer::v1::AwsAccessKey* temp = aws_access_key_;
  aws_access_key_ = NULL;
  return temp;
}
void AwsS3Data::_slow_set_allocated_aws_access_key(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::AwsAccessKey** aws_access_key) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*aws_access_key) == NULL) {
      message_arena->Own(*aws_access_key);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*aws_access_key)) {
      ::google::storagetransfer::v1::AwsAccessKey* new_aws_access_key = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::AwsAccessKey >(
            message_arena);
      new_aws_access_key->CopyFrom(**aws_access_key);
      *aws_access_key = new_aws_access_key;
    }
}
void AwsS3Data::unsafe_arena_set_allocated_aws_access_key(
    ::google::storagetransfer::v1::AwsAccessKey* aws_access_key) {
  if (GetArenaNoVirtual() == NULL) {
    delete aws_access_key_;
  }
  aws_access_key_ = aws_access_key;
  if (aws_access_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsS3Data.aws_access_key)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AwsS3Data::kBucketNameFieldNumber;
const int AwsS3Data::kAwsAccessKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AwsS3Data::AwsS3Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.AwsS3Data)
}
AwsS3Data::AwsS3Data(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.AwsS3Data)
}

void AwsS3Data::InitAsDefaultInstance() {
  aws_access_key_ = const_cast< ::google::storagetransfer::v1::AwsAccessKey*>(
      ::google::storagetransfer::v1::AwsAccessKey::internal_default_instance());
}

AwsS3Data::AwsS3Data(const AwsS3Data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.AwsS3Data)
}

void AwsS3Data::SharedCtor() {
  bucket_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aws_access_key_ = NULL;
  _cached_size_ = 0;
}

AwsS3Data::~AwsS3Data() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.AwsS3Data)
  SharedDtor();
}

void AwsS3Data::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  bucket_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &AwsS3Data_default_instance_.get()) {
    delete aws_access_key_;
  }
}

void AwsS3Data::ArenaDtor(void* object) {
  AwsS3Data* _this = reinterpret_cast< AwsS3Data* >(object);
  (void)_this;
}
void AwsS3Data::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AwsS3Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AwsS3Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AwsS3Data_descriptor_;
}

const AwsS3Data& AwsS3Data::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AwsS3Data> AwsS3Data_default_instance_;

AwsS3Data* AwsS3Data::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AwsS3Data>(arena);
}

void AwsS3Data::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.AwsS3Data)
  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && aws_access_key_ != NULL) delete aws_access_key_;
  aws_access_key_ = NULL;
}

bool AwsS3Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.AwsS3Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bucket_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket_name().data(), this->bucket_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.AwsS3Data.bucket_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_aws_access_key;
        break;
      }

      // optional .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
      case 2: {
        if (tag == 18) {
         parse_aws_access_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aws_access_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.AwsS3Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.AwsS3Data)
  return false;
#undef DO_
}

void AwsS3Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.AwsS3Data)
  // optional string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), this->bucket_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsS3Data.bucket_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bucket_name(), output);
  }

  // optional .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
  if (this->has_aws_access_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->aws_access_key_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.AwsS3Data)
}

::google::protobuf::uint8* AwsS3Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.AwsS3Data)
  // optional string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), this->bucket_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsS3Data.bucket_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket_name(), target);
  }

  // optional .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
  if (this->has_aws_access_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->aws_access_key_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.AwsS3Data)
  return target;
}

size_t AwsS3Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.AwsS3Data)
  size_t total_size = 0;

  // optional string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket_name());
  }

  // optional .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
  if (this->has_aws_access_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->aws_access_key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AwsS3Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.AwsS3Data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AwsS3Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AwsS3Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.AwsS3Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.AwsS3Data)
    UnsafeMergeFrom(*source);
  }
}

void AwsS3Data::MergeFrom(const AwsS3Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.AwsS3Data)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AwsS3Data::UnsafeMergeFrom(const AwsS3Data& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bucket_name().size() > 0) {
    set_bucket_name(from.bucket_name());
  }
  if (from.has_aws_access_key()) {
    mutable_aws_access_key()->::google::storagetransfer::v1::AwsAccessKey::MergeFrom(from.aws_access_key());
  }
}

void AwsS3Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.AwsS3Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwsS3Data::CopyFrom(const AwsS3Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.AwsS3Data)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AwsS3Data::IsInitialized() const {

  return true;
}

void AwsS3Data::Swap(AwsS3Data* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AwsS3Data temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AwsS3Data::UnsafeArenaSwap(AwsS3Data* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AwsS3Data::InternalSwap(AwsS3Data* other) {
  bucket_name_.Swap(&other->bucket_name_);
  std::swap(aws_access_key_, other->aws_access_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AwsS3Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AwsS3Data_descriptor_;
  metadata.reflection = AwsS3Data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AwsS3Data

// optional string bucket_name = 1;
void AwsS3Data::clear_bucket_name() {
  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& AwsS3Data::bucket_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsS3Data.bucket_name)
  return bucket_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AwsS3Data::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
void AwsS3Data::set_bucket_name(const char* value) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
void AwsS3Data::set_bucket_name(const char* value,
    size_t size) {
  
  bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
::std::string* AwsS3Data::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsS3Data.bucket_name)
  return bucket_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AwsS3Data::release_bucket_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsS3Data.bucket_name)
  
  return bucket_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* AwsS3Data::unsafe_arena_release_bucket_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.AwsS3Data.bucket_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bucket_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void AwsS3Data::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsS3Data.bucket_name)
}
void AwsS3Data::unsafe_arena_set_allocated_bucket_name(
    ::std::string* bucket_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bucket_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsS3Data.bucket_name)
}

// optional .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
bool AwsS3Data::has_aws_access_key() const {
  return this != internal_default_instance() && aws_access_key_ != NULL;
}
void AwsS3Data::clear_aws_access_key() {
  if (GetArenaNoVirtual() == NULL && aws_access_key_ != NULL) delete aws_access_key_;
  aws_access_key_ = NULL;
}
const ::google::storagetransfer::v1::AwsAccessKey& AwsS3Data::aws_access_key() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  return aws_access_key_ != NULL ? *aws_access_key_
                         : *::google::storagetransfer::v1::AwsAccessKey::internal_default_instance();
}
::google::storagetransfer::v1::AwsAccessKey* AwsS3Data::mutable_aws_access_key() {
  
  if (aws_access_key_ == NULL) {
    _slow_mutable_aws_access_key();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  return aws_access_key_;
}
::google::storagetransfer::v1::AwsAccessKey* AwsS3Data::release_aws_access_key() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.AwsS3Data.aws_access_key)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_aws_access_key();
  } else {
    ::google::storagetransfer::v1::AwsAccessKey* temp = aws_access_key_;
    aws_access_key_ = NULL;
    return temp;
  }
}
 void AwsS3Data::set_allocated_aws_access_key(::google::storagetransfer::v1::AwsAccessKey* aws_access_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete aws_access_key_;
  }
  if (aws_access_key != NULL) {
    _slow_set_allocated_aws_access_key(message_arena, &aws_access_key);
  }
  aws_access_key_ = aws_access_key;
  if (aws_access_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.AwsS3Data.aws_access_key)
}

inline const AwsS3Data* AwsS3Data::internal_default_instance() {
  return &AwsS3Data_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpData::kListUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpData::HttpData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.HttpData)
}
HttpData::HttpData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.HttpData)
}

void HttpData::InitAsDefaultInstance() {
}

HttpData::HttpData(const HttpData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.HttpData)
}

void HttpData::SharedCtor() {
  list_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HttpData::~HttpData() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.HttpData)
  SharedDtor();
}

void HttpData::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  list_url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void HttpData::ArenaDtor(void* object) {
  HttpData* _this = reinterpret_cast< HttpData* >(object);
  (void)_this;
}
void HttpData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HttpData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpData_descriptor_;
}

const HttpData& HttpData::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HttpData> HttpData_default_instance_;

HttpData* HttpData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<HttpData>(arena);
}

void HttpData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.HttpData)
  list_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool HttpData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.HttpData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string list_url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list_url().data(), this->list_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.HttpData.list_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.HttpData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.HttpData)
  return false;
#undef DO_
}

void HttpData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.HttpData)
  // optional string list_url = 1;
  if (this->list_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_url().data(), this->list_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.HttpData.list_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->list_url(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.HttpData)
}

::google::protobuf::uint8* HttpData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.HttpData)
  // optional string list_url = 1;
  if (this->list_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_url().data(), this->list_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.HttpData.list_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->list_url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.HttpData)
  return target;
}

size_t HttpData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.HttpData)
  size_t total_size = 0;

  // optional string list_url = 1;
  if (this->list_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.HttpData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.HttpData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.HttpData)
    UnsafeMergeFrom(*source);
  }
}

void HttpData::MergeFrom(const HttpData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.HttpData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HttpData::UnsafeMergeFrom(const HttpData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.list_url().size() > 0) {
    set_list_url(from.list_url());
  }
}

void HttpData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.HttpData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpData::CopyFrom(const HttpData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.HttpData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HttpData::IsInitialized() const {

  return true;
}

void HttpData::Swap(HttpData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HttpData temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void HttpData::UnsafeArenaSwap(HttpData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HttpData::InternalSwap(HttpData* other) {
  list_url_.Swap(&other->list_url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpData_descriptor_;
  metadata.reflection = HttpData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpData

// optional string list_url = 1;
void HttpData::clear_list_url() {
  list_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& HttpData::list_url() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.HttpData.list_url)
  return list_url_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HttpData::set_list_url(const ::std::string& value) {
  
  list_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.HttpData.list_url)
}
void HttpData::set_list_url(const char* value) {
  
  list_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.HttpData.list_url)
}
void HttpData::set_list_url(const char* value,
    size_t size) {
  
  list_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.HttpData.list_url)
}
::std::string* HttpData::mutable_list_url() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.HttpData.list_url)
  return list_url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* HttpData::release_list_url() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.HttpData.list_url)
  
  return list_url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* HttpData::unsafe_arena_release_list_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.HttpData.list_url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return list_url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void HttpData::set_allocated_list_url(::std::string* list_url) {
  if (list_url != NULL) {
    
  } else {
    
  }
  list_url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), list_url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.HttpData.list_url)
}
void HttpData::unsafe_arena_set_allocated_list_url(
    ::std::string* list_url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (list_url != NULL) {
    
  } else {
    
  }
  list_url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      list_url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.HttpData.list_url)
}

inline const HttpData* HttpData::internal_default_instance() {
  return &HttpData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferOptions::kOverwriteObjectsAlreadyExistingInSinkFieldNumber;
const int TransferOptions::kDeleteObjectsUniqueInSinkFieldNumber;
const int TransferOptions::kDeleteObjectsFromSourceAfterTransferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferOptions::TransferOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferOptions)
}
TransferOptions::TransferOptions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferOptions)
}

void TransferOptions::InitAsDefaultInstance() {
}

TransferOptions::TransferOptions(const TransferOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferOptions)
}

void TransferOptions::SharedCtor() {
  ::memset(&overwrite_objects_already_existing_in_sink_, 0, reinterpret_cast<char*>(&delete_objects_from_source_after_transfer_) -
    reinterpret_cast<char*>(&overwrite_objects_already_existing_in_sink_) + sizeof(delete_objects_from_source_after_transfer_));
  _cached_size_ = 0;
}

TransferOptions::~TransferOptions() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferOptions)
  SharedDtor();
}

void TransferOptions::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TransferOptions::ArenaDtor(void* object) {
  TransferOptions* _this = reinterpret_cast< TransferOptions* >(object);
  (void)_this;
}
void TransferOptions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferOptions_descriptor_;
}

const TransferOptions& TransferOptions::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransferOptions> TransferOptions_default_instance_;

TransferOptions* TransferOptions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferOptions>(arena);
}

void TransferOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferOptions)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TransferOptions, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransferOptions*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(overwrite_objects_already_existing_in_sink_, delete_objects_from_source_after_transfer_);

#undef ZR_HELPER_
#undef ZR_

}

bool TransferOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool overwrite_objects_already_existing_in_sink = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overwrite_objects_already_existing_in_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delete_objects_unique_in_sink;
        break;
      }

      // optional bool delete_objects_unique_in_sink = 2;
      case 2: {
        if (tag == 16) {
         parse_delete_objects_unique_in_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_objects_unique_in_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_delete_objects_from_source_after_transfer;
        break;
      }

      // optional bool delete_objects_from_source_after_transfer = 3;
      case 3: {
        if (tag == 24) {
         parse_delete_objects_from_source_after_transfer:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_objects_from_source_after_transfer_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferOptions)
  return false;
#undef DO_
}

void TransferOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferOptions)
  // optional bool overwrite_objects_already_existing_in_sink = 1;
  if (this->overwrite_objects_already_existing_in_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->overwrite_objects_already_existing_in_sink(), output);
  }

  // optional bool delete_objects_unique_in_sink = 2;
  if (this->delete_objects_unique_in_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->delete_objects_unique_in_sink(), output);
  }

  // optional bool delete_objects_from_source_after_transfer = 3;
  if (this->delete_objects_from_source_after_transfer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->delete_objects_from_source_after_transfer(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferOptions)
}

::google::protobuf::uint8* TransferOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferOptions)
  // optional bool overwrite_objects_already_existing_in_sink = 1;
  if (this->overwrite_objects_already_existing_in_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->overwrite_objects_already_existing_in_sink(), target);
  }

  // optional bool delete_objects_unique_in_sink = 2;
  if (this->delete_objects_unique_in_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->delete_objects_unique_in_sink(), target);
  }

  // optional bool delete_objects_from_source_after_transfer = 3;
  if (this->delete_objects_from_source_after_transfer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->delete_objects_from_source_after_transfer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferOptions)
  return target;
}

size_t TransferOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferOptions)
  size_t total_size = 0;

  // optional bool overwrite_objects_already_existing_in_sink = 1;
  if (this->overwrite_objects_already_existing_in_sink() != 0) {
    total_size += 1 + 1;
  }

  // optional bool delete_objects_unique_in_sink = 2;
  if (this->delete_objects_unique_in_sink() != 0) {
    total_size += 1 + 1;
  }

  // optional bool delete_objects_from_source_after_transfer = 3;
  if (this->delete_objects_from_source_after_transfer() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransferOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferOptions)
    UnsafeMergeFrom(*source);
  }
}

void TransferOptions::MergeFrom(const TransferOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferOptions)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransferOptions::UnsafeMergeFrom(const TransferOptions& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.overwrite_objects_already_existing_in_sink() != 0) {
    set_overwrite_objects_already_existing_in_sink(from.overwrite_objects_already_existing_in_sink());
  }
  if (from.delete_objects_unique_in_sink() != 0) {
    set_delete_objects_unique_in_sink(from.delete_objects_unique_in_sink());
  }
  if (from.delete_objects_from_source_after_transfer() != 0) {
    set_delete_objects_from_source_after_transfer(from.delete_objects_from_source_after_transfer());
  }
}

void TransferOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferOptions::CopyFrom(const TransferOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferOptions)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransferOptions::IsInitialized() const {

  return true;
}

void TransferOptions::Swap(TransferOptions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferOptions temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TransferOptions::UnsafeArenaSwap(TransferOptions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferOptions::InternalSwap(TransferOptions* other) {
  std::swap(overwrite_objects_already_existing_in_sink_, other->overwrite_objects_already_existing_in_sink_);
  std::swap(delete_objects_unique_in_sink_, other->delete_objects_unique_in_sink_);
  std::swap(delete_objects_from_source_after_transfer_, other->delete_objects_from_source_after_transfer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferOptions_descriptor_;
  metadata.reflection = TransferOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferOptions

// optional bool overwrite_objects_already_existing_in_sink = 1;
void TransferOptions::clear_overwrite_objects_already_existing_in_sink() {
  overwrite_objects_already_existing_in_sink_ = false;
}
bool TransferOptions::overwrite_objects_already_existing_in_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOptions.overwrite_objects_already_existing_in_sink)
  return overwrite_objects_already_existing_in_sink_;
}
void TransferOptions::set_overwrite_objects_already_existing_in_sink(bool value) {
  
  overwrite_objects_already_existing_in_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOptions.overwrite_objects_already_existing_in_sink)
}

// optional bool delete_objects_unique_in_sink = 2;
void TransferOptions::clear_delete_objects_unique_in_sink() {
  delete_objects_unique_in_sink_ = false;
}
bool TransferOptions::delete_objects_unique_in_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink)
  return delete_objects_unique_in_sink_;
}
void TransferOptions::set_delete_objects_unique_in_sink(bool value) {
  
  delete_objects_unique_in_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink)
}

// optional bool delete_objects_from_source_after_transfer = 3;
void TransferOptions::clear_delete_objects_from_source_after_transfer() {
  delete_objects_from_source_after_transfer_ = false;
}
bool TransferOptions::delete_objects_from_source_after_transfer() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOptions.delete_objects_from_source_after_transfer)
  return delete_objects_from_source_after_transfer_;
}
void TransferOptions::set_delete_objects_from_source_after_transfer(bool value) {
  
  delete_objects_from_source_after_transfer_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOptions.delete_objects_from_source_after_transfer)
}

inline const TransferOptions* TransferOptions::internal_default_instance() {
  return &TransferOptions_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TransferSpec::_slow_mutable_object_conditions() {
  object_conditions_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::ObjectConditions >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::ObjectConditions* TransferSpec::_slow_release_object_conditions() {
  if (object_conditions_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::ObjectConditions* temp = new ::google::storagetransfer::v1::ObjectConditions(*object_conditions_);
    object_conditions_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::ObjectConditions* TransferSpec::unsafe_arena_release_object_conditions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.object_conditions)
  
  ::google::storagetransfer::v1::ObjectConditions* temp = object_conditions_;
  object_conditions_ = NULL;
  return temp;
}
void TransferSpec::_slow_set_allocated_object_conditions(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::ObjectConditions** object_conditions) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*object_conditions) == NULL) {
      message_arena->Own(*object_conditions);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*object_conditions)) {
      ::google::storagetransfer::v1::ObjectConditions* new_object_conditions = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::ObjectConditions >(
            message_arena);
      new_object_conditions->CopyFrom(**object_conditions);
      *object_conditions = new_object_conditions;
    }
}
void TransferSpec::unsafe_arena_set_allocated_object_conditions(
    ::google::storagetransfer::v1::ObjectConditions* object_conditions) {
  if (GetArenaNoVirtual() == NULL) {
    delete object_conditions_;
  }
  object_conditions_ = object_conditions;
  if (object_conditions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.object_conditions)
}
void TransferSpec::_slow_mutable_transfer_options() {
  transfer_options_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferOptions >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::TransferOptions* TransferSpec::_slow_release_transfer_options() {
  if (transfer_options_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::TransferOptions* temp = new ::google::storagetransfer::v1::TransferOptions(*transfer_options_);
    transfer_options_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::TransferOptions* TransferSpec::unsafe_arena_release_transfer_options() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.transfer_options)
  
  ::google::storagetransfer::v1::TransferOptions* temp = transfer_options_;
  transfer_options_ = NULL;
  return temp;
}
void TransferSpec::_slow_set_allocated_transfer_options(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferOptions** transfer_options) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*transfer_options) == NULL) {
      message_arena->Own(*transfer_options);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*transfer_options)) {
      ::google::storagetransfer::v1::TransferOptions* new_transfer_options = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferOptions >(
            message_arena);
      new_transfer_options->CopyFrom(**transfer_options);
      *transfer_options = new_transfer_options;
    }
}
void TransferSpec::unsafe_arena_set_allocated_transfer_options(
    ::google::storagetransfer::v1::TransferOptions* transfer_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_options_;
  }
  transfer_options_ = transfer_options;
  if (transfer_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.transfer_options)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferSpec::kGcsDataSourceFieldNumber;
const int TransferSpec::kAwsS3DataSourceFieldNumber;
const int TransferSpec::kHttpDataSourceFieldNumber;
const int TransferSpec::kGcsDataSinkFieldNumber;
const int TransferSpec::kObjectConditionsFieldNumber;
const int TransferSpec::kTransferOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferSpec::TransferSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferSpec)
}
TransferSpec::TransferSpec(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferSpec)
}

void TransferSpec::InitAsDefaultInstance() {
  TransferSpec_default_oneof_instance_->gcs_data_source_ = const_cast< ::google::storagetransfer::v1::GcsData*>(
      ::google::storagetransfer::v1::GcsData::internal_default_instance());
  TransferSpec_default_oneof_instance_->aws_s3_data_source_ = const_cast< ::google::storagetransfer::v1::AwsS3Data*>(
      ::google::storagetransfer::v1::AwsS3Data::internal_default_instance());
  TransferSpec_default_oneof_instance_->http_data_source_ = const_cast< ::google::storagetransfer::v1::HttpData*>(
      ::google::storagetransfer::v1::HttpData::internal_default_instance());
  TransferSpec_default_oneof_instance_->gcs_data_sink_ = const_cast< ::google::storagetransfer::v1::GcsData*>(
      ::google::storagetransfer::v1::GcsData::internal_default_instance());
  object_conditions_ = const_cast< ::google::storagetransfer::v1::ObjectConditions*>(
      ::google::storagetransfer::v1::ObjectConditions::internal_default_instance());
  transfer_options_ = const_cast< ::google::storagetransfer::v1::TransferOptions*>(
      ::google::storagetransfer::v1::TransferOptions::internal_default_instance());
}

TransferSpec::TransferSpec(const TransferSpec& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferSpec)
}

void TransferSpec::SharedCtor() {
  object_conditions_ = NULL;
  transfer_options_ = NULL;
  clear_has_data_source();
  clear_has_data_sink();
  _cached_size_ = 0;
}

TransferSpec::~TransferSpec() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferSpec)
  SharedDtor();
}

void TransferSpec::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (has_data_source()) {
    clear_data_source();
  }
  if (has_data_sink()) {
    clear_data_sink();
  }
  if (this != &TransferSpec_default_instance_.get()) {
    delete object_conditions_;
    delete transfer_options_;
  }
}

void TransferSpec::ArenaDtor(void* object) {
  TransferSpec* _this = reinterpret_cast< TransferSpec* >(object);
  (void)_this;
}
void TransferSpec::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferSpec::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferSpec_descriptor_;
}

const TransferSpec& TransferSpec::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransferSpec> TransferSpec_default_instance_;

TransferSpec* TransferSpec::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferSpec>(arena);
}

void TransferSpec::clear_data_source() {
// @@protoc_insertion_point(one_of_clear_start:google.storagetransfer.v1.TransferSpec)
  switch (data_source_case()) {
    case kGcsDataSource: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_source_.gcs_data_source_;
      }
      break;
    }
    case kAwsS3DataSource: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_source_.aws_s3_data_source_;
      }
      break;
    }
    case kHttpDataSource: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_source_.http_data_source_;
      }
      break;
    }
    case DATA_SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_SOURCE_NOT_SET;
}

void TransferSpec::clear_data_sink() {
// @@protoc_insertion_point(one_of_clear_start:google.storagetransfer.v1.TransferSpec)
  switch (data_sink_case()) {
    case kGcsDataSink: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_sink_.gcs_data_sink_;
      }
      break;
    }
    case DATA_SINK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = DATA_SINK_NOT_SET;
}


void TransferSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferSpec)
  if (GetArenaNoVirtual() == NULL && object_conditions_ != NULL) delete object_conditions_;
  object_conditions_ = NULL;
  if (GetArenaNoVirtual() == NULL && transfer_options_ != NULL) delete transfer_options_;
  transfer_options_ = NULL;
  clear_data_source();
  clear_data_sink();
}

bool TransferSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.storagetransfer.v1.GcsData gcs_data_source = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gcs_data_source()));
        } else {
          goto handle_unusual;
        }
        goto after_http_data_source;
        break;
      }

      // optional .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aws_s3_data_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_http_data_source;
        break;
      }

      // optional .google.storagetransfer.v1.HttpData http_data_source = 3;
      case 3: {
        if (tag == 26) {
         parse_http_data_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http_data_source()));
        } else {
          goto handle_unusual;
        }
       after_http_data_source:
        if (input->ExpectTag(34)) goto parse_gcs_data_sink;
        break;
      }

      // optional .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
      case 4: {
        if (tag == 34) {
         parse_gcs_data_sink:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gcs_data_sink()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_object_conditions;
        break;
      }

      // optional .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
      case 5: {
        if (tag == 42) {
         parse_object_conditions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_conditions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_transfer_options;
        break;
      }

      // optional .google.storagetransfer.v1.TransferOptions transfer_options = 6;
      case 6: {
        if (tag == 50) {
         parse_transfer_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferSpec)
  return false;
#undef DO_
}

void TransferSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferSpec)
  // optional .google.storagetransfer.v1.GcsData gcs_data_source = 1;
  if (has_gcs_data_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *data_source_.gcs_data_source_, output);
  }

  // optional .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
  if (has_aws_s3_data_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *data_source_.aws_s3_data_source_, output);
  }

  // optional .google.storagetransfer.v1.HttpData http_data_source = 3;
  if (has_http_data_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *data_source_.http_data_source_, output);
  }

  // optional .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
  if (has_gcs_data_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *data_sink_.gcs_data_sink_, output);
  }

  // optional .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
  if (this->has_object_conditions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->object_conditions_, output);
  }

  // optional .google.storagetransfer.v1.TransferOptions transfer_options = 6;
  if (this->has_transfer_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->transfer_options_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferSpec)
}

::google::protobuf::uint8* TransferSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferSpec)
  // optional .google.storagetransfer.v1.GcsData gcs_data_source = 1;
  if (has_gcs_data_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *data_source_.gcs_data_source_, false, target);
  }

  // optional .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
  if (has_aws_s3_data_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *data_source_.aws_s3_data_source_, false, target);
  }

  // optional .google.storagetransfer.v1.HttpData http_data_source = 3;
  if (has_http_data_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *data_source_.http_data_source_, false, target);
  }

  // optional .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
  if (has_gcs_data_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *data_sink_.gcs_data_sink_, false, target);
  }

  // optional .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
  if (this->has_object_conditions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->object_conditions_, false, target);
  }

  // optional .google.storagetransfer.v1.TransferOptions transfer_options = 6;
  if (this->has_transfer_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->transfer_options_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferSpec)
  return target;
}

size_t TransferSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferSpec)
  size_t total_size = 0;

  // optional .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
  if (this->has_object_conditions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->object_conditions_);
  }

  // optional .google.storagetransfer.v1.TransferOptions transfer_options = 6;
  if (this->has_transfer_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transfer_options_);
  }

  switch (data_source_case()) {
    // optional .google.storagetransfer.v1.GcsData gcs_data_source = 1;
    case kGcsDataSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_source_.gcs_data_source_);
      break;
    }
    // optional .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
    case kAwsS3DataSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_source_.aws_s3_data_source_);
      break;
    }
    // optional .google.storagetransfer.v1.HttpData http_data_source = 3;
    case kHttpDataSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_source_.http_data_source_);
      break;
    }
    case DATA_SOURCE_NOT_SET: {
      break;
    }
  }
  switch (data_sink_case()) {
    // optional .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
    case kGcsDataSink: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *data_sink_.gcs_data_sink_);
      break;
    }
    case DATA_SINK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferSpec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransferSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferSpec)
    UnsafeMergeFrom(*source);
  }
}

void TransferSpec::MergeFrom(const TransferSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferSpec)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransferSpec::UnsafeMergeFrom(const TransferSpec& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.data_source_case()) {
    case kGcsDataSource: {
      mutable_gcs_data_source()->::google::storagetransfer::v1::GcsData::MergeFrom(from.gcs_data_source());
      break;
    }
    case kAwsS3DataSource: {
      mutable_aws_s3_data_source()->::google::storagetransfer::v1::AwsS3Data::MergeFrom(from.aws_s3_data_source());
      break;
    }
    case kHttpDataSource: {
      mutable_http_data_source()->::google::storagetransfer::v1::HttpData::MergeFrom(from.http_data_source());
      break;
    }
    case DATA_SOURCE_NOT_SET: {
      break;
    }
  }
  switch (from.data_sink_case()) {
    case kGcsDataSink: {
      mutable_gcs_data_sink()->::google::storagetransfer::v1::GcsData::MergeFrom(from.gcs_data_sink());
      break;
    }
    case DATA_SINK_NOT_SET: {
      break;
    }
  }
  if (from.has_object_conditions()) {
    mutable_object_conditions()->::google::storagetransfer::v1::ObjectConditions::MergeFrom(from.object_conditions());
  }
  if (from.has_transfer_options()) {
    mutable_transfer_options()->::google::storagetransfer::v1::TransferOptions::MergeFrom(from.transfer_options());
  }
}

void TransferSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferSpec::CopyFrom(const TransferSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferSpec)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransferSpec::IsInitialized() const {

  return true;
}

void TransferSpec::Swap(TransferSpec* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferSpec temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TransferSpec::UnsafeArenaSwap(TransferSpec* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferSpec::InternalSwap(TransferSpec* other) {
  std::swap(object_conditions_, other->object_conditions_);
  std::swap(transfer_options_, other->transfer_options_);
  std::swap(data_source_, other->data_source_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(data_sink_, other->data_sink_);
  std::swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferSpec::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferSpec_descriptor_;
  metadata.reflection = TransferSpec_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferSpec

// optional .google.storagetransfer.v1.GcsData gcs_data_source = 1;
bool TransferSpec::has_gcs_data_source() const {
  return data_source_case() == kGcsDataSource;
}
void TransferSpec::set_has_gcs_data_source() {
  _oneof_case_[0] = kGcsDataSource;
}
void TransferSpec::clear_gcs_data_source() {
  if (has_gcs_data_source()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_source_.gcs_data_source_;
    }
    clear_has_data_source();
  }
}
 const ::google::storagetransfer::v1::GcsData& TransferSpec::gcs_data_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  return has_gcs_data_source()
      ? *data_source_.gcs_data_source_
      : ::google::storagetransfer::v1::GcsData::default_instance();
}
::google::storagetransfer::v1::GcsData* TransferSpec::mutable_gcs_data_source() {
  if (!has_gcs_data_source()) {
    clear_data_source();
    set_has_gcs_data_source();
    data_source_.gcs_data_source_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::GcsData >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  return data_source_.gcs_data_source_;
}
::google::storagetransfer::v1::GcsData* TransferSpec::release_gcs_data_source() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  if (has_gcs_data_source()) {
    clear_has_data_source();
    if (GetArenaNoVirtual() != NULL) {
      ::google::storagetransfer::v1::GcsData* temp = new ::google::storagetransfer::v1::GcsData(*data_source_.gcs_data_source_);
      data_source_.gcs_data_source_ = NULL;
      return temp;
    } else {
      ::google::storagetransfer::v1::GcsData* temp = data_source_.gcs_data_source_;
      data_source_.gcs_data_source_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TransferSpec::set_allocated_gcs_data_source(::google::storagetransfer::v1::GcsData* gcs_data_source) {
  clear_data_source();
  if (gcs_data_source) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(gcs_data_source) == NULL) {
      GetArenaNoVirtual()->Own(gcs_data_source);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(gcs_data_source)) {
      ::google::storagetransfer::v1::GcsData* new_gcs_data_source = 
          ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::GcsData >(
          GetArenaNoVirtual());
      new_gcs_data_source->CopyFrom(*gcs_data_source);
      gcs_data_source = new_gcs_data_source;
    }
    set_has_gcs_data_source();
    data_source_.gcs_data_source_ = gcs_data_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_source)
}
 ::google::storagetransfer::v1::GcsData* TransferSpec::unsafe_arena_release_gcs_data_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.gcs_data_source)
  if (has_gcs_data_source()) {
    clear_has_data_source();
    ::google::storagetransfer::v1::GcsData* temp = data_source_.gcs_data_source_;
    data_source_.gcs_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TransferSpec::unsafe_arena_set_allocated_gcs_data_source(::google::storagetransfer::v1::GcsData* gcs_data_source) {
  clear_data_source();
  if (gcs_data_source) {
    set_has_gcs_data_source();
    data_source_.gcs_data_source_ = gcs_data_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_source)
}

// optional .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
bool TransferSpec::has_aws_s3_data_source() const {
  return data_source_case() == kAwsS3DataSource;
}
void TransferSpec::set_has_aws_s3_data_source() {
  _oneof_case_[0] = kAwsS3DataSource;
}
void TransferSpec::clear_aws_s3_data_source() {
  if (has_aws_s3_data_source()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_source_.aws_s3_data_source_;
    }
    clear_has_data_source();
  }
}
 const ::google::storagetransfer::v1::AwsS3Data& TransferSpec::aws_s3_data_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  return has_aws_s3_data_source()
      ? *data_source_.aws_s3_data_source_
      : ::google::storagetransfer::v1::AwsS3Data::default_instance();
}
::google::storagetransfer::v1::AwsS3Data* TransferSpec::mutable_aws_s3_data_source() {
  if (!has_aws_s3_data_source()) {
    clear_data_source();
    set_has_aws_s3_data_source();
    data_source_.aws_s3_data_source_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::AwsS3Data >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  return data_source_.aws_s3_data_source_;
}
::google::storagetransfer::v1::AwsS3Data* TransferSpec::release_aws_s3_data_source() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  if (has_aws_s3_data_source()) {
    clear_has_data_source();
    if (GetArenaNoVirtual() != NULL) {
      ::google::storagetransfer::v1::AwsS3Data* temp = new ::google::storagetransfer::v1::AwsS3Data(*data_source_.aws_s3_data_source_);
      data_source_.aws_s3_data_source_ = NULL;
      return temp;
    } else {
      ::google::storagetransfer::v1::AwsS3Data* temp = data_source_.aws_s3_data_source_;
      data_source_.aws_s3_data_source_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TransferSpec::set_allocated_aws_s3_data_source(::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source) {
  clear_data_source();
  if (aws_s3_data_source) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(aws_s3_data_source) == NULL) {
      GetArenaNoVirtual()->Own(aws_s3_data_source);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(aws_s3_data_source)) {
      ::google::storagetransfer::v1::AwsS3Data* new_aws_s3_data_source = 
          ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::AwsS3Data >(
          GetArenaNoVirtual());
      new_aws_s3_data_source->CopyFrom(*aws_s3_data_source);
      aws_s3_data_source = new_aws_s3_data_source;
    }
    set_has_aws_s3_data_source();
    data_source_.aws_s3_data_source_ = aws_s3_data_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
}
 ::google::storagetransfer::v1::AwsS3Data* TransferSpec::unsafe_arena_release_aws_s3_data_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
  if (has_aws_s3_data_source()) {
    clear_has_data_source();
    ::google::storagetransfer::v1::AwsS3Data* temp = data_source_.aws_s3_data_source_;
    data_source_.aws_s3_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TransferSpec::unsafe_arena_set_allocated_aws_s3_data_source(::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source) {
  clear_data_source();
  if (aws_s3_data_source) {
    set_has_aws_s3_data_source();
    data_source_.aws_s3_data_source_ = aws_s3_data_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
}

// optional .google.storagetransfer.v1.HttpData http_data_source = 3;
bool TransferSpec::has_http_data_source() const {
  return data_source_case() == kHttpDataSource;
}
void TransferSpec::set_has_http_data_source() {
  _oneof_case_[0] = kHttpDataSource;
}
void TransferSpec::clear_http_data_source() {
  if (has_http_data_source()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_source_.http_data_source_;
    }
    clear_has_data_source();
  }
}
 const ::google::storagetransfer::v1::HttpData& TransferSpec::http_data_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.http_data_source)
  return has_http_data_source()
      ? *data_source_.http_data_source_
      : ::google::storagetransfer::v1::HttpData::default_instance();
}
::google::storagetransfer::v1::HttpData* TransferSpec::mutable_http_data_source() {
  if (!has_http_data_source()) {
    clear_data_source();
    set_has_http_data_source();
    data_source_.http_data_source_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::HttpData >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.http_data_source)
  return data_source_.http_data_source_;
}
::google::storagetransfer::v1::HttpData* TransferSpec::release_http_data_source() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.http_data_source)
  if (has_http_data_source()) {
    clear_has_data_source();
    if (GetArenaNoVirtual() != NULL) {
      ::google::storagetransfer::v1::HttpData* temp = new ::google::storagetransfer::v1::HttpData(*data_source_.http_data_source_);
      data_source_.http_data_source_ = NULL;
      return temp;
    } else {
      ::google::storagetransfer::v1::HttpData* temp = data_source_.http_data_source_;
      data_source_.http_data_source_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TransferSpec::set_allocated_http_data_source(::google::storagetransfer::v1::HttpData* http_data_source) {
  clear_data_source();
  if (http_data_source) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(http_data_source) == NULL) {
      GetArenaNoVirtual()->Own(http_data_source);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(http_data_source)) {
      ::google::storagetransfer::v1::HttpData* new_http_data_source = 
          ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::HttpData >(
          GetArenaNoVirtual());
      new_http_data_source->CopyFrom(*http_data_source);
      http_data_source = new_http_data_source;
    }
    set_has_http_data_source();
    data_source_.http_data_source_ = http_data_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.http_data_source)
}
 ::google::storagetransfer::v1::HttpData* TransferSpec::unsafe_arena_release_http_data_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.http_data_source)
  if (has_http_data_source()) {
    clear_has_data_source();
    ::google::storagetransfer::v1::HttpData* temp = data_source_.http_data_source_;
    data_source_.http_data_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TransferSpec::unsafe_arena_set_allocated_http_data_source(::google::storagetransfer::v1::HttpData* http_data_source) {
  clear_data_source();
  if (http_data_source) {
    set_has_http_data_source();
    data_source_.http_data_source_ = http_data_source;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.http_data_source)
}

// optional .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
bool TransferSpec::has_gcs_data_sink() const {
  return data_sink_case() == kGcsDataSink;
}
void TransferSpec::set_has_gcs_data_sink() {
  _oneof_case_[1] = kGcsDataSink;
}
void TransferSpec::clear_gcs_data_sink() {
  if (has_gcs_data_sink()) {
    if (GetArenaNoVirtual() == NULL) {
      delete data_sink_.gcs_data_sink_;
    }
    clear_has_data_sink();
  }
}
 const ::google::storagetransfer::v1::GcsData& TransferSpec::gcs_data_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  return has_gcs_data_sink()
      ? *data_sink_.gcs_data_sink_
      : ::google::storagetransfer::v1::GcsData::default_instance();
}
::google::storagetransfer::v1::GcsData* TransferSpec::mutable_gcs_data_sink() {
  if (!has_gcs_data_sink()) {
    clear_data_sink();
    set_has_gcs_data_sink();
    data_sink_.gcs_data_sink_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::GcsData >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  return data_sink_.gcs_data_sink_;
}
::google::storagetransfer::v1::GcsData* TransferSpec::release_gcs_data_sink() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  if (has_gcs_data_sink()) {
    clear_has_data_sink();
    if (GetArenaNoVirtual() != NULL) {
      ::google::storagetransfer::v1::GcsData* temp = new ::google::storagetransfer::v1::GcsData(*data_sink_.gcs_data_sink_);
      data_sink_.gcs_data_sink_ = NULL;
      return temp;
    } else {
      ::google::storagetransfer::v1::GcsData* temp = data_sink_.gcs_data_sink_;
      data_sink_.gcs_data_sink_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void TransferSpec::set_allocated_gcs_data_sink(::google::storagetransfer::v1::GcsData* gcs_data_sink) {
  clear_data_sink();
  if (gcs_data_sink) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(gcs_data_sink) == NULL) {
      GetArenaNoVirtual()->Own(gcs_data_sink);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(gcs_data_sink)) {
      ::google::storagetransfer::v1::GcsData* new_gcs_data_sink = 
          ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::GcsData >(
          GetArenaNoVirtual());
      new_gcs_data_sink->CopyFrom(*gcs_data_sink);
      gcs_data_sink = new_gcs_data_sink;
    }
    set_has_gcs_data_sink();
    data_sink_.gcs_data_sink_ = gcs_data_sink;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
}
 ::google::storagetransfer::v1::GcsData* TransferSpec::unsafe_arena_release_gcs_data_sink() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
  if (has_gcs_data_sink()) {
    clear_has_data_sink();
    ::google::storagetransfer::v1::GcsData* temp = data_sink_.gcs_data_sink_;
    data_sink_.gcs_data_sink_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void TransferSpec::unsafe_arena_set_allocated_gcs_data_sink(::google::storagetransfer::v1::GcsData* gcs_data_sink) {
  clear_data_sink();
  if (gcs_data_sink) {
    set_has_gcs_data_sink();
    data_sink_.gcs_data_sink_ = gcs_data_sink;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
}

// optional .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
bool TransferSpec::has_object_conditions() const {
  return this != internal_default_instance() && object_conditions_ != NULL;
}
void TransferSpec::clear_object_conditions() {
  if (GetArenaNoVirtual() == NULL && object_conditions_ != NULL) delete object_conditions_;
  object_conditions_ = NULL;
}
const ::google::storagetransfer::v1::ObjectConditions& TransferSpec::object_conditions() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.object_conditions)
  return object_conditions_ != NULL ? *object_conditions_
                         : *::google::storagetransfer::v1::ObjectConditions::internal_default_instance();
}
::google::storagetransfer::v1::ObjectConditions* TransferSpec::mutable_object_conditions() {
  
  if (object_conditions_ == NULL) {
    _slow_mutable_object_conditions();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.object_conditions)
  return object_conditions_;
}
::google::storagetransfer::v1::ObjectConditions* TransferSpec::release_object_conditions() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.object_conditions)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_object_conditions();
  } else {
    ::google::storagetransfer::v1::ObjectConditions* temp = object_conditions_;
    object_conditions_ = NULL;
    return temp;
  }
}
 void TransferSpec::set_allocated_object_conditions(::google::storagetransfer::v1::ObjectConditions* object_conditions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete object_conditions_;
  }
  if (object_conditions != NULL) {
    _slow_set_allocated_object_conditions(message_arena, &object_conditions);
  }
  object_conditions_ = object_conditions;
  if (object_conditions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.object_conditions)
}

// optional .google.storagetransfer.v1.TransferOptions transfer_options = 6;
bool TransferSpec::has_transfer_options() const {
  return this != internal_default_instance() && transfer_options_ != NULL;
}
void TransferSpec::clear_transfer_options() {
  if (GetArenaNoVirtual() == NULL && transfer_options_ != NULL) delete transfer_options_;
  transfer_options_ = NULL;
}
const ::google::storagetransfer::v1::TransferOptions& TransferSpec::transfer_options() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferSpec.transfer_options)
  return transfer_options_ != NULL ? *transfer_options_
                         : *::google::storagetransfer::v1::TransferOptions::internal_default_instance();
}
::google::storagetransfer::v1::TransferOptions* TransferSpec::mutable_transfer_options() {
  
  if (transfer_options_ == NULL) {
    _slow_mutable_transfer_options();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferSpec.transfer_options)
  return transfer_options_;
}
::google::storagetransfer::v1::TransferOptions* TransferSpec::release_transfer_options() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferSpec.transfer_options)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_transfer_options();
  } else {
    ::google::storagetransfer::v1::TransferOptions* temp = transfer_options_;
    transfer_options_ = NULL;
    return temp;
  }
}
 void TransferSpec::set_allocated_transfer_options(::google::storagetransfer::v1::TransferOptions* transfer_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_options_;
  }
  if (transfer_options != NULL) {
    _slow_set_allocated_transfer_options(message_arena, &transfer_options);
  }
  transfer_options_ = transfer_options;
  if (transfer_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.transfer_options)
}

bool TransferSpec::has_data_source() const {
  return data_source_case() != DATA_SOURCE_NOT_SET;
}
void TransferSpec::clear_has_data_source() {
  _oneof_case_[0] = DATA_SOURCE_NOT_SET;
}
bool TransferSpec::has_data_sink() const {
  return data_sink_case() != DATA_SINK_NOT_SET;
}
void TransferSpec::clear_has_data_sink() {
  _oneof_case_[1] = DATA_SINK_NOT_SET;
}
TransferSpec::DataSourceCase TransferSpec::data_source_case() const {
  return TransferSpec::DataSourceCase(_oneof_case_[0]);
}
TransferSpec::DataSinkCase TransferSpec::data_sink_case() const {
  return TransferSpec::DataSinkCase(_oneof_case_[1]);
}
inline const TransferSpec* TransferSpec::internal_default_instance() {
  return &TransferSpec_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Schedule::_slow_mutable_schedule_start_date() {
  schedule_start_date_ = ::google::protobuf::Arena::CreateMessage< ::google::type::Date >(
      GetArenaNoVirtual());
}
::google::type::Date* Schedule::_slow_release_schedule_start_date() {
  if (schedule_start_date_ == NULL) {
    return NULL;
  } else {
    ::google::type::Date* temp = new ::google::type::Date(*schedule_start_date_);
    schedule_start_date_ = NULL;
    return temp;
  }
}
::google::type::Date* Schedule::unsafe_arena_release_schedule_start_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.Schedule.schedule_start_date)
  
  ::google::type::Date* temp = schedule_start_date_;
  schedule_start_date_ = NULL;
  return temp;
}
void Schedule::_slow_set_allocated_schedule_start_date(
    ::google::protobuf::Arena* message_arena, ::google::type::Date** schedule_start_date) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*schedule_start_date) == NULL) {
      message_arena->Own(*schedule_start_date);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*schedule_start_date)) {
      ::google::type::Date* new_schedule_start_date = 
            ::google::protobuf::Arena::CreateMessage< ::google::type::Date >(
            message_arena);
      new_schedule_start_date->CopyFrom(**schedule_start_date);
      *schedule_start_date = new_schedule_start_date;
    }
}
void Schedule::unsafe_arena_set_allocated_schedule_start_date(
    ::google::type::Date* schedule_start_date) {
  if (GetArenaNoVirtual() == NULL) {
    delete schedule_start_date_;
  }
  schedule_start_date_ = schedule_start_date;
  if (schedule_start_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.Schedule.schedule_start_date)
}
void Schedule::_slow_mutable_schedule_end_date() {
  schedule_end_date_ = ::google::protobuf::Arena::CreateMessage< ::google::type::Date >(
      GetArenaNoVirtual());
}
::google::type::Date* Schedule::_slow_release_schedule_end_date() {
  if (schedule_end_date_ == NULL) {
    return NULL;
  } else {
    ::google::type::Date* temp = new ::google::type::Date(*schedule_end_date_);
    schedule_end_date_ = NULL;
    return temp;
  }
}
::google::type::Date* Schedule::unsafe_arena_release_schedule_end_date() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.Schedule.schedule_end_date)
  
  ::google::type::Date* temp = schedule_end_date_;
  schedule_end_date_ = NULL;
  return temp;
}
void Schedule::_slow_set_allocated_schedule_end_date(
    ::google::protobuf::Arena* message_arena, ::google::type::Date** schedule_end_date) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*schedule_end_date) == NULL) {
      message_arena->Own(*schedule_end_date);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*schedule_end_date)) {
      ::google::type::Date* new_schedule_end_date = 
            ::google::protobuf::Arena::CreateMessage< ::google::type::Date >(
            message_arena);
      new_schedule_end_date->CopyFrom(**schedule_end_date);
      *schedule_end_date = new_schedule_end_date;
    }
}
void Schedule::unsafe_arena_set_allocated_schedule_end_date(
    ::google::type::Date* schedule_end_date) {
  if (GetArenaNoVirtual() == NULL) {
    delete schedule_end_date_;
  }
  schedule_end_date_ = schedule_end_date;
  if (schedule_end_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.Schedule.schedule_end_date)
}
void Schedule::_slow_mutable_start_time_of_day() {
  start_time_of_day_ = ::google::protobuf::Arena::Create< ::google::type::TimeOfDay >(
      GetArenaNoVirtual());
}
::google::type::TimeOfDay* Schedule::_slow_release_start_time_of_day() {
  if (start_time_of_day_ == NULL) {
    return NULL;
  } else {
    ::google::type::TimeOfDay* temp = new ::google::type::TimeOfDay(*start_time_of_day_);
    start_time_of_day_ = NULL;
    return temp;
  }
}
::google::type::TimeOfDay* Schedule::unsafe_arena_release_start_time_of_day() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.Schedule.start_time_of_day)
  
  ::google::type::TimeOfDay* temp = start_time_of_day_;
  start_time_of_day_ = NULL;
  return temp;
}
void Schedule::unsafe_arena_set_allocated_start_time_of_day(
    ::google::type::TimeOfDay* start_time_of_day) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_of_day_;
  }
  start_time_of_day_ = start_time_of_day;
  if (start_time_of_day) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.Schedule.start_time_of_day)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Schedule::kScheduleStartDateFieldNumber;
const int Schedule::kScheduleEndDateFieldNumber;
const int Schedule::kStartTimeOfDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Schedule::Schedule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.Schedule)
}
Schedule::Schedule(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.Schedule)
}

void Schedule::InitAsDefaultInstance() {
  schedule_start_date_ = const_cast< ::google::type::Date*>(
      ::google::type::Date::internal_default_instance());
  schedule_end_date_ = const_cast< ::google::type::Date*>(
      ::google::type::Date::internal_default_instance());
  start_time_of_day_ = const_cast< ::google::type::TimeOfDay*>(
      ::google::type::TimeOfDay::internal_default_instance());
}

Schedule::Schedule(const Schedule& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.Schedule)
}

void Schedule::SharedCtor() {
  schedule_start_date_ = NULL;
  schedule_end_date_ = NULL;
  start_time_of_day_ = NULL;
  _cached_size_ = 0;
}

Schedule::~Schedule() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.Schedule)
  SharedDtor();
}

void Schedule::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &Schedule_default_instance_.get()) {
    delete schedule_start_date_;
    delete schedule_end_date_;
    delete start_time_of_day_;
  }
}

void Schedule::ArenaDtor(void* object) {
  Schedule* _this = reinterpret_cast< Schedule* >(object);
  (void)_this;
}
void Schedule::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Schedule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Schedule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Schedule_descriptor_;
}

const Schedule& Schedule::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Schedule> Schedule_default_instance_;

Schedule* Schedule::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Schedule>(arena);
}

void Schedule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.Schedule)
  if (GetArenaNoVirtual() == NULL && schedule_start_date_ != NULL) delete schedule_start_date_;
  schedule_start_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && schedule_end_date_ != NULL) delete schedule_end_date_;
  schedule_end_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_of_day_ != NULL) delete start_time_of_day_;
  start_time_of_day_ = NULL;
}

bool Schedule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.Schedule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.type.Date schedule_start_date = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schedule_start_date()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_schedule_end_date;
        break;
      }

      // optional .google.type.Date schedule_end_date = 2;
      case 2: {
        if (tag == 18) {
         parse_schedule_end_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schedule_end_date()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_start_time_of_day;
        break;
      }

      // optional .google.type.TimeOfDay start_time_of_day = 3;
      case 3: {
        if (tag == 26) {
         parse_start_time_of_day:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time_of_day()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.Schedule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.Schedule)
  return false;
#undef DO_
}

void Schedule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.Schedule)
  // optional .google.type.Date schedule_start_date = 1;
  if (this->has_schedule_start_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->schedule_start_date_, output);
  }

  // optional .google.type.Date schedule_end_date = 2;
  if (this->has_schedule_end_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->schedule_end_date_, output);
  }

  // optional .google.type.TimeOfDay start_time_of_day = 3;
  if (this->has_start_time_of_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->start_time_of_day_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.Schedule)
}

::google::protobuf::uint8* Schedule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.Schedule)
  // optional .google.type.Date schedule_start_date = 1;
  if (this->has_schedule_start_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->schedule_start_date_, false, target);
  }

  // optional .google.type.Date schedule_end_date = 2;
  if (this->has_schedule_end_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->schedule_end_date_, false, target);
  }

  // optional .google.type.TimeOfDay start_time_of_day = 3;
  if (this->has_start_time_of_day()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->start_time_of_day_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.Schedule)
  return target;
}

size_t Schedule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.Schedule)
  size_t total_size = 0;

  // optional .google.type.Date schedule_start_date = 1;
  if (this->has_schedule_start_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->schedule_start_date_);
  }

  // optional .google.type.Date schedule_end_date = 2;
  if (this->has_schedule_end_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->schedule_end_date_);
  }

  // optional .google.type.TimeOfDay start_time_of_day = 3;
  if (this->has_start_time_of_day()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_of_day_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Schedule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.Schedule)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Schedule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Schedule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.Schedule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.Schedule)
    UnsafeMergeFrom(*source);
  }
}

void Schedule::MergeFrom(const Schedule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.Schedule)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Schedule::UnsafeMergeFrom(const Schedule& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_schedule_start_date()) {
    mutable_schedule_start_date()->::google::type::Date::MergeFrom(from.schedule_start_date());
  }
  if (from.has_schedule_end_date()) {
    mutable_schedule_end_date()->::google::type::Date::MergeFrom(from.schedule_end_date());
  }
  if (from.has_start_time_of_day()) {
    mutable_start_time_of_day()->::google::type::TimeOfDay::MergeFrom(from.start_time_of_day());
  }
}

void Schedule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.Schedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Schedule::CopyFrom(const Schedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.Schedule)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Schedule::IsInitialized() const {

  return true;
}

void Schedule::Swap(Schedule* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Schedule temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Schedule::UnsafeArenaSwap(Schedule* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Schedule::InternalSwap(Schedule* other) {
  std::swap(schedule_start_date_, other->schedule_start_date_);
  std::swap(schedule_end_date_, other->schedule_end_date_);
  std::swap(start_time_of_day_, other->start_time_of_day_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Schedule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Schedule_descriptor_;
  metadata.reflection = Schedule_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Schedule

// optional .google.type.Date schedule_start_date = 1;
bool Schedule::has_schedule_start_date() const {
  return this != internal_default_instance() && schedule_start_date_ != NULL;
}
void Schedule::clear_schedule_start_date() {
  if (GetArenaNoVirtual() == NULL && schedule_start_date_ != NULL) delete schedule_start_date_;
  schedule_start_date_ = NULL;
}
const ::google::type::Date& Schedule::schedule_start_date() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.Schedule.schedule_start_date)
  return schedule_start_date_ != NULL ? *schedule_start_date_
                         : *::google::type::Date::internal_default_instance();
}
::google::type::Date* Schedule::mutable_schedule_start_date() {
  
  if (schedule_start_date_ == NULL) {
    _slow_mutable_schedule_start_date();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.Schedule.schedule_start_date)
  return schedule_start_date_;
}
::google::type::Date* Schedule::release_schedule_start_date() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.Schedule.schedule_start_date)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_schedule_start_date();
  } else {
    ::google::type::Date* temp = schedule_start_date_;
    schedule_start_date_ = NULL;
    return temp;
  }
}
 void Schedule::set_allocated_schedule_start_date(::google::type::Date* schedule_start_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete schedule_start_date_;
  }
  if (schedule_start_date != NULL) {
    _slow_set_allocated_schedule_start_date(message_arena, &schedule_start_date);
  }
  schedule_start_date_ = schedule_start_date;
  if (schedule_start_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.Schedule.schedule_start_date)
}

// optional .google.type.Date schedule_end_date = 2;
bool Schedule::has_schedule_end_date() const {
  return this != internal_default_instance() && schedule_end_date_ != NULL;
}
void Schedule::clear_schedule_end_date() {
  if (GetArenaNoVirtual() == NULL && schedule_end_date_ != NULL) delete schedule_end_date_;
  schedule_end_date_ = NULL;
}
const ::google::type::Date& Schedule::schedule_end_date() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.Schedule.schedule_end_date)
  return schedule_end_date_ != NULL ? *schedule_end_date_
                         : *::google::type::Date::internal_default_instance();
}
::google::type::Date* Schedule::mutable_schedule_end_date() {
  
  if (schedule_end_date_ == NULL) {
    _slow_mutable_schedule_end_date();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.Schedule.schedule_end_date)
  return schedule_end_date_;
}
::google::type::Date* Schedule::release_schedule_end_date() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.Schedule.schedule_end_date)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_schedule_end_date();
  } else {
    ::google::type::Date* temp = schedule_end_date_;
    schedule_end_date_ = NULL;
    return temp;
  }
}
 void Schedule::set_allocated_schedule_end_date(::google::type::Date* schedule_end_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete schedule_end_date_;
  }
  if (schedule_end_date != NULL) {
    _slow_set_allocated_schedule_end_date(message_arena, &schedule_end_date);
  }
  schedule_end_date_ = schedule_end_date;
  if (schedule_end_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.Schedule.schedule_end_date)
}

// optional .google.type.TimeOfDay start_time_of_day = 3;
bool Schedule::has_start_time_of_day() const {
  return this != internal_default_instance() && start_time_of_day_ != NULL;
}
void Schedule::clear_start_time_of_day() {
  if (GetArenaNoVirtual() == NULL && start_time_of_day_ != NULL) delete start_time_of_day_;
  start_time_of_day_ = NULL;
}
const ::google::type::TimeOfDay& Schedule::start_time_of_day() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.Schedule.start_time_of_day)
  return start_time_of_day_ != NULL ? *start_time_of_day_
                         : *::google::type::TimeOfDay::internal_default_instance();
}
::google::type::TimeOfDay* Schedule::mutable_start_time_of_day() {
  
  if (start_time_of_day_ == NULL) {
    _slow_mutable_start_time_of_day();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.Schedule.start_time_of_day)
  return start_time_of_day_;
}
::google::type::TimeOfDay* Schedule::release_start_time_of_day() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.Schedule.start_time_of_day)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time_of_day();
  } else {
    ::google::type::TimeOfDay* temp = start_time_of_day_;
    start_time_of_day_ = NULL;
    return temp;
  }
}
 void Schedule::set_allocated_start_time_of_day(::google::type::TimeOfDay* start_time_of_day) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_of_day_;
  }
  if (start_time_of_day != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(start_time_of_day);
    }
  }
  start_time_of_day_ = start_time_of_day;
  if (start_time_of_day) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.Schedule.start_time_of_day)
}

inline const Schedule* Schedule::internal_default_instance() {
  return &Schedule_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* TransferJob_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferJob_Status_descriptor_;
}
bool TransferJob_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TransferJob_Status TransferJob::STATUS_UNSPECIFIED;
const TransferJob_Status TransferJob::ENABLED;
const TransferJob_Status TransferJob::DISABLED;
const TransferJob_Status TransferJob::DELETED;
const TransferJob_Status TransferJob::Status_MIN;
const TransferJob_Status TransferJob::Status_MAX;
const int TransferJob::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
void TransferJob::_slow_mutable_transfer_spec() {
  transfer_spec_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferSpec >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::TransferSpec* TransferJob::_slow_release_transfer_spec() {
  if (transfer_spec_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::TransferSpec* temp = new ::google::storagetransfer::v1::TransferSpec(*transfer_spec_);
    transfer_spec_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::TransferSpec* TransferJob::unsafe_arena_release_transfer_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.transfer_spec)
  
  ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
  transfer_spec_ = NULL;
  return temp;
}
void TransferJob::_slow_set_allocated_transfer_spec(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferSpec** transfer_spec) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*transfer_spec) == NULL) {
      message_arena->Own(*transfer_spec);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*transfer_spec)) {
      ::google::storagetransfer::v1::TransferSpec* new_transfer_spec = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferSpec >(
            message_arena);
      new_transfer_spec->CopyFrom(**transfer_spec);
      *transfer_spec = new_transfer_spec;
    }
}
void TransferJob::unsafe_arena_set_allocated_transfer_spec(
    ::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = transfer_spec;
  if (transfer_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.transfer_spec)
}
void TransferJob::_slow_mutable_schedule() {
  schedule_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::Schedule >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::Schedule* TransferJob::_slow_release_schedule() {
  if (schedule_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::Schedule* temp = new ::google::storagetransfer::v1::Schedule(*schedule_);
    schedule_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::Schedule* TransferJob::unsafe_arena_release_schedule() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.schedule)
  
  ::google::storagetransfer::v1::Schedule* temp = schedule_;
  schedule_ = NULL;
  return temp;
}
void TransferJob::_slow_set_allocated_schedule(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::Schedule** schedule) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*schedule) == NULL) {
      message_arena->Own(*schedule);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*schedule)) {
      ::google::storagetransfer::v1::Schedule* new_schedule = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::Schedule >(
            message_arena);
      new_schedule->CopyFrom(**schedule);
      *schedule = new_schedule;
    }
}
void TransferJob::unsafe_arena_set_allocated_schedule(
    ::google::storagetransfer::v1::Schedule* schedule) {
  if (GetArenaNoVirtual() == NULL) {
    delete schedule_;
  }
  schedule_ = schedule;
  if (schedule) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.schedule)
}
void TransferJob::_slow_mutable_creation_time() {
  creation_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* TransferJob::_slow_release_creation_time() {
  if (creation_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*creation_time_);
    creation_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* TransferJob::unsafe_arena_release_creation_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.creation_time)
  
  ::google::protobuf::Timestamp* temp = creation_time_;
  creation_time_ = NULL;
  return temp;
}
void TransferJob::_slow_set_allocated_creation_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** creation_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*creation_time) == NULL) {
      message_arena->Own(*creation_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*creation_time)) {
      ::google::protobuf::Timestamp* new_creation_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_creation_time->CopyFrom(**creation_time);
      *creation_time = new_creation_time;
    }
}
void TransferJob::unsafe_arena_set_allocated_creation_time(
    ::google::protobuf::Timestamp* creation_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete creation_time_;
  }
  creation_time_ = creation_time;
  if (creation_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.creation_time)
}
void TransferJob::_slow_mutable_last_modification_time() {
  last_modification_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* TransferJob::_slow_release_last_modification_time() {
  if (last_modification_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*last_modification_time_);
    last_modification_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* TransferJob::unsafe_arena_release_last_modification_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.last_modification_time)
  
  ::google::protobuf::Timestamp* temp = last_modification_time_;
  last_modification_time_ = NULL;
  return temp;
}
void TransferJob::_slow_set_allocated_last_modification_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** last_modification_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*last_modification_time) == NULL) {
      message_arena->Own(*last_modification_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*last_modification_time)) {
      ::google::protobuf::Timestamp* new_last_modification_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_last_modification_time->CopyFrom(**last_modification_time);
      *last_modification_time = new_last_modification_time;
    }
}
void TransferJob::unsafe_arena_set_allocated_last_modification_time(
    ::google::protobuf::Timestamp* last_modification_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_modification_time_;
  }
  last_modification_time_ = last_modification_time;
  if (last_modification_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.last_modification_time)
}
void TransferJob::_slow_mutable_deletion_time() {
  deletion_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* TransferJob::_slow_release_deletion_time() {
  if (deletion_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*deletion_time_);
    deletion_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* TransferJob::unsafe_arena_release_deletion_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.deletion_time)
  
  ::google::protobuf::Timestamp* temp = deletion_time_;
  deletion_time_ = NULL;
  return temp;
}
void TransferJob::_slow_set_allocated_deletion_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** deletion_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*deletion_time) == NULL) {
      message_arena->Own(*deletion_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*deletion_time)) {
      ::google::protobuf::Timestamp* new_deletion_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_deletion_time->CopyFrom(**deletion_time);
      *deletion_time = new_deletion_time;
    }
}
void TransferJob::unsafe_arena_set_allocated_deletion_time(
    ::google::protobuf::Timestamp* deletion_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete deletion_time_;
  }
  deletion_time_ = deletion_time;
  if (deletion_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.deletion_time)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferJob::kNameFieldNumber;
const int TransferJob::kDescriptionFieldNumber;
const int TransferJob::kProjectIdFieldNumber;
const int TransferJob::kTransferSpecFieldNumber;
const int TransferJob::kScheduleFieldNumber;
const int TransferJob::kStatusFieldNumber;
const int TransferJob::kCreationTimeFieldNumber;
const int TransferJob::kLastModificationTimeFieldNumber;
const int TransferJob::kDeletionTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferJob::TransferJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferJob)
}
TransferJob::TransferJob(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferJob)
}

void TransferJob::InitAsDefaultInstance() {
  transfer_spec_ = const_cast< ::google::storagetransfer::v1::TransferSpec*>(
      ::google::storagetransfer::v1::TransferSpec::internal_default_instance());
  schedule_ = const_cast< ::google::storagetransfer::v1::Schedule*>(
      ::google::storagetransfer::v1::Schedule::internal_default_instance());
  creation_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  last_modification_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  deletion_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

TransferJob::TransferJob(const TransferJob& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferJob)
}

void TransferJob::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_spec_ = NULL;
  schedule_ = NULL;
  creation_time_ = NULL;
  last_modification_time_ = NULL;
  deletion_time_ = NULL;
  status_ = 0;
  _cached_size_ = 0;
}

TransferJob::~TransferJob() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferJob)
  SharedDtor();
}

void TransferJob::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  description_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  project_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &TransferJob_default_instance_.get()) {
    delete transfer_spec_;
    delete schedule_;
    delete creation_time_;
    delete last_modification_time_;
    delete deletion_time_;
  }
}

void TransferJob::ArenaDtor(void* object) {
  TransferJob* _this = reinterpret_cast< TransferJob* >(object);
  (void)_this;
}
void TransferJob::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferJob::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferJob_descriptor_;
}

const TransferJob& TransferJob::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransferJob> TransferJob_default_instance_;

TransferJob* TransferJob::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferJob>(arena);
}

void TransferJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferJob)
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) delete transfer_spec_;
  transfer_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && schedule_ != NULL) delete schedule_;
  schedule_ = NULL;
  status_ = 0;
  if (GetArenaNoVirtual() == NULL && creation_time_ != NULL) delete creation_time_;
  creation_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_modification_time_ != NULL) delete last_modification_time_;
  last_modification_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletion_time_ != NULL) delete deletion_time_;
  deletion_time_ = NULL;
}

bool TransferJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferJob.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }

      // optional string description = 2;
      case 2: {
        if (tag == 18) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferJob.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_project_id;
        break;
      }

      // optional string project_id = 3;
      case 3: {
        if (tag == 26) {
         parse_project_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferJob.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_transfer_spec;
        break;
      }

      // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
      case 4: {
        if (tag == 34) {
         parse_transfer_spec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_spec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_schedule;
        break;
      }

      // optional .google.storagetransfer.v1.Schedule schedule = 5;
      case 5: {
        if (tag == 42) {
         parse_schedule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schedule()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_status;
        break;
      }

      // optional .google.storagetransfer.v1.TransferJob.Status status = 6;
      case 6: {
        if (tag == 48) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::storagetransfer::v1::TransferJob_Status >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_creation_time;
        break;
      }

      // optional .google.protobuf.Timestamp creation_time = 7;
      case 7: {
        if (tag == 58) {
         parse_creation_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_creation_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_last_modification_time;
        break;
      }

      // optional .google.protobuf.Timestamp last_modification_time = 8;
      case 8: {
        if (tag == 66) {
         parse_last_modification_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last_modification_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_deletion_time;
        break;
      }

      // optional .google.protobuf.Timestamp deletion_time = 9;
      case 9: {
        if (tag == 74) {
         parse_deletion_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletion_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferJob)
  return false;
#undef DO_
}

void TransferJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferJob)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // optional string project_id = 3;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->project_id(), output);
  }

  // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
  if (this->has_transfer_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->transfer_spec_, output);
  }

  // optional .google.storagetransfer.v1.Schedule schedule = 5;
  if (this->has_schedule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->schedule_, output);
  }

  // optional .google.storagetransfer.v1.TransferJob.Status status = 6;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->status(), output);
  }

  // optional .google.protobuf.Timestamp creation_time = 7;
  if (this->has_creation_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->creation_time_, output);
  }

  // optional .google.protobuf.Timestamp last_modification_time = 8;
  if (this->has_last_modification_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->last_modification_time_, output);
  }

  // optional .google.protobuf.Timestamp deletion_time = 9;
  if (this->has_deletion_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->deletion_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferJob)
}

::google::protobuf::uint8* TransferJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferJob)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // optional string project_id = 3;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->project_id(), target);
  }

  // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
  if (this->has_transfer_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->transfer_spec_, false, target);
  }

  // optional .google.storagetransfer.v1.Schedule schedule = 5;
  if (this->has_schedule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->schedule_, false, target);
  }

  // optional .google.storagetransfer.v1.TransferJob.Status status = 6;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->status(), target);
  }

  // optional .google.protobuf.Timestamp creation_time = 7;
  if (this->has_creation_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->creation_time_, false, target);
  }

  // optional .google.protobuf.Timestamp last_modification_time = 8;
  if (this->has_last_modification_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->last_modification_time_, false, target);
  }

  // optional .google.protobuf.Timestamp deletion_time = 9;
  if (this->has_deletion_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->deletion_time_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferJob)
  return target;
}

size_t TransferJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferJob)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional string project_id = 3;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
  if (this->has_transfer_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transfer_spec_);
  }

  // optional .google.storagetransfer.v1.Schedule schedule = 5;
  if (this->has_schedule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->schedule_);
  }

  // optional .google.storagetransfer.v1.TransferJob.Status status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional .google.protobuf.Timestamp creation_time = 7;
  if (this->has_creation_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->creation_time_);
  }

  // optional .google.protobuf.Timestamp last_modification_time = 8;
  if (this->has_last_modification_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->last_modification_time_);
  }

  // optional .google.protobuf.Timestamp deletion_time = 9;
  if (this->has_deletion_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deletion_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferJob)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransferJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferJob)
    UnsafeMergeFrom(*source);
  }
}

void TransferJob::MergeFrom(const TransferJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferJob)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransferJob::UnsafeMergeFrom(const TransferJob& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.has_transfer_spec()) {
    mutable_transfer_spec()->::google::storagetransfer::v1::TransferSpec::MergeFrom(from.transfer_spec());
  }
  if (from.has_schedule()) {
    mutable_schedule()->::google::storagetransfer::v1::Schedule::MergeFrom(from.schedule());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.has_creation_time()) {
    mutable_creation_time()->::google::protobuf::Timestamp::MergeFrom(from.creation_time());
  }
  if (from.has_last_modification_time()) {
    mutable_last_modification_time()->::google::protobuf::Timestamp::MergeFrom(from.last_modification_time());
  }
  if (from.has_deletion_time()) {
    mutable_deletion_time()->::google::protobuf::Timestamp::MergeFrom(from.deletion_time());
  }
}

void TransferJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferJob::CopyFrom(const TransferJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferJob)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransferJob::IsInitialized() const {

  return true;
}

void TransferJob::Swap(TransferJob* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferJob temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TransferJob::UnsafeArenaSwap(TransferJob* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferJob::InternalSwap(TransferJob* other) {
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  project_id_.Swap(&other->project_id_);
  std::swap(transfer_spec_, other->transfer_spec_);
  std::swap(schedule_, other->schedule_);
  std::swap(status_, other->status_);
  std::swap(creation_time_, other->creation_time_);
  std::swap(last_modification_time_, other->last_modification_time_);
  std::swap(deletion_time_, other->deletion_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferJob::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferJob_descriptor_;
  metadata.reflection = TransferJob_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferJob

// optional string name = 1;
void TransferJob::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TransferJob::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferJob::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.name)
}
void TransferJob::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferJob.name)
}
void TransferJob::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferJob.name)
}
::std::string* TransferJob::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferJob::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferJob::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TransferJob::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.name)
}
void TransferJob::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.name)
}

// optional string description = 2;
void TransferJob::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TransferJob::description() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.description)
  return description_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferJob::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.description)
}
void TransferJob::set_description(const char* value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferJob.description)
}
void TransferJob::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferJob.description)
}
::std::string* TransferJob::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferJob::release_description() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferJob::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TransferJob::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.description)
}
void TransferJob::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.description)
}

// optional string project_id = 3;
void TransferJob::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TransferJob::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferJob::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.project_id)
}
void TransferJob::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferJob.project_id)
}
void TransferJob::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferJob.project_id)
}
::std::string* TransferJob::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferJob::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferJob::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferJob.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TransferJob::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.project_id)
}
void TransferJob::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.project_id)
}

// optional .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
bool TransferJob::has_transfer_spec() const {
  return this != internal_default_instance() && transfer_spec_ != NULL;
}
void TransferJob::clear_transfer_spec() {
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) delete transfer_spec_;
  transfer_spec_ = NULL;
}
const ::google::storagetransfer::v1::TransferSpec& TransferJob::transfer_spec() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.transfer_spec)
  return transfer_spec_ != NULL ? *transfer_spec_
                         : *::google::storagetransfer::v1::TransferSpec::internal_default_instance();
}
::google::storagetransfer::v1::TransferSpec* TransferJob::mutable_transfer_spec() {
  
  if (transfer_spec_ == NULL) {
    _slow_mutable_transfer_spec();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.transfer_spec)
  return transfer_spec_;
}
::google::storagetransfer::v1::TransferSpec* TransferJob::release_transfer_spec() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.transfer_spec)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_transfer_spec();
  } else {
    ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
    transfer_spec_ = NULL;
    return temp;
  }
}
 void TransferJob::set_allocated_transfer_spec(::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_spec_;
  }
  if (transfer_spec != NULL) {
    _slow_set_allocated_transfer_spec(message_arena, &transfer_spec);
  }
  transfer_spec_ = transfer_spec;
  if (transfer_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.transfer_spec)
}

// optional .google.storagetransfer.v1.Schedule schedule = 5;
bool TransferJob::has_schedule() const {
  return this != internal_default_instance() && schedule_ != NULL;
}
void TransferJob::clear_schedule() {
  if (GetArenaNoVirtual() == NULL && schedule_ != NULL) delete schedule_;
  schedule_ = NULL;
}
const ::google::storagetransfer::v1::Schedule& TransferJob::schedule() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.schedule)
  return schedule_ != NULL ? *schedule_
                         : *::google::storagetransfer::v1::Schedule::internal_default_instance();
}
::google::storagetransfer::v1::Schedule* TransferJob::mutable_schedule() {
  
  if (schedule_ == NULL) {
    _slow_mutable_schedule();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.schedule)
  return schedule_;
}
::google::storagetransfer::v1::Schedule* TransferJob::release_schedule() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.schedule)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_schedule();
  } else {
    ::google::storagetransfer::v1::Schedule* temp = schedule_;
    schedule_ = NULL;
    return temp;
  }
}
 void TransferJob::set_allocated_schedule(::google::storagetransfer::v1::Schedule* schedule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete schedule_;
  }
  if (schedule != NULL) {
    _slow_set_allocated_schedule(message_arena, &schedule);
  }
  schedule_ = schedule;
  if (schedule) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.schedule)
}

// optional .google.storagetransfer.v1.TransferJob.Status status = 6;
void TransferJob::clear_status() {
  status_ = 0;
}
::google::storagetransfer::v1::TransferJob_Status TransferJob::status() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.status)
  return static_cast< ::google::storagetransfer::v1::TransferJob_Status >(status_);
}
void TransferJob::set_status(::google::storagetransfer::v1::TransferJob_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferJob.status)
}

// optional .google.protobuf.Timestamp creation_time = 7;
bool TransferJob::has_creation_time() const {
  return this != internal_default_instance() && creation_time_ != NULL;
}
void TransferJob::clear_creation_time() {
  if (GetArenaNoVirtual() == NULL && creation_time_ != NULL) delete creation_time_;
  creation_time_ = NULL;
}
const ::google::protobuf::Timestamp& TransferJob::creation_time() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.creation_time)
  return creation_time_ != NULL ? *creation_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TransferJob::mutable_creation_time() {
  
  if (creation_time_ == NULL) {
    _slow_mutable_creation_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.creation_time)
  return creation_time_;
}
::google::protobuf::Timestamp* TransferJob::release_creation_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.creation_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_creation_time();
  } else {
    ::google::protobuf::Timestamp* temp = creation_time_;
    creation_time_ = NULL;
    return temp;
  }
}
 void TransferJob::set_allocated_creation_time(::google::protobuf::Timestamp* creation_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete creation_time_;
  }
  if (creation_time != NULL) {
    _slow_set_allocated_creation_time(message_arena, &creation_time);
  }
  creation_time_ = creation_time;
  if (creation_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.creation_time)
}

// optional .google.protobuf.Timestamp last_modification_time = 8;
bool TransferJob::has_last_modification_time() const {
  return this != internal_default_instance() && last_modification_time_ != NULL;
}
void TransferJob::clear_last_modification_time() {
  if (GetArenaNoVirtual() == NULL && last_modification_time_ != NULL) delete last_modification_time_;
  last_modification_time_ = NULL;
}
const ::google::protobuf::Timestamp& TransferJob::last_modification_time() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.last_modification_time)
  return last_modification_time_ != NULL ? *last_modification_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TransferJob::mutable_last_modification_time() {
  
  if (last_modification_time_ == NULL) {
    _slow_mutable_last_modification_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.last_modification_time)
  return last_modification_time_;
}
::google::protobuf::Timestamp* TransferJob::release_last_modification_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.last_modification_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_last_modification_time();
  } else {
    ::google::protobuf::Timestamp* temp = last_modification_time_;
    last_modification_time_ = NULL;
    return temp;
  }
}
 void TransferJob::set_allocated_last_modification_time(::google::protobuf::Timestamp* last_modification_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete last_modification_time_;
  }
  if (last_modification_time != NULL) {
    _slow_set_allocated_last_modification_time(message_arena, &last_modification_time);
  }
  last_modification_time_ = last_modification_time;
  if (last_modification_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.last_modification_time)
}

// optional .google.protobuf.Timestamp deletion_time = 9;
bool TransferJob::has_deletion_time() const {
  return this != internal_default_instance() && deletion_time_ != NULL;
}
void TransferJob::clear_deletion_time() {
  if (GetArenaNoVirtual() == NULL && deletion_time_ != NULL) delete deletion_time_;
  deletion_time_ = NULL;
}
const ::google::protobuf::Timestamp& TransferJob::deletion_time() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferJob.deletion_time)
  return deletion_time_ != NULL ? *deletion_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TransferJob::mutable_deletion_time() {
  
  if (deletion_time_ == NULL) {
    _slow_mutable_deletion_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferJob.deletion_time)
  return deletion_time_;
}
::google::protobuf::Timestamp* TransferJob::release_deletion_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferJob.deletion_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_deletion_time();
  } else {
    ::google::protobuf::Timestamp* temp = deletion_time_;
    deletion_time_ = NULL;
    return temp;
  }
}
 void TransferJob::set_allocated_deletion_time(::google::protobuf::Timestamp* deletion_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deletion_time_;
  }
  if (deletion_time != NULL) {
    _slow_set_allocated_deletion_time(message_arena, &deletion_time);
  }
  deletion_time_ = deletion_time;
  if (deletion_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferJob.deletion_time)
}

inline const TransferJob* TransferJob::internal_default_instance() {
  return &TransferJob_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorLogEntry::kUrlFieldNumber;
const int ErrorLogEntry::kErrorDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorLogEntry::ErrorLogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ErrorLogEntry)
}
ErrorLogEntry::ErrorLogEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  error_details_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ErrorLogEntry)
}

void ErrorLogEntry::InitAsDefaultInstance() {
}

ErrorLogEntry::ErrorLogEntry(const ErrorLogEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ErrorLogEntry)
}

void ErrorLogEntry::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ErrorLogEntry::~ErrorLogEntry() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ErrorLogEntry)
  SharedDtor();
}

void ErrorLogEntry::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  url_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ErrorLogEntry::ArenaDtor(void* object) {
  ErrorLogEntry* _this = reinterpret_cast< ErrorLogEntry* >(object);
  (void)_this;
}
void ErrorLogEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ErrorLogEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorLogEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorLogEntry_descriptor_;
}

const ErrorLogEntry& ErrorLogEntry::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorLogEntry> ErrorLogEntry_default_instance_;

ErrorLogEntry* ErrorLogEntry::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ErrorLogEntry>(arena);
}

void ErrorLogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ErrorLogEntry)
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  error_details_.Clear();
}

bool ErrorLogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ErrorLogEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ErrorLogEntry.url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error_details;
        break;
      }

      // repeated string error_details = 3;
      case 3: {
        if (tag == 26) {
         parse_error_details:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_error_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_details(this->error_details_size() - 1).data(),
            this->error_details(this->error_details_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ErrorLogEntry.error_details"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error_details;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ErrorLogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ErrorLogEntry)
  return false;
#undef DO_
}

void ErrorLogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ErrorLogEntry)
  // optional string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // repeated string error_details = 3;
  for (int i = 0; i < this->error_details_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_details(i).data(), this->error_details(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.error_details");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->error_details(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ErrorLogEntry)
}

::google::protobuf::uint8* ErrorLogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ErrorLogEntry)
  // optional string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // repeated string error_details = 3;
  for (int i = 0; i < this->error_details_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_details(i).data(), this->error_details(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.error_details");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->error_details(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ErrorLogEntry)
  return target;
}

size_t ErrorLogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ErrorLogEntry)
  size_t total_size = 0;

  // optional string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // repeated string error_details = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->error_details_size());
  for (int i = 0; i < this->error_details_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->error_details(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorLogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ErrorLogEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorLogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorLogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ErrorLogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ErrorLogEntry)
    UnsafeMergeFrom(*source);
  }
}

void ErrorLogEntry::MergeFrom(const ErrorLogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ErrorLogEntry)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorLogEntry::UnsafeMergeFrom(const ErrorLogEntry& from) {
  GOOGLE_DCHECK(&from != this);
  error_details_.UnsafeMergeFrom(from.error_details_);
  if (from.url().size() > 0) {
    set_url(from.url());
  }
}

void ErrorLogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ErrorLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorLogEntry::CopyFrom(const ErrorLogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ErrorLogEntry)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorLogEntry::IsInitialized() const {

  return true;
}

void ErrorLogEntry::Swap(ErrorLogEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ErrorLogEntry temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ErrorLogEntry::UnsafeArenaSwap(ErrorLogEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ErrorLogEntry::InternalSwap(ErrorLogEntry* other) {
  url_.Swap(&other->url_);
  error_details_.UnsafeArenaSwap(&other->error_details_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorLogEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorLogEntry_descriptor_;
  metadata.reflection = ErrorLogEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorLogEntry

// optional string url = 1;
void ErrorLogEntry::clear_url() {
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ErrorLogEntry::url() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorLogEntry.url)
  return url_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorLogEntry::set_url(const ::std::string& value) {
  
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorLogEntry.url)
}
void ErrorLogEntry::set_url(const char* value) {
  
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ErrorLogEntry.url)
}
void ErrorLogEntry::set_url(const char* value,
    size_t size) {
  
  url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ErrorLogEntry.url)
}
::std::string* ErrorLogEntry::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ErrorLogEntry.url)
  return url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ErrorLogEntry::release_url() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ErrorLogEntry.url)
  
  return url_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ErrorLogEntry::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ErrorLogEntry.url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ErrorLogEntry::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ErrorLogEntry.url)
}
void ErrorLogEntry::unsafe_arena_set_allocated_url(
    ::std::string* url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (url != NULL) {
    
  } else {
    
  }
  url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ErrorLogEntry.url)
}

// repeated string error_details = 3;
int ErrorLogEntry::error_details_size() const {
  return error_details_.size();
}
void ErrorLogEntry::clear_error_details() {
  error_details_.Clear();
}
const ::std::string& ErrorLogEntry::error_details(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_.Get(index);
}
::std::string* ErrorLogEntry::mutable_error_details(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_.Mutable(index);
}
void ErrorLogEntry::set_error_details(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorLogEntry.error_details)
  error_details_.Mutable(index)->assign(value);
}
void ErrorLogEntry::set_error_details(int index, const char* value) {
  error_details_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
void ErrorLogEntry::set_error_details(int index, const char* value, size_t size) {
  error_details_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
::std::string* ErrorLogEntry::add_error_details() {
  // @@protoc_insertion_point(field_add_mutable:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_.Add();
}
void ErrorLogEntry::add_error_details(const ::std::string& value) {
  error_details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
void ErrorLogEntry::add_error_details(const char* value) {
  error_details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
void ErrorLogEntry::add_error_details(const char* value, size_t size) {
  error_details_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.storagetransfer.v1.ErrorLogEntry.error_details)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ErrorLogEntry::error_details() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return error_details_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ErrorLogEntry::mutable_error_details() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ErrorLogEntry.error_details)
  return &error_details_;
}

inline const ErrorLogEntry* ErrorLogEntry::internal_default_instance() {
  return &ErrorLogEntry_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorSummary::kErrorCodeFieldNumber;
const int ErrorSummary::kErrorCountFieldNumber;
const int ErrorSummary::kErrorLogEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorSummary::ErrorSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ErrorSummary)
}
ErrorSummary::ErrorSummary(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  error_log_entries_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ErrorSummary)
}

void ErrorSummary::InitAsDefaultInstance() {
}

ErrorSummary::ErrorSummary(const ErrorSummary& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ErrorSummary)
}

void ErrorSummary::SharedCtor() {
  ::memset(&error_count_, 0, reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&error_count_) + sizeof(error_code_));
  _cached_size_ = 0;
}

ErrorSummary::~ErrorSummary() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ErrorSummary)
  SharedDtor();
}

void ErrorSummary::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void ErrorSummary::ArenaDtor(void* object) {
  ErrorSummary* _this = reinterpret_cast< ErrorSummary* >(object);
  (void)_this;
}
void ErrorSummary::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ErrorSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorSummary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorSummary_descriptor_;
}

const ErrorSummary& ErrorSummary::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorSummary> ErrorSummary_default_instance_;

ErrorSummary* ErrorSummary::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ErrorSummary>(arena);
}

void ErrorSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ErrorSummary)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ErrorSummary, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ErrorSummary*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(error_count_, error_code_);

#undef ZR_HELPER_
#undef ZR_

  error_log_entries_.Clear();
}

bool ErrorSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ErrorSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.rpc.Code error_code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::google::rpc::Code >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error_count;
        break;
      }

      // optional int64 error_count = 2;
      case 2: {
        if (tag == 16) {
         parse_error_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error_log_entries;
        break;
      }

      // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
      case 3: {
        if (tag == 26) {
         parse_error_log_entries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_error_log_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_error_log_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_error_log_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ErrorSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ErrorSummary)
  return false;
#undef DO_
}

void ErrorSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ErrorSummary)
  // optional .google.rpc.Code error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // optional int64 error_count = 2;
  if (this->error_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->error_count(), output);
  }

  // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
  for (unsigned int i = 0, n = this->error_log_entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->error_log_entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ErrorSummary)
}

::google::protobuf::uint8* ErrorSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ErrorSummary)
  // optional .google.rpc.Code error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // optional int64 error_count = 2;
  if (this->error_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->error_count(), target);
  }

  // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
  for (unsigned int i = 0, n = this->error_log_entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->error_log_entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ErrorSummary)
  return target;
}

size_t ErrorSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ErrorSummary)
  size_t total_size = 0;

  // optional .google.rpc.Code error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  // optional int64 error_count = 2;
  if (this->error_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_count());
  }

  // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
  {
    unsigned int count = this->error_log_entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error_log_entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ErrorSummary)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ErrorSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ErrorSummary)
    UnsafeMergeFrom(*source);
  }
}

void ErrorSummary::MergeFrom(const ErrorSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ErrorSummary)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorSummary::UnsafeMergeFrom(const ErrorSummary& from) {
  GOOGLE_DCHECK(&from != this);
  error_log_entries_.MergeFrom(from.error_log_entries_);
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.error_count() != 0) {
    set_error_count(from.error_count());
  }
}

void ErrorSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ErrorSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorSummary::CopyFrom(const ErrorSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ErrorSummary)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorSummary::IsInitialized() const {

  return true;
}

void ErrorSummary::Swap(ErrorSummary* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ErrorSummary temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ErrorSummary::UnsafeArenaSwap(ErrorSummary* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ErrorSummary::InternalSwap(ErrorSummary* other) {
  std::swap(error_code_, other->error_code_);
  std::swap(error_count_, other->error_count_);
  error_log_entries_.UnsafeArenaSwap(&other->error_log_entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorSummary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorSummary_descriptor_;
  metadata.reflection = ErrorSummary_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorSummary

// optional .google.rpc.Code error_code = 1;
void ErrorSummary::clear_error_code() {
  error_code_ = 0;
}
::google::rpc::Code ErrorSummary::error_code() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorSummary.error_code)
  return static_cast< ::google::rpc::Code >(error_code_);
}
void ErrorSummary::set_error_code(::google::rpc::Code value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorSummary.error_code)
}

// optional int64 error_count = 2;
void ErrorSummary::clear_error_count() {
  error_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ErrorSummary::error_count() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorSummary.error_count)
  return error_count_;
}
void ErrorSummary::set_error_count(::google::protobuf::int64 value) {
  
  error_count_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ErrorSummary.error_count)
}

// repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
int ErrorSummary::error_log_entries_size() const {
  return error_log_entries_.size();
}
void ErrorSummary::clear_error_log_entries() {
  error_log_entries_.Clear();
}
const ::google::storagetransfer::v1::ErrorLogEntry& ErrorSummary::error_log_entries(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_.Get(index);
}
::google::storagetransfer::v1::ErrorLogEntry* ErrorSummary::mutable_error_log_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_.Mutable(index);
}
::google::storagetransfer::v1::ErrorLogEntry* ErrorSummary::add_error_log_entries() {
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorLogEntry >*
ErrorSummary::mutable_error_log_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return &error_log_entries_;
}
const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorLogEntry >&
ErrorSummary::error_log_entries() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ErrorSummary.error_log_entries)
  return error_log_entries_;
}

inline const ErrorSummary* ErrorSummary::internal_default_instance() {
  return &ErrorSummary_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferCounters::kObjectsFoundFromSourceFieldNumber;
const int TransferCounters::kBytesFoundFromSourceFieldNumber;
const int TransferCounters::kObjectsFoundOnlyFromSinkFieldNumber;
const int TransferCounters::kBytesFoundOnlyFromSinkFieldNumber;
const int TransferCounters::kObjectsFromSourceSkippedBySyncFieldNumber;
const int TransferCounters::kBytesFromSourceSkippedBySyncFieldNumber;
const int TransferCounters::kObjectsCopiedToSinkFieldNumber;
const int TransferCounters::kBytesCopiedToSinkFieldNumber;
const int TransferCounters::kObjectsDeletedFromSourceFieldNumber;
const int TransferCounters::kBytesDeletedFromSourceFieldNumber;
const int TransferCounters::kObjectsDeletedFromSinkFieldNumber;
const int TransferCounters::kBytesDeletedFromSinkFieldNumber;
const int TransferCounters::kObjectsFromSourceFailedFieldNumber;
const int TransferCounters::kBytesFromSourceFailedFieldNumber;
const int TransferCounters::kObjectsFailedToDeleteFromSinkFieldNumber;
const int TransferCounters::kBytesFailedToDeleteFromSinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferCounters::TransferCounters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferCounters)
}
TransferCounters::TransferCounters(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferCounters)
}

void TransferCounters::InitAsDefaultInstance() {
}

TransferCounters::TransferCounters(const TransferCounters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferCounters)
}

void TransferCounters::SharedCtor() {
  ::memset(&objects_found_from_source_, 0, reinterpret_cast<char*>(&bytes_failed_to_delete_from_sink_) -
    reinterpret_cast<char*>(&objects_found_from_source_) + sizeof(bytes_failed_to_delete_from_sink_));
  _cached_size_ = 0;
}

TransferCounters::~TransferCounters() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferCounters)
  SharedDtor();
}

void TransferCounters::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void TransferCounters::ArenaDtor(void* object) {
  TransferCounters* _this = reinterpret_cast< TransferCounters* >(object);
  (void)_this;
}
void TransferCounters::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferCounters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferCounters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferCounters_descriptor_;
}

const TransferCounters& TransferCounters::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransferCounters> TransferCounters_default_instance_;

TransferCounters* TransferCounters::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferCounters>(arena);
}

void TransferCounters::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferCounters)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TransferCounters, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransferCounters*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(objects_found_from_source_, bytes_copied_to_sink_);
  ZR_(objects_deleted_from_source_, bytes_failed_to_delete_from_sink_);

#undef ZR_HELPER_
#undef ZR_

}

bool TransferCounters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferCounters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 objects_found_from_source = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_found_from_source_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bytes_found_from_source;
        break;
      }

      // optional int64 bytes_found_from_source = 2;
      case 2: {
        if (tag == 16) {
         parse_bytes_found_from_source:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_found_from_source_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_objects_found_only_from_sink;
        break;
      }

      // optional int64 objects_found_only_from_sink = 3;
      case 3: {
        if (tag == 24) {
         parse_objects_found_only_from_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_found_only_from_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bytes_found_only_from_sink;
        break;
      }

      // optional int64 bytes_found_only_from_sink = 4;
      case 4: {
        if (tag == 32) {
         parse_bytes_found_only_from_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_found_only_from_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_objects_from_source_skipped_by_sync;
        break;
      }

      // optional int64 objects_from_source_skipped_by_sync = 5;
      case 5: {
        if (tag == 40) {
         parse_objects_from_source_skipped_by_sync:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_from_source_skipped_by_sync_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_bytes_from_source_skipped_by_sync;
        break;
      }

      // optional int64 bytes_from_source_skipped_by_sync = 6;
      case 6: {
        if (tag == 48) {
         parse_bytes_from_source_skipped_by_sync:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_from_source_skipped_by_sync_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_objects_copied_to_sink;
        break;
      }

      // optional int64 objects_copied_to_sink = 7;
      case 7: {
        if (tag == 56) {
         parse_objects_copied_to_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_copied_to_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_bytes_copied_to_sink;
        break;
      }

      // optional int64 bytes_copied_to_sink = 8;
      case 8: {
        if (tag == 64) {
         parse_bytes_copied_to_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_copied_to_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_objects_deleted_from_source;
        break;
      }

      // optional int64 objects_deleted_from_source = 9;
      case 9: {
        if (tag == 72) {
         parse_objects_deleted_from_source:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_deleted_from_source_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_bytes_deleted_from_source;
        break;
      }

      // optional int64 bytes_deleted_from_source = 10;
      case 10: {
        if (tag == 80) {
         parse_bytes_deleted_from_source:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_deleted_from_source_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_objects_deleted_from_sink;
        break;
      }

      // optional int64 objects_deleted_from_sink = 11;
      case 11: {
        if (tag == 88) {
         parse_objects_deleted_from_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_deleted_from_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_bytes_deleted_from_sink;
        break;
      }

      // optional int64 bytes_deleted_from_sink = 12;
      case 12: {
        if (tag == 96) {
         parse_bytes_deleted_from_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_deleted_from_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_objects_from_source_failed;
        break;
      }

      // optional int64 objects_from_source_failed = 13;
      case 13: {
        if (tag == 104) {
         parse_objects_from_source_failed:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_from_source_failed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_bytes_from_source_failed;
        break;
      }

      // optional int64 bytes_from_source_failed = 14;
      case 14: {
        if (tag == 112) {
         parse_bytes_from_source_failed:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_from_source_failed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_objects_failed_to_delete_from_sink;
        break;
      }

      // optional int64 objects_failed_to_delete_from_sink = 15;
      case 15: {
        if (tag == 120) {
         parse_objects_failed_to_delete_from_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_failed_to_delete_from_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_bytes_failed_to_delete_from_sink;
        break;
      }

      // optional int64 bytes_failed_to_delete_from_sink = 16;
      case 16: {
        if (tag == 128) {
         parse_bytes_failed_to_delete_from_sink:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_failed_to_delete_from_sink_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferCounters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferCounters)
  return false;
#undef DO_
}

void TransferCounters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferCounters)
  // optional int64 objects_found_from_source = 1;
  if (this->objects_found_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->objects_found_from_source(), output);
  }

  // optional int64 bytes_found_from_source = 2;
  if (this->bytes_found_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bytes_found_from_source(), output);
  }

  // optional int64 objects_found_only_from_sink = 3;
  if (this->objects_found_only_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->objects_found_only_from_sink(), output);
  }

  // optional int64 bytes_found_only_from_sink = 4;
  if (this->bytes_found_only_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->bytes_found_only_from_sink(), output);
  }

  // optional int64 objects_from_source_skipped_by_sync = 5;
  if (this->objects_from_source_skipped_by_sync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->objects_from_source_skipped_by_sync(), output);
  }

  // optional int64 bytes_from_source_skipped_by_sync = 6;
  if (this->bytes_from_source_skipped_by_sync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->bytes_from_source_skipped_by_sync(), output);
  }

  // optional int64 objects_copied_to_sink = 7;
  if (this->objects_copied_to_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->objects_copied_to_sink(), output);
  }

  // optional int64 bytes_copied_to_sink = 8;
  if (this->bytes_copied_to_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->bytes_copied_to_sink(), output);
  }

  // optional int64 objects_deleted_from_source = 9;
  if (this->objects_deleted_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->objects_deleted_from_source(), output);
  }

  // optional int64 bytes_deleted_from_source = 10;
  if (this->bytes_deleted_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->bytes_deleted_from_source(), output);
  }

  // optional int64 objects_deleted_from_sink = 11;
  if (this->objects_deleted_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->objects_deleted_from_sink(), output);
  }

  // optional int64 bytes_deleted_from_sink = 12;
  if (this->bytes_deleted_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->bytes_deleted_from_sink(), output);
  }

  // optional int64 objects_from_source_failed = 13;
  if (this->objects_from_source_failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->objects_from_source_failed(), output);
  }

  // optional int64 bytes_from_source_failed = 14;
  if (this->bytes_from_source_failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->bytes_from_source_failed(), output);
  }

  // optional int64 objects_failed_to_delete_from_sink = 15;
  if (this->objects_failed_to_delete_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->objects_failed_to_delete_from_sink(), output);
  }

  // optional int64 bytes_failed_to_delete_from_sink = 16;
  if (this->bytes_failed_to_delete_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->bytes_failed_to_delete_from_sink(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferCounters)
}

::google::protobuf::uint8* TransferCounters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferCounters)
  // optional int64 objects_found_from_source = 1;
  if (this->objects_found_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->objects_found_from_source(), target);
  }

  // optional int64 bytes_found_from_source = 2;
  if (this->bytes_found_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bytes_found_from_source(), target);
  }

  // optional int64 objects_found_only_from_sink = 3;
  if (this->objects_found_only_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->objects_found_only_from_sink(), target);
  }

  // optional int64 bytes_found_only_from_sink = 4;
  if (this->bytes_found_only_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->bytes_found_only_from_sink(), target);
  }

  // optional int64 objects_from_source_skipped_by_sync = 5;
  if (this->objects_from_source_skipped_by_sync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->objects_from_source_skipped_by_sync(), target);
  }

  // optional int64 bytes_from_source_skipped_by_sync = 6;
  if (this->bytes_from_source_skipped_by_sync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->bytes_from_source_skipped_by_sync(), target);
  }

  // optional int64 objects_copied_to_sink = 7;
  if (this->objects_copied_to_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->objects_copied_to_sink(), target);
  }

  // optional int64 bytes_copied_to_sink = 8;
  if (this->bytes_copied_to_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->bytes_copied_to_sink(), target);
  }

  // optional int64 objects_deleted_from_source = 9;
  if (this->objects_deleted_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->objects_deleted_from_source(), target);
  }

  // optional int64 bytes_deleted_from_source = 10;
  if (this->bytes_deleted_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->bytes_deleted_from_source(), target);
  }

  // optional int64 objects_deleted_from_sink = 11;
  if (this->objects_deleted_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->objects_deleted_from_sink(), target);
  }

  // optional int64 bytes_deleted_from_sink = 12;
  if (this->bytes_deleted_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->bytes_deleted_from_sink(), target);
  }

  // optional int64 objects_from_source_failed = 13;
  if (this->objects_from_source_failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->objects_from_source_failed(), target);
  }

  // optional int64 bytes_from_source_failed = 14;
  if (this->bytes_from_source_failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->bytes_from_source_failed(), target);
  }

  // optional int64 objects_failed_to_delete_from_sink = 15;
  if (this->objects_failed_to_delete_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->objects_failed_to_delete_from_sink(), target);
  }

  // optional int64 bytes_failed_to_delete_from_sink = 16;
  if (this->bytes_failed_to_delete_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->bytes_failed_to_delete_from_sink(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferCounters)
  return target;
}

size_t TransferCounters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferCounters)
  size_t total_size = 0;

  // optional int64 objects_found_from_source = 1;
  if (this->objects_found_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_found_from_source());
  }

  // optional int64 bytes_found_from_source = 2;
  if (this->bytes_found_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_found_from_source());
  }

  // optional int64 objects_found_only_from_sink = 3;
  if (this->objects_found_only_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_found_only_from_sink());
  }

  // optional int64 bytes_found_only_from_sink = 4;
  if (this->bytes_found_only_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_found_only_from_sink());
  }

  // optional int64 objects_from_source_skipped_by_sync = 5;
  if (this->objects_from_source_skipped_by_sync() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_from_source_skipped_by_sync());
  }

  // optional int64 bytes_from_source_skipped_by_sync = 6;
  if (this->bytes_from_source_skipped_by_sync() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_from_source_skipped_by_sync());
  }

  // optional int64 objects_copied_to_sink = 7;
  if (this->objects_copied_to_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_copied_to_sink());
  }

  // optional int64 bytes_copied_to_sink = 8;
  if (this->bytes_copied_to_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_copied_to_sink());
  }

  // optional int64 objects_deleted_from_source = 9;
  if (this->objects_deleted_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_deleted_from_source());
  }

  // optional int64 bytes_deleted_from_source = 10;
  if (this->bytes_deleted_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_deleted_from_source());
  }

  // optional int64 objects_deleted_from_sink = 11;
  if (this->objects_deleted_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_deleted_from_sink());
  }

  // optional int64 bytes_deleted_from_sink = 12;
  if (this->bytes_deleted_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_deleted_from_sink());
  }

  // optional int64 objects_from_source_failed = 13;
  if (this->objects_from_source_failed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_from_source_failed());
  }

  // optional int64 bytes_from_source_failed = 14;
  if (this->bytes_from_source_failed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_from_source_failed());
  }

  // optional int64 objects_failed_to_delete_from_sink = 15;
  if (this->objects_failed_to_delete_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_failed_to_delete_from_sink());
  }

  // optional int64 bytes_failed_to_delete_from_sink = 16;
  if (this->bytes_failed_to_delete_from_sink() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_failed_to_delete_from_sink());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferCounters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferCounters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransferCounters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferCounters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferCounters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferCounters)
    UnsafeMergeFrom(*source);
  }
}

void TransferCounters::MergeFrom(const TransferCounters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferCounters)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransferCounters::UnsafeMergeFrom(const TransferCounters& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.objects_found_from_source() != 0) {
    set_objects_found_from_source(from.objects_found_from_source());
  }
  if (from.bytes_found_from_source() != 0) {
    set_bytes_found_from_source(from.bytes_found_from_source());
  }
  if (from.objects_found_only_from_sink() != 0) {
    set_objects_found_only_from_sink(from.objects_found_only_from_sink());
  }
  if (from.bytes_found_only_from_sink() != 0) {
    set_bytes_found_only_from_sink(from.bytes_found_only_from_sink());
  }
  if (from.objects_from_source_skipped_by_sync() != 0) {
    set_objects_from_source_skipped_by_sync(from.objects_from_source_skipped_by_sync());
  }
  if (from.bytes_from_source_skipped_by_sync() != 0) {
    set_bytes_from_source_skipped_by_sync(from.bytes_from_source_skipped_by_sync());
  }
  if (from.objects_copied_to_sink() != 0) {
    set_objects_copied_to_sink(from.objects_copied_to_sink());
  }
  if (from.bytes_copied_to_sink() != 0) {
    set_bytes_copied_to_sink(from.bytes_copied_to_sink());
  }
  if (from.objects_deleted_from_source() != 0) {
    set_objects_deleted_from_source(from.objects_deleted_from_source());
  }
  if (from.bytes_deleted_from_source() != 0) {
    set_bytes_deleted_from_source(from.bytes_deleted_from_source());
  }
  if (from.objects_deleted_from_sink() != 0) {
    set_objects_deleted_from_sink(from.objects_deleted_from_sink());
  }
  if (from.bytes_deleted_from_sink() != 0) {
    set_bytes_deleted_from_sink(from.bytes_deleted_from_sink());
  }
  if (from.objects_from_source_failed() != 0) {
    set_objects_from_source_failed(from.objects_from_source_failed());
  }
  if (from.bytes_from_source_failed() != 0) {
    set_bytes_from_source_failed(from.bytes_from_source_failed());
  }
  if (from.objects_failed_to_delete_from_sink() != 0) {
    set_objects_failed_to_delete_from_sink(from.objects_failed_to_delete_from_sink());
  }
  if (from.bytes_failed_to_delete_from_sink() != 0) {
    set_bytes_failed_to_delete_from_sink(from.bytes_failed_to_delete_from_sink());
  }
}

void TransferCounters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferCounters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferCounters::CopyFrom(const TransferCounters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferCounters)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransferCounters::IsInitialized() const {

  return true;
}

void TransferCounters::Swap(TransferCounters* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferCounters temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TransferCounters::UnsafeArenaSwap(TransferCounters* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferCounters::InternalSwap(TransferCounters* other) {
  std::swap(objects_found_from_source_, other->objects_found_from_source_);
  std::swap(bytes_found_from_source_, other->bytes_found_from_source_);
  std::swap(objects_found_only_from_sink_, other->objects_found_only_from_sink_);
  std::swap(bytes_found_only_from_sink_, other->bytes_found_only_from_sink_);
  std::swap(objects_from_source_skipped_by_sync_, other->objects_from_source_skipped_by_sync_);
  std::swap(bytes_from_source_skipped_by_sync_, other->bytes_from_source_skipped_by_sync_);
  std::swap(objects_copied_to_sink_, other->objects_copied_to_sink_);
  std::swap(bytes_copied_to_sink_, other->bytes_copied_to_sink_);
  std::swap(objects_deleted_from_source_, other->objects_deleted_from_source_);
  std::swap(bytes_deleted_from_source_, other->bytes_deleted_from_source_);
  std::swap(objects_deleted_from_sink_, other->objects_deleted_from_sink_);
  std::swap(bytes_deleted_from_sink_, other->bytes_deleted_from_sink_);
  std::swap(objects_from_source_failed_, other->objects_from_source_failed_);
  std::swap(bytes_from_source_failed_, other->bytes_from_source_failed_);
  std::swap(objects_failed_to_delete_from_sink_, other->objects_failed_to_delete_from_sink_);
  std::swap(bytes_failed_to_delete_from_sink_, other->bytes_failed_to_delete_from_sink_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferCounters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferCounters_descriptor_;
  metadata.reflection = TransferCounters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferCounters

// optional int64 objects_found_from_source = 1;
void TransferCounters::clear_objects_found_from_source() {
  objects_found_from_source_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_found_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_found_from_source)
  return objects_found_from_source_;
}
void TransferCounters::set_objects_found_from_source(::google::protobuf::int64 value) {
  
  objects_found_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_found_from_source)
}

// optional int64 bytes_found_from_source = 2;
void TransferCounters::clear_bytes_found_from_source() {
  bytes_found_from_source_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_found_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_found_from_source)
  return bytes_found_from_source_;
}
void TransferCounters::set_bytes_found_from_source(::google::protobuf::int64 value) {
  
  bytes_found_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_found_from_source)
}

// optional int64 objects_found_only_from_sink = 3;
void TransferCounters::clear_objects_found_only_from_sink() {
  objects_found_only_from_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_found_only_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_found_only_from_sink)
  return objects_found_only_from_sink_;
}
void TransferCounters::set_objects_found_only_from_sink(::google::protobuf::int64 value) {
  
  objects_found_only_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_found_only_from_sink)
}

// optional int64 bytes_found_only_from_sink = 4;
void TransferCounters::clear_bytes_found_only_from_sink() {
  bytes_found_only_from_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_found_only_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_found_only_from_sink)
  return bytes_found_only_from_sink_;
}
void TransferCounters::set_bytes_found_only_from_sink(::google::protobuf::int64 value) {
  
  bytes_found_only_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_found_only_from_sink)
}

// optional int64 objects_from_source_skipped_by_sync = 5;
void TransferCounters::clear_objects_from_source_skipped_by_sync() {
  objects_from_source_skipped_by_sync_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_from_source_skipped_by_sync() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_from_source_skipped_by_sync)
  return objects_from_source_skipped_by_sync_;
}
void TransferCounters::set_objects_from_source_skipped_by_sync(::google::protobuf::int64 value) {
  
  objects_from_source_skipped_by_sync_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_from_source_skipped_by_sync)
}

// optional int64 bytes_from_source_skipped_by_sync = 6;
void TransferCounters::clear_bytes_from_source_skipped_by_sync() {
  bytes_from_source_skipped_by_sync_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_from_source_skipped_by_sync() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_from_source_skipped_by_sync)
  return bytes_from_source_skipped_by_sync_;
}
void TransferCounters::set_bytes_from_source_skipped_by_sync(::google::protobuf::int64 value) {
  
  bytes_from_source_skipped_by_sync_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_from_source_skipped_by_sync)
}

// optional int64 objects_copied_to_sink = 7;
void TransferCounters::clear_objects_copied_to_sink() {
  objects_copied_to_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_copied_to_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_copied_to_sink)
  return objects_copied_to_sink_;
}
void TransferCounters::set_objects_copied_to_sink(::google::protobuf::int64 value) {
  
  objects_copied_to_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_copied_to_sink)
}

// optional int64 bytes_copied_to_sink = 8;
void TransferCounters::clear_bytes_copied_to_sink() {
  bytes_copied_to_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_copied_to_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_copied_to_sink)
  return bytes_copied_to_sink_;
}
void TransferCounters::set_bytes_copied_to_sink(::google::protobuf::int64 value) {
  
  bytes_copied_to_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_copied_to_sink)
}

// optional int64 objects_deleted_from_source = 9;
void TransferCounters::clear_objects_deleted_from_source() {
  objects_deleted_from_source_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_deleted_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_deleted_from_source)
  return objects_deleted_from_source_;
}
void TransferCounters::set_objects_deleted_from_source(::google::protobuf::int64 value) {
  
  objects_deleted_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_deleted_from_source)
}

// optional int64 bytes_deleted_from_source = 10;
void TransferCounters::clear_bytes_deleted_from_source() {
  bytes_deleted_from_source_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_deleted_from_source() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_source)
  return bytes_deleted_from_source_;
}
void TransferCounters::set_bytes_deleted_from_source(::google::protobuf::int64 value) {
  
  bytes_deleted_from_source_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_source)
}

// optional int64 objects_deleted_from_sink = 11;
void TransferCounters::clear_objects_deleted_from_sink() {
  objects_deleted_from_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_deleted_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_deleted_from_sink)
  return objects_deleted_from_sink_;
}
void TransferCounters::set_objects_deleted_from_sink(::google::protobuf::int64 value) {
  
  objects_deleted_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_deleted_from_sink)
}

// optional int64 bytes_deleted_from_sink = 12;
void TransferCounters::clear_bytes_deleted_from_sink() {
  bytes_deleted_from_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_deleted_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_sink)
  return bytes_deleted_from_sink_;
}
void TransferCounters::set_bytes_deleted_from_sink(::google::protobuf::int64 value) {
  
  bytes_deleted_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_deleted_from_sink)
}

// optional int64 objects_from_source_failed = 13;
void TransferCounters::clear_objects_from_source_failed() {
  objects_from_source_failed_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_from_source_failed() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_from_source_failed)
  return objects_from_source_failed_;
}
void TransferCounters::set_objects_from_source_failed(::google::protobuf::int64 value) {
  
  objects_from_source_failed_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_from_source_failed)
}

// optional int64 bytes_from_source_failed = 14;
void TransferCounters::clear_bytes_from_source_failed() {
  bytes_from_source_failed_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_from_source_failed() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_from_source_failed)
  return bytes_from_source_failed_;
}
void TransferCounters::set_bytes_from_source_failed(::google::protobuf::int64 value) {
  
  bytes_from_source_failed_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_from_source_failed)
}

// optional int64 objects_failed_to_delete_from_sink = 15;
void TransferCounters::clear_objects_failed_to_delete_from_sink() {
  objects_failed_to_delete_from_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::objects_failed_to_delete_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.objects_failed_to_delete_from_sink)
  return objects_failed_to_delete_from_sink_;
}
void TransferCounters::set_objects_failed_to_delete_from_sink(::google::protobuf::int64 value) {
  
  objects_failed_to_delete_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.objects_failed_to_delete_from_sink)
}

// optional int64 bytes_failed_to_delete_from_sink = 16;
void TransferCounters::clear_bytes_failed_to_delete_from_sink() {
  bytes_failed_to_delete_from_sink_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransferCounters::bytes_failed_to_delete_from_sink() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferCounters.bytes_failed_to_delete_from_sink)
  return bytes_failed_to_delete_from_sink_;
}
void TransferCounters::set_bytes_failed_to_delete_from_sink(::google::protobuf::int64 value) {
  
  bytes_failed_to_delete_from_sink_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferCounters.bytes_failed_to_delete_from_sink)
}

inline const TransferCounters* TransferCounters::internal_default_instance() {
  return &TransferCounters_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* TransferOperation_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferOperation_Status_descriptor_;
}
bool TransferOperation_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TransferOperation_Status TransferOperation::STATUS_UNSPECIFIED;
const TransferOperation_Status TransferOperation::IN_PROGRESS;
const TransferOperation_Status TransferOperation::PAUSED;
const TransferOperation_Status TransferOperation::SUCCESS;
const TransferOperation_Status TransferOperation::FAILED;
const TransferOperation_Status TransferOperation::ABORTED;
const TransferOperation_Status TransferOperation::Status_MIN;
const TransferOperation_Status TransferOperation::Status_MAX;
const int TransferOperation::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
void TransferOperation::_slow_mutable_transfer_spec() {
  transfer_spec_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferSpec >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::TransferSpec* TransferOperation::_slow_release_transfer_spec() {
  if (transfer_spec_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::TransferSpec* temp = new ::google::storagetransfer::v1::TransferSpec(*transfer_spec_);
    transfer_spec_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::TransferSpec* TransferOperation::unsafe_arena_release_transfer_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.transfer_spec)
  
  ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
  transfer_spec_ = NULL;
  return temp;
}
void TransferOperation::_slow_set_allocated_transfer_spec(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferSpec** transfer_spec) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*transfer_spec) == NULL) {
      message_arena->Own(*transfer_spec);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*transfer_spec)) {
      ::google::storagetransfer::v1::TransferSpec* new_transfer_spec = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferSpec >(
            message_arena);
      new_transfer_spec->CopyFrom(**transfer_spec);
      *transfer_spec = new_transfer_spec;
    }
}
void TransferOperation::unsafe_arena_set_allocated_transfer_spec(
    ::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = transfer_spec;
  if (transfer_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_spec)
}
void TransferOperation::_slow_mutable_start_time() {
  start_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* TransferOperation::_slow_release_start_time() {
  if (start_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*start_time_);
    start_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* TransferOperation::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void TransferOperation::_slow_set_allocated_start_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** start_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*start_time) == NULL) {
      message_arena->Own(*start_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*start_time)) {
      ::google::protobuf::Timestamp* new_start_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_start_time->CopyFrom(**start_time);
      *start_time = new_start_time;
    }
}
void TransferOperation::unsafe_arena_set_allocated_start_time(
    ::google::protobuf::Timestamp* start_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.start_time)
}
void TransferOperation::_slow_mutable_end_time() {
  end_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* TransferOperation::_slow_release_end_time() {
  if (end_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*end_time_);
    end_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* TransferOperation::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void TransferOperation::_slow_set_allocated_end_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** end_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*end_time) == NULL) {
      message_arena->Own(*end_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*end_time)) {
      ::google::protobuf::Timestamp* new_end_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_end_time->CopyFrom(**end_time);
      *end_time = new_end_time;
    }
}
void TransferOperation::unsafe_arena_set_allocated_end_time(
    ::google::protobuf::Timestamp* end_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete end_time_;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.end_time)
}
void TransferOperation::_slow_mutable_counters() {
  counters_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferCounters >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::TransferCounters* TransferOperation::_slow_release_counters() {
  if (counters_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::TransferCounters* temp = new ::google::storagetransfer::v1::TransferCounters(*counters_);
    counters_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::TransferCounters* TransferOperation::unsafe_arena_release_counters() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.counters)
  
  ::google::storagetransfer::v1::TransferCounters* temp = counters_;
  counters_ = NULL;
  return temp;
}
void TransferOperation::_slow_set_allocated_counters(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferCounters** counters) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*counters) == NULL) {
      message_arena->Own(*counters);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*counters)) {
      ::google::storagetransfer::v1::TransferCounters* new_counters = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferCounters >(
            message_arena);
      new_counters->CopyFrom(**counters);
      *counters = new_counters;
    }
}
void TransferOperation::unsafe_arena_set_allocated_counters(
    ::google::storagetransfer::v1::TransferCounters* counters) {
  if (GetArenaNoVirtual() == NULL) {
    delete counters_;
  }
  counters_ = counters;
  if (counters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.counters)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferOperation::kNameFieldNumber;
const int TransferOperation::kProjectIdFieldNumber;
const int TransferOperation::kTransferSpecFieldNumber;
const int TransferOperation::kStartTimeFieldNumber;
const int TransferOperation::kEndTimeFieldNumber;
const int TransferOperation::kStatusFieldNumber;
const int TransferOperation::kCountersFieldNumber;
const int TransferOperation::kErrorBreakdownsFieldNumber;
const int TransferOperation::kTransferJobNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferOperation::TransferOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferOperation)
}
TransferOperation::TransferOperation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  error_breakdowns_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferOperation)
}

void TransferOperation::InitAsDefaultInstance() {
  transfer_spec_ = const_cast< ::google::storagetransfer::v1::TransferSpec*>(
      ::google::storagetransfer::v1::TransferSpec::internal_default_instance());
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  counters_ = const_cast< ::google::storagetransfer::v1::TransferCounters*>(
      ::google::storagetransfer::v1::TransferCounters::internal_default_instance());
}

TransferOperation::TransferOperation(const TransferOperation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferOperation)
}

void TransferOperation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_spec_ = NULL;
  start_time_ = NULL;
  end_time_ = NULL;
  counters_ = NULL;
  status_ = 0;
  _cached_size_ = 0;
}

TransferOperation::~TransferOperation() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferOperation)
  SharedDtor();
}

void TransferOperation::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  project_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  transfer_job_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &TransferOperation_default_instance_.get()) {
    delete transfer_spec_;
    delete start_time_;
    delete end_time_;
    delete counters_;
  }
}

void TransferOperation::ArenaDtor(void* object) {
  TransferOperation* _this = reinterpret_cast< TransferOperation* >(object);
  (void)_this;
}
void TransferOperation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferOperation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferOperation_descriptor_;
}

const TransferOperation& TransferOperation::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransferOperation> TransferOperation_default_instance_;

TransferOperation* TransferOperation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferOperation>(arena);
}

void TransferOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferOperation)
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) delete transfer_spec_;
  transfer_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
  status_ = 0;
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) delete counters_;
  counters_ = NULL;
  transfer_job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  error_breakdowns_.Clear();
}

bool TransferOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferOperation.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_project_id;
        break;
      }

      // optional string project_id = 2;
      case 2: {
        if (tag == 18) {
         parse_project_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferOperation.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_transfer_spec;
        break;
      }

      // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
      case 3: {
        if (tag == 26) {
         parse_transfer_spec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_spec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 4;
      case 4: {
        if (tag == 34) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 5;
      case 5: {
        if (tag == 42) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_status;
        break;
      }

      // optional .google.storagetransfer.v1.TransferOperation.Status status = 6;
      case 6: {
        if (tag == 48) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::storagetransfer::v1::TransferOperation_Status >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_counters;
        break;
      }

      // optional .google.storagetransfer.v1.TransferCounters counters = 7;
      case 7: {
        if (tag == 58) {
         parse_counters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_counters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_error_breakdowns;
        break;
      }

      // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
      case 8: {
        if (tag == 66) {
         parse_error_breakdowns:
          DO_(input->IncrementRecursionDepth());
         parse_loop_error_breakdowns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_error_breakdowns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_error_breakdowns;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(74)) goto parse_transfer_job_name;
        break;
      }

      // optional string transfer_job_name = 9;
      case 9: {
        if (tag == 74) {
         parse_transfer_job_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfer_job_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transfer_job_name().data(), this->transfer_job_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferOperation.transfer_job_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferOperation)
  return false;
#undef DO_
}

void TransferOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferOperation)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_id(), output);
  }

  // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
  if (this->has_transfer_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->transfer_spec_, output);
  }

  // optional .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 5;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->end_time_, output);
  }

  // optional .google.storagetransfer.v1.TransferOperation.Status status = 6;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->status(), output);
  }

  // optional .google.storagetransfer.v1.TransferCounters counters = 7;
  if (this->has_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->counters_, output);
  }

  // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
  for (unsigned int i = 0, n = this->error_breakdowns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->error_breakdowns(i), output);
  }

  // optional string transfer_job_name = 9;
  if (this->transfer_job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_job_name().data(), this->transfer_job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.transfer_job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->transfer_job_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferOperation)
}

::google::protobuf::uint8* TransferOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferOperation)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_id(), target);
  }

  // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
  if (this->has_transfer_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->transfer_spec_, false, target);
  }

  // optional .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 5;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->end_time_, false, target);
  }

  // optional .google.storagetransfer.v1.TransferOperation.Status status = 6;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->status(), target);
  }

  // optional .google.storagetransfer.v1.TransferCounters counters = 7;
  if (this->has_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->counters_, false, target);
  }

  // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
  for (unsigned int i = 0, n = this->error_breakdowns_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->error_breakdowns(i), false, target);
  }

  // optional string transfer_job_name = 9;
  if (this->transfer_job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_job_name().data(), this->transfer_job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.transfer_job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->transfer_job_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferOperation)
  return target;
}

size_t TransferOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferOperation)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
  if (this->has_transfer_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transfer_spec_);
  }

  // optional .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp end_time = 5;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  // optional .google.storagetransfer.v1.TransferOperation.Status status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional .google.storagetransfer.v1.TransferCounters counters = 7;
  if (this->has_counters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->counters_);
  }

  // optional string transfer_job_name = 9;
  if (this->transfer_job_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transfer_job_name());
  }

  // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
  {
    unsigned int count = this->error_breakdowns_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error_breakdowns(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferOperation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransferOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferOperation)
    UnsafeMergeFrom(*source);
  }
}

void TransferOperation::MergeFrom(const TransferOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferOperation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransferOperation::UnsafeMergeFrom(const TransferOperation& from) {
  GOOGLE_DCHECK(&from != this);
  error_breakdowns_.MergeFrom(from.error_breakdowns_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.has_transfer_spec()) {
    mutable_transfer_spec()->::google::storagetransfer::v1::TransferSpec::MergeFrom(from.transfer_spec());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.has_counters()) {
    mutable_counters()->::google::storagetransfer::v1::TransferCounters::MergeFrom(from.counters());
  }
  if (from.transfer_job_name().size() > 0) {
    set_transfer_job_name(from.transfer_job_name());
  }
}

void TransferOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferOperation::CopyFrom(const TransferOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferOperation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransferOperation::IsInitialized() const {

  return true;
}

void TransferOperation::Swap(TransferOperation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferOperation temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TransferOperation::UnsafeArenaSwap(TransferOperation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferOperation::InternalSwap(TransferOperation* other) {
  name_.Swap(&other->name_);
  project_id_.Swap(&other->project_id_);
  std::swap(transfer_spec_, other->transfer_spec_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(status_, other->status_);
  std::swap(counters_, other->counters_);
  error_breakdowns_.UnsafeArenaSwap(&other->error_breakdowns_);
  transfer_job_name_.Swap(&other->transfer_job_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferOperation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferOperation_descriptor_;
  metadata.reflection = TransferOperation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferOperation

// optional string name = 1;
void TransferOperation::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TransferOperation::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferOperation::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.name)
}
void TransferOperation::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferOperation.name)
}
void TransferOperation::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferOperation.name)
}
::std::string* TransferOperation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferOperation::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferOperation::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TransferOperation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.name)
}
void TransferOperation::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.name)
}

// optional string project_id = 2;
void TransferOperation::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TransferOperation::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferOperation::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.project_id)
}
void TransferOperation::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferOperation.project_id)
}
void TransferOperation::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferOperation.project_id)
}
::std::string* TransferOperation::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferOperation::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferOperation::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TransferOperation::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.project_id)
}
void TransferOperation::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.project_id)
}

// optional .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
bool TransferOperation::has_transfer_spec() const {
  return this != internal_default_instance() && transfer_spec_ != NULL;
}
void TransferOperation::clear_transfer_spec() {
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) delete transfer_spec_;
  transfer_spec_ = NULL;
}
const ::google::storagetransfer::v1::TransferSpec& TransferOperation::transfer_spec() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.transfer_spec)
  return transfer_spec_ != NULL ? *transfer_spec_
                         : *::google::storagetransfer::v1::TransferSpec::internal_default_instance();
}
::google::storagetransfer::v1::TransferSpec* TransferOperation::mutable_transfer_spec() {
  
  if (transfer_spec_ == NULL) {
    _slow_mutable_transfer_spec();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.transfer_spec)
  return transfer_spec_;
}
::google::storagetransfer::v1::TransferSpec* TransferOperation::release_transfer_spec() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.transfer_spec)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_transfer_spec();
  } else {
    ::google::storagetransfer::v1::TransferSpec* temp = transfer_spec_;
    transfer_spec_ = NULL;
    return temp;
  }
}
 void TransferOperation::set_allocated_transfer_spec(::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_spec_;
  }
  if (transfer_spec != NULL) {
    _slow_set_allocated_transfer_spec(message_arena, &transfer_spec);
  }
  transfer_spec_ = transfer_spec;
  if (transfer_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_spec)
}

// optional .google.protobuf.Timestamp start_time = 4;
bool TransferOperation::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void TransferOperation::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& TransferOperation::start_time() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TransferOperation::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* TransferOperation::release_start_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.start_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time();
  } else {
    ::google::protobuf::Timestamp* temp = start_time_;
    start_time_ = NULL;
    return temp;
  }
}
 void TransferOperation::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_;
  }
  if (start_time != NULL) {
    _slow_set_allocated_start_time(message_arena, &start_time);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.start_time)
}

// optional .google.protobuf.Timestamp end_time = 5;
bool TransferOperation::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void TransferOperation::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& TransferOperation::end_time() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TransferOperation::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* TransferOperation::release_end_time() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.end_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_end_time();
  } else {
    ::google::protobuf::Timestamp* temp = end_time_;
    end_time_ = NULL;
    return temp;
  }
}
 void TransferOperation::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_time_;
  }
  if (end_time != NULL) {
    _slow_set_allocated_end_time(message_arena, &end_time);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.end_time)
}

// optional .google.storagetransfer.v1.TransferOperation.Status status = 6;
void TransferOperation::clear_status() {
  status_ = 0;
}
::google::storagetransfer::v1::TransferOperation_Status TransferOperation::status() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.status)
  return static_cast< ::google::storagetransfer::v1::TransferOperation_Status >(status_);
}
void TransferOperation::set_status(::google::storagetransfer::v1::TransferOperation_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.status)
}

// optional .google.storagetransfer.v1.TransferCounters counters = 7;
bool TransferOperation::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
void TransferOperation::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) delete counters_;
  counters_ = NULL;
}
const ::google::storagetransfer::v1::TransferCounters& TransferOperation::counters() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.counters)
  return counters_ != NULL ? *counters_
                         : *::google::storagetransfer::v1::TransferCounters::internal_default_instance();
}
::google::storagetransfer::v1::TransferCounters* TransferOperation::mutable_counters() {
  
  if (counters_ == NULL) {
    _slow_mutable_counters();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.counters)
  return counters_;
}
::google::storagetransfer::v1::TransferCounters* TransferOperation::release_counters() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.counters)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_counters();
  } else {
    ::google::storagetransfer::v1::TransferCounters* temp = counters_;
    counters_ = NULL;
    return temp;
  }
}
 void TransferOperation::set_allocated_counters(::google::storagetransfer::v1::TransferCounters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters != NULL) {
    _slow_set_allocated_counters(message_arena, &counters);
  }
  counters_ = counters;
  if (counters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.counters)
}

// repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
int TransferOperation::error_breakdowns_size() const {
  return error_breakdowns_.size();
}
void TransferOperation::clear_error_breakdowns() {
  error_breakdowns_.Clear();
}
const ::google::storagetransfer::v1::ErrorSummary& TransferOperation::error_breakdowns(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_.Get(index);
}
::google::storagetransfer::v1::ErrorSummary* TransferOperation::mutable_error_breakdowns(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_.Mutable(index);
}
::google::storagetransfer::v1::ErrorSummary* TransferOperation::add_error_breakdowns() {
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorSummary >*
TransferOperation::mutable_error_breakdowns() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return &error_breakdowns_;
}
const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::ErrorSummary >&
TransferOperation::error_breakdowns() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.TransferOperation.error_breakdowns)
  return error_breakdowns_;
}

// optional string transfer_job_name = 9;
void TransferOperation::clear_transfer_job_name() {
  transfer_job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& TransferOperation::transfer_job_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  return transfer_job_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferOperation::set_transfer_job_name(const ::std::string& value) {
  
  transfer_job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
void TransferOperation::set_transfer_job_name(const char* value) {
  
  transfer_job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
void TransferOperation::set_transfer_job_name(const char* value,
    size_t size) {
  
  transfer_job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
::std::string* TransferOperation::mutable_transfer_job_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  return transfer_job_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferOperation::release_transfer_job_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  
  return transfer_job_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* TransferOperation::unsafe_arena_release_transfer_job_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.TransferOperation.transfer_job_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return transfer_job_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void TransferOperation::set_allocated_transfer_job_name(::std::string* transfer_job_name) {
  if (transfer_job_name != NULL) {
    
  } else {
    
  }
  transfer_job_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transfer_job_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}
void TransferOperation::unsafe_arena_set_allocated_transfer_job_name(
    ::std::string* transfer_job_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (transfer_job_name != NULL) {
    
  } else {
    
  }
  transfer_job_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      transfer_job_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_job_name)
}

inline const TransferOperation* TransferOperation::internal_default_instance() {
  return &TransferOperation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace storagetransfer
}  // namespace google

// @@protoc_insertion_point(global_scope)
