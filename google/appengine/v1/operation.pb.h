// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/operation.proto

#ifndef PROTOBUF_google_2fappengine_2fv1_2foperation_2eproto__INCLUDED
#define PROTOBUF_google_2fappengine_2fv1_2foperation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace appengine {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fappengine_2fv1_2foperation_2eproto();
void protobuf_InitDefaults_google_2fappengine_2fv1_2foperation_2eproto();
void protobuf_AssignDesc_google_2fappengine_2fv1_2foperation_2eproto();
void protobuf_ShutdownFile_google_2fappengine_2fv1_2foperation_2eproto();

class OperationMetadataV1;

// ===================================================================

class OperationMetadataV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.OperationMetadataV1) */ {
 public:
  OperationMetadataV1();
  virtual ~OperationMetadataV1();

  OperationMetadataV1(const OperationMetadataV1& from);

  inline OperationMetadataV1& operator=(const OperationMetadataV1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationMetadataV1& default_instance();

  static const OperationMetadataV1* internal_default_instance();

  void Swap(OperationMetadataV1* other);

  // implements Message ----------------------------------------------

  inline OperationMetadataV1* New() const { return New(NULL); }

  OperationMetadataV1* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationMetadataV1& from);
  void MergeFrom(const OperationMetadataV1& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperationMetadataV1* other);
  void UnsafeMergeFrom(const OperationMetadataV1& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method = 1;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional .google.protobuf.Timestamp insert_time = 2;
  bool has_insert_time() const;
  void clear_insert_time();
  static const int kInsertTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& insert_time() const;
  ::google::protobuf::Timestamp* mutable_insert_time();
  ::google::protobuf::Timestamp* release_insert_time();
  void set_allocated_insert_time(::google::protobuf::Timestamp* insert_time);

  // optional .google.protobuf.Timestamp end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // optional string user = 4;
  void clear_user();
  static const int kUserFieldNumber = 4;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // optional string target = 5;
  void clear_target();
  static const int kTargetFieldNumber = 5;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.OperationMetadataV1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::Timestamp* insert_time_;
  ::google::protobuf::Timestamp* end_time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fappengine_2fv1_2foperation_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fappengine_2fv1_2foperation_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fappengine_2fv1_2foperation_2eproto();
  friend void protobuf_ShutdownFile_google_2fappengine_2fv1_2foperation_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperationMetadataV1> OperationMetadataV1_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OperationMetadataV1

// optional string method = 1;
inline void OperationMetadataV1::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OperationMetadataV1::method() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.OperationMetadataV1.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.OperationMetadataV1.method)
}
inline void OperationMetadataV1::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.OperationMetadataV1.method)
}
inline void OperationMetadataV1::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.OperationMetadataV1.method)
}
inline ::std::string* OperationMetadataV1::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.OperationMetadataV1.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperationMetadataV1::release_method() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.OperationMetadataV1.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.OperationMetadataV1.method)
}

// optional .google.protobuf.Timestamp insert_time = 2;
inline bool OperationMetadataV1::has_insert_time() const {
  return this != internal_default_instance() && insert_time_ != NULL;
}
inline void OperationMetadataV1::clear_insert_time() {
  if (GetArenaNoVirtual() == NULL && insert_time_ != NULL) delete insert_time_;
  insert_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationMetadataV1::insert_time() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.OperationMetadataV1.insert_time)
  return insert_time_ != NULL ? *insert_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationMetadataV1::mutable_insert_time() {
  
  if (insert_time_ == NULL) {
    insert_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.OperationMetadataV1.insert_time)
  return insert_time_;
}
inline ::google::protobuf::Timestamp* OperationMetadataV1::release_insert_time() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.OperationMetadataV1.insert_time)
  
  ::google::protobuf::Timestamp* temp = insert_time_;
  insert_time_ = NULL;
  return temp;
}
inline void OperationMetadataV1::set_allocated_insert_time(::google::protobuf::Timestamp* insert_time) {
  delete insert_time_;
  if (insert_time != NULL && insert_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_insert_time = new ::google::protobuf::Timestamp;
    new_insert_time->CopyFrom(*insert_time);
    insert_time = new_insert_time;
  }
  insert_time_ = insert_time;
  if (insert_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.OperationMetadataV1.insert_time)
}

// optional .google.protobuf.Timestamp end_time = 3;
inline bool OperationMetadataV1::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void OperationMetadataV1::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationMetadataV1::end_time() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.OperationMetadataV1.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationMetadataV1::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.OperationMetadataV1.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* OperationMetadataV1::release_end_time() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.OperationMetadataV1.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline void OperationMetadataV1::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.OperationMetadataV1.end_time)
}

// optional string user = 4;
inline void OperationMetadataV1::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OperationMetadataV1::user() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.OperationMetadataV1.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.OperationMetadataV1.user)
}
inline void OperationMetadataV1::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.OperationMetadataV1.user)
}
inline void OperationMetadataV1::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.OperationMetadataV1.user)
}
inline ::std::string* OperationMetadataV1::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.OperationMetadataV1.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperationMetadataV1::release_user() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.OperationMetadataV1.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.OperationMetadataV1.user)
}

// optional string target = 5;
inline void OperationMetadataV1::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OperationMetadataV1::target() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.OperationMetadataV1.target)
  return target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.OperationMetadataV1.target)
}
inline void OperationMetadataV1::set_target(const char* value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.OperationMetadataV1.target)
}
inline void OperationMetadataV1::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.OperationMetadataV1.target)
}
inline ::std::string* OperationMetadataV1::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.OperationMetadataV1.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperationMetadataV1::release_target() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.OperationMetadataV1.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.OperationMetadataV1.target)
}

inline const OperationMetadataV1* OperationMetadataV1::internal_default_instance() {
  return &OperationMetadataV1_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fappengine_2fv1_2foperation_2eproto__INCLUDED
