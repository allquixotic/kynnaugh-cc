// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1/image_annotator.proto

#ifndef PROTOBUF_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/vision/v1/geometry.pb.h"
#include "google/rpc/status.pb.h"
#include "google/type/color.pb.h"
#include "google/type/latlng.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace vision {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
void protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

class AnnotateImageRequest;
class AnnotateImageResponse;
class BatchAnnotateImagesRequest;
class BatchAnnotateImagesResponse;
class ColorInfo;
class DominantColorsAnnotation;
class EntityAnnotation;
class FaceAnnotation;
class FaceAnnotation_Landmark;
class Feature;
class Image;
class ImageContext;
class ImageProperties;
class ImageSource;
class LatLongRect;
class LocationInfo;
class Property;
class SafeSearchAnnotation;

enum Feature_Type {
  Feature_Type_TYPE_UNSPECIFIED = 0,
  Feature_Type_FACE_DETECTION = 1,
  Feature_Type_LANDMARK_DETECTION = 2,
  Feature_Type_LOGO_DETECTION = 3,
  Feature_Type_LABEL_DETECTION = 4,
  Feature_Type_TEXT_DETECTION = 5,
  Feature_Type_SAFE_SEARCH_DETECTION = 6,
  Feature_Type_IMAGE_PROPERTIES = 7,
  Feature_Type_Feature_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Feature_Type_Feature_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Feature_Type_IsValid(int value);
const Feature_Type Feature_Type_Type_MIN = Feature_Type_TYPE_UNSPECIFIED;
const Feature_Type Feature_Type_Type_MAX = Feature_Type_IMAGE_PROPERTIES;
const int Feature_Type_Type_ARRAYSIZE = Feature_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Feature_Type_descriptor();
inline const ::std::string& Feature_Type_Name(Feature_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Feature_Type_descriptor(), value);
}
inline bool Feature_Type_Parse(
    const ::std::string& name, Feature_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Feature_Type>(
    Feature_Type_descriptor(), name, value);
}
enum FaceAnnotation_Landmark_Type {
  FaceAnnotation_Landmark_Type_UNKNOWN_LANDMARK = 0,
  FaceAnnotation_Landmark_Type_LEFT_EYE = 1,
  FaceAnnotation_Landmark_Type_RIGHT_EYE = 2,
  FaceAnnotation_Landmark_Type_LEFT_OF_LEFT_EYEBROW = 3,
  FaceAnnotation_Landmark_Type_RIGHT_OF_LEFT_EYEBROW = 4,
  FaceAnnotation_Landmark_Type_LEFT_OF_RIGHT_EYEBROW = 5,
  FaceAnnotation_Landmark_Type_RIGHT_OF_RIGHT_EYEBROW = 6,
  FaceAnnotation_Landmark_Type_MIDPOINT_BETWEEN_EYES = 7,
  FaceAnnotation_Landmark_Type_NOSE_TIP = 8,
  FaceAnnotation_Landmark_Type_UPPER_LIP = 9,
  FaceAnnotation_Landmark_Type_LOWER_LIP = 10,
  FaceAnnotation_Landmark_Type_MOUTH_LEFT = 11,
  FaceAnnotation_Landmark_Type_MOUTH_RIGHT = 12,
  FaceAnnotation_Landmark_Type_MOUTH_CENTER = 13,
  FaceAnnotation_Landmark_Type_NOSE_BOTTOM_RIGHT = 14,
  FaceAnnotation_Landmark_Type_NOSE_BOTTOM_LEFT = 15,
  FaceAnnotation_Landmark_Type_NOSE_BOTTOM_CENTER = 16,
  FaceAnnotation_Landmark_Type_LEFT_EYE_TOP_BOUNDARY = 17,
  FaceAnnotation_Landmark_Type_LEFT_EYE_RIGHT_CORNER = 18,
  FaceAnnotation_Landmark_Type_LEFT_EYE_BOTTOM_BOUNDARY = 19,
  FaceAnnotation_Landmark_Type_LEFT_EYE_LEFT_CORNER = 20,
  FaceAnnotation_Landmark_Type_RIGHT_EYE_TOP_BOUNDARY = 21,
  FaceAnnotation_Landmark_Type_RIGHT_EYE_RIGHT_CORNER = 22,
  FaceAnnotation_Landmark_Type_RIGHT_EYE_BOTTOM_BOUNDARY = 23,
  FaceAnnotation_Landmark_Type_RIGHT_EYE_LEFT_CORNER = 24,
  FaceAnnotation_Landmark_Type_LEFT_EYEBROW_UPPER_MIDPOINT = 25,
  FaceAnnotation_Landmark_Type_RIGHT_EYEBROW_UPPER_MIDPOINT = 26,
  FaceAnnotation_Landmark_Type_LEFT_EAR_TRAGION = 27,
  FaceAnnotation_Landmark_Type_RIGHT_EAR_TRAGION = 28,
  FaceAnnotation_Landmark_Type_LEFT_EYE_PUPIL = 29,
  FaceAnnotation_Landmark_Type_RIGHT_EYE_PUPIL = 30,
  FaceAnnotation_Landmark_Type_FOREHEAD_GLABELLA = 31,
  FaceAnnotation_Landmark_Type_CHIN_GNATHION = 32,
  FaceAnnotation_Landmark_Type_CHIN_LEFT_GONION = 33,
  FaceAnnotation_Landmark_Type_CHIN_RIGHT_GONION = 34,
  FaceAnnotation_Landmark_Type_FaceAnnotation_Landmark_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FaceAnnotation_Landmark_Type_FaceAnnotation_Landmark_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FaceAnnotation_Landmark_Type_IsValid(int value);
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark_Type_Type_MIN = FaceAnnotation_Landmark_Type_UNKNOWN_LANDMARK;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark_Type_Type_MAX = FaceAnnotation_Landmark_Type_CHIN_RIGHT_GONION;
const int FaceAnnotation_Landmark_Type_Type_ARRAYSIZE = FaceAnnotation_Landmark_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* FaceAnnotation_Landmark_Type_descriptor();
inline const ::std::string& FaceAnnotation_Landmark_Type_Name(FaceAnnotation_Landmark_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    FaceAnnotation_Landmark_Type_descriptor(), value);
}
inline bool FaceAnnotation_Landmark_Type_Parse(
    const ::std::string& name, FaceAnnotation_Landmark_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FaceAnnotation_Landmark_Type>(
    FaceAnnotation_Landmark_Type_descriptor(), name, value);
}
enum Likelihood {
  UNKNOWN = 0,
  VERY_UNLIKELY = 1,
  UNLIKELY = 2,
  POSSIBLE = 3,
  LIKELY = 4,
  VERY_LIKELY = 5,
  Likelihood_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Likelihood_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Likelihood_IsValid(int value);
const Likelihood Likelihood_MIN = UNKNOWN;
const Likelihood Likelihood_MAX = VERY_LIKELY;
const int Likelihood_ARRAYSIZE = Likelihood_MAX + 1;

const ::google::protobuf::EnumDescriptor* Likelihood_descriptor();
inline const ::std::string& Likelihood_Name(Likelihood value) {
  return ::google::protobuf::internal::NameOfEnum(
    Likelihood_descriptor(), value);
}
inline bool Likelihood_Parse(
    const ::std::string& name, Likelihood* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Likelihood>(
    Likelihood_descriptor(), name, value);
}
// ===================================================================

class Feature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.Feature) */ {
 public:
  Feature();
  virtual ~Feature();

  Feature(const Feature& from);

  inline Feature& operator=(const Feature& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Feature& default_instance();

  static const Feature* internal_default_instance();

  void UnsafeArenaSwap(Feature* other);
  void Swap(Feature* other);

  // implements Message ----------------------------------------------

  inline Feature* New() const { return New(NULL); }

  Feature* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Feature& from);
  void MergeFrom(const Feature& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Feature* other);
  void UnsafeMergeFrom(const Feature& from);
  protected:
  explicit Feature(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Feature_Type Type;
  static const Type TYPE_UNSPECIFIED =
    Feature_Type_TYPE_UNSPECIFIED;
  static const Type FACE_DETECTION =
    Feature_Type_FACE_DETECTION;
  static const Type LANDMARK_DETECTION =
    Feature_Type_LANDMARK_DETECTION;
  static const Type LOGO_DETECTION =
    Feature_Type_LOGO_DETECTION;
  static const Type LABEL_DETECTION =
    Feature_Type_LABEL_DETECTION;
  static const Type TEXT_DETECTION =
    Feature_Type_TEXT_DETECTION;
  static const Type SAFE_SEARCH_DETECTION =
    Feature_Type_SAFE_SEARCH_DETECTION;
  static const Type IMAGE_PROPERTIES =
    Feature_Type_IMAGE_PROPERTIES;
  static inline bool Type_IsValid(int value) {
    return Feature_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Feature_Type_Type_MIN;
  static const Type Type_MAX =
    Feature_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Feature_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Feature_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Feature_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Feature_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .google.cloud.vision.v1.Feature.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::cloud::vision::v1::Feature_Type type() const;
  void set_type(::google::cloud::vision::v1::Feature_Type value);

  // optional int32 max_results = 2;
  void clear_max_results();
  static const int kMaxResultsFieldNumber = 2;
  ::google::protobuf::int32 max_results() const;
  void set_max_results(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.Feature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  ::google::protobuf::int32 max_results_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Feature> Feature_default_instance_;

// -------------------------------------------------------------------

class ImageSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.ImageSource) */ {
 public:
  ImageSource();
  virtual ~ImageSource();

  ImageSource(const ImageSource& from);

  inline ImageSource& operator=(const ImageSource& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageSource& default_instance();

  static const ImageSource* internal_default_instance();

  void UnsafeArenaSwap(ImageSource* other);
  void Swap(ImageSource* other);

  // implements Message ----------------------------------------------

  inline ImageSource* New() const { return New(NULL); }

  ImageSource* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageSource& from);
  void MergeFrom(const ImageSource& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageSource* other);
  void UnsafeMergeFrom(const ImageSource& from);
  protected:
  explicit ImageSource(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gcs_image_uri = 1;
  void clear_gcs_image_uri();
  static const int kGcsImageUriFieldNumber = 1;
  const ::std::string& gcs_image_uri() const;
  void set_gcs_image_uri(const ::std::string& value);
  void set_gcs_image_uri(const char* value);
  void set_gcs_image_uri(const char* value, size_t size);
  ::std::string* mutable_gcs_image_uri();
  ::std::string* release_gcs_image_uri();
  void set_allocated_gcs_image_uri(::std::string* gcs_image_uri);
  ::std::string* unsafe_arena_release_gcs_image_uri();
  void unsafe_arena_set_allocated_gcs_image_uri(
      ::std::string* gcs_image_uri);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.ImageSource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr gcs_image_uri_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImageSource> ImageSource_default_instance_;

// -------------------------------------------------------------------

class Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.Image) */ {
 public:
  Image();
  virtual ~Image();

  Image(const Image& from);

  inline Image& operator=(const Image& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Image& default_instance();

  static const Image* internal_default_instance();

  void UnsafeArenaSwap(Image* other);
  void Swap(Image* other);

  // implements Message ----------------------------------------------

  inline Image* New() const { return New(NULL); }

  Image* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Image& from);
  void MergeFrom(const Image& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Image* other);
  void UnsafeMergeFrom(const Image& from);
  protected:
  explicit Image(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);
  ::std::string* unsafe_arena_release_content();
  void unsafe_arena_set_allocated_content(
      ::std::string* content);

  // optional .google.cloud.vision.v1.ImageSource source = 2;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  private:
  void _slow_mutable_source();
  void _slow_set_allocated_source(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::ImageSource** source);
  ::google::cloud::vision::v1::ImageSource* _slow_release_source();
  public:
  const ::google::cloud::vision::v1::ImageSource& source() const;
  ::google::cloud::vision::v1::ImageSource* mutable_source();
  ::google::cloud::vision::v1::ImageSource* release_source();
  void set_allocated_source(::google::cloud::vision::v1::ImageSource* source);
  ::google::cloud::vision::v1::ImageSource* unsafe_arena_release_source();
  void unsafe_arena_set_allocated_source(
      ::google::cloud::vision::v1::ImageSource* source);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.Image)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::cloud::vision::v1::ImageSource* source_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Image> Image_default_instance_;

// -------------------------------------------------------------------

class FaceAnnotation_Landmark : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.FaceAnnotation.Landmark) */ {
 public:
  FaceAnnotation_Landmark();
  virtual ~FaceAnnotation_Landmark();

  FaceAnnotation_Landmark(const FaceAnnotation_Landmark& from);

  inline FaceAnnotation_Landmark& operator=(const FaceAnnotation_Landmark& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceAnnotation_Landmark& default_instance();

  static const FaceAnnotation_Landmark* internal_default_instance();

  void UnsafeArenaSwap(FaceAnnotation_Landmark* other);
  void Swap(FaceAnnotation_Landmark* other);

  // implements Message ----------------------------------------------

  inline FaceAnnotation_Landmark* New() const { return New(NULL); }

  FaceAnnotation_Landmark* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FaceAnnotation_Landmark& from);
  void MergeFrom(const FaceAnnotation_Landmark& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FaceAnnotation_Landmark* other);
  void UnsafeMergeFrom(const FaceAnnotation_Landmark& from);
  protected:
  explicit FaceAnnotation_Landmark(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FaceAnnotation_Landmark_Type Type;
  static const Type UNKNOWN_LANDMARK =
    FaceAnnotation_Landmark_Type_UNKNOWN_LANDMARK;
  static const Type LEFT_EYE =
    FaceAnnotation_Landmark_Type_LEFT_EYE;
  static const Type RIGHT_EYE =
    FaceAnnotation_Landmark_Type_RIGHT_EYE;
  static const Type LEFT_OF_LEFT_EYEBROW =
    FaceAnnotation_Landmark_Type_LEFT_OF_LEFT_EYEBROW;
  static const Type RIGHT_OF_LEFT_EYEBROW =
    FaceAnnotation_Landmark_Type_RIGHT_OF_LEFT_EYEBROW;
  static const Type LEFT_OF_RIGHT_EYEBROW =
    FaceAnnotation_Landmark_Type_LEFT_OF_RIGHT_EYEBROW;
  static const Type RIGHT_OF_RIGHT_EYEBROW =
    FaceAnnotation_Landmark_Type_RIGHT_OF_RIGHT_EYEBROW;
  static const Type MIDPOINT_BETWEEN_EYES =
    FaceAnnotation_Landmark_Type_MIDPOINT_BETWEEN_EYES;
  static const Type NOSE_TIP =
    FaceAnnotation_Landmark_Type_NOSE_TIP;
  static const Type UPPER_LIP =
    FaceAnnotation_Landmark_Type_UPPER_LIP;
  static const Type LOWER_LIP =
    FaceAnnotation_Landmark_Type_LOWER_LIP;
  static const Type MOUTH_LEFT =
    FaceAnnotation_Landmark_Type_MOUTH_LEFT;
  static const Type MOUTH_RIGHT =
    FaceAnnotation_Landmark_Type_MOUTH_RIGHT;
  static const Type MOUTH_CENTER =
    FaceAnnotation_Landmark_Type_MOUTH_CENTER;
  static const Type NOSE_BOTTOM_RIGHT =
    FaceAnnotation_Landmark_Type_NOSE_BOTTOM_RIGHT;
  static const Type NOSE_BOTTOM_LEFT =
    FaceAnnotation_Landmark_Type_NOSE_BOTTOM_LEFT;
  static const Type NOSE_BOTTOM_CENTER =
    FaceAnnotation_Landmark_Type_NOSE_BOTTOM_CENTER;
  static const Type LEFT_EYE_TOP_BOUNDARY =
    FaceAnnotation_Landmark_Type_LEFT_EYE_TOP_BOUNDARY;
  static const Type LEFT_EYE_RIGHT_CORNER =
    FaceAnnotation_Landmark_Type_LEFT_EYE_RIGHT_CORNER;
  static const Type LEFT_EYE_BOTTOM_BOUNDARY =
    FaceAnnotation_Landmark_Type_LEFT_EYE_BOTTOM_BOUNDARY;
  static const Type LEFT_EYE_LEFT_CORNER =
    FaceAnnotation_Landmark_Type_LEFT_EYE_LEFT_CORNER;
  static const Type RIGHT_EYE_TOP_BOUNDARY =
    FaceAnnotation_Landmark_Type_RIGHT_EYE_TOP_BOUNDARY;
  static const Type RIGHT_EYE_RIGHT_CORNER =
    FaceAnnotation_Landmark_Type_RIGHT_EYE_RIGHT_CORNER;
  static const Type RIGHT_EYE_BOTTOM_BOUNDARY =
    FaceAnnotation_Landmark_Type_RIGHT_EYE_BOTTOM_BOUNDARY;
  static const Type RIGHT_EYE_LEFT_CORNER =
    FaceAnnotation_Landmark_Type_RIGHT_EYE_LEFT_CORNER;
  static const Type LEFT_EYEBROW_UPPER_MIDPOINT =
    FaceAnnotation_Landmark_Type_LEFT_EYEBROW_UPPER_MIDPOINT;
  static const Type RIGHT_EYEBROW_UPPER_MIDPOINT =
    FaceAnnotation_Landmark_Type_RIGHT_EYEBROW_UPPER_MIDPOINT;
  static const Type LEFT_EAR_TRAGION =
    FaceAnnotation_Landmark_Type_LEFT_EAR_TRAGION;
  static const Type RIGHT_EAR_TRAGION =
    FaceAnnotation_Landmark_Type_RIGHT_EAR_TRAGION;
  static const Type LEFT_EYE_PUPIL =
    FaceAnnotation_Landmark_Type_LEFT_EYE_PUPIL;
  static const Type RIGHT_EYE_PUPIL =
    FaceAnnotation_Landmark_Type_RIGHT_EYE_PUPIL;
  static const Type FOREHEAD_GLABELLA =
    FaceAnnotation_Landmark_Type_FOREHEAD_GLABELLA;
  static const Type CHIN_GNATHION =
    FaceAnnotation_Landmark_Type_CHIN_GNATHION;
  static const Type CHIN_LEFT_GONION =
    FaceAnnotation_Landmark_Type_CHIN_LEFT_GONION;
  static const Type CHIN_RIGHT_GONION =
    FaceAnnotation_Landmark_Type_CHIN_RIGHT_GONION;
  static inline bool Type_IsValid(int value) {
    return FaceAnnotation_Landmark_Type_IsValid(value);
  }
  static const Type Type_MIN =
    FaceAnnotation_Landmark_Type_Type_MIN;
  static const Type Type_MAX =
    FaceAnnotation_Landmark_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    FaceAnnotation_Landmark_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return FaceAnnotation_Landmark_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return FaceAnnotation_Landmark_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return FaceAnnotation_Landmark_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type type() const;
  void set_type(::google::cloud::vision::v1::FaceAnnotation_Landmark_Type value);

  // optional .google.cloud.vision.v1.Position position = 4;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  private:
  void _slow_mutable_position();
  void _slow_set_allocated_position(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::Position** position);
  ::google::cloud::vision::v1::Position* _slow_release_position();
  public:
  const ::google::cloud::vision::v1::Position& position() const;
  ::google::cloud::vision::v1::Position* mutable_position();
  ::google::cloud::vision::v1::Position* release_position();
  void set_allocated_position(::google::cloud::vision::v1::Position* position);
  ::google::cloud::vision::v1::Position* unsafe_arena_release_position();
  void unsafe_arena_set_allocated_position(
      ::google::cloud::vision::v1::Position* position);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.FaceAnnotation.Landmark)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::vision::v1::Position* position_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FaceAnnotation_Landmark> FaceAnnotation_Landmark_default_instance_;

// -------------------------------------------------------------------

class FaceAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.FaceAnnotation) */ {
 public:
  FaceAnnotation();
  virtual ~FaceAnnotation();

  FaceAnnotation(const FaceAnnotation& from);

  inline FaceAnnotation& operator=(const FaceAnnotation& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceAnnotation& default_instance();

  static const FaceAnnotation* internal_default_instance();

  void UnsafeArenaSwap(FaceAnnotation* other);
  void Swap(FaceAnnotation* other);

  // implements Message ----------------------------------------------

  inline FaceAnnotation* New() const { return New(NULL); }

  FaceAnnotation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FaceAnnotation& from);
  void MergeFrom(const FaceAnnotation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FaceAnnotation* other);
  void UnsafeMergeFrom(const FaceAnnotation& from);
  protected:
  explicit FaceAnnotation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FaceAnnotation_Landmark Landmark;

  // accessors -------------------------------------------------------

  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  bool has_bounding_poly() const;
  void clear_bounding_poly();
  static const int kBoundingPolyFieldNumber = 1;
  private:
  void _slow_mutable_bounding_poly();
  void _slow_set_allocated_bounding_poly(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_poly);
  ::google::cloud::vision::v1::BoundingPoly* _slow_release_bounding_poly();
  public:
  const ::google::cloud::vision::v1::BoundingPoly& bounding_poly() const;
  ::google::cloud::vision::v1::BoundingPoly* mutable_bounding_poly();
  ::google::cloud::vision::v1::BoundingPoly* release_bounding_poly();
  void set_allocated_bounding_poly(::google::cloud::vision::v1::BoundingPoly* bounding_poly);
  ::google::cloud::vision::v1::BoundingPoly* unsafe_arena_release_bounding_poly();
  void unsafe_arena_set_allocated_bounding_poly(
      ::google::cloud::vision::v1::BoundingPoly* bounding_poly);

  // optional .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
  bool has_fd_bounding_poly() const;
  void clear_fd_bounding_poly();
  static const int kFdBoundingPolyFieldNumber = 2;
  private:
  void _slow_mutable_fd_bounding_poly();
  void _slow_set_allocated_fd_bounding_poly(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** fd_bounding_poly);
  ::google::cloud::vision::v1::BoundingPoly* _slow_release_fd_bounding_poly();
  public:
  const ::google::cloud::vision::v1::BoundingPoly& fd_bounding_poly() const;
  ::google::cloud::vision::v1::BoundingPoly* mutable_fd_bounding_poly();
  ::google::cloud::vision::v1::BoundingPoly* release_fd_bounding_poly();
  void set_allocated_fd_bounding_poly(::google::cloud::vision::v1::BoundingPoly* fd_bounding_poly);
  ::google::cloud::vision::v1::BoundingPoly* unsafe_arena_release_fd_bounding_poly();
  void unsafe_arena_set_allocated_fd_bounding_poly(
      ::google::cloud::vision::v1::BoundingPoly* fd_bounding_poly);

  // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
  int landmarks_size() const;
  void clear_landmarks();
  static const int kLandmarksFieldNumber = 3;
  const ::google::cloud::vision::v1::FaceAnnotation_Landmark& landmarks(int index) const;
  ::google::cloud::vision::v1::FaceAnnotation_Landmark* mutable_landmarks(int index);
  ::google::cloud::vision::v1::FaceAnnotation_Landmark* add_landmarks();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation_Landmark >*
      mutable_landmarks();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation_Landmark >&
      landmarks() const;

  // optional float roll_angle = 4;
  void clear_roll_angle();
  static const int kRollAngleFieldNumber = 4;
  float roll_angle() const;
  void set_roll_angle(float value);

  // optional float pan_angle = 5;
  void clear_pan_angle();
  static const int kPanAngleFieldNumber = 5;
  float pan_angle() const;
  void set_pan_angle(float value);

  // optional float tilt_angle = 6;
  void clear_tilt_angle();
  static const int kTiltAngleFieldNumber = 6;
  float tilt_angle() const;
  void set_tilt_angle(float value);

  // optional float detection_confidence = 7;
  void clear_detection_confidence();
  static const int kDetectionConfidenceFieldNumber = 7;
  float detection_confidence() const;
  void set_detection_confidence(float value);

  // optional float landmarking_confidence = 8;
  void clear_landmarking_confidence();
  static const int kLandmarkingConfidenceFieldNumber = 8;
  float landmarking_confidence() const;
  void set_landmarking_confidence(float value);

  // optional .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
  void clear_joy_likelihood();
  static const int kJoyLikelihoodFieldNumber = 9;
  ::google::cloud::vision::v1::Likelihood joy_likelihood() const;
  void set_joy_likelihood(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
  void clear_sorrow_likelihood();
  static const int kSorrowLikelihoodFieldNumber = 10;
  ::google::cloud::vision::v1::Likelihood sorrow_likelihood() const;
  void set_sorrow_likelihood(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
  void clear_anger_likelihood();
  static const int kAngerLikelihoodFieldNumber = 11;
  ::google::cloud::vision::v1::Likelihood anger_likelihood() const;
  void set_anger_likelihood(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
  void clear_surprise_likelihood();
  static const int kSurpriseLikelihoodFieldNumber = 12;
  ::google::cloud::vision::v1::Likelihood surprise_likelihood() const;
  void set_surprise_likelihood(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
  void clear_under_exposed_likelihood();
  static const int kUnderExposedLikelihoodFieldNumber = 13;
  ::google::cloud::vision::v1::Likelihood under_exposed_likelihood() const;
  void set_under_exposed_likelihood(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
  void clear_blurred_likelihood();
  static const int kBlurredLikelihoodFieldNumber = 14;
  ::google::cloud::vision::v1::Likelihood blurred_likelihood() const;
  void set_blurred_likelihood(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
  void clear_headwear_likelihood();
  static const int kHeadwearLikelihoodFieldNumber = 15;
  ::google::cloud::vision::v1::Likelihood headwear_likelihood() const;
  void set_headwear_likelihood(::google::cloud::vision::v1::Likelihood value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.FaceAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation_Landmark > landmarks_;
  ::google::cloud::vision::v1::BoundingPoly* bounding_poly_;
  ::google::cloud::vision::v1::BoundingPoly* fd_bounding_poly_;
  float roll_angle_;
  float pan_angle_;
  float tilt_angle_;
  float detection_confidence_;
  float landmarking_confidence_;
  int joy_likelihood_;
  int sorrow_likelihood_;
  int anger_likelihood_;
  int surprise_likelihood_;
  int under_exposed_likelihood_;
  int blurred_likelihood_;
  int headwear_likelihood_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FaceAnnotation> FaceAnnotation_default_instance_;

// -------------------------------------------------------------------

class LocationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.LocationInfo) */ {
 public:
  LocationInfo();
  virtual ~LocationInfo();

  LocationInfo(const LocationInfo& from);

  inline LocationInfo& operator=(const LocationInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationInfo& default_instance();

  static const LocationInfo* internal_default_instance();

  void UnsafeArenaSwap(LocationInfo* other);
  void Swap(LocationInfo* other);

  // implements Message ----------------------------------------------

  inline LocationInfo* New() const { return New(NULL); }

  LocationInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocationInfo& from);
  void MergeFrom(const LocationInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LocationInfo* other);
  void UnsafeMergeFrom(const LocationInfo& from);
  protected:
  explicit LocationInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.type.LatLng lat_lng = 1;
  bool has_lat_lng() const;
  void clear_lat_lng();
  static const int kLatLngFieldNumber = 1;
  private:
  void _slow_mutable_lat_lng();
  ::google::type::LatLng* _slow_release_lat_lng();
  public:
  const ::google::type::LatLng& lat_lng() const;
  ::google::type::LatLng* mutable_lat_lng();
  ::google::type::LatLng* release_lat_lng();
  void set_allocated_lat_lng(::google::type::LatLng* lat_lng);
  ::google::type::LatLng* unsafe_arena_release_lat_lng();
  void unsafe_arena_set_allocated_lat_lng(
      ::google::type::LatLng* lat_lng);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.LocationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::type::LatLng* lat_lng_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LocationInfo> LocationInfo_default_instance_;

// -------------------------------------------------------------------

class Property : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.Property) */ {
 public:
  Property();
  virtual ~Property();

  Property(const Property& from);

  inline Property& operator=(const Property& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Property& default_instance();

  static const Property* internal_default_instance();

  void UnsafeArenaSwap(Property* other);
  void Swap(Property* other);

  // implements Message ----------------------------------------------

  inline Property* New() const { return New(NULL); }

  Property* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Property& from);
  void MergeFrom(const Property& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Property* other);
  void UnsafeMergeFrom(const Property& from);
  protected:
  explicit Property(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);
  ::std::string* unsafe_arena_release_value();
  void unsafe_arena_set_allocated_value(
      ::std::string* value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.Property)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Property> Property_default_instance_;

// -------------------------------------------------------------------

class EntityAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.EntityAnnotation) */ {
 public:
  EntityAnnotation();
  virtual ~EntityAnnotation();

  EntityAnnotation(const EntityAnnotation& from);

  inline EntityAnnotation& operator=(const EntityAnnotation& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityAnnotation& default_instance();

  static const EntityAnnotation* internal_default_instance();

  void UnsafeArenaSwap(EntityAnnotation* other);
  void Swap(EntityAnnotation* other);

  // implements Message ----------------------------------------------

  inline EntityAnnotation* New() const { return New(NULL); }

  EntityAnnotation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntityAnnotation& from);
  void MergeFrom(const EntityAnnotation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EntityAnnotation* other);
  void UnsafeMergeFrom(const EntityAnnotation& from);
  protected:
  explicit EntityAnnotation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  const ::std::string& mid() const;
  void set_mid(const ::std::string& value);
  void set_mid(const char* value);
  void set_mid(const char* value, size_t size);
  ::std::string* mutable_mid();
  ::std::string* release_mid();
  void set_allocated_mid(::std::string* mid);
  ::std::string* unsafe_arena_release_mid();
  void unsafe_arena_set_allocated_mid(
      ::std::string* mid);

  // optional string locale = 2;
  void clear_locale();
  static const int kLocaleFieldNumber = 2;
  const ::std::string& locale() const;
  void set_locale(const ::std::string& value);
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  ::std::string* mutable_locale();
  ::std::string* release_locale();
  void set_allocated_locale(::std::string* locale);
  ::std::string* unsafe_arena_release_locale();
  void unsafe_arena_set_allocated_locale(
      ::std::string* locale);

  // optional string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  ::std::string* unsafe_arena_release_description();
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // optional float score = 4;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  float score() const;
  void set_score(float value);

  // optional float confidence = 5;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 5;
  float confidence() const;
  void set_confidence(float value);

  // optional float topicality = 6;
  void clear_topicality();
  static const int kTopicalityFieldNumber = 6;
  float topicality() const;
  void set_topicality(float value);

  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
  bool has_bounding_poly() const;
  void clear_bounding_poly();
  static const int kBoundingPolyFieldNumber = 7;
  private:
  void _slow_mutable_bounding_poly();
  void _slow_set_allocated_bounding_poly(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_poly);
  ::google::cloud::vision::v1::BoundingPoly* _slow_release_bounding_poly();
  public:
  const ::google::cloud::vision::v1::BoundingPoly& bounding_poly() const;
  ::google::cloud::vision::v1::BoundingPoly* mutable_bounding_poly();
  ::google::cloud::vision::v1::BoundingPoly* release_bounding_poly();
  void set_allocated_bounding_poly(::google::cloud::vision::v1::BoundingPoly* bounding_poly);
  ::google::cloud::vision::v1::BoundingPoly* unsafe_arena_release_bounding_poly();
  void unsafe_arena_set_allocated_bounding_poly(
      ::google::cloud::vision::v1::BoundingPoly* bounding_poly);

  // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 8;
  const ::google::cloud::vision::v1::LocationInfo& locations(int index) const;
  ::google::cloud::vision::v1::LocationInfo* mutable_locations(int index);
  ::google::cloud::vision::v1::LocationInfo* add_locations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::LocationInfo >*
      mutable_locations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::LocationInfo >&
      locations() const;

  // repeated .google.cloud.vision.v1.Property properties = 9;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 9;
  const ::google::cloud::vision::v1::Property& properties(int index) const;
  ::google::cloud::vision::v1::Property* mutable_properties(int index);
  ::google::cloud::vision::v1::Property* add_properties();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Property >*
      mutable_properties();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Property >&
      properties() const;

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.EntityAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::LocationInfo > locations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Property > properties_;
  ::google::protobuf::internal::ArenaStringPtr mid_;
  ::google::protobuf::internal::ArenaStringPtr locale_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::cloud::vision::v1::BoundingPoly* bounding_poly_;
  float score_;
  float confidence_;
  float topicality_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EntityAnnotation> EntityAnnotation_default_instance_;

// -------------------------------------------------------------------

class SafeSearchAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.SafeSearchAnnotation) */ {
 public:
  SafeSearchAnnotation();
  virtual ~SafeSearchAnnotation();

  SafeSearchAnnotation(const SafeSearchAnnotation& from);

  inline SafeSearchAnnotation& operator=(const SafeSearchAnnotation& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SafeSearchAnnotation& default_instance();

  static const SafeSearchAnnotation* internal_default_instance();

  void UnsafeArenaSwap(SafeSearchAnnotation* other);
  void Swap(SafeSearchAnnotation* other);

  // implements Message ----------------------------------------------

  inline SafeSearchAnnotation* New() const { return New(NULL); }

  SafeSearchAnnotation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SafeSearchAnnotation& from);
  void MergeFrom(const SafeSearchAnnotation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SafeSearchAnnotation* other);
  void UnsafeMergeFrom(const SafeSearchAnnotation& from);
  protected:
  explicit SafeSearchAnnotation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.cloud.vision.v1.Likelihood adult = 1;
  void clear_adult();
  static const int kAdultFieldNumber = 1;
  ::google::cloud::vision::v1::Likelihood adult() const;
  void set_adult(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood spoof = 2;
  void clear_spoof();
  static const int kSpoofFieldNumber = 2;
  ::google::cloud::vision::v1::Likelihood spoof() const;
  void set_spoof(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood medical = 3;
  void clear_medical();
  static const int kMedicalFieldNumber = 3;
  ::google::cloud::vision::v1::Likelihood medical() const;
  void set_medical(::google::cloud::vision::v1::Likelihood value);

  // optional .google.cloud.vision.v1.Likelihood violence = 4;
  void clear_violence();
  static const int kViolenceFieldNumber = 4;
  ::google::cloud::vision::v1::Likelihood violence() const;
  void set_violence(::google::cloud::vision::v1::Likelihood value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.SafeSearchAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int adult_;
  int spoof_;
  int medical_;
  int violence_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SafeSearchAnnotation> SafeSearchAnnotation_default_instance_;

// -------------------------------------------------------------------

class LatLongRect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.LatLongRect) */ {
 public:
  LatLongRect();
  virtual ~LatLongRect();

  LatLongRect(const LatLongRect& from);

  inline LatLongRect& operator=(const LatLongRect& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const LatLongRect& default_instance();

  static const LatLongRect* internal_default_instance();

  void UnsafeArenaSwap(LatLongRect* other);
  void Swap(LatLongRect* other);

  // implements Message ----------------------------------------------

  inline LatLongRect* New() const { return New(NULL); }

  LatLongRect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LatLongRect& from);
  void MergeFrom(const LatLongRect& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LatLongRect* other);
  void UnsafeMergeFrom(const LatLongRect& from);
  protected:
  explicit LatLongRect(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.type.LatLng min_lat_lng = 1;
  bool has_min_lat_lng() const;
  void clear_min_lat_lng();
  static const int kMinLatLngFieldNumber = 1;
  private:
  void _slow_mutable_min_lat_lng();
  ::google::type::LatLng* _slow_release_min_lat_lng();
  public:
  const ::google::type::LatLng& min_lat_lng() const;
  ::google::type::LatLng* mutable_min_lat_lng();
  ::google::type::LatLng* release_min_lat_lng();
  void set_allocated_min_lat_lng(::google::type::LatLng* min_lat_lng);
  ::google::type::LatLng* unsafe_arena_release_min_lat_lng();
  void unsafe_arena_set_allocated_min_lat_lng(
      ::google::type::LatLng* min_lat_lng);

  // optional .google.type.LatLng max_lat_lng = 2;
  bool has_max_lat_lng() const;
  void clear_max_lat_lng();
  static const int kMaxLatLngFieldNumber = 2;
  private:
  void _slow_mutable_max_lat_lng();
  ::google::type::LatLng* _slow_release_max_lat_lng();
  public:
  const ::google::type::LatLng& max_lat_lng() const;
  ::google::type::LatLng* mutable_max_lat_lng();
  ::google::type::LatLng* release_max_lat_lng();
  void set_allocated_max_lat_lng(::google::type::LatLng* max_lat_lng);
  ::google::type::LatLng* unsafe_arena_release_max_lat_lng();
  void unsafe_arena_set_allocated_max_lat_lng(
      ::google::type::LatLng* max_lat_lng);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.LatLongRect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::type::LatLng* min_lat_lng_;
  ::google::type::LatLng* max_lat_lng_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LatLongRect> LatLongRect_default_instance_;

// -------------------------------------------------------------------

class ColorInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.ColorInfo) */ {
 public:
  ColorInfo();
  virtual ~ColorInfo();

  ColorInfo(const ColorInfo& from);

  inline ColorInfo& operator=(const ColorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ColorInfo& default_instance();

  static const ColorInfo* internal_default_instance();

  void UnsafeArenaSwap(ColorInfo* other);
  void Swap(ColorInfo* other);

  // implements Message ----------------------------------------------

  inline ColorInfo* New() const { return New(NULL); }

  ColorInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColorInfo& from);
  void MergeFrom(const ColorInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ColorInfo* other);
  void UnsafeMergeFrom(const ColorInfo& from);
  protected:
  explicit ColorInfo(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.type.Color color = 1;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 1;
  private:
  void _slow_mutable_color();
  ::google::type::Color* _slow_release_color();
  public:
  const ::google::type::Color& color() const;
  ::google::type::Color* mutable_color();
  ::google::type::Color* release_color();
  void set_allocated_color(::google::type::Color* color);
  ::google::type::Color* unsafe_arena_release_color();
  void unsafe_arena_set_allocated_color(
      ::google::type::Color* color);

  // optional float score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  float score() const;
  void set_score(float value);

  // optional float pixel_fraction = 3;
  void clear_pixel_fraction();
  static const int kPixelFractionFieldNumber = 3;
  float pixel_fraction() const;
  void set_pixel_fraction(float value);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.ColorInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::type::Color* color_;
  float score_;
  float pixel_fraction_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ColorInfo> ColorInfo_default_instance_;

// -------------------------------------------------------------------

class DominantColorsAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.DominantColorsAnnotation) */ {
 public:
  DominantColorsAnnotation();
  virtual ~DominantColorsAnnotation();

  DominantColorsAnnotation(const DominantColorsAnnotation& from);

  inline DominantColorsAnnotation& operator=(const DominantColorsAnnotation& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DominantColorsAnnotation& default_instance();

  static const DominantColorsAnnotation* internal_default_instance();

  void UnsafeArenaSwap(DominantColorsAnnotation* other);
  void Swap(DominantColorsAnnotation* other);

  // implements Message ----------------------------------------------

  inline DominantColorsAnnotation* New() const { return New(NULL); }

  DominantColorsAnnotation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DominantColorsAnnotation& from);
  void MergeFrom(const DominantColorsAnnotation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DominantColorsAnnotation* other);
  void UnsafeMergeFrom(const DominantColorsAnnotation& from);
  protected:
  explicit DominantColorsAnnotation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
  int colors_size() const;
  void clear_colors();
  static const int kColorsFieldNumber = 1;
  const ::google::cloud::vision::v1::ColorInfo& colors(int index) const;
  ::google::cloud::vision::v1::ColorInfo* mutable_colors(int index);
  ::google::cloud::vision::v1::ColorInfo* add_colors();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::ColorInfo >*
      mutable_colors();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::ColorInfo >&
      colors() const;

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.DominantColorsAnnotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::ColorInfo > colors_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DominantColorsAnnotation> DominantColorsAnnotation_default_instance_;

// -------------------------------------------------------------------

class ImageProperties : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.ImageProperties) */ {
 public:
  ImageProperties();
  virtual ~ImageProperties();

  ImageProperties(const ImageProperties& from);

  inline ImageProperties& operator=(const ImageProperties& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageProperties& default_instance();

  static const ImageProperties* internal_default_instance();

  void UnsafeArenaSwap(ImageProperties* other);
  void Swap(ImageProperties* other);

  // implements Message ----------------------------------------------

  inline ImageProperties* New() const { return New(NULL); }

  ImageProperties* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageProperties& from);
  void MergeFrom(const ImageProperties& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageProperties* other);
  void UnsafeMergeFrom(const ImageProperties& from);
  protected:
  explicit ImageProperties(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
  bool has_dominant_colors() const;
  void clear_dominant_colors();
  static const int kDominantColorsFieldNumber = 1;
  private:
  void _slow_mutable_dominant_colors();
  void _slow_set_allocated_dominant_colors(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::DominantColorsAnnotation** dominant_colors);
  ::google::cloud::vision::v1::DominantColorsAnnotation* _slow_release_dominant_colors();
  public:
  const ::google::cloud::vision::v1::DominantColorsAnnotation& dominant_colors() const;
  ::google::cloud::vision::v1::DominantColorsAnnotation* mutable_dominant_colors();
  ::google::cloud::vision::v1::DominantColorsAnnotation* release_dominant_colors();
  void set_allocated_dominant_colors(::google::cloud::vision::v1::DominantColorsAnnotation* dominant_colors);
  ::google::cloud::vision::v1::DominantColorsAnnotation* unsafe_arena_release_dominant_colors();
  void unsafe_arena_set_allocated_dominant_colors(
      ::google::cloud::vision::v1::DominantColorsAnnotation* dominant_colors);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.ImageProperties)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::vision::v1::DominantColorsAnnotation* dominant_colors_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImageProperties> ImageProperties_default_instance_;

// -------------------------------------------------------------------

class ImageContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.ImageContext) */ {
 public:
  ImageContext();
  virtual ~ImageContext();

  ImageContext(const ImageContext& from);

  inline ImageContext& operator=(const ImageContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageContext& default_instance();

  static const ImageContext* internal_default_instance();

  void UnsafeArenaSwap(ImageContext* other);
  void Swap(ImageContext* other);

  // implements Message ----------------------------------------------

  inline ImageContext* New() const { return New(NULL); }

  ImageContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageContext& from);
  void MergeFrom(const ImageContext& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageContext* other);
  void UnsafeMergeFrom(const ImageContext& from);
  protected:
  explicit ImageContext(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
  bool has_lat_long_rect() const;
  void clear_lat_long_rect();
  static const int kLatLongRectFieldNumber = 1;
  private:
  void _slow_mutable_lat_long_rect();
  void _slow_set_allocated_lat_long_rect(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::LatLongRect** lat_long_rect);
  ::google::cloud::vision::v1::LatLongRect* _slow_release_lat_long_rect();
  public:
  const ::google::cloud::vision::v1::LatLongRect& lat_long_rect() const;
  ::google::cloud::vision::v1::LatLongRect* mutable_lat_long_rect();
  ::google::cloud::vision::v1::LatLongRect* release_lat_long_rect();
  void set_allocated_lat_long_rect(::google::cloud::vision::v1::LatLongRect* lat_long_rect);
  ::google::cloud::vision::v1::LatLongRect* unsafe_arena_release_lat_long_rect();
  void unsafe_arena_set_allocated_lat_long_rect(
      ::google::cloud::vision::v1::LatLongRect* lat_long_rect);

  // repeated string language_hints = 2;
  int language_hints_size() const;
  void clear_language_hints();
  static const int kLanguageHintsFieldNumber = 2;
  const ::std::string& language_hints(int index) const;
  ::std::string* mutable_language_hints(int index);
  void set_language_hints(int index, const ::std::string& value);
  void set_language_hints(int index, const char* value);
  void set_language_hints(int index, const char* value, size_t size);
  ::std::string* add_language_hints();
  void add_language_hints(const ::std::string& value);
  void add_language_hints(const char* value);
  void add_language_hints(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& language_hints() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_language_hints();

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.ImageContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> language_hints_;
  ::google::cloud::vision::v1::LatLongRect* lat_long_rect_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImageContext> ImageContext_default_instance_;

// -------------------------------------------------------------------

class AnnotateImageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.AnnotateImageRequest) */ {
 public:
  AnnotateImageRequest();
  virtual ~AnnotateImageRequest();

  AnnotateImageRequest(const AnnotateImageRequest& from);

  inline AnnotateImageRequest& operator=(const AnnotateImageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateImageRequest& default_instance();

  static const AnnotateImageRequest* internal_default_instance();

  void UnsafeArenaSwap(AnnotateImageRequest* other);
  void Swap(AnnotateImageRequest* other);

  // implements Message ----------------------------------------------

  inline AnnotateImageRequest* New() const { return New(NULL); }

  AnnotateImageRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnnotateImageRequest& from);
  void MergeFrom(const AnnotateImageRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AnnotateImageRequest* other);
  void UnsafeMergeFrom(const AnnotateImageRequest& from);
  protected:
  explicit AnnotateImageRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.cloud.vision.v1.Image image = 1;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 1;
  private:
  void _slow_mutable_image();
  void _slow_set_allocated_image(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::Image** image);
  ::google::cloud::vision::v1::Image* _slow_release_image();
  public:
  const ::google::cloud::vision::v1::Image& image() const;
  ::google::cloud::vision::v1::Image* mutable_image();
  ::google::cloud::vision::v1::Image* release_image();
  void set_allocated_image(::google::cloud::vision::v1::Image* image);
  ::google::cloud::vision::v1::Image* unsafe_arena_release_image();
  void unsafe_arena_set_allocated_image(
      ::google::cloud::vision::v1::Image* image);

  // repeated .google.cloud.vision.v1.Feature features = 2;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 2;
  const ::google::cloud::vision::v1::Feature& features(int index) const;
  ::google::cloud::vision::v1::Feature* mutable_features(int index);
  ::google::cloud::vision::v1::Feature* add_features();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Feature >*
      mutable_features();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Feature >&
      features() const;

  // optional .google.cloud.vision.v1.ImageContext image_context = 3;
  bool has_image_context() const;
  void clear_image_context();
  static const int kImageContextFieldNumber = 3;
  private:
  void _slow_mutable_image_context();
  void _slow_set_allocated_image_context(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::ImageContext** image_context);
  ::google::cloud::vision::v1::ImageContext* _slow_release_image_context();
  public:
  const ::google::cloud::vision::v1::ImageContext& image_context() const;
  ::google::cloud::vision::v1::ImageContext* mutable_image_context();
  ::google::cloud::vision::v1::ImageContext* release_image_context();
  void set_allocated_image_context(::google::cloud::vision::v1::ImageContext* image_context);
  ::google::cloud::vision::v1::ImageContext* unsafe_arena_release_image_context();
  void unsafe_arena_set_allocated_image_context(
      ::google::cloud::vision::v1::ImageContext* image_context);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.AnnotateImageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Feature > features_;
  ::google::cloud::vision::v1::Image* image_;
  ::google::cloud::vision::v1::ImageContext* image_context_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AnnotateImageRequest> AnnotateImageRequest_default_instance_;

// -------------------------------------------------------------------

class AnnotateImageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.AnnotateImageResponse) */ {
 public:
  AnnotateImageResponse();
  virtual ~AnnotateImageResponse();

  AnnotateImageResponse(const AnnotateImageResponse& from);

  inline AnnotateImageResponse& operator=(const AnnotateImageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnnotateImageResponse& default_instance();

  static const AnnotateImageResponse* internal_default_instance();

  void UnsafeArenaSwap(AnnotateImageResponse* other);
  void Swap(AnnotateImageResponse* other);

  // implements Message ----------------------------------------------

  inline AnnotateImageResponse* New() const { return New(NULL); }

  AnnotateImageResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnnotateImageResponse& from);
  void MergeFrom(const AnnotateImageResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AnnotateImageResponse* other);
  void UnsafeMergeFrom(const AnnotateImageResponse& from);
  protected:
  explicit AnnotateImageResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
  int face_annotations_size() const;
  void clear_face_annotations();
  static const int kFaceAnnotationsFieldNumber = 1;
  const ::google::cloud::vision::v1::FaceAnnotation& face_annotations(int index) const;
  ::google::cloud::vision::v1::FaceAnnotation* mutable_face_annotations(int index);
  ::google::cloud::vision::v1::FaceAnnotation* add_face_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation >*
      mutable_face_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation >&
      face_annotations() const;

  // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
  int landmark_annotations_size() const;
  void clear_landmark_annotations();
  static const int kLandmarkAnnotationsFieldNumber = 2;
  const ::google::cloud::vision::v1::EntityAnnotation& landmark_annotations(int index) const;
  ::google::cloud::vision::v1::EntityAnnotation* mutable_landmark_annotations(int index);
  ::google::cloud::vision::v1::EntityAnnotation* add_landmark_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
      mutable_landmark_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
      landmark_annotations() const;

  // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
  int logo_annotations_size() const;
  void clear_logo_annotations();
  static const int kLogoAnnotationsFieldNumber = 3;
  const ::google::cloud::vision::v1::EntityAnnotation& logo_annotations(int index) const;
  ::google::cloud::vision::v1::EntityAnnotation* mutable_logo_annotations(int index);
  ::google::cloud::vision::v1::EntityAnnotation* add_logo_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
      mutable_logo_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
      logo_annotations() const;

  // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
  int label_annotations_size() const;
  void clear_label_annotations();
  static const int kLabelAnnotationsFieldNumber = 4;
  const ::google::cloud::vision::v1::EntityAnnotation& label_annotations(int index) const;
  ::google::cloud::vision::v1::EntityAnnotation* mutable_label_annotations(int index);
  ::google::cloud::vision::v1::EntityAnnotation* add_label_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
      mutable_label_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
      label_annotations() const;

  // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
  int text_annotations_size() const;
  void clear_text_annotations();
  static const int kTextAnnotationsFieldNumber = 5;
  const ::google::cloud::vision::v1::EntityAnnotation& text_annotations(int index) const;
  ::google::cloud::vision::v1::EntityAnnotation* mutable_text_annotations(int index);
  ::google::cloud::vision::v1::EntityAnnotation* add_text_annotations();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
      mutable_text_annotations();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
      text_annotations() const;

  // optional .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
  bool has_safe_search_annotation() const;
  void clear_safe_search_annotation();
  static const int kSafeSearchAnnotationFieldNumber = 6;
  private:
  void _slow_mutable_safe_search_annotation();
  void _slow_set_allocated_safe_search_annotation(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::SafeSearchAnnotation** safe_search_annotation);
  ::google::cloud::vision::v1::SafeSearchAnnotation* _slow_release_safe_search_annotation();
  public:
  const ::google::cloud::vision::v1::SafeSearchAnnotation& safe_search_annotation() const;
  ::google::cloud::vision::v1::SafeSearchAnnotation* mutable_safe_search_annotation();
  ::google::cloud::vision::v1::SafeSearchAnnotation* release_safe_search_annotation();
  void set_allocated_safe_search_annotation(::google::cloud::vision::v1::SafeSearchAnnotation* safe_search_annotation);
  ::google::cloud::vision::v1::SafeSearchAnnotation* unsafe_arena_release_safe_search_annotation();
  void unsafe_arena_set_allocated_safe_search_annotation(
      ::google::cloud::vision::v1::SafeSearchAnnotation* safe_search_annotation);

  // optional .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
  bool has_image_properties_annotation() const;
  void clear_image_properties_annotation();
  static const int kImagePropertiesAnnotationFieldNumber = 8;
  private:
  void _slow_mutable_image_properties_annotation();
  void _slow_set_allocated_image_properties_annotation(
      ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::ImageProperties** image_properties_annotation);
  ::google::cloud::vision::v1::ImageProperties* _slow_release_image_properties_annotation();
  public:
  const ::google::cloud::vision::v1::ImageProperties& image_properties_annotation() const;
  ::google::cloud::vision::v1::ImageProperties* mutable_image_properties_annotation();
  ::google::cloud::vision::v1::ImageProperties* release_image_properties_annotation();
  void set_allocated_image_properties_annotation(::google::cloud::vision::v1::ImageProperties* image_properties_annotation);
  ::google::cloud::vision::v1::ImageProperties* unsafe_arena_release_image_properties_annotation();
  void unsafe_arena_set_allocated_image_properties_annotation(
      ::google::cloud::vision::v1::ImageProperties* image_properties_annotation);

  // optional .google.rpc.Status error = 9;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 9;
  private:
  void _slow_mutable_error();
  ::google::rpc::Status* _slow_release_error();
  public:
  const ::google::rpc::Status& error() const;
  ::google::rpc::Status* mutable_error();
  ::google::rpc::Status* release_error();
  void set_allocated_error(::google::rpc::Status* error);
  ::google::rpc::Status* unsafe_arena_release_error();
  void unsafe_arena_set_allocated_error(
      ::google::rpc::Status* error);

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.AnnotateImageResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation > face_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation > landmark_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation > logo_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation > label_annotations_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation > text_annotations_;
  ::google::cloud::vision::v1::SafeSearchAnnotation* safe_search_annotation_;
  ::google::cloud::vision::v1::ImageProperties* image_properties_annotation_;
  ::google::rpc::Status* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AnnotateImageResponse> AnnotateImageResponse_default_instance_;

// -------------------------------------------------------------------

class BatchAnnotateImagesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.BatchAnnotateImagesRequest) */ {
 public:
  BatchAnnotateImagesRequest();
  virtual ~BatchAnnotateImagesRequest();

  BatchAnnotateImagesRequest(const BatchAnnotateImagesRequest& from);

  inline BatchAnnotateImagesRequest& operator=(const BatchAnnotateImagesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchAnnotateImagesRequest& default_instance();

  static const BatchAnnotateImagesRequest* internal_default_instance();

  void UnsafeArenaSwap(BatchAnnotateImagesRequest* other);
  void Swap(BatchAnnotateImagesRequest* other);

  // implements Message ----------------------------------------------

  inline BatchAnnotateImagesRequest* New() const { return New(NULL); }

  BatchAnnotateImagesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchAnnotateImagesRequest& from);
  void MergeFrom(const BatchAnnotateImagesRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BatchAnnotateImagesRequest* other);
  void UnsafeMergeFrom(const BatchAnnotateImagesRequest& from);
  protected:
  explicit BatchAnnotateImagesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 1;
  const ::google::cloud::vision::v1::AnnotateImageRequest& requests(int index) const;
  ::google::cloud::vision::v1::AnnotateImageRequest* mutable_requests(int index);
  ::google::cloud::vision::v1::AnnotateImageRequest* add_requests();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageRequest >*
      mutable_requests();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageRequest >&
      requests() const;

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.BatchAnnotateImagesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageRequest > requests_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BatchAnnotateImagesRequest> BatchAnnotateImagesRequest_default_instance_;

// -------------------------------------------------------------------

class BatchAnnotateImagesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.vision.v1.BatchAnnotateImagesResponse) */ {
 public:
  BatchAnnotateImagesResponse();
  virtual ~BatchAnnotateImagesResponse();

  BatchAnnotateImagesResponse(const BatchAnnotateImagesResponse& from);

  inline BatchAnnotateImagesResponse& operator=(const BatchAnnotateImagesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchAnnotateImagesResponse& default_instance();

  static const BatchAnnotateImagesResponse* internal_default_instance();

  void UnsafeArenaSwap(BatchAnnotateImagesResponse* other);
  void Swap(BatchAnnotateImagesResponse* other);

  // implements Message ----------------------------------------------

  inline BatchAnnotateImagesResponse* New() const { return New(NULL); }

  BatchAnnotateImagesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchAnnotateImagesResponse& from);
  void MergeFrom(const BatchAnnotateImagesResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BatchAnnotateImagesResponse* other);
  void UnsafeMergeFrom(const BatchAnnotateImagesResponse& from);
  protected:
  explicit BatchAnnotateImagesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 1;
  const ::google::cloud::vision::v1::AnnotateImageResponse& responses(int index) const;
  ::google::cloud::vision::v1::AnnotateImageResponse* mutable_responses(int index);
  ::google::cloud::vision::v1::AnnotateImageResponse* add_responses();
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageResponse >*
      mutable_responses();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageResponse >&
      responses() const;

  // @@protoc_insertion_point(class_scope:google.cloud.vision.v1.BatchAnnotateImagesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageResponse > responses_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BatchAnnotateImagesResponse> BatchAnnotateImagesResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Feature

// optional .google.cloud.vision.v1.Feature.Type type = 1;
inline void Feature::clear_type() {
  type_ = 0;
}
inline ::google::cloud::vision::v1::Feature_Type Feature::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Feature.type)
  return static_cast< ::google::cloud::vision::v1::Feature_Type >(type_);
}
inline void Feature::set_type(::google::cloud::vision::v1::Feature_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Feature.type)
}

// optional int32 max_results = 2;
inline void Feature::clear_max_results() {
  max_results_ = 0;
}
inline ::google::protobuf::int32 Feature::max_results() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Feature.max_results)
  return max_results_;
}
inline void Feature::set_max_results(::google::protobuf::int32 value) {
  
  max_results_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Feature.max_results)
}

inline const Feature* Feature::internal_default_instance() {
  return &Feature_default_instance_.get();
}
// -------------------------------------------------------------------

// ImageSource

// optional string gcs_image_uri = 1;
inline void ImageSource::clear_gcs_image_uri() {
  gcs_image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ImageSource::gcs_image_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  return gcs_image_uri_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageSource::set_gcs_image_uri(const ::std::string& value) {
  
  gcs_image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
inline void ImageSource::set_gcs_image_uri(const char* value) {
  
  gcs_image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
inline void ImageSource::set_gcs_image_uri(const char* value,
    size_t size) {
  
  gcs_image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
inline ::std::string* ImageSource::mutable_gcs_image_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  return gcs_image_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImageSource::release_gcs_image_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  
  return gcs_image_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImageSource::unsafe_arena_release_gcs_image_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return gcs_image_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImageSource::set_allocated_gcs_image_uri(::std::string* gcs_image_uri) {
  if (gcs_image_uri != NULL) {
    
  } else {
    
  }
  gcs_image_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcs_image_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
inline void ImageSource::unsafe_arena_set_allocated_gcs_image_uri(
    ::std::string* gcs_image_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (gcs_image_uri != NULL) {
    
  } else {
    
  }
  gcs_image_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      gcs_image_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}

inline const ImageSource* ImageSource::internal_default_instance() {
  return &ImageSource_default_instance_.get();
}
// -------------------------------------------------------------------

// Image

// optional bytes content = 1;
inline void Image::clear_content() {
  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Image::content() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Image.content)
  return content_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_content(const ::std::string& value) {
  
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Image.content)
}
inline void Image::set_content(const char* value) {
  
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.Image.content)
}
inline void Image::set_content(const void* value,
    size_t size) {
  
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.Image.content)
}
inline ::std::string* Image::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Image.content)
  return content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Image::release_content() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Image.content)
  
  return content_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Image::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Image.content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return content_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Image::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Image.content)
}
inline void Image::unsafe_arena_set_allocated_content(
    ::std::string* content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (content != NULL) {
    
  } else {
    
  }
  content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      content, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Image.content)
}

// optional .google.cloud.vision.v1.ImageSource source = 2;
inline bool Image::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline void Image::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
}
inline const ::google::cloud::vision::v1::ImageSource& Image::source() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Image.source)
  return source_ != NULL ? *source_
                         : *::google::cloud::vision::v1::ImageSource::internal_default_instance();
}
inline ::google::cloud::vision::v1::ImageSource* Image::mutable_source() {
  
  if (source_ == NULL) {
    _slow_mutable_source();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Image.source)
  return source_;
}
inline ::google::cloud::vision::v1::ImageSource* Image::release_source() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Image.source)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_source();
  } else {
    ::google::cloud::vision::v1::ImageSource* temp = source_;
    source_ = NULL;
    return temp;
  }
}
inline  void Image::set_allocated_source(::google::cloud::vision::v1::ImageSource* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete source_;
  }
  if (source != NULL) {
    _slow_set_allocated_source(message_arena, &source);
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Image.source)
}

inline const Image* Image::internal_default_instance() {
  return &Image_default_instance_.get();
}
// -------------------------------------------------------------------

// FaceAnnotation_Landmark

// optional .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
inline void FaceAnnotation_Landmark::clear_type() {
  type_ = 0;
}
inline ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.Landmark.type)
  return static_cast< ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type >(type_);
}
inline void FaceAnnotation_Landmark::set_type(::google::cloud::vision::v1::FaceAnnotation_Landmark_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.Landmark.type)
}

// optional .google.cloud.vision.v1.Position position = 4;
inline bool FaceAnnotation_Landmark::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void FaceAnnotation_Landmark::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::google::cloud::vision::v1::Position& FaceAnnotation_Landmark::position() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
  return position_ != NULL ? *position_
                         : *::google::cloud::vision::v1::Position::internal_default_instance();
}
inline ::google::cloud::vision::v1::Position* FaceAnnotation_Landmark::mutable_position() {
  
  if (position_ == NULL) {
    _slow_mutable_position();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
  return position_;
}
inline ::google::cloud::vision::v1::Position* FaceAnnotation_Landmark::release_position() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_position();
  } else {
    ::google::cloud::vision::v1::Position* temp = position_;
    position_ = NULL;
    return temp;
  }
}
inline  void FaceAnnotation_Landmark::set_allocated_position(::google::cloud::vision::v1::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position != NULL) {
    _slow_set_allocated_position(message_arena, &position);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
}

inline const FaceAnnotation_Landmark* FaceAnnotation_Landmark::internal_default_instance() {
  return &FaceAnnotation_Landmark_default_instance_.get();
}
// -------------------------------------------------------------------

// FaceAnnotation

// optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
inline bool FaceAnnotation::has_bounding_poly() const {
  return this != internal_default_instance() && bounding_poly_ != NULL;
}
inline void FaceAnnotation::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) delete bounding_poly_;
  bounding_poly_ = NULL;
}
inline const ::google::cloud::vision::v1::BoundingPoly& FaceAnnotation::bounding_poly() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
  return bounding_poly_ != NULL ? *bounding_poly_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
inline ::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::mutable_bounding_poly() {
  
  if (bounding_poly_ == NULL) {
    _slow_mutable_bounding_poly();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
  return bounding_poly_;
}
inline ::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::release_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_poly();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_poly_;
    bounding_poly_ = NULL;
    return temp;
  }
}
inline  void FaceAnnotation::set_allocated_bounding_poly(::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_poly_;
  }
  if (bounding_poly != NULL) {
    _slow_set_allocated_bounding_poly(message_arena, &bounding_poly);
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
}

// optional .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
inline bool FaceAnnotation::has_fd_bounding_poly() const {
  return this != internal_default_instance() && fd_bounding_poly_ != NULL;
}
inline void FaceAnnotation::clear_fd_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && fd_bounding_poly_ != NULL) delete fd_bounding_poly_;
  fd_bounding_poly_ = NULL;
}
inline const ::google::cloud::vision::v1::BoundingPoly& FaceAnnotation::fd_bounding_poly() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
  return fd_bounding_poly_ != NULL ? *fd_bounding_poly_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
inline ::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::mutable_fd_bounding_poly() {
  
  if (fd_bounding_poly_ == NULL) {
    _slow_mutable_fd_bounding_poly();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
  return fd_bounding_poly_;
}
inline ::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::release_fd_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_fd_bounding_poly();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = fd_bounding_poly_;
    fd_bounding_poly_ = NULL;
    return temp;
  }
}
inline  void FaceAnnotation::set_allocated_fd_bounding_poly(::google::cloud::vision::v1::BoundingPoly* fd_bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fd_bounding_poly_;
  }
  if (fd_bounding_poly != NULL) {
    _slow_set_allocated_fd_bounding_poly(message_arena, &fd_bounding_poly);
  }
  fd_bounding_poly_ = fd_bounding_poly;
  if (fd_bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
}

// repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
inline int FaceAnnotation::landmarks_size() const {
  return landmarks_.size();
}
inline void FaceAnnotation::clear_landmarks() {
  landmarks_.Clear();
}
inline const ::google::cloud::vision::v1::FaceAnnotation_Landmark& FaceAnnotation::landmarks(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_.Get(index);
}
inline ::google::cloud::vision::v1::FaceAnnotation_Landmark* FaceAnnotation::mutable_landmarks(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_.Mutable(index);
}
inline ::google::cloud::vision::v1::FaceAnnotation_Landmark* FaceAnnotation::add_landmarks() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation_Landmark >*
FaceAnnotation::mutable_landmarks() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return &landmarks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation_Landmark >&
FaceAnnotation::landmarks() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_;
}

// optional float roll_angle = 4;
inline void FaceAnnotation::clear_roll_angle() {
  roll_angle_ = 0;
}
inline float FaceAnnotation::roll_angle() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.roll_angle)
  return roll_angle_;
}
inline void FaceAnnotation::set_roll_angle(float value) {
  
  roll_angle_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.roll_angle)
}

// optional float pan_angle = 5;
inline void FaceAnnotation::clear_pan_angle() {
  pan_angle_ = 0;
}
inline float FaceAnnotation::pan_angle() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.pan_angle)
  return pan_angle_;
}
inline void FaceAnnotation::set_pan_angle(float value) {
  
  pan_angle_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.pan_angle)
}

// optional float tilt_angle = 6;
inline void FaceAnnotation::clear_tilt_angle() {
  tilt_angle_ = 0;
}
inline float FaceAnnotation::tilt_angle() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.tilt_angle)
  return tilt_angle_;
}
inline void FaceAnnotation::set_tilt_angle(float value) {
  
  tilt_angle_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.tilt_angle)
}

// optional float detection_confidence = 7;
inline void FaceAnnotation::clear_detection_confidence() {
  detection_confidence_ = 0;
}
inline float FaceAnnotation::detection_confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.detection_confidence)
  return detection_confidence_;
}
inline void FaceAnnotation::set_detection_confidence(float value) {
  
  detection_confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.detection_confidence)
}

// optional float landmarking_confidence = 8;
inline void FaceAnnotation::clear_landmarking_confidence() {
  landmarking_confidence_ = 0;
}
inline float FaceAnnotation::landmarking_confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.landmarking_confidence)
  return landmarking_confidence_;
}
inline void FaceAnnotation::set_landmarking_confidence(float value) {
  
  landmarking_confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.landmarking_confidence)
}

// optional .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
inline void FaceAnnotation::clear_joy_likelihood() {
  joy_likelihood_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood FaceAnnotation::joy_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.joy_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(joy_likelihood_);
}
inline void FaceAnnotation::set_joy_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  joy_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.joy_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
inline void FaceAnnotation::clear_sorrow_likelihood() {
  sorrow_likelihood_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood FaceAnnotation::sorrow_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.sorrow_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(sorrow_likelihood_);
}
inline void FaceAnnotation::set_sorrow_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  sorrow_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.sorrow_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
inline void FaceAnnotation::clear_anger_likelihood() {
  anger_likelihood_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood FaceAnnotation::anger_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.anger_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(anger_likelihood_);
}
inline void FaceAnnotation::set_anger_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  anger_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.anger_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
inline void FaceAnnotation::clear_surprise_likelihood() {
  surprise_likelihood_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood FaceAnnotation::surprise_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.surprise_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(surprise_likelihood_);
}
inline void FaceAnnotation::set_surprise_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  surprise_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.surprise_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
inline void FaceAnnotation::clear_under_exposed_likelihood() {
  under_exposed_likelihood_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood FaceAnnotation::under_exposed_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.under_exposed_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(under_exposed_likelihood_);
}
inline void FaceAnnotation::set_under_exposed_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  under_exposed_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.under_exposed_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
inline void FaceAnnotation::clear_blurred_likelihood() {
  blurred_likelihood_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood FaceAnnotation::blurred_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.blurred_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(blurred_likelihood_);
}
inline void FaceAnnotation::set_blurred_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  blurred_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.blurred_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
inline void FaceAnnotation::clear_headwear_likelihood() {
  headwear_likelihood_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood FaceAnnotation::headwear_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.headwear_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(headwear_likelihood_);
}
inline void FaceAnnotation::set_headwear_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  headwear_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.headwear_likelihood)
}

inline const FaceAnnotation* FaceAnnotation::internal_default_instance() {
  return &FaceAnnotation_default_instance_.get();
}
// -------------------------------------------------------------------

// LocationInfo

// optional .google.type.LatLng lat_lng = 1;
inline bool LocationInfo::has_lat_lng() const {
  return this != internal_default_instance() && lat_lng_ != NULL;
}
inline void LocationInfo::clear_lat_lng() {
  if (GetArenaNoVirtual() == NULL && lat_lng_ != NULL) delete lat_lng_;
  lat_lng_ = NULL;
}
inline const ::google::type::LatLng& LocationInfo::lat_lng() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.LocationInfo.lat_lng)
  return lat_lng_ != NULL ? *lat_lng_
                         : *::google::type::LatLng::internal_default_instance();
}
inline ::google::type::LatLng* LocationInfo::mutable_lat_lng() {
  
  if (lat_lng_ == NULL) {
    _slow_mutable_lat_lng();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.LocationInfo.lat_lng)
  return lat_lng_;
}
inline ::google::type::LatLng* LocationInfo::release_lat_lng() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.LocationInfo.lat_lng)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_lat_lng();
  } else {
    ::google::type::LatLng* temp = lat_lng_;
    lat_lng_ = NULL;
    return temp;
  }
}
inline  void LocationInfo::set_allocated_lat_lng(::google::type::LatLng* lat_lng) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete lat_lng_;
  }
  if (lat_lng != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(lat_lng);
    }
  }
  lat_lng_ = lat_lng;
  if (lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.LocationInfo.lat_lng)
}

inline const LocationInfo* LocationInfo::internal_default_instance() {
  return &LocationInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// Property

// optional string name = 1;
inline void Property::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Property::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Property.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Property::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Property.name)
}
inline void Property::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.Property.name)
}
inline void Property::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.Property.name)
}
inline ::std::string* Property::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Property.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Property::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Property.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Property::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Property.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Property::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Property.name)
}
inline void Property::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Property.name)
}

// optional string value = 2;
inline void Property::clear_value() {
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Property::value() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Property.value)
  return value_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Property::set_value(const ::std::string& value) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Property.value)
}
inline void Property::set_value(const char* value) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.Property.value)
}
inline void Property::set_value(const char* value,
    size_t size) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.Property.value)
}
inline ::std::string* Property::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Property.value)
  return value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Property::release_value() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Property.value)
  
  return value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Property::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Property.value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Property::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Property.value)
}
inline void Property::unsafe_arena_set_allocated_value(
    ::std::string* value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (value != NULL) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Property.value)
}

inline const Property* Property::internal_default_instance() {
  return &Property_default_instance_.get();
}
// -------------------------------------------------------------------

// EntityAnnotation

// optional string mid = 1;
inline void EntityAnnotation::clear_mid() {
  mid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EntityAnnotation::mid() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.mid)
  return mid_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EntityAnnotation::set_mid(const ::std::string& value) {
  
  mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.mid)
}
inline void EntityAnnotation::set_mid(const char* value) {
  
  mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.EntityAnnotation.mid)
}
inline void EntityAnnotation::set_mid(const char* value,
    size_t size) {
  
  mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.EntityAnnotation.mid)
}
inline ::std::string* EntityAnnotation::mutable_mid() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.mid)
  return mid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EntityAnnotation::release_mid() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.mid)
  
  return mid_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EntityAnnotation::unsafe_arena_release_mid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.EntityAnnotation.mid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return mid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EntityAnnotation::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    
  } else {
    
  }
  mid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.mid)
}
inline void EntityAnnotation::unsafe_arena_set_allocated_mid(
    ::std::string* mid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mid != NULL) {
    
  } else {
    
  }
  mid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.mid)
}

// optional string locale = 2;
inline void EntityAnnotation::clear_locale() {
  locale_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EntityAnnotation::locale() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.locale)
  return locale_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EntityAnnotation::set_locale(const ::std::string& value) {
  
  locale_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.locale)
}
inline void EntityAnnotation::set_locale(const char* value) {
  
  locale_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.EntityAnnotation.locale)
}
inline void EntityAnnotation::set_locale(const char* value,
    size_t size) {
  
  locale_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.EntityAnnotation.locale)
}
inline ::std::string* EntityAnnotation::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.locale)
  return locale_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EntityAnnotation::release_locale() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.locale)
  
  return locale_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EntityAnnotation::unsafe_arena_release_locale() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.EntityAnnotation.locale)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return locale_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EntityAnnotation::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.locale)
}
inline void EntityAnnotation::unsafe_arena_set_allocated_locale(
    ::std::string* locale) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      locale, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.locale)
}

// optional string description = 3;
inline void EntityAnnotation::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EntityAnnotation::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.description)
  return description_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EntityAnnotation::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.description)
}
inline void EntityAnnotation::set_description(const char* value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.EntityAnnotation.description)
}
inline void EntityAnnotation::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.EntityAnnotation.description)
}
inline ::std::string* EntityAnnotation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EntityAnnotation::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EntityAnnotation::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.EntityAnnotation.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EntityAnnotation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.description)
}
inline void EntityAnnotation::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.description)
}

// optional float score = 4;
inline void EntityAnnotation::clear_score() {
  score_ = 0;
}
inline float EntityAnnotation::score() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.score)
  return score_;
}
inline void EntityAnnotation::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.score)
}

// optional float confidence = 5;
inline void EntityAnnotation::clear_confidence() {
  confidence_ = 0;
}
inline float EntityAnnotation::confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.confidence)
  return confidence_;
}
inline void EntityAnnotation::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.confidence)
}

// optional float topicality = 6;
inline void EntityAnnotation::clear_topicality() {
  topicality_ = 0;
}
inline float EntityAnnotation::topicality() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.topicality)
  return topicality_;
}
inline void EntityAnnotation::set_topicality(float value) {
  
  topicality_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.topicality)
}

// optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
inline bool EntityAnnotation::has_bounding_poly() const {
  return this != internal_default_instance() && bounding_poly_ != NULL;
}
inline void EntityAnnotation::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) delete bounding_poly_;
  bounding_poly_ = NULL;
}
inline const ::google::cloud::vision::v1::BoundingPoly& EntityAnnotation::bounding_poly() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
  return bounding_poly_ != NULL ? *bounding_poly_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
inline ::google::cloud::vision::v1::BoundingPoly* EntityAnnotation::mutable_bounding_poly() {
  
  if (bounding_poly_ == NULL) {
    _slow_mutable_bounding_poly();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
  return bounding_poly_;
}
inline ::google::cloud::vision::v1::BoundingPoly* EntityAnnotation::release_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_poly();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_poly_;
    bounding_poly_ = NULL;
    return temp;
  }
}
inline  void EntityAnnotation::set_allocated_bounding_poly(::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_poly_;
  }
  if (bounding_poly != NULL) {
    _slow_set_allocated_bounding_poly(message_arena, &bounding_poly);
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
}

// repeated .google.cloud.vision.v1.LocationInfo locations = 8;
inline int EntityAnnotation::locations_size() const {
  return locations_.size();
}
inline void EntityAnnotation::clear_locations() {
  locations_.Clear();
}
inline const ::google::cloud::vision::v1::LocationInfo& EntityAnnotation::locations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_.Get(index);
}
inline ::google::cloud::vision::v1::LocationInfo* EntityAnnotation::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_.Mutable(index);
}
inline ::google::cloud::vision::v1::LocationInfo* EntityAnnotation::add_locations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::LocationInfo >*
EntityAnnotation::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.EntityAnnotation.locations)
  return &locations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::LocationInfo >&
EntityAnnotation::locations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_;
}

// repeated .google.cloud.vision.v1.Property properties = 9;
inline int EntityAnnotation::properties_size() const {
  return properties_.size();
}
inline void EntityAnnotation::clear_properties() {
  properties_.Clear();
}
inline const ::google::cloud::vision::v1::Property& EntityAnnotation::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_.Get(index);
}
inline ::google::cloud::vision::v1::Property* EntityAnnotation::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_.Mutable(index);
}
inline ::google::cloud::vision::v1::Property* EntityAnnotation::add_properties() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Property >*
EntityAnnotation::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.EntityAnnotation.properties)
  return &properties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Property >&
EntityAnnotation::properties() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_;
}

inline const EntityAnnotation* EntityAnnotation::internal_default_instance() {
  return &EntityAnnotation_default_instance_.get();
}
// -------------------------------------------------------------------

// SafeSearchAnnotation

// optional .google.cloud.vision.v1.Likelihood adult = 1;
inline void SafeSearchAnnotation::clear_adult() {
  adult_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::adult() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.adult)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(adult_);
}
inline void SafeSearchAnnotation::set_adult(::google::cloud::vision::v1::Likelihood value) {
  
  adult_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.adult)
}

// optional .google.cloud.vision.v1.Likelihood spoof = 2;
inline void SafeSearchAnnotation::clear_spoof() {
  spoof_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::spoof() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.spoof)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(spoof_);
}
inline void SafeSearchAnnotation::set_spoof(::google::cloud::vision::v1::Likelihood value) {
  
  spoof_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.spoof)
}

// optional .google.cloud.vision.v1.Likelihood medical = 3;
inline void SafeSearchAnnotation::clear_medical() {
  medical_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::medical() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.medical)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(medical_);
}
inline void SafeSearchAnnotation::set_medical(::google::cloud::vision::v1::Likelihood value) {
  
  medical_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.medical)
}

// optional .google.cloud.vision.v1.Likelihood violence = 4;
inline void SafeSearchAnnotation::clear_violence() {
  violence_ = 0;
}
inline ::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::violence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.violence)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(violence_);
}
inline void SafeSearchAnnotation::set_violence(::google::cloud::vision::v1::Likelihood value) {
  
  violence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.violence)
}

inline const SafeSearchAnnotation* SafeSearchAnnotation::internal_default_instance() {
  return &SafeSearchAnnotation_default_instance_.get();
}
// -------------------------------------------------------------------

// LatLongRect

// optional .google.type.LatLng min_lat_lng = 1;
inline bool LatLongRect::has_min_lat_lng() const {
  return this != internal_default_instance() && min_lat_lng_ != NULL;
}
inline void LatLongRect::clear_min_lat_lng() {
  if (GetArenaNoVirtual() == NULL && min_lat_lng_ != NULL) delete min_lat_lng_;
  min_lat_lng_ = NULL;
}
inline const ::google::type::LatLng& LatLongRect::min_lat_lng() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.LatLongRect.min_lat_lng)
  return min_lat_lng_ != NULL ? *min_lat_lng_
                         : *::google::type::LatLng::internal_default_instance();
}
inline ::google::type::LatLng* LatLongRect::mutable_min_lat_lng() {
  
  if (min_lat_lng_ == NULL) {
    _slow_mutable_min_lat_lng();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.LatLongRect.min_lat_lng)
  return min_lat_lng_;
}
inline ::google::type::LatLng* LatLongRect::release_min_lat_lng() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.LatLongRect.min_lat_lng)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_min_lat_lng();
  } else {
    ::google::type::LatLng* temp = min_lat_lng_;
    min_lat_lng_ = NULL;
    return temp;
  }
}
inline  void LatLongRect::set_allocated_min_lat_lng(::google::type::LatLng* min_lat_lng) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete min_lat_lng_;
  }
  if (min_lat_lng != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(min_lat_lng);
    }
  }
  min_lat_lng_ = min_lat_lng;
  if (min_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.LatLongRect.min_lat_lng)
}

// optional .google.type.LatLng max_lat_lng = 2;
inline bool LatLongRect::has_max_lat_lng() const {
  return this != internal_default_instance() && max_lat_lng_ != NULL;
}
inline void LatLongRect::clear_max_lat_lng() {
  if (GetArenaNoVirtual() == NULL && max_lat_lng_ != NULL) delete max_lat_lng_;
  max_lat_lng_ = NULL;
}
inline const ::google::type::LatLng& LatLongRect::max_lat_lng() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.LatLongRect.max_lat_lng)
  return max_lat_lng_ != NULL ? *max_lat_lng_
                         : *::google::type::LatLng::internal_default_instance();
}
inline ::google::type::LatLng* LatLongRect::mutable_max_lat_lng() {
  
  if (max_lat_lng_ == NULL) {
    _slow_mutable_max_lat_lng();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.LatLongRect.max_lat_lng)
  return max_lat_lng_;
}
inline ::google::type::LatLng* LatLongRect::release_max_lat_lng() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.LatLongRect.max_lat_lng)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_max_lat_lng();
  } else {
    ::google::type::LatLng* temp = max_lat_lng_;
    max_lat_lng_ = NULL;
    return temp;
  }
}
inline  void LatLongRect::set_allocated_max_lat_lng(::google::type::LatLng* max_lat_lng) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete max_lat_lng_;
  }
  if (max_lat_lng != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(max_lat_lng);
    }
  }
  max_lat_lng_ = max_lat_lng;
  if (max_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.LatLongRect.max_lat_lng)
}

inline const LatLongRect* LatLongRect::internal_default_instance() {
  return &LatLongRect_default_instance_.get();
}
// -------------------------------------------------------------------

// ColorInfo

// optional .google.type.Color color = 1;
inline bool ColorInfo::has_color() const {
  return this != internal_default_instance() && color_ != NULL;
}
inline void ColorInfo::clear_color() {
  if (GetArenaNoVirtual() == NULL && color_ != NULL) delete color_;
  color_ = NULL;
}
inline const ::google::type::Color& ColorInfo::color() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ColorInfo.color)
  return color_ != NULL ? *color_
                         : *::google::type::Color::internal_default_instance();
}
inline ::google::type::Color* ColorInfo::mutable_color() {
  
  if (color_ == NULL) {
    _slow_mutable_color();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ColorInfo.color)
  return color_;
}
inline ::google::type::Color* ColorInfo::release_color() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ColorInfo.color)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_color();
  } else {
    ::google::type::Color* temp = color_;
    color_ = NULL;
    return temp;
  }
}
inline  void ColorInfo::set_allocated_color(::google::type::Color* color) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete color_;
  }
  if (color != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(color);
    }
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ColorInfo.color)
}

// optional float score = 2;
inline void ColorInfo::clear_score() {
  score_ = 0;
}
inline float ColorInfo::score() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ColorInfo.score)
  return score_;
}
inline void ColorInfo::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ColorInfo.score)
}

// optional float pixel_fraction = 3;
inline void ColorInfo::clear_pixel_fraction() {
  pixel_fraction_ = 0;
}
inline float ColorInfo::pixel_fraction() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ColorInfo.pixel_fraction)
  return pixel_fraction_;
}
inline void ColorInfo::set_pixel_fraction(float value) {
  
  pixel_fraction_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ColorInfo.pixel_fraction)
}

inline const ColorInfo* ColorInfo::internal_default_instance() {
  return &ColorInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// DominantColorsAnnotation

// repeated .google.cloud.vision.v1.ColorInfo colors = 1;
inline int DominantColorsAnnotation::colors_size() const {
  return colors_.size();
}
inline void DominantColorsAnnotation::clear_colors() {
  colors_.Clear();
}
inline const ::google::cloud::vision::v1::ColorInfo& DominantColorsAnnotation::colors(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_.Get(index);
}
inline ::google::cloud::vision::v1::ColorInfo* DominantColorsAnnotation::mutable_colors(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_.Mutable(index);
}
inline ::google::cloud::vision::v1::ColorInfo* DominantColorsAnnotation::add_colors() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::ColorInfo >*
DominantColorsAnnotation::mutable_colors() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return &colors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::ColorInfo >&
DominantColorsAnnotation::colors() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_;
}

inline const DominantColorsAnnotation* DominantColorsAnnotation::internal_default_instance() {
  return &DominantColorsAnnotation_default_instance_.get();
}
// -------------------------------------------------------------------

// ImageProperties

// optional .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
inline bool ImageProperties::has_dominant_colors() const {
  return this != internal_default_instance() && dominant_colors_ != NULL;
}
inline void ImageProperties::clear_dominant_colors() {
  if (GetArenaNoVirtual() == NULL && dominant_colors_ != NULL) delete dominant_colors_;
  dominant_colors_ = NULL;
}
inline const ::google::cloud::vision::v1::DominantColorsAnnotation& ImageProperties::dominant_colors() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageProperties.dominant_colors)
  return dominant_colors_ != NULL ? *dominant_colors_
                         : *::google::cloud::vision::v1::DominantColorsAnnotation::internal_default_instance();
}
inline ::google::cloud::vision::v1::DominantColorsAnnotation* ImageProperties::mutable_dominant_colors() {
  
  if (dominant_colors_ == NULL) {
    _slow_mutable_dominant_colors();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageProperties.dominant_colors)
  return dominant_colors_;
}
inline ::google::cloud::vision::v1::DominantColorsAnnotation* ImageProperties::release_dominant_colors() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ImageProperties.dominant_colors)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_dominant_colors();
  } else {
    ::google::cloud::vision::v1::DominantColorsAnnotation* temp = dominant_colors_;
    dominant_colors_ = NULL;
    return temp;
  }
}
inline  void ImageProperties::set_allocated_dominant_colors(::google::cloud::vision::v1::DominantColorsAnnotation* dominant_colors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dominant_colors_;
  }
  if (dominant_colors != NULL) {
    _slow_set_allocated_dominant_colors(message_arena, &dominant_colors);
  }
  dominant_colors_ = dominant_colors;
  if (dominant_colors) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ImageProperties.dominant_colors)
}

inline const ImageProperties* ImageProperties::internal_default_instance() {
  return &ImageProperties_default_instance_.get();
}
// -------------------------------------------------------------------

// ImageContext

// optional .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
inline bool ImageContext::has_lat_long_rect() const {
  return this != internal_default_instance() && lat_long_rect_ != NULL;
}
inline void ImageContext::clear_lat_long_rect() {
  if (GetArenaNoVirtual() == NULL && lat_long_rect_ != NULL) delete lat_long_rect_;
  lat_long_rect_ = NULL;
}
inline const ::google::cloud::vision::v1::LatLongRect& ImageContext::lat_long_rect() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageContext.lat_long_rect)
  return lat_long_rect_ != NULL ? *lat_long_rect_
                         : *::google::cloud::vision::v1::LatLongRect::internal_default_instance();
}
inline ::google::cloud::vision::v1::LatLongRect* ImageContext::mutable_lat_long_rect() {
  
  if (lat_long_rect_ == NULL) {
    _slow_mutable_lat_long_rect();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageContext.lat_long_rect)
  return lat_long_rect_;
}
inline ::google::cloud::vision::v1::LatLongRect* ImageContext::release_lat_long_rect() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ImageContext.lat_long_rect)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_lat_long_rect();
  } else {
    ::google::cloud::vision::v1::LatLongRect* temp = lat_long_rect_;
    lat_long_rect_ = NULL;
    return temp;
  }
}
inline  void ImageContext::set_allocated_lat_long_rect(::google::cloud::vision::v1::LatLongRect* lat_long_rect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete lat_long_rect_;
  }
  if (lat_long_rect != NULL) {
    _slow_set_allocated_lat_long_rect(message_arena, &lat_long_rect);
  }
  lat_long_rect_ = lat_long_rect;
  if (lat_long_rect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ImageContext.lat_long_rect)
}

// repeated string language_hints = 2;
inline int ImageContext::language_hints_size() const {
  return language_hints_.size();
}
inline void ImageContext::clear_language_hints() {
  language_hints_.Clear();
}
inline const ::std::string& ImageContext::language_hints(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_.Get(index);
}
inline ::std::string* ImageContext::mutable_language_hints(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_.Mutable(index);
}
inline void ImageContext::set_language_hints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ImageContext.language_hints)
  language_hints_.Mutable(index)->assign(value);
}
inline void ImageContext::set_language_hints(int index, const char* value) {
  language_hints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.ImageContext.language_hints)
}
inline void ImageContext::set_language_hints(int index, const char* value, size_t size) {
  language_hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.ImageContext.language_hints)
}
inline ::std::string* ImageContext::add_language_hints() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_.Add();
}
inline void ImageContext::add_language_hints(const ::std::string& value) {
  language_hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.ImageContext.language_hints)
}
inline void ImageContext::add_language_hints(const char* value) {
  language_hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.vision.v1.ImageContext.language_hints)
}
inline void ImageContext::add_language_hints(const char* value, size_t size) {
  language_hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.vision.v1.ImageContext.language_hints)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImageContext::language_hints() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ImageContext::mutable_language_hints() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.ImageContext.language_hints)
  return &language_hints_;
}

inline const ImageContext* ImageContext::internal_default_instance() {
  return &ImageContext_default_instance_.get();
}
// -------------------------------------------------------------------

// AnnotateImageRequest

// optional .google.cloud.vision.v1.Image image = 1;
inline bool AnnotateImageRequest::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
inline void AnnotateImageRequest::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) delete image_;
  image_ = NULL;
}
inline const ::google::cloud::vision::v1::Image& AnnotateImageRequest::image() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageRequest.image)
  return image_ != NULL ? *image_
                         : *::google::cloud::vision::v1::Image::internal_default_instance();
}
inline ::google::cloud::vision::v1::Image* AnnotateImageRequest::mutable_image() {
  
  if (image_ == NULL) {
    _slow_mutable_image();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageRequest.image)
  return image_;
}
inline ::google::cloud::vision::v1::Image* AnnotateImageRequest::release_image() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageRequest.image)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_image();
  } else {
    ::google::cloud::vision::v1::Image* temp = image_;
    image_ = NULL;
    return temp;
  }
}
inline  void AnnotateImageRequest::set_allocated_image(::google::cloud::vision::v1::Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_;
  }
  if (image != NULL) {
    _slow_set_allocated_image(message_arena, &image);
  }
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image)
}

// repeated .google.cloud.vision.v1.Feature features = 2;
inline int AnnotateImageRequest::features_size() const {
  return features_.size();
}
inline void AnnotateImageRequest::clear_features() {
  features_.Clear();
}
inline const ::google::cloud::vision::v1::Feature& AnnotateImageRequest::features(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_.Get(index);
}
inline ::google::cloud::vision::v1::Feature* AnnotateImageRequest::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_.Mutable(index);
}
inline ::google::cloud::vision::v1::Feature* AnnotateImageRequest::add_features() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Feature >*
AnnotateImageRequest::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageRequest.features)
  return &features_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Feature >&
AnnotateImageRequest::features() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_;
}

// optional .google.cloud.vision.v1.ImageContext image_context = 3;
inline bool AnnotateImageRequest::has_image_context() const {
  return this != internal_default_instance() && image_context_ != NULL;
}
inline void AnnotateImageRequest::clear_image_context() {
  if (GetArenaNoVirtual() == NULL && image_context_ != NULL) delete image_context_;
  image_context_ = NULL;
}
inline const ::google::cloud::vision::v1::ImageContext& AnnotateImageRequest::image_context() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageRequest.image_context)
  return image_context_ != NULL ? *image_context_
                         : *::google::cloud::vision::v1::ImageContext::internal_default_instance();
}
inline ::google::cloud::vision::v1::ImageContext* AnnotateImageRequest::mutable_image_context() {
  
  if (image_context_ == NULL) {
    _slow_mutable_image_context();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageRequest.image_context)
  return image_context_;
}
inline ::google::cloud::vision::v1::ImageContext* AnnotateImageRequest::release_image_context() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageRequest.image_context)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_image_context();
  } else {
    ::google::cloud::vision::v1::ImageContext* temp = image_context_;
    image_context_ = NULL;
    return temp;
  }
}
inline  void AnnotateImageRequest::set_allocated_image_context(::google::cloud::vision::v1::ImageContext* image_context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_context_;
  }
  if (image_context != NULL) {
    _slow_set_allocated_image_context(message_arena, &image_context);
  }
  image_context_ = image_context;
  if (image_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image_context)
}

inline const AnnotateImageRequest* AnnotateImageRequest::internal_default_instance() {
  return &AnnotateImageRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// AnnotateImageResponse

// repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
inline int AnnotateImageResponse::face_annotations_size() const {
  return face_annotations_.size();
}
inline void AnnotateImageResponse::clear_face_annotations() {
  face_annotations_.Clear();
}
inline const ::google::cloud::vision::v1::FaceAnnotation& AnnotateImageResponse::face_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_.Get(index);
}
inline ::google::cloud::vision::v1::FaceAnnotation* AnnotateImageResponse::mutable_face_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_.Mutable(index);
}
inline ::google::cloud::vision::v1::FaceAnnotation* AnnotateImageResponse::add_face_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation >*
AnnotateImageResponse::mutable_face_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return &face_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation >&
AnnotateImageResponse::face_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
inline int AnnotateImageResponse::landmark_annotations_size() const {
  return landmark_annotations_.size();
}
inline void AnnotateImageResponse::clear_landmark_annotations() {
  landmark_annotations_.Clear();
}
inline const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::landmark_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_.Get(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_landmark_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_.Mutable(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_landmark_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_landmark_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return &landmark_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::landmark_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
inline int AnnotateImageResponse::logo_annotations_size() const {
  return logo_annotations_.size();
}
inline void AnnotateImageResponse::clear_logo_annotations() {
  logo_annotations_.Clear();
}
inline const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::logo_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_.Get(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_logo_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_.Mutable(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_logo_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_logo_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return &logo_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::logo_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
inline int AnnotateImageResponse::label_annotations_size() const {
  return label_annotations_.size();
}
inline void AnnotateImageResponse::clear_label_annotations() {
  label_annotations_.Clear();
}
inline const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::label_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_.Get(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_label_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_.Mutable(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_label_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_label_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return &label_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::label_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
inline int AnnotateImageResponse::text_annotations_size() const {
  return text_annotations_.size();
}
inline void AnnotateImageResponse::clear_text_annotations() {
  text_annotations_.Clear();
}
inline const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::text_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_.Get(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_text_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_.Mutable(index);
}
inline ::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_text_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_text_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return &text_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::text_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_;
}

// optional .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
inline bool AnnotateImageResponse::has_safe_search_annotation() const {
  return this != internal_default_instance() && safe_search_annotation_ != NULL;
}
inline void AnnotateImageResponse::clear_safe_search_annotation() {
  if (GetArenaNoVirtual() == NULL && safe_search_annotation_ != NULL) delete safe_search_annotation_;
  safe_search_annotation_ = NULL;
}
inline const ::google::cloud::vision::v1::SafeSearchAnnotation& AnnotateImageResponse::safe_search_annotation() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
  return safe_search_annotation_ != NULL ? *safe_search_annotation_
                         : *::google::cloud::vision::v1::SafeSearchAnnotation::internal_default_instance();
}
inline ::google::cloud::vision::v1::SafeSearchAnnotation* AnnotateImageResponse::mutable_safe_search_annotation() {
  
  if (safe_search_annotation_ == NULL) {
    _slow_mutable_safe_search_annotation();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
  return safe_search_annotation_;
}
inline ::google::cloud::vision::v1::SafeSearchAnnotation* AnnotateImageResponse::release_safe_search_annotation() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_safe_search_annotation();
  } else {
    ::google::cloud::vision::v1::SafeSearchAnnotation* temp = safe_search_annotation_;
    safe_search_annotation_ = NULL;
    return temp;
  }
}
inline  void AnnotateImageResponse::set_allocated_safe_search_annotation(::google::cloud::vision::v1::SafeSearchAnnotation* safe_search_annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete safe_search_annotation_;
  }
  if (safe_search_annotation != NULL) {
    _slow_set_allocated_safe_search_annotation(message_arena, &safe_search_annotation);
  }
  safe_search_annotation_ = safe_search_annotation;
  if (safe_search_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
}

// optional .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
inline bool AnnotateImageResponse::has_image_properties_annotation() const {
  return this != internal_default_instance() && image_properties_annotation_ != NULL;
}
inline void AnnotateImageResponse::clear_image_properties_annotation() {
  if (GetArenaNoVirtual() == NULL && image_properties_annotation_ != NULL) delete image_properties_annotation_;
  image_properties_annotation_ = NULL;
}
inline const ::google::cloud::vision::v1::ImageProperties& AnnotateImageResponse::image_properties_annotation() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
  return image_properties_annotation_ != NULL ? *image_properties_annotation_
                         : *::google::cloud::vision::v1::ImageProperties::internal_default_instance();
}
inline ::google::cloud::vision::v1::ImageProperties* AnnotateImageResponse::mutable_image_properties_annotation() {
  
  if (image_properties_annotation_ == NULL) {
    _slow_mutable_image_properties_annotation();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
  return image_properties_annotation_;
}
inline ::google::cloud::vision::v1::ImageProperties* AnnotateImageResponse::release_image_properties_annotation() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_image_properties_annotation();
  } else {
    ::google::cloud::vision::v1::ImageProperties* temp = image_properties_annotation_;
    image_properties_annotation_ = NULL;
    return temp;
  }
}
inline  void AnnotateImageResponse::set_allocated_image_properties_annotation(::google::cloud::vision::v1::ImageProperties* image_properties_annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_properties_annotation_;
  }
  if (image_properties_annotation != NULL) {
    _slow_set_allocated_image_properties_annotation(message_arena, &image_properties_annotation);
  }
  image_properties_annotation_ = image_properties_annotation;
  if (image_properties_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
}

// optional .google.rpc.Status error = 9;
inline bool AnnotateImageResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void AnnotateImageResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::google::rpc::Status& AnnotateImageResponse::error() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.error)
  return error_ != NULL ? *error_
                         : *::google::rpc::Status::internal_default_instance();
}
inline ::google::rpc::Status* AnnotateImageResponse::mutable_error() {
  
  if (error_ == NULL) {
    _slow_mutable_error();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.error)
  return error_;
}
inline ::google::rpc::Status* AnnotateImageResponse::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageResponse.error)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_error();
  } else {
    ::google::rpc::Status* temp = error_;
    error_ = NULL;
    return temp;
  }
}
inline  void AnnotateImageResponse::set_allocated_error(::google::rpc::Status* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete error_;
  }
  if (error != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(error);
    }
  }
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.error)
}

inline const AnnotateImageResponse* AnnotateImageResponse::internal_default_instance() {
  return &AnnotateImageResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// BatchAnnotateImagesRequest

// repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
inline int BatchAnnotateImagesRequest::requests_size() const {
  return requests_.size();
}
inline void BatchAnnotateImagesRequest::clear_requests() {
  requests_.Clear();
}
inline const ::google::cloud::vision::v1::AnnotateImageRequest& BatchAnnotateImagesRequest::requests(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_.Get(index);
}
inline ::google::cloud::vision::v1::AnnotateImageRequest* BatchAnnotateImagesRequest::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_.Mutable(index);
}
inline ::google::cloud::vision::v1::AnnotateImageRequest* BatchAnnotateImagesRequest::add_requests() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageRequest >*
BatchAnnotateImagesRequest::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return &requests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageRequest >&
BatchAnnotateImagesRequest::requests() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_;
}

inline const BatchAnnotateImagesRequest* BatchAnnotateImagesRequest::internal_default_instance() {
  return &BatchAnnotateImagesRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// BatchAnnotateImagesResponse

// repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
inline int BatchAnnotateImagesResponse::responses_size() const {
  return responses_.size();
}
inline void BatchAnnotateImagesResponse::clear_responses() {
  responses_.Clear();
}
inline const ::google::cloud::vision::v1::AnnotateImageResponse& BatchAnnotateImagesResponse::responses(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_.Get(index);
}
inline ::google::cloud::vision::v1::AnnotateImageResponse* BatchAnnotateImagesResponse::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_.Mutable(index);
}
inline ::google::cloud::vision::v1::AnnotateImageResponse* BatchAnnotateImagesResponse::add_responses() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageResponse >*
BatchAnnotateImagesResponse::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return &responses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageResponse >&
BatchAnnotateImagesResponse::responses() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_;
}

inline const BatchAnnotateImagesResponse* BatchAnnotateImagesResponse::internal_default_instance() {
  return &BatchAnnotateImagesResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace vision
}  // namespace cloud
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::vision::v1::Feature_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::vision::v1::Feature_Type>() {
  return ::google::cloud::vision::v1::Feature_Type_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type>() {
  return ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::vision::v1::Likelihood> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::vision::v1::Likelihood>() {
  return ::google::cloud::vision::v1::Likelihood_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto__INCLUDED
