// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/distribution.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/servicecontrol/v1/distribution.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* Distribution_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Distribution_reflection_ = NULL;
struct DistributionOneofInstance {
  const ::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets_;
  const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets_;
  const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets_;
}* Distribution_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Distribution_LinearBuckets_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Distribution_LinearBuckets_reflection_ = NULL;
const ::google::protobuf::Descriptor* Distribution_ExponentialBuckets_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Distribution_ExponentialBuckets_reflection_ = NULL;
const ::google::protobuf::Descriptor* Distribution_ExplicitBuckets_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Distribution_ExplicitBuckets_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/servicecontrol/v1/distribution.proto");
  GOOGLE_CHECK(file != NULL);
  Distribution_descriptor_ = file->message_type(0);
  static const int Distribution_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, mean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, sum_of_squared_deviation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, bucket_counts_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Distribution_default_oneof_instance_, linear_buckets_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Distribution_default_oneof_instance_, exponential_buckets_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Distribution_default_oneof_instance_, explicit_buckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, bucket_option_),
  };
  Distribution_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Distribution_descriptor_,
      Distribution::internal_default_instance(),
      Distribution_offsets_,
      -1,
      -1,
      -1,
      Distribution_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, _oneof_case_[0]),
      sizeof(Distribution),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution, _internal_metadata_));
  Distribution_LinearBuckets_descriptor_ = Distribution_descriptor_->nested_type(0);
  static const int Distribution_LinearBuckets_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, num_finite_buckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, offset_),
  };
  Distribution_LinearBuckets_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Distribution_LinearBuckets_descriptor_,
      Distribution_LinearBuckets::internal_default_instance(),
      Distribution_LinearBuckets_offsets_,
      -1,
      -1,
      -1,
      sizeof(Distribution_LinearBuckets),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_LinearBuckets, _internal_metadata_));
  Distribution_ExponentialBuckets_descriptor_ = Distribution_descriptor_->nested_type(1);
  static const int Distribution_ExponentialBuckets_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, num_finite_buckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, growth_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, scale_),
  };
  Distribution_ExponentialBuckets_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Distribution_ExponentialBuckets_descriptor_,
      Distribution_ExponentialBuckets::internal_default_instance(),
      Distribution_ExponentialBuckets_offsets_,
      -1,
      -1,
      -1,
      sizeof(Distribution_ExponentialBuckets),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExponentialBuckets, _internal_metadata_));
  Distribution_ExplicitBuckets_descriptor_ = Distribution_descriptor_->nested_type(2);
  static const int Distribution_ExplicitBuckets_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExplicitBuckets, bounds_),
  };
  Distribution_ExplicitBuckets_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Distribution_ExplicitBuckets_descriptor_,
      Distribution_ExplicitBuckets::internal_default_instance(),
      Distribution_ExplicitBuckets_offsets_,
      -1,
      -1,
      -1,
      sizeof(Distribution_ExplicitBuckets),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Distribution_ExplicitBuckets, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Distribution_descriptor_, Distribution::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Distribution_LinearBuckets_descriptor_, Distribution_LinearBuckets::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Distribution_ExponentialBuckets_descriptor_, Distribution_ExponentialBuckets::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Distribution_ExplicitBuckets_descriptor_, Distribution_ExplicitBuckets::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  Distribution_default_instance_.Shutdown();
  delete Distribution_default_oneof_instance_;
  delete Distribution_reflection_;
  Distribution_LinearBuckets_default_instance_.Shutdown();
  delete Distribution_LinearBuckets_reflection_;
  Distribution_ExponentialBuckets_default_instance_.Shutdown();
  delete Distribution_ExponentialBuckets_reflection_;
  Distribution_ExplicitBuckets_default_instance_.Shutdown();
  delete Distribution_ExplicitBuckets_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Distribution_default_instance_.DefaultConstruct();
  Distribution_default_oneof_instance_ = new DistributionOneofInstance();
  Distribution_LinearBuckets_default_instance_.DefaultConstruct();
  Distribution_ExponentialBuckets_default_instance_.DefaultConstruct();
  Distribution_ExplicitBuckets_default_instance_.DefaultConstruct();
  Distribution_default_instance_.get_mutable()->InitAsDefaultInstance();
  Distribution_LinearBuckets_default_instance_.get_mutable()->InitAsDefaultInstance();
  Distribution_ExponentialBuckets_default_instance_.get_mutable()->InitAsDefaultInstance();
  Distribution_ExplicitBuckets_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/google/api/servicecontrol/v1/distribut"
    "ion.proto\022\034google.api.servicecontrol.v1\""
    "\350\004\n\014Distribution\022\r\n\005count\030\001 \001(\003\022\014\n\004mean\030"
    "\002 \001(\001\022\017\n\007minimum\030\003 \001(\001\022\017\n\007maximum\030\004 \001(\001\022"
    " \n\030sum_of_squared_deviation\030\005 \001(\001\022\025\n\rbuc"
    "ket_counts\030\006 \003(\003\022R\n\016linear_buckets\030\007 \001(\013"
    "28.google.api.servicecontrol.v1.Distribu"
    "tion.LinearBucketsH\000\022\\\n\023exponential_buck"
    "ets\030\010 \001(\0132=.google.api.servicecontrol.v1"
    ".Distribution.ExponentialBucketsH\000\022V\n\020ex"
    "plicit_buckets\030\t \001(\0132:.google.api.servic"
    "econtrol.v1.Distribution.ExplicitBuckets"
    "H\000\032J\n\rLinearBuckets\022\032\n\022num_finite_bucket"
    "s\030\001 \001(\005\022\r\n\005width\030\002 \001(\001\022\016\n\006offset\030\003 \001(\001\032V"
    "\n\022ExponentialBuckets\022\032\n\022num_finite_bucke"
    "ts\030\001 \001(\005\022\025\n\rgrowth_factor\030\002 \001(\001\022\r\n\005scale"
    "\030\003 \001(\001\032!\n\017ExplicitBuckets\022\016\n\006bounds\030\001 \003("
    "\001B\017\n\rbucket_optionB\206\001\n com.google.api.se"
    "rvicecontrol.v1B\021DistributionProtoP\001ZJgo"
    "ogle.golang.org/genproto/googleapis/api/"
    "servicecontrol/v1;servicecontrol\370\001\001b\006pro"
    "to3", 843);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicecontrol/v1/distribution.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto() {
    protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_LinearBuckets::kNumFiniteBucketsFieldNumber;
const int Distribution_LinearBuckets::kWidthFieldNumber;
const int Distribution_LinearBuckets::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_LinearBuckets::Distribution_LinearBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}
Distribution_LinearBuckets::Distribution_LinearBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}

void Distribution_LinearBuckets::InitAsDefaultInstance() {
}

Distribution_LinearBuckets::Distribution_LinearBuckets(const Distribution_LinearBuckets& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}

void Distribution_LinearBuckets::SharedCtor() {
  ::memset(&width_, 0, reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&width_) + sizeof(num_finite_buckets_));
  _cached_size_ = 0;
}

Distribution_LinearBuckets::~Distribution_LinearBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  SharedDtor();
}

void Distribution_LinearBuckets::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Distribution_LinearBuckets::ArenaDtor(void* object) {
  Distribution_LinearBuckets* _this = reinterpret_cast< Distribution_LinearBuckets* >(object);
  (void)_this;
}
void Distribution_LinearBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_LinearBuckets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution_LinearBuckets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Distribution_LinearBuckets_descriptor_;
}

const Distribution_LinearBuckets& Distribution_LinearBuckets::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Distribution_LinearBuckets> Distribution_LinearBuckets_default_instance_;

Distribution_LinearBuckets* Distribution_LinearBuckets::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution_LinearBuckets>(arena);
}

void Distribution_LinearBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Distribution_LinearBuckets, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Distribution_LinearBuckets*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(width_, num_finite_buckets_);

#undef ZR_HELPER_
#undef ZR_

}

bool Distribution_LinearBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_finite_buckets = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_width;
        break;
      }

      // optional double width = 2;
      case 2: {
        if (tag == 17) {
         parse_width:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_offset;
        break;
      }

      // optional double offset = 3;
      case 3: {
        if (tag == 25) {
         parse_offset:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return false;
#undef DO_
}

void Distribution_LinearBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  // optional int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // optional double width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->width(), output);
  }

  // optional double offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}

::google::protobuf::uint8* Distribution_LinearBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  // optional int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // optional double width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->width(), target);
  }

  // optional double offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return target;
}

size_t Distribution_LinearBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  size_t total_size = 0;

  // optional int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  // optional double width = 2;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // optional double offset = 3;
  if (this->offset() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution_LinearBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Distribution_LinearBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_LinearBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    UnsafeMergeFrom(*source);
  }
}

void Distribution_LinearBuckets::MergeFrom(const Distribution_LinearBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Distribution_LinearBuckets::UnsafeMergeFrom(const Distribution_LinearBuckets& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void Distribution_LinearBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_LinearBuckets::CopyFrom(const Distribution_LinearBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Distribution_LinearBuckets::IsInitialized() const {

  return true;
}

void Distribution_LinearBuckets::Swap(Distribution_LinearBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_LinearBuckets temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Distribution_LinearBuckets::UnsafeArenaSwap(Distribution_LinearBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_LinearBuckets::InternalSwap(Distribution_LinearBuckets* other) {
  std::swap(num_finite_buckets_, other->num_finite_buckets_);
  std::swap(width_, other->width_);
  std::swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution_LinearBuckets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Distribution_LinearBuckets_descriptor_;
  metadata.reflection = Distribution_LinearBuckets_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_ExponentialBuckets::kNumFiniteBucketsFieldNumber;
const int Distribution_ExponentialBuckets::kGrowthFactorFieldNumber;
const int Distribution_ExponentialBuckets::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_ExponentialBuckets::Distribution_ExponentialBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}
Distribution_ExponentialBuckets::Distribution_ExponentialBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}

void Distribution_ExponentialBuckets::InitAsDefaultInstance() {
}

Distribution_ExponentialBuckets::Distribution_ExponentialBuckets(const Distribution_ExponentialBuckets& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}

void Distribution_ExponentialBuckets::SharedCtor() {
  ::memset(&growth_factor_, 0, reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&growth_factor_) + sizeof(num_finite_buckets_));
  _cached_size_ = 0;
}

Distribution_ExponentialBuckets::~Distribution_ExponentialBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  SharedDtor();
}

void Distribution_ExponentialBuckets::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Distribution_ExponentialBuckets::ArenaDtor(void* object) {
  Distribution_ExponentialBuckets* _this = reinterpret_cast< Distribution_ExponentialBuckets* >(object);
  (void)_this;
}
void Distribution_ExponentialBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_ExponentialBuckets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution_ExponentialBuckets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Distribution_ExponentialBuckets_descriptor_;
}

const Distribution_ExponentialBuckets& Distribution_ExponentialBuckets::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Distribution_ExponentialBuckets> Distribution_ExponentialBuckets_default_instance_;

Distribution_ExponentialBuckets* Distribution_ExponentialBuckets::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution_ExponentialBuckets>(arena);
}

void Distribution_ExponentialBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Distribution_ExponentialBuckets, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Distribution_ExponentialBuckets*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(growth_factor_, num_finite_buckets_);

#undef ZR_HELPER_
#undef ZR_

}

bool Distribution_ExponentialBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_finite_buckets = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_growth_factor;
        break;
      }

      // optional double growth_factor = 2;
      case 2: {
        if (tag == 17) {
         parse_growth_factor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &growth_factor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_scale;
        break;
      }

      // optional double scale = 3;
      case 3: {
        if (tag == 25) {
         parse_scale:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return false;
#undef DO_
}

void Distribution_ExponentialBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  // optional int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // optional double growth_factor = 2;
  if (this->growth_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->growth_factor(), output);
  }

  // optional double scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->scale(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}

::google::protobuf::uint8* Distribution_ExponentialBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  // optional int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // optional double growth_factor = 2;
  if (this->growth_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->growth_factor(), target);
  }

  // optional double scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->scale(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return target;
}

size_t Distribution_ExponentialBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  size_t total_size = 0;

  // optional int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  // optional double growth_factor = 2;
  if (this->growth_factor() != 0) {
    total_size += 1 + 8;
  }

  // optional double scale = 3;
  if (this->scale() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution_ExponentialBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Distribution_ExponentialBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_ExponentialBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    UnsafeMergeFrom(*source);
  }
}

void Distribution_ExponentialBuckets::MergeFrom(const Distribution_ExponentialBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Distribution_ExponentialBuckets::UnsafeMergeFrom(const Distribution_ExponentialBuckets& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
  if (from.growth_factor() != 0) {
    set_growth_factor(from.growth_factor());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
}

void Distribution_ExponentialBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_ExponentialBuckets::CopyFrom(const Distribution_ExponentialBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Distribution_ExponentialBuckets::IsInitialized() const {

  return true;
}

void Distribution_ExponentialBuckets::Swap(Distribution_ExponentialBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_ExponentialBuckets temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Distribution_ExponentialBuckets::UnsafeArenaSwap(Distribution_ExponentialBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_ExponentialBuckets::InternalSwap(Distribution_ExponentialBuckets* other) {
  std::swap(num_finite_buckets_, other->num_finite_buckets_);
  std::swap(growth_factor_, other->growth_factor_);
  std::swap(scale_, other->scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution_ExponentialBuckets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Distribution_ExponentialBuckets_descriptor_;
  metadata.reflection = Distribution_ExponentialBuckets_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_ExplicitBuckets::kBoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_ExplicitBuckets::Distribution_ExplicitBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}
Distribution_ExplicitBuckets::Distribution_ExplicitBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bounds_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}

void Distribution_ExplicitBuckets::InitAsDefaultInstance() {
}

Distribution_ExplicitBuckets::Distribution_ExplicitBuckets(const Distribution_ExplicitBuckets& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}

void Distribution_ExplicitBuckets::SharedCtor() {
  _cached_size_ = 0;
}

Distribution_ExplicitBuckets::~Distribution_ExplicitBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  SharedDtor();
}

void Distribution_ExplicitBuckets::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Distribution_ExplicitBuckets::ArenaDtor(void* object) {
  Distribution_ExplicitBuckets* _this = reinterpret_cast< Distribution_ExplicitBuckets* >(object);
  (void)_this;
}
void Distribution_ExplicitBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_ExplicitBuckets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution_ExplicitBuckets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Distribution_ExplicitBuckets_descriptor_;
}

const Distribution_ExplicitBuckets& Distribution_ExplicitBuckets::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Distribution_ExplicitBuckets> Distribution_ExplicitBuckets_default_instance_;

Distribution_ExplicitBuckets* Distribution_ExplicitBuckets::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution_ExplicitBuckets>(arena);
}

void Distribution_ExplicitBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  bounds_.Clear();
}

bool Distribution_ExplicitBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double bounds = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bounds())));
        } else if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10, input, this->mutable_bounds())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return false;
#undef DO_
}

void Distribution_ExplicitBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bounds_cached_byte_size_);
  }
  for (int i = 0; i < this->bounds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->bounds(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}

::google::protobuf::uint8* Distribution_ExplicitBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bounds_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bounds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->bounds(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return target;
}

size_t Distribution_ExplicitBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  size_t total_size = 0;

  // repeated double bounds = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->bounds_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bounds_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution_ExplicitBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Distribution_ExplicitBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_ExplicitBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    UnsafeMergeFrom(*source);
  }
}

void Distribution_ExplicitBuckets::MergeFrom(const Distribution_ExplicitBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Distribution_ExplicitBuckets::UnsafeMergeFrom(const Distribution_ExplicitBuckets& from) {
  GOOGLE_DCHECK(&from != this);
  bounds_.UnsafeMergeFrom(from.bounds_);
}

void Distribution_ExplicitBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_ExplicitBuckets::CopyFrom(const Distribution_ExplicitBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Distribution_ExplicitBuckets::IsInitialized() const {

  return true;
}

void Distribution_ExplicitBuckets::Swap(Distribution_ExplicitBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_ExplicitBuckets temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Distribution_ExplicitBuckets::UnsafeArenaSwap(Distribution_ExplicitBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_ExplicitBuckets::InternalSwap(Distribution_ExplicitBuckets* other) {
  bounds_.UnsafeArenaSwap(&other->bounds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution_ExplicitBuckets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Distribution_ExplicitBuckets_descriptor_;
  metadata.reflection = Distribution_ExplicitBuckets_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution::kCountFieldNumber;
const int Distribution::kMeanFieldNumber;
const int Distribution::kMinimumFieldNumber;
const int Distribution::kMaximumFieldNumber;
const int Distribution::kSumOfSquaredDeviationFieldNumber;
const int Distribution::kBucketCountsFieldNumber;
const int Distribution::kLinearBucketsFieldNumber;
const int Distribution::kExponentialBucketsFieldNumber;
const int Distribution::kExplicitBucketsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution::Distribution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution)
}
Distribution::Distribution(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bucket_counts_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution)
}

void Distribution::InitAsDefaultInstance() {
  Distribution_default_oneof_instance_->linear_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_LinearBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets::internal_default_instance());
  Distribution_default_oneof_instance_->exponential_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::internal_default_instance());
  Distribution_default_oneof_instance_->explicit_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::internal_default_instance());
}

Distribution::Distribution(const Distribution& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution)
}

void Distribution::SharedCtor() {
  ::memset(&count_, 0, reinterpret_cast<char*>(&sum_of_squared_deviation_) -
    reinterpret_cast<char*>(&count_) + sizeof(sum_of_squared_deviation_));
  clear_has_bucket_option();
  _cached_size_ = 0;
}

Distribution::~Distribution() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution)
  SharedDtor();
}

void Distribution::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (has_bucket_option()) {
    clear_bucket_option();
  }
}

void Distribution::ArenaDtor(void* object) {
  Distribution* _this = reinterpret_cast< Distribution* >(object);
  (void)_this;
}
void Distribution::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Distribution::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Distribution_descriptor_;
}

const Distribution& Distribution::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Distribution> Distribution_default_instance_;

Distribution* Distribution::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Distribution>(arena);
}

void Distribution::clear_bucket_option() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicecontrol.v1.Distribution)
  switch (bucket_option_case()) {
    case kLinearBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.linear_buckets_;
      }
      break;
    }
    case kExponentialBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.exponential_buckets_;
      }
      break;
    }
    case kExplicitBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.explicit_buckets_;
      }
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BUCKET_OPTION_NOT_SET;
}


void Distribution::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Distribution, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Distribution*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(count_, sum_of_squared_deviation_);

#undef ZR_HELPER_
#undef ZR_

  bucket_counts_.Clear();
  clear_bucket_option();
}

bool Distribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 count = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_mean;
        break;
      }

      // optional double mean = 2;
      case 2: {
        if (tag == 17) {
         parse_mean:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_minimum;
        break;
      }

      // optional double minimum = 3;
      case 3: {
        if (tag == 25) {
         parse_minimum:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_maximum;
        break;
      }

      // optional double maximum = 4;
      case 4: {
        if (tag == 33) {
         parse_maximum:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_sum_of_squared_deviation;
        break;
      }

      // optional double sum_of_squared_deviation = 5;
      case 5: {
        if (tag == 41) {
         parse_sum_of_squared_deviation:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sum_of_squared_deviation_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_bucket_counts;
        break;
      }

      // repeated int64 bucket_counts = 6;
      case 6: {
        if (tag == 50) {
         parse_bucket_counts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bucket_counts())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 50, input, this->mutable_bucket_counts())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_linear_buckets;
        break;
      }

      // optional .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
      case 7: {
        if (tag == 58) {
         parse_linear_buckets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linear_buckets()));
        } else {
          goto handle_unusual;
        }
        goto after_explicit_buckets;
        break;
      }

      // optional .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
      case 8: {
        if (tag == 66) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exponential_buckets()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_explicit_buckets;
        break;
      }

      // optional .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
      case 9: {
        if (tag == 74) {
         parse_explicit_buckets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_explicit_buckets()));
        } else {
          goto handle_unusual;
        }
       after_explicit_buckets:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution)
  return false;
#undef DO_
}

void Distribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution)
  // optional int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // optional double mean = 2;
  if (this->mean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->mean(), output);
  }

  // optional double minimum = 3;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->minimum(), output);
  }

  // optional double maximum = 4;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->maximum(), output);
  }

  // optional double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->sum_of_squared_deviation(), output);
  }

  // repeated int64 bucket_counts = 6;
  if (this->bucket_counts_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bucket_counts_cached_byte_size_);
  }
  for (int i = 0; i < this->bucket_counts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bucket_counts(i), output);
  }

  // optional .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
  if (has_linear_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *bucket_option_.linear_buckets_, output);
  }

  // optional .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
  if (has_exponential_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *bucket_option_.exponential_buckets_, output);
  }

  // optional .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
  if (has_explicit_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *bucket_option_.explicit_buckets_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution)
}

::google::protobuf::uint8* Distribution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution)
  // optional int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // optional double mean = 2;
  if (this->mean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->mean(), target);
  }

  // optional double minimum = 3;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->minimum(), target);
  }

  // optional double maximum = 4;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->maximum(), target);
  }

  // optional double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->sum_of_squared_deviation(), target);
  }

  // repeated int64 bucket_counts = 6;
  if (this->bucket_counts_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bucket_counts_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bucket_counts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bucket_counts(i), target);
  }

  // optional .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
  if (has_linear_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *bucket_option_.linear_buckets_, false, target);
  }

  // optional .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
  if (has_exponential_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *bucket_option_.exponential_buckets_, false, target);
  }

  // optional .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
  if (has_explicit_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *bucket_option_.explicit_buckets_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution)
  return target;
}

size_t Distribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution)
  size_t total_size = 0;

  // optional int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // optional double mean = 2;
  if (this->mean() != 0) {
    total_size += 1 + 8;
  }

  // optional double minimum = 3;
  if (this->minimum() != 0) {
    total_size += 1 + 8;
  }

  // optional double maximum = 4;
  if (this->maximum() != 0) {
    total_size += 1 + 8;
  }

  // optional double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    total_size += 1 + 8;
  }

  // repeated int64 bucket_counts = 6;
  {
    size_t data_size = 0;
    unsigned int count = this->bucket_counts_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->bucket_counts(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bucket_counts_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  switch (bucket_option_case()) {
    // optional .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
    case kLinearBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *bucket_option_.linear_buckets_);
      break;
    }
    // optional .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
    case kExponentialBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *bucket_option_.exponential_buckets_);
      break;
    }
    // optional .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
    case kExplicitBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *bucket_option_.explicit_buckets_);
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Distribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Distribution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution)
    UnsafeMergeFrom(*source);
  }
}

void Distribution::MergeFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Distribution::UnsafeMergeFrom(const Distribution& from) {
  GOOGLE_DCHECK(&from != this);
  bucket_counts_.UnsafeMergeFrom(from.bucket_counts_);
  switch (from.bucket_option_case()) {
    case kLinearBuckets: {
      mutable_linear_buckets()->::google::api::servicecontrol::v1::Distribution_LinearBuckets::MergeFrom(from.linear_buckets());
      break;
    }
    case kExponentialBuckets: {
      mutable_exponential_buckets()->::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::MergeFrom(from.exponential_buckets());
      break;
    }
    case kExplicitBuckets: {
      mutable_explicit_buckets()->::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::MergeFrom(from.explicit_buckets());
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.mean() != 0) {
    set_mean(from.mean());
  }
  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
  if (from.sum_of_squared_deviation() != 0) {
    set_sum_of_squared_deviation(from.sum_of_squared_deviation());
  }
}

void Distribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution::CopyFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Distribution::IsInitialized() const {

  return true;
}

void Distribution::Swap(Distribution* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Distribution::UnsafeArenaSwap(Distribution* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution::InternalSwap(Distribution* other) {
  std::swap(count_, other->count_);
  std::swap(mean_, other->mean_);
  std::swap(minimum_, other->minimum_);
  std::swap(maximum_, other->maximum_);
  std::swap(sum_of_squared_deviation_, other->sum_of_squared_deviation_);
  bucket_counts_.UnsafeArenaSwap(&other->bucket_counts_);
  std::swap(bucket_option_, other->bucket_option_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Distribution::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Distribution_descriptor_;
  metadata.reflection = Distribution_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Distribution_LinearBuckets

// optional int32 num_finite_buckets = 1;
void Distribution_LinearBuckets::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
::google::protobuf::int32 Distribution_LinearBuckets::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.num_finite_buckets)
  return num_finite_buckets_;
}
void Distribution_LinearBuckets::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.num_finite_buckets)
}

// optional double width = 2;
void Distribution_LinearBuckets::clear_width() {
  width_ = 0;
}
double Distribution_LinearBuckets::width() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.width)
  return width_;
}
void Distribution_LinearBuckets::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.width)
}

// optional double offset = 3;
void Distribution_LinearBuckets::clear_offset() {
  offset_ = 0;
}
double Distribution_LinearBuckets::offset() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.offset)
  return offset_;
}
void Distribution_LinearBuckets::set_offset(double value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.offset)
}

inline const Distribution_LinearBuckets* Distribution_LinearBuckets::internal_default_instance() {
  return &Distribution_LinearBuckets_default_instance_.get();
}
// -------------------------------------------------------------------

// Distribution_ExponentialBuckets

// optional int32 num_finite_buckets = 1;
void Distribution_ExponentialBuckets::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
::google::protobuf::int32 Distribution_ExponentialBuckets::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.num_finite_buckets)
  return num_finite_buckets_;
}
void Distribution_ExponentialBuckets::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.num_finite_buckets)
}

// optional double growth_factor = 2;
void Distribution_ExponentialBuckets::clear_growth_factor() {
  growth_factor_ = 0;
}
double Distribution_ExponentialBuckets::growth_factor() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.growth_factor)
  return growth_factor_;
}
void Distribution_ExponentialBuckets::set_growth_factor(double value) {
  
  growth_factor_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.growth_factor)
}

// optional double scale = 3;
void Distribution_ExponentialBuckets::clear_scale() {
  scale_ = 0;
}
double Distribution_ExponentialBuckets::scale() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.scale)
  return scale_;
}
void Distribution_ExponentialBuckets::set_scale(double value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.scale)
}

inline const Distribution_ExponentialBuckets* Distribution_ExponentialBuckets::internal_default_instance() {
  return &Distribution_ExponentialBuckets_default_instance_.get();
}
// -------------------------------------------------------------------

// Distribution_ExplicitBuckets

// repeated double bounds = 1;
int Distribution_ExplicitBuckets::bounds_size() const {
  return bounds_.size();
}
void Distribution_ExplicitBuckets::clear_bounds() {
  bounds_.Clear();
}
double Distribution_ExplicitBuckets::bounds(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return bounds_.Get(index);
}
void Distribution_ExplicitBuckets::set_bounds(int index, double value) {
  bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
}
void Distribution_ExplicitBuckets::add_bounds(double value) {
  bounds_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
}
const ::google::protobuf::RepeatedField< double >&
Distribution_ExplicitBuckets::bounds() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return bounds_;
}
::google::protobuf::RepeatedField< double >*
Distribution_ExplicitBuckets::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return &bounds_;
}

inline const Distribution_ExplicitBuckets* Distribution_ExplicitBuckets::internal_default_instance() {
  return &Distribution_ExplicitBuckets_default_instance_.get();
}
// -------------------------------------------------------------------

// Distribution

// optional int64 count = 1;
void Distribution::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Distribution::count() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.count)
  return count_;
}
void Distribution::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.count)
}

// optional double mean = 2;
void Distribution::clear_mean() {
  mean_ = 0;
}
double Distribution::mean() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.mean)
  return mean_;
}
void Distribution::set_mean(double value) {
  
  mean_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.mean)
}

// optional double minimum = 3;
void Distribution::clear_minimum() {
  minimum_ = 0;
}
double Distribution::minimum() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.minimum)
  return minimum_;
}
void Distribution::set_minimum(double value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.minimum)
}

// optional double maximum = 4;
void Distribution::clear_maximum() {
  maximum_ = 0;
}
double Distribution::maximum() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.maximum)
  return maximum_;
}
void Distribution::set_maximum(double value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.maximum)
}

// optional double sum_of_squared_deviation = 5;
void Distribution::clear_sum_of_squared_deviation() {
  sum_of_squared_deviation_ = 0;
}
double Distribution::sum_of_squared_deviation() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.sum_of_squared_deviation)
  return sum_of_squared_deviation_;
}
void Distribution::set_sum_of_squared_deviation(double value) {
  
  sum_of_squared_deviation_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.sum_of_squared_deviation)
}

// repeated int64 bucket_counts = 6;
int Distribution::bucket_counts_size() const {
  return bucket_counts_.size();
}
void Distribution::clear_bucket_counts() {
  bucket_counts_.Clear();
}
::google::protobuf::int64 Distribution::bucket_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return bucket_counts_.Get(index);
}
void Distribution::set_bucket_counts(int index, ::google::protobuf::int64 value) {
  bucket_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.bucket_counts)
}
void Distribution::add_bucket_counts(::google::protobuf::int64 value) {
  bucket_counts_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.Distribution.bucket_counts)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Distribution::bucket_counts() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return bucket_counts_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Distribution::mutable_bucket_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return &bucket_counts_;
}

// optional .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
bool Distribution::has_linear_buckets() const {
  return bucket_option_case() == kLinearBuckets;
}
void Distribution::set_has_linear_buckets() {
  _oneof_case_[0] = kLinearBuckets;
}
void Distribution::clear_linear_buckets() {
  if (has_linear_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.linear_buckets_;
    }
    clear_has_bucket_option();
  }
}
 const ::google::api::servicecontrol::v1::Distribution_LinearBuckets& Distribution::linear_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.linear_buckets)
  return has_linear_buckets()
      ? *bucket_option_.linear_buckets_
      : ::google::api::servicecontrol::v1::Distribution_LinearBuckets::default_instance();
}
::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::mutable_linear_buckets() {
  if (!has_linear_buckets()) {
    clear_bucket_option();
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_LinearBuckets >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.linear_buckets)
  return bucket_option_.linear_buckets_;
}
::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::release_linear_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.linear_buckets)
  if (has_linear_buckets()) {
    clear_has_bucket_option();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = new ::google::api::servicecontrol::v1::Distribution_LinearBuckets(*bucket_option_.linear_buckets_);
      bucket_option_.linear_buckets_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = bucket_option_.linear_buckets_;
      bucket_option_.linear_buckets_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void Distribution::set_allocated_linear_buckets(::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets) {
  clear_bucket_option();
  if (linear_buckets) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(linear_buckets) == NULL) {
      GetArenaNoVirtual()->Own(linear_buckets);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(linear_buckets)) {
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* new_linear_buckets = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_LinearBuckets >(
          GetArenaNoVirtual());
      new_linear_buckets->CopyFrom(*linear_buckets);
      linear_buckets = new_linear_buckets;
    }
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.linear_buckets)
}
 ::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::unsafe_arena_release_linear_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.linear_buckets)
  if (has_linear_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = bucket_option_.linear_buckets_;
    bucket_option_.linear_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void Distribution::unsafe_arena_set_allocated_linear_buckets(::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets) {
  clear_bucket_option();
  if (linear_buckets) {
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.linear_buckets)
}

// optional .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
bool Distribution::has_exponential_buckets() const {
  return bucket_option_case() == kExponentialBuckets;
}
void Distribution::set_has_exponential_buckets() {
  _oneof_case_[0] = kExponentialBuckets;
}
void Distribution::clear_exponential_buckets() {
  if (has_exponential_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.exponential_buckets_;
    }
    clear_has_bucket_option();
  }
}
 const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets& Distribution::exponential_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  return has_exponential_buckets()
      ? *bucket_option_.exponential_buckets_
      : ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::default_instance();
}
::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::mutable_exponential_buckets() {
  if (!has_exponential_buckets()) {
    clear_bucket_option();
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  return bucket_option_.exponential_buckets_;
}
::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::release_exponential_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  if (has_exponential_buckets()) {
    clear_has_bucket_option();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = new ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets(*bucket_option_.exponential_buckets_);
      bucket_option_.exponential_buckets_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = bucket_option_.exponential_buckets_;
      bucket_option_.exponential_buckets_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void Distribution::set_allocated_exponential_buckets(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets) {
  clear_bucket_option();
  if (exponential_buckets) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(exponential_buckets) == NULL) {
      GetArenaNoVirtual()->Own(exponential_buckets);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(exponential_buckets)) {
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* new_exponential_buckets = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets >(
          GetArenaNoVirtual());
      new_exponential_buckets->CopyFrom(*exponential_buckets);
      exponential_buckets = new_exponential_buckets;
    }
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.exponential_buckets)
}
 ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::unsafe_arena_release_exponential_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  if (has_exponential_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = bucket_option_.exponential_buckets_;
    bucket_option_.exponential_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void Distribution::unsafe_arena_set_allocated_exponential_buckets(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets) {
  clear_bucket_option();
  if (exponential_buckets) {
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.exponential_buckets)
}

// optional .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
bool Distribution::has_explicit_buckets() const {
  return bucket_option_case() == kExplicitBuckets;
}
void Distribution::set_has_explicit_buckets() {
  _oneof_case_[0] = kExplicitBuckets;
}
void Distribution::clear_explicit_buckets() {
  if (has_explicit_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.explicit_buckets_;
    }
    clear_has_bucket_option();
  }
}
 const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets& Distribution::explicit_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  return has_explicit_buckets()
      ? *bucket_option_.explicit_buckets_
      : ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::default_instance();
}
::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::mutable_explicit_buckets() {
  if (!has_explicit_buckets()) {
    clear_bucket_option();
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  return bucket_option_.explicit_buckets_;
}
::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::release_explicit_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  if (has_explicit_buckets()) {
    clear_has_bucket_option();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = new ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets(*bucket_option_.explicit_buckets_);
      bucket_option_.explicit_buckets_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = bucket_option_.explicit_buckets_;
      bucket_option_.explicit_buckets_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void Distribution::set_allocated_explicit_buckets(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets) {
  clear_bucket_option();
  if (explicit_buckets) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(explicit_buckets) == NULL) {
      GetArenaNoVirtual()->Own(explicit_buckets);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(explicit_buckets)) {
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* new_explicit_buckets = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets >(
          GetArenaNoVirtual());
      new_explicit_buckets->CopyFrom(*explicit_buckets);
      explicit_buckets = new_explicit_buckets;
    }
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.explicit_buckets)
}
 ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::unsafe_arena_release_explicit_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  if (has_explicit_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = bucket_option_.explicit_buckets_;
    bucket_option_.explicit_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void Distribution::unsafe_arena_set_allocated_explicit_buckets(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets) {
  clear_bucket_option();
  if (explicit_buckets) {
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.explicit_buckets)
}

bool Distribution::has_bucket_option() const {
  return bucket_option_case() != BUCKET_OPTION_NOT_SET;
}
void Distribution::clear_has_bucket_option() {
  _oneof_case_[0] = BUCKET_OPTION_NOT_SET;
}
Distribution::BucketOptionCase Distribution::bucket_option_case() const {
  return Distribution::BucketOptionCase(_oneof_case_[0]);
}
inline const Distribution* Distribution::internal_default_instance() {
  return &Distribution_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
