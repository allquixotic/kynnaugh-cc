// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/functions/v1beta2/functions.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/cloud/functions/v1beta2/functions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace functions {
namespace v1beta2 {

namespace {

const ::google::protobuf::Descriptor* CloudFunction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CloudFunction_reflection_ = NULL;
struct CloudFunctionOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr gcs_url_;
  const ::google::cloud::functions::v1beta2::SourceRepository* source_repository_;
  ::google::protobuf::internal::ArenaStringPtr pubsub_trigger_;
  ::google::protobuf::internal::ArenaStringPtr gcs_trigger_;
  const ::google::cloud::functions::v1beta2::HTTPSTrigger* https_trigger_;
  const ::google::cloud::functions::v1beta2::EventTrigger* event_trigger_;
}* CloudFunction_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* HTTPSTrigger_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HTTPSTrigger_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventTrigger_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventTrigger_reflection_ = NULL;
const ::google::protobuf::Descriptor* SourceRepository_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SourceRepository_reflection_ = NULL;
struct SourceRepositoryOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr branch_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr revision_;
}* SourceRepository_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* CreateFunctionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateFunctionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateFunctionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateFunctionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFunctionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFunctionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListFunctionsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListFunctionsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListFunctionsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListFunctionsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteFunctionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteFunctionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallFunctionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallFunctionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallFunctionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallFunctionResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CloudFunctionStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto() {
  protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/cloud/functions/v1beta2/functions.proto");
  GOOGLE_CHECK(file != NULL);
  CloudFunction_descriptor_ = file->message_type(0);
  static const int CloudFunction_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CloudFunction_default_oneof_instance_, gcs_url_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CloudFunction_default_oneof_instance_, source_repository_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CloudFunction_default_oneof_instance_, pubsub_trigger_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CloudFunction_default_oneof_instance_, gcs_trigger_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CloudFunction_default_oneof_instance_, https_trigger_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(CloudFunction_default_oneof_instance_, event_trigger_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, latest_operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, entry_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, timeout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, available_memory_mb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, service_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, source_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, trigger_),
  };
  CloudFunction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CloudFunction_descriptor_,
      CloudFunction::internal_default_instance(),
      CloudFunction_offsets_,
      -1,
      -1,
      -1,
      CloudFunction_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, _oneof_case_[0]),
      sizeof(CloudFunction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudFunction, _internal_metadata_));
  HTTPSTrigger_descriptor_ = file->message_type(1);
  static const int HTTPSTrigger_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HTTPSTrigger, url_),
  };
  HTTPSTrigger_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HTTPSTrigger_descriptor_,
      HTTPSTrigger::internal_default_instance(),
      HTTPSTrigger_offsets_,
      -1,
      -1,
      -1,
      sizeof(HTTPSTrigger),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HTTPSTrigger, _internal_metadata_));
  EventTrigger_descriptor_ = file->message_type(2);
  static const int EventTrigger_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventTrigger, event_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventTrigger, resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventTrigger, path_),
  };
  EventTrigger_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EventTrigger_descriptor_,
      EventTrigger::internal_default_instance(),
      EventTrigger_offsets_,
      -1,
      -1,
      -1,
      sizeof(EventTrigger),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventTrigger, _internal_metadata_));
  SourceRepository_descriptor_ = file->message_type(3);
  static const int SourceRepository_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceRepository, repository_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceRepository, source_path_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SourceRepository_default_oneof_instance_, branch_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SourceRepository_default_oneof_instance_, tag_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SourceRepository_default_oneof_instance_, revision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceRepository, deployed_revision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceRepository, version_),
  };
  SourceRepository_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SourceRepository_descriptor_,
      SourceRepository::internal_default_instance(),
      SourceRepository_offsets_,
      -1,
      -1,
      -1,
      SourceRepository_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceRepository, _oneof_case_[0]),
      sizeof(SourceRepository),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceRepository, _internal_metadata_));
  CreateFunctionRequest_descriptor_ = file->message_type(4);
  static const int CreateFunctionRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFunctionRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFunctionRequest, function_),
  };
  CreateFunctionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateFunctionRequest_descriptor_,
      CreateFunctionRequest::internal_default_instance(),
      CreateFunctionRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateFunctionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateFunctionRequest, _internal_metadata_));
  UpdateFunctionRequest_descriptor_ = file->message_type(5);
  static const int UpdateFunctionRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFunctionRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFunctionRequest, function_),
  };
  UpdateFunctionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateFunctionRequest_descriptor_,
      UpdateFunctionRequest::internal_default_instance(),
      UpdateFunctionRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateFunctionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFunctionRequest, _internal_metadata_));
  GetFunctionRequest_descriptor_ = file->message_type(6);
  static const int GetFunctionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFunctionRequest, name_),
  };
  GetFunctionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFunctionRequest_descriptor_,
      GetFunctionRequest::internal_default_instance(),
      GetFunctionRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetFunctionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFunctionRequest, _internal_metadata_));
  ListFunctionsRequest_descriptor_ = file->message_type(7);
  static const int ListFunctionsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFunctionsRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFunctionsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFunctionsRequest, page_token_),
  };
  ListFunctionsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListFunctionsRequest_descriptor_,
      ListFunctionsRequest::internal_default_instance(),
      ListFunctionsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListFunctionsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFunctionsRequest, _internal_metadata_));
  ListFunctionsResponse_descriptor_ = file->message_type(8);
  static const int ListFunctionsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFunctionsResponse, functions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFunctionsResponse, next_page_token_),
  };
  ListFunctionsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListFunctionsResponse_descriptor_,
      ListFunctionsResponse::internal_default_instance(),
      ListFunctionsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListFunctionsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFunctionsResponse, _internal_metadata_));
  DeleteFunctionRequest_descriptor_ = file->message_type(9);
  static const int DeleteFunctionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFunctionRequest, name_),
  };
  DeleteFunctionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteFunctionRequest_descriptor_,
      DeleteFunctionRequest::internal_default_instance(),
      DeleteFunctionRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteFunctionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFunctionRequest, _internal_metadata_));
  CallFunctionRequest_descriptor_ = file->message_type(10);
  static const int CallFunctionRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallFunctionRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallFunctionRequest, data_),
  };
  CallFunctionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallFunctionRequest_descriptor_,
      CallFunctionRequest::internal_default_instance(),
      CallFunctionRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CallFunctionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallFunctionRequest, _internal_metadata_));
  CallFunctionResponse_descriptor_ = file->message_type(11);
  static const int CallFunctionResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallFunctionResponse, execution_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallFunctionResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallFunctionResponse, error_),
  };
  CallFunctionResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallFunctionResponse_descriptor_,
      CallFunctionResponse::internal_default_instance(),
      CallFunctionResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CallFunctionResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallFunctionResponse, _internal_metadata_));
  CloudFunctionStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CloudFunction_descriptor_, CloudFunction::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HTTPSTrigger_descriptor_, HTTPSTrigger::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EventTrigger_descriptor_, EventTrigger::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SourceRepository_descriptor_, SourceRepository::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateFunctionRequest_descriptor_, CreateFunctionRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateFunctionRequest_descriptor_, UpdateFunctionRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFunctionRequest_descriptor_, GetFunctionRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListFunctionsRequest_descriptor_, ListFunctionsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListFunctionsResponse_descriptor_, ListFunctionsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteFunctionRequest_descriptor_, DeleteFunctionRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallFunctionRequest_descriptor_, CallFunctionRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallFunctionResponse_descriptor_, CallFunctionResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto() {
  CloudFunction_default_instance_.Shutdown();
  delete CloudFunction_default_oneof_instance_;
  delete CloudFunction_reflection_;
  HTTPSTrigger_default_instance_.Shutdown();
  delete HTTPSTrigger_reflection_;
  EventTrigger_default_instance_.Shutdown();
  delete EventTrigger_reflection_;
  SourceRepository_default_instance_.Shutdown();
  delete SourceRepository_default_oneof_instance_;
  delete SourceRepository_reflection_;
  CreateFunctionRequest_default_instance_.Shutdown();
  delete CreateFunctionRequest_reflection_;
  UpdateFunctionRequest_default_instance_.Shutdown();
  delete UpdateFunctionRequest_reflection_;
  GetFunctionRequest_default_instance_.Shutdown();
  delete GetFunctionRequest_reflection_;
  ListFunctionsRequest_default_instance_.Shutdown();
  delete ListFunctionsRequest_reflection_;
  ListFunctionsResponse_default_instance_.Shutdown();
  delete ListFunctionsResponse_reflection_;
  DeleteFunctionRequest_default_instance_.Shutdown();
  delete DeleteFunctionRequest_reflection_;
  CallFunctionRequest_default_instance_.Shutdown();
  delete CallFunctionRequest_reflection_;
  CallFunctionResponse_default_instance_.Shutdown();
  delete CallFunctionResponse_reflection_;
}

void protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::longrunning::protobuf_InitDefaults_google_2flongrunning_2foperations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  CloudFunction_default_instance_.DefaultConstruct();
  CloudFunction_default_oneof_instance_ = new CloudFunctionOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  HTTPSTrigger_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EventTrigger_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SourceRepository_default_instance_.DefaultConstruct();
  SourceRepository_default_oneof_instance_ = new SourceRepositoryOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  CreateFunctionRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UpdateFunctionRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetFunctionRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListFunctionsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListFunctionsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeleteFunctionRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CallFunctionRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CallFunctionResponse_default_instance_.DefaultConstruct();
  CloudFunction_default_instance_.get_mutable()->InitAsDefaultInstance();
  HTTPSTrigger_default_instance_.get_mutable()->InitAsDefaultInstance();
  EventTrigger_default_instance_.get_mutable()->InitAsDefaultInstance();
  SourceRepository_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateFunctionRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateFunctionRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetFunctionRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListFunctionsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListFunctionsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteFunctionRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CallFunctionRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CallFunctionResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_once_);
void protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_once_,
                 &protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_impl);
}
void protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.google/cloud/functions/v1beta2/functio"
    "ns.proto\022\036google.cloud.functions.v1beta2"
    "\032\034google/api/annotations.proto\032#google/l"
    "ongrunning/operations.proto\032\036google/prot"
    "obuf/duration.proto\"\256\004\n\rCloudFunction\022\014\n"
    "\004name\030\001 \001(\t\022\021\n\007gcs_url\030\002 \001(\tH\000\022M\n\021source"
    "_repository\030\003 \001(\01320.google.cloud.functio"
    "ns.v1beta2.SourceRepositoryH\000\022\030\n\016pubsub_"
    "trigger\030\004 \001(\tH\001\022\025\n\013gcs_trigger\030\005 \001(\tH\001\022E"
    "\n\rhttps_trigger\030\006 \001(\0132,.google.cloud.fun"
    "ctions.v1beta2.HTTPSTriggerH\001\022E\n\revent_t"
    "rigger\030\014 \001(\0132,.google.cloud.functions.v1"
    "beta2.EventTriggerH\001\022C\n\006status\030\007 \001(\01623.g"
    "oogle.cloud.functions.v1beta2.CloudFunct"
    "ionStatus\022\030\n\020latest_operation\030\010 \001(\t\022\023\n\013e"
    "ntry_point\030\t \001(\t\022*\n\007timeout\030\n \001(\0132\031.goog"
    "le.protobuf.Duration\022\033\n\023available_memory"
    "_mb\030\013 \001(\005\022\027\n\017service_account\030\r \001(\tB\r\n\013so"
    "urce_codeB\t\n\007trigger\"\033\n\014HTTPSTrigger\022\013\n\003"
    "url\030\001 \001(\t\"B\n\014EventTrigger\022\022\n\nevent_type\030"
    "\001 \001(\t\022\020\n\010resource\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\"\232\001"
    "\n\020SourceRepository\022\026\n\016repository_url\030\001 \001"
    "(\t\022\023\n\013source_path\030\002 \001(\t\022\020\n\006branch\030\003 \001(\tH"
    "\000\022\r\n\003tag\030\004 \001(\tH\000\022\022\n\010revision\030\005 \001(\tH\000\022\031\n\021"
    "deployed_revision\030\006 \001(\tB\t\n\007version\"j\n\025Cr"
    "eateFunctionRequest\022\020\n\010location\030\001 \001(\t\022\?\n"
    "\010function\030\002 \001(\0132-.google.cloud.functions"
    ".v1beta2.CloudFunction\"f\n\025UpdateFunction"
    "Request\022\014\n\004name\030\001 \001(\t\022\?\n\010function\030\002 \001(\0132"
    "-.google.cloud.functions.v1beta2.CloudFu"
    "nction\"\"\n\022GetFunctionRequest\022\014\n\004name\030\001 \001"
    "(\t\"O\n\024ListFunctionsRequest\022\020\n\010location\030\001"
    " \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 "
    "\001(\t\"r\n\025ListFunctionsResponse\022@\n\tfunction"
    "s\030\001 \003(\0132-.google.cloud.functions.v1beta2"
    ".CloudFunction\022\027\n\017next_page_token\030\002 \001(\t\""
    "%\n\025DeleteFunctionRequest\022\014\n\004name\030\001 \001(\t\"1"
    "\n\023CallFunctionRequest\022\014\n\004name\030\001 \001(\t\022\014\n\004d"
    "ata\030\002 \001(\t\"K\n\024CallFunctionResponse\022\024\n\014exe"
    "cution_id\030\001 \001(\t\022\016\n\006result\030\002 \001(\t\022\r\n\005error"
    "\030\003 \001(\t*a\n\023CloudFunctionStatus\022\026\n\022STATUS_"
    "UNSPECIFIED\020\000\022\t\n\005READY\020\001\022\n\n\006FAILED\020\002\022\r\n\t"
    "DEPLOYING\020\003\022\014\n\010DELETING\020\0042\310\010\n\025CloudFunct"
    "ionsService\022\272\001\n\rListFunctions\0224.google.c"
    "loud.functions.v1beta2.ListFunctionsRequ"
    "est\0325.google.cloud.functions.v1beta2.Lis"
    "tFunctionsResponse\"<\202\323\344\223\0026\0224/v1beta2/{lo"
    "cation=projects/*/locations/*}/functions"
    "\022\254\001\n\013GetFunction\0222.google.cloud.function"
    "s.v1beta2.GetFunctionRequest\032-.google.cl"
    "oud.functions.v1beta2.CloudFunction\":\202\323\344"
    "\223\0024\0222/v1beta2/{name=projects/*/locations"
    "/*/functions/*}\022\256\001\n\016CreateFunction\0225.goo"
    "gle.cloud.functions.v1beta2.CreateFuncti"
    "onRequest\032\035.google.longrunning.Operation"
    "\"F\202\323\344\223\002@\"4/v1beta2/{location=projects/*/"
    "locations/*}/functions:\010function\022\254\001\n\016Upd"
    "ateFunction\0225.google.cloud.functions.v1b"
    "eta2.UpdateFunctionRequest\032\035.google.long"
    "running.Operation\"D\202\323\344\223\002>\0322/v1beta2/{nam"
    "e=projects/*/locations/*/functions/*}:\010f"
    "unction\022\242\001\n\016DeleteFunction\0225.google.clou"
    "d.functions.v1beta2.DeleteFunctionReques"
    "t\032\035.google.longrunning.Operation\":\202\323\344\223\0024"
    "*2/v1beta2/{name=projects/*/locations/*/"
    "functions/*}\022\275\001\n\014CallFunction\0223.google.c"
    "loud.functions.v1beta2.CallFunctionReque"
    "st\0324.google.cloud.functions.v1beta2.Call"
    "FunctionResponse\"B\202\323\344\223\002<\"7/v1beta2/{name"
    "=projects/*/locations/*/functions/*}:cal"
    "l:\001*B\205\001\n\"com.google.cloud.functions.v1be"
    "ta2B\016FunctionsProtoP\001ZGgoogle.golang.org"
    "/genproto/googleapis/cloud/functions/v1b"
    "eta2;functions\242\002\003GCFb\006proto3", 2948);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/functions/v1beta2/functions.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::longrunning::protobuf_AddDesc_google_2flongrunning_2foperations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_once_);
void protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_once_,
                 &protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto {
  StaticDescriptorInitializer_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto() {
    protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  }
} static_descriptor_initializer_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto_;
const ::google::protobuf::EnumDescriptor* CloudFunctionStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CloudFunctionStatus_descriptor_;
}
bool CloudFunctionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudFunction::kNameFieldNumber;
const int CloudFunction::kGcsUrlFieldNumber;
const int CloudFunction::kSourceRepositoryFieldNumber;
const int CloudFunction::kPubsubTriggerFieldNumber;
const int CloudFunction::kGcsTriggerFieldNumber;
const int CloudFunction::kHttpsTriggerFieldNumber;
const int CloudFunction::kEventTriggerFieldNumber;
const int CloudFunction::kStatusFieldNumber;
const int CloudFunction::kLatestOperationFieldNumber;
const int CloudFunction::kEntryPointFieldNumber;
const int CloudFunction::kTimeoutFieldNumber;
const int CloudFunction::kAvailableMemoryMbFieldNumber;
const int CloudFunction::kServiceAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudFunction::CloudFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CloudFunction)
}

void CloudFunction::InitAsDefaultInstance() {
  CloudFunction_default_oneof_instance_->gcs_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  CloudFunction_default_oneof_instance_->source_repository_ = const_cast< ::google::cloud::functions::v1beta2::SourceRepository*>(
      ::google::cloud::functions::v1beta2::SourceRepository::internal_default_instance());
  CloudFunction_default_oneof_instance_->pubsub_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  CloudFunction_default_oneof_instance_->gcs_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  CloudFunction_default_oneof_instance_->https_trigger_ = const_cast< ::google::cloud::functions::v1beta2::HTTPSTrigger*>(
      ::google::cloud::functions::v1beta2::HTTPSTrigger::internal_default_instance());
  CloudFunction_default_oneof_instance_->event_trigger_ = const_cast< ::google::cloud::functions::v1beta2::EventTrigger*>(
      ::google::cloud::functions::v1beta2::EventTrigger::internal_default_instance());
  timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

CloudFunction::CloudFunction(const CloudFunction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CloudFunction)
}

void CloudFunction::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_operation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = NULL;
  ::memset(&status_, 0, reinterpret_cast<char*>(&available_memory_mb_) -
    reinterpret_cast<char*>(&status_) + sizeof(available_memory_mb_));
  clear_has_source_code();
  clear_has_trigger();
  _cached_size_ = 0;
}

CloudFunction::~CloudFunction() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CloudFunction)
  SharedDtor();
}

void CloudFunction::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latest_operation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_source_code()) {
    clear_source_code();
  }
  if (has_trigger()) {
    clear_trigger();
  }
  if (this != &CloudFunction_default_instance_.get()) {
    delete timeout_;
  }
}

void CloudFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloudFunction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CloudFunction_descriptor_;
}

const CloudFunction& CloudFunction::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CloudFunction> CloudFunction_default_instance_;

CloudFunction* CloudFunction::New(::google::protobuf::Arena* arena) const {
  CloudFunction* n = new CloudFunction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloudFunction::clear_source_code() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.functions.v1beta2.CloudFunction)
  switch (source_code_case()) {
    case kGcsUrl: {
      source_code_.gcs_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSourceRepository: {
      delete source_code_.source_repository_;
      break;
    }
    case SOURCE_CODE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_CODE_NOT_SET;
}

void CloudFunction::clear_trigger() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.functions.v1beta2.CloudFunction)
  switch (trigger_case()) {
    case kPubsubTrigger: {
      trigger_.pubsub_trigger_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kGcsTrigger: {
      trigger_.gcs_trigger_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHttpsTrigger: {
      delete trigger_.https_trigger_;
      break;
    }
    case kEventTrigger: {
      delete trigger_.event_trigger_;
      break;
    }
    case TRIGGER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = TRIGGER_NOT_SET;
}


void CloudFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CloudFunction)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  latest_operation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_point_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;
  available_memory_mb_ = 0;
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_source_code();
  clear_trigger();
}

bool CloudFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CloudFunction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gcs_url;
        break;
      }

      // optional string gcs_url = 2;
      case 2: {
        if (tag == 18) {
         parse_gcs_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcs_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcs_url().data(), this->gcs_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.gcs_url"));
        } else {
          goto handle_unusual;
        }
        goto after_source_repository;
        break;
      }

      // optional .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source_repository()));
        } else {
          goto handle_unusual;
        }
       after_source_repository:
        if (input->ExpectTag(34)) goto parse_pubsub_trigger;
        break;
      }

      // optional string pubsub_trigger = 4;
      case 4: {
        if (tag == 34) {
         parse_pubsub_trigger:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubsub_trigger()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pubsub_trigger().data(), this->pubsub_trigger().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger"));
        } else {
          goto handle_unusual;
        }
        goto after_https_trigger;
        break;
      }

      // optional string gcs_trigger = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcs_trigger()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcs_trigger().data(), this->gcs_trigger().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.gcs_trigger"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_https_trigger;
        break;
      }

      // optional .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
      case 6: {
        if (tag == 50) {
         parse_https_trigger:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_https_trigger()));
        } else {
          goto handle_unusual;
        }
       after_https_trigger:
        if (input->ExpectTag(56)) goto parse_status;
        break;
      }

      // optional .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
      case 7: {
        if (tag == 56) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::cloud::functions::v1beta2::CloudFunctionStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_latest_operation;
        break;
      }

      // optional string latest_operation = 8;
      case 8: {
        if (tag == 66) {
         parse_latest_operation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latest_operation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latest_operation().data(), this->latest_operation().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.latest_operation"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_entry_point;
        break;
      }

      // optional string entry_point = 9;
      case 9: {
        if (tag == 74) {
         parse_entry_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entry_point()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entry_point().data(), this->entry_point().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.entry_point"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_timeout;
        break;
      }

      // optional .google.protobuf.Duration timeout = 10;
      case 10: {
        if (tag == 82) {
         parse_timeout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_available_memory_mb;
        break;
      }

      // optional int32 available_memory_mb = 11;
      case 11: {
        if (tag == 88) {
         parse_available_memory_mb:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &available_memory_mb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_event_trigger;
        break;
      }

      // optional .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
      case 12: {
        if (tag == 98) {
         parse_event_trigger:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_trigger()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_service_account;
        break;
      }

      // optional string service_account = 13;
      case 13: {
        if (tag == 106) {
         parse_service_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account().data(), this->service_account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CloudFunction.service_account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CloudFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CloudFunction)
  return false;
#undef DO_
}

void CloudFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CloudFunction)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string gcs_url = 2;
  if (has_gcs_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_url().data(), this->gcs_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.gcs_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gcs_url(), output);
  }

  // optional .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
  if (has_source_repository()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *source_code_.source_repository_, output);
  }

  // optional string pubsub_trigger = 4;
  if (has_pubsub_trigger()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_trigger().data(), this->pubsub_trigger().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pubsub_trigger(), output);
  }

  // optional string gcs_trigger = 5;
  if (has_gcs_trigger()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_trigger().data(), this->gcs_trigger().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.gcs_trigger");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gcs_trigger(), output);
  }

  // optional .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
  if (has_https_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *trigger_.https_trigger_, output);
  }

  // optional .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // optional string latest_operation = 8;
  if (this->latest_operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_operation().data(), this->latest_operation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.latest_operation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->latest_operation(), output);
  }

  // optional string entry_point = 9;
  if (this->entry_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_point().data(), this->entry_point().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.entry_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->entry_point(), output);
  }

  // optional .google.protobuf.Duration timeout = 10;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->timeout_, output);
  }

  // optional int32 available_memory_mb = 11;
  if (this->available_memory_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->available_memory_mb(), output);
  }

  // optional .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
  if (has_event_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *trigger_.event_trigger_, output);
  }

  // optional string service_account = 13;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), this->service_account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.service_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->service_account(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CloudFunction)
}

::google::protobuf::uint8* CloudFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CloudFunction)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string gcs_url = 2;
  if (has_gcs_url()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_url().data(), this->gcs_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.gcs_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gcs_url(), target);
  }

  // optional .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
  if (has_source_repository()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *source_code_.source_repository_, false, target);
  }

  // optional string pubsub_trigger = 4;
  if (has_pubsub_trigger()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_trigger().data(), this->pubsub_trigger().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pubsub_trigger(), target);
  }

  // optional string gcs_trigger = 5;
  if (has_gcs_trigger()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_trigger().data(), this->gcs_trigger().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.gcs_trigger");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gcs_trigger(), target);
  }

  // optional .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
  if (has_https_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *trigger_.https_trigger_, false, target);
  }

  // optional .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // optional string latest_operation = 8;
  if (this->latest_operation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latest_operation().data(), this->latest_operation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.latest_operation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->latest_operation(), target);
  }

  // optional string entry_point = 9;
  if (this->entry_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entry_point().data(), this->entry_point().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.entry_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entry_point(), target);
  }

  // optional .google.protobuf.Duration timeout = 10;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->timeout_, false, target);
  }

  // optional int32 available_memory_mb = 11;
  if (this->available_memory_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->available_memory_mb(), target);
  }

  // optional .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
  if (has_event_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *trigger_.event_trigger_, false, target);
  }

  // optional string service_account = 13;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), this->service_account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CloudFunction.service_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->service_account(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CloudFunction)
  return target;
}

size_t CloudFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CloudFunction)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional string latest_operation = 8;
  if (this->latest_operation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latest_operation());
  }

  // optional string entry_point = 9;
  if (this->entry_point().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entry_point());
  }

  // optional .google.protobuf.Duration timeout = 10;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timeout_);
  }

  // optional int32 available_memory_mb = 11;
  if (this->available_memory_mb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->available_memory_mb());
  }

  // optional string service_account = 13;
  if (this->service_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account());
  }

  switch (source_code_case()) {
    // optional string gcs_url = 2;
    case kGcsUrl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gcs_url());
      break;
    }
    // optional .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
    case kSourceRepository: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *source_code_.source_repository_);
      break;
    }
    case SOURCE_CODE_NOT_SET: {
      break;
    }
  }
  switch (trigger_case()) {
    // optional string pubsub_trigger = 4;
    case kPubsubTrigger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pubsub_trigger());
      break;
    }
    // optional string gcs_trigger = 5;
    case kGcsTrigger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gcs_trigger());
      break;
    }
    // optional .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
    case kHttpsTrigger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *trigger_.https_trigger_);
      break;
    }
    // optional .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
    case kEventTrigger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *trigger_.event_trigger_);
      break;
    }
    case TRIGGER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloudFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CloudFunction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CloudFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CloudFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CloudFunction)
    UnsafeMergeFrom(*source);
  }
}

void CloudFunction::MergeFrom(const CloudFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CloudFunction)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CloudFunction::UnsafeMergeFrom(const CloudFunction& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.source_code_case()) {
    case kGcsUrl: {
      set_gcs_url(from.gcs_url());
      break;
    }
    case kSourceRepository: {
      mutable_source_repository()->::google::cloud::functions::v1beta2::SourceRepository::MergeFrom(from.source_repository());
      break;
    }
    case SOURCE_CODE_NOT_SET: {
      break;
    }
  }
  switch (from.trigger_case()) {
    case kPubsubTrigger: {
      set_pubsub_trigger(from.pubsub_trigger());
      break;
    }
    case kGcsTrigger: {
      set_gcs_trigger(from.gcs_trigger());
      break;
    }
    case kHttpsTrigger: {
      mutable_https_trigger()->::google::cloud::functions::v1beta2::HTTPSTrigger::MergeFrom(from.https_trigger());
      break;
    }
    case kEventTrigger: {
      mutable_event_trigger()->::google::cloud::functions::v1beta2::EventTrigger::MergeFrom(from.event_trigger());
      break;
    }
    case TRIGGER_NOT_SET: {
      break;
    }
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.latest_operation().size() > 0) {

    latest_operation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_operation_);
  }
  if (from.entry_point().size() > 0) {

    entry_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entry_point_);
  }
  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  if (from.available_memory_mb() != 0) {
    set_available_memory_mb(from.available_memory_mb());
  }
  if (from.service_account().size() > 0) {

    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
}

void CloudFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CloudFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudFunction::CopyFrom(const CloudFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CloudFunction)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CloudFunction::IsInitialized() const {

  return true;
}

void CloudFunction::Swap(CloudFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudFunction::InternalSwap(CloudFunction* other) {
  name_.Swap(&other->name_);
  std::swap(status_, other->status_);
  latest_operation_.Swap(&other->latest_operation_);
  entry_point_.Swap(&other->entry_point_);
  std::swap(timeout_, other->timeout_);
  std::swap(available_memory_mb_, other->available_memory_mb_);
  service_account_.Swap(&other->service_account_);
  std::swap(source_code_, other->source_code_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(trigger_, other->trigger_);
  std::swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloudFunction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CloudFunction_descriptor_;
  metadata.reflection = CloudFunction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloudFunction

// optional string name = 1;
void CloudFunction::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CloudFunction::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.name)
}
void CloudFunction::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CloudFunction.name)
}
void CloudFunction::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CloudFunction.name)
}
::std::string* CloudFunction::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloudFunction::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.name)
}

// optional string gcs_url = 2;
bool CloudFunction::has_gcs_url() const {
  return source_code_case() == kGcsUrl;
}
void CloudFunction::set_has_gcs_url() {
  _oneof_case_[0] = kGcsUrl;
}
void CloudFunction::clear_gcs_url() {
  if (has_gcs_url()) {
    source_code_.gcs_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_source_code();
  }
}
const ::std::string& CloudFunction::gcs_url() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
  if (has_gcs_url()) {
    return source_code_.gcs_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void CloudFunction::set_gcs_url(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
  if (!has_gcs_url()) {
    clear_source_code();
    set_has_gcs_url();
    source_code_.gcs_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_code_.gcs_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
}
void CloudFunction::set_gcs_url(const char* value) {
  if (!has_gcs_url()) {
    clear_source_code();
    set_has_gcs_url();
    source_code_.gcs_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_code_.gcs_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
}
void CloudFunction::set_gcs_url(const char* value, size_t size) {
  if (!has_gcs_url()) {
    clear_source_code();
    set_has_gcs_url();
    source_code_.gcs_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  source_code_.gcs_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
}
::std::string* CloudFunction::mutable_gcs_url() {
  if (!has_gcs_url()) {
    clear_source_code();
    set_has_gcs_url();
    source_code_.gcs_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
  return source_code_.gcs_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloudFunction::release_gcs_url() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
  if (has_gcs_url()) {
    clear_has_source_code();
    return source_code_.gcs_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void CloudFunction::set_allocated_gcs_url(::std::string* gcs_url) {
  if (!has_gcs_url()) {
    source_code_.gcs_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_source_code();
  if (gcs_url != NULL) {
    set_has_gcs_url();
    source_code_.gcs_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        gcs_url);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.gcs_url)
}

// optional .google.cloud.functions.v1beta2.SourceRepository source_repository = 3;
bool CloudFunction::has_source_repository() const {
  return source_code_case() == kSourceRepository;
}
void CloudFunction::set_has_source_repository() {
  _oneof_case_[0] = kSourceRepository;
}
void CloudFunction::clear_source_repository() {
  if (has_source_repository()) {
    delete source_code_.source_repository_;
    clear_has_source_code();
  }
}
 const ::google::cloud::functions::v1beta2::SourceRepository& CloudFunction::source_repository() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.source_repository)
  return has_source_repository()
      ? *source_code_.source_repository_
      : ::google::cloud::functions::v1beta2::SourceRepository::default_instance();
}
::google::cloud::functions::v1beta2::SourceRepository* CloudFunction::mutable_source_repository() {
  if (!has_source_repository()) {
    clear_source_code();
    set_has_source_repository();
    source_code_.source_repository_ = new ::google::cloud::functions::v1beta2::SourceRepository;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.source_repository)
  return source_code_.source_repository_;
}
::google::cloud::functions::v1beta2::SourceRepository* CloudFunction::release_source_repository() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.source_repository)
  if (has_source_repository()) {
    clear_has_source_code();
    ::google::cloud::functions::v1beta2::SourceRepository* temp = source_code_.source_repository_;
    source_code_.source_repository_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CloudFunction::set_allocated_source_repository(::google::cloud::functions::v1beta2::SourceRepository* source_repository) {
  clear_source_code();
  if (source_repository) {
    set_has_source_repository();
    source_code_.source_repository_ = source_repository;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.source_repository)
}

// optional string pubsub_trigger = 4;
bool CloudFunction::has_pubsub_trigger() const {
  return trigger_case() == kPubsubTrigger;
}
void CloudFunction::set_has_pubsub_trigger() {
  _oneof_case_[1] = kPubsubTrigger;
}
void CloudFunction::clear_pubsub_trigger() {
  if (has_pubsub_trigger()) {
    trigger_.pubsub_trigger_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_trigger();
  }
}
const ::std::string& CloudFunction::pubsub_trigger() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
  if (has_pubsub_trigger()) {
    return trigger_.pubsub_trigger_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void CloudFunction::set_pubsub_trigger(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
  if (!has_pubsub_trigger()) {
    clear_trigger();
    set_has_pubsub_trigger();
    trigger_.pubsub_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  trigger_.pubsub_trigger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
}
void CloudFunction::set_pubsub_trigger(const char* value) {
  if (!has_pubsub_trigger()) {
    clear_trigger();
    set_has_pubsub_trigger();
    trigger_.pubsub_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  trigger_.pubsub_trigger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
}
void CloudFunction::set_pubsub_trigger(const char* value, size_t size) {
  if (!has_pubsub_trigger()) {
    clear_trigger();
    set_has_pubsub_trigger();
    trigger_.pubsub_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  trigger_.pubsub_trigger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
}
::std::string* CloudFunction::mutable_pubsub_trigger() {
  if (!has_pubsub_trigger()) {
    clear_trigger();
    set_has_pubsub_trigger();
    trigger_.pubsub_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
  return trigger_.pubsub_trigger_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloudFunction::release_pubsub_trigger() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
  if (has_pubsub_trigger()) {
    clear_has_trigger();
    return trigger_.pubsub_trigger_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void CloudFunction::set_allocated_pubsub_trigger(::std::string* pubsub_trigger) {
  if (!has_pubsub_trigger()) {
    trigger_.pubsub_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_trigger();
  if (pubsub_trigger != NULL) {
    set_has_pubsub_trigger();
    trigger_.pubsub_trigger_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        pubsub_trigger);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.pubsub_trigger)
}

// optional string gcs_trigger = 5;
bool CloudFunction::has_gcs_trigger() const {
  return trigger_case() == kGcsTrigger;
}
void CloudFunction::set_has_gcs_trigger() {
  _oneof_case_[1] = kGcsTrigger;
}
void CloudFunction::clear_gcs_trigger() {
  if (has_gcs_trigger()) {
    trigger_.gcs_trigger_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_trigger();
  }
}
const ::std::string& CloudFunction::gcs_trigger() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
  if (has_gcs_trigger()) {
    return trigger_.gcs_trigger_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void CloudFunction::set_gcs_trigger(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
  if (!has_gcs_trigger()) {
    clear_trigger();
    set_has_gcs_trigger();
    trigger_.gcs_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  trigger_.gcs_trigger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
}
void CloudFunction::set_gcs_trigger(const char* value) {
  if (!has_gcs_trigger()) {
    clear_trigger();
    set_has_gcs_trigger();
    trigger_.gcs_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  trigger_.gcs_trigger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
}
void CloudFunction::set_gcs_trigger(const char* value, size_t size) {
  if (!has_gcs_trigger()) {
    clear_trigger();
    set_has_gcs_trigger();
    trigger_.gcs_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  trigger_.gcs_trigger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
}
::std::string* CloudFunction::mutable_gcs_trigger() {
  if (!has_gcs_trigger()) {
    clear_trigger();
    set_has_gcs_trigger();
    trigger_.gcs_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
  return trigger_.gcs_trigger_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloudFunction::release_gcs_trigger() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
  if (has_gcs_trigger()) {
    clear_has_trigger();
    return trigger_.gcs_trigger_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void CloudFunction::set_allocated_gcs_trigger(::std::string* gcs_trigger) {
  if (!has_gcs_trigger()) {
    trigger_.gcs_trigger_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_trigger();
  if (gcs_trigger != NULL) {
    set_has_gcs_trigger();
    trigger_.gcs_trigger_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        gcs_trigger);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.gcs_trigger)
}

// optional .google.cloud.functions.v1beta2.HTTPSTrigger https_trigger = 6;
bool CloudFunction::has_https_trigger() const {
  return trigger_case() == kHttpsTrigger;
}
void CloudFunction::set_has_https_trigger() {
  _oneof_case_[1] = kHttpsTrigger;
}
void CloudFunction::clear_https_trigger() {
  if (has_https_trigger()) {
    delete trigger_.https_trigger_;
    clear_has_trigger();
  }
}
 const ::google::cloud::functions::v1beta2::HTTPSTrigger& CloudFunction::https_trigger() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.https_trigger)
  return has_https_trigger()
      ? *trigger_.https_trigger_
      : ::google::cloud::functions::v1beta2::HTTPSTrigger::default_instance();
}
::google::cloud::functions::v1beta2::HTTPSTrigger* CloudFunction::mutable_https_trigger() {
  if (!has_https_trigger()) {
    clear_trigger();
    set_has_https_trigger();
    trigger_.https_trigger_ = new ::google::cloud::functions::v1beta2::HTTPSTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.https_trigger)
  return trigger_.https_trigger_;
}
::google::cloud::functions::v1beta2::HTTPSTrigger* CloudFunction::release_https_trigger() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.https_trigger)
  if (has_https_trigger()) {
    clear_has_trigger();
    ::google::cloud::functions::v1beta2::HTTPSTrigger* temp = trigger_.https_trigger_;
    trigger_.https_trigger_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CloudFunction::set_allocated_https_trigger(::google::cloud::functions::v1beta2::HTTPSTrigger* https_trigger) {
  clear_trigger();
  if (https_trigger) {
    set_has_https_trigger();
    trigger_.https_trigger_ = https_trigger;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.https_trigger)
}

// optional .google.cloud.functions.v1beta2.EventTrigger event_trigger = 12;
bool CloudFunction::has_event_trigger() const {
  return trigger_case() == kEventTrigger;
}
void CloudFunction::set_has_event_trigger() {
  _oneof_case_[1] = kEventTrigger;
}
void CloudFunction::clear_event_trigger() {
  if (has_event_trigger()) {
    delete trigger_.event_trigger_;
    clear_has_trigger();
  }
}
 const ::google::cloud::functions::v1beta2::EventTrigger& CloudFunction::event_trigger() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.event_trigger)
  return has_event_trigger()
      ? *trigger_.event_trigger_
      : ::google::cloud::functions::v1beta2::EventTrigger::default_instance();
}
::google::cloud::functions::v1beta2::EventTrigger* CloudFunction::mutable_event_trigger() {
  if (!has_event_trigger()) {
    clear_trigger();
    set_has_event_trigger();
    trigger_.event_trigger_ = new ::google::cloud::functions::v1beta2::EventTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.event_trigger)
  return trigger_.event_trigger_;
}
::google::cloud::functions::v1beta2::EventTrigger* CloudFunction::release_event_trigger() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.event_trigger)
  if (has_event_trigger()) {
    clear_has_trigger();
    ::google::cloud::functions::v1beta2::EventTrigger* temp = trigger_.event_trigger_;
    trigger_.event_trigger_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CloudFunction::set_allocated_event_trigger(::google::cloud::functions::v1beta2::EventTrigger* event_trigger) {
  clear_trigger();
  if (event_trigger) {
    set_has_event_trigger();
    trigger_.event_trigger_ = event_trigger;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.event_trigger)
}

// optional .google.cloud.functions.v1beta2.CloudFunctionStatus status = 7;
void CloudFunction::clear_status() {
  status_ = 0;
}
::google::cloud::functions::v1beta2::CloudFunctionStatus CloudFunction::status() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.status)
  return static_cast< ::google::cloud::functions::v1beta2::CloudFunctionStatus >(status_);
}
void CloudFunction::set_status(::google::cloud::functions::v1beta2::CloudFunctionStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.status)
}

// optional string latest_operation = 8;
void CloudFunction::clear_latest_operation() {
  latest_operation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CloudFunction::latest_operation() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.latest_operation)
  return latest_operation_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_latest_operation(const ::std::string& value) {
  
  latest_operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.latest_operation)
}
void CloudFunction::set_latest_operation(const char* value) {
  
  latest_operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CloudFunction.latest_operation)
}
void CloudFunction::set_latest_operation(const char* value, size_t size) {
  
  latest_operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CloudFunction.latest_operation)
}
::std::string* CloudFunction::mutable_latest_operation() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.latest_operation)
  return latest_operation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloudFunction::release_latest_operation() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.latest_operation)
  
  return latest_operation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_allocated_latest_operation(::std::string* latest_operation) {
  if (latest_operation != NULL) {
    
  } else {
    
  }
  latest_operation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latest_operation);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.latest_operation)
}

// optional string entry_point = 9;
void CloudFunction::clear_entry_point() {
  entry_point_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CloudFunction::entry_point() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.entry_point)
  return entry_point_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_entry_point(const ::std::string& value) {
  
  entry_point_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.entry_point)
}
void CloudFunction::set_entry_point(const char* value) {
  
  entry_point_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CloudFunction.entry_point)
}
void CloudFunction::set_entry_point(const char* value, size_t size) {
  
  entry_point_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CloudFunction.entry_point)
}
::std::string* CloudFunction::mutable_entry_point() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.entry_point)
  return entry_point_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloudFunction::release_entry_point() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.entry_point)
  
  return entry_point_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_allocated_entry_point(::std::string* entry_point) {
  if (entry_point != NULL) {
    
  } else {
    
  }
  entry_point_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entry_point);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.entry_point)
}

// optional .google.protobuf.Duration timeout = 10;
bool CloudFunction::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
void CloudFunction::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;
}
const ::google::protobuf::Duration& CloudFunction::timeout() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.timeout)
  return timeout_ != NULL ? *timeout_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* CloudFunction::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.timeout)
  return timeout_;
}
::google::protobuf::Duration* CloudFunction::release_timeout() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.timeout)
  
  ::google::protobuf::Duration* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
void CloudFunction::set_allocated_timeout(::google::protobuf::Duration* timeout) {
  delete timeout_;
  if (timeout != NULL && timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_timeout = new ::google::protobuf::Duration;
    new_timeout->CopyFrom(*timeout);
    timeout = new_timeout;
  }
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.timeout)
}

// optional int32 available_memory_mb = 11;
void CloudFunction::clear_available_memory_mb() {
  available_memory_mb_ = 0;
}
::google::protobuf::int32 CloudFunction::available_memory_mb() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.available_memory_mb)
  return available_memory_mb_;
}
void CloudFunction::set_available_memory_mb(::google::protobuf::int32 value) {
  
  available_memory_mb_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.available_memory_mb)
}

// optional string service_account = 13;
void CloudFunction::clear_service_account() {
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CloudFunction::service_account() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CloudFunction.service_account)
  return service_account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_service_account(const ::std::string& value) {
  
  service_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CloudFunction.service_account)
}
void CloudFunction::set_service_account(const char* value) {
  
  service_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CloudFunction.service_account)
}
void CloudFunction::set_service_account(const char* value, size_t size) {
  
  service_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CloudFunction.service_account)
}
::std::string* CloudFunction::mutable_service_account() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CloudFunction.service_account)
  return service_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloudFunction::release_service_account() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CloudFunction.service_account)
  
  return service_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloudFunction::set_allocated_service_account(::std::string* service_account) {
  if (service_account != NULL) {
    
  } else {
    
  }
  service_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_account);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CloudFunction.service_account)
}

bool CloudFunction::has_source_code() const {
  return source_code_case() != SOURCE_CODE_NOT_SET;
}
void CloudFunction::clear_has_source_code() {
  _oneof_case_[0] = SOURCE_CODE_NOT_SET;
}
bool CloudFunction::has_trigger() const {
  return trigger_case() != TRIGGER_NOT_SET;
}
void CloudFunction::clear_has_trigger() {
  _oneof_case_[1] = TRIGGER_NOT_SET;
}
CloudFunction::SourceCodeCase CloudFunction::source_code_case() const {
  return CloudFunction::SourceCodeCase(_oneof_case_[0]);
}
CloudFunction::TriggerCase CloudFunction::trigger_case() const {
  return CloudFunction::TriggerCase(_oneof_case_[1]);
}
inline const CloudFunction* CloudFunction::internal_default_instance() {
  return &CloudFunction_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPSTrigger::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPSTrigger::HTTPSTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.HTTPSTrigger)
}

void HTTPSTrigger::InitAsDefaultInstance() {
}

HTTPSTrigger::HTTPSTrigger(const HTTPSTrigger& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.HTTPSTrigger)
}

void HTTPSTrigger::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HTTPSTrigger::~HTTPSTrigger() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.HTTPSTrigger)
  SharedDtor();
}

void HTTPSTrigger::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HTTPSTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HTTPSTrigger::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HTTPSTrigger_descriptor_;
}

const HTTPSTrigger& HTTPSTrigger::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HTTPSTrigger> HTTPSTrigger_default_instance_;

HTTPSTrigger* HTTPSTrigger::New(::google::protobuf::Arena* arena) const {
  HTTPSTrigger* n = new HTTPSTrigger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HTTPSTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HTTPSTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.HTTPSTrigger.url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.HTTPSTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.HTTPSTrigger)
  return false;
#undef DO_
}

void HTTPSTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  // optional string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.HTTPSTrigger.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.HTTPSTrigger)
}

::google::protobuf::uint8* HTTPSTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  // optional string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.HTTPSTrigger.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.HTTPSTrigger)
  return target;
}

size_t HTTPSTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  size_t total_size = 0;

  // optional string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HTTPSTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HTTPSTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPSTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.HTTPSTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.HTTPSTrigger)
    UnsafeMergeFrom(*source);
  }
}

void HTTPSTrigger::MergeFrom(const HTTPSTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HTTPSTrigger::UnsafeMergeFrom(const HTTPSTrigger& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void HTTPSTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTTPSTrigger::CopyFrom(const HTTPSTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.HTTPSTrigger)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HTTPSTrigger::IsInitialized() const {

  return true;
}

void HTTPSTrigger::Swap(HTTPSTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTTPSTrigger::InternalSwap(HTTPSTrigger* other) {
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HTTPSTrigger::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HTTPSTrigger_descriptor_;
  metadata.reflection = HTTPSTrigger_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HTTPSTrigger

// optional string url = 1;
void HTTPSTrigger::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HTTPSTrigger::url() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.HTTPSTrigger.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HTTPSTrigger::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.HTTPSTrigger.url)
}
void HTTPSTrigger::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.HTTPSTrigger.url)
}
void HTTPSTrigger::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.HTTPSTrigger.url)
}
::std::string* HTTPSTrigger::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.HTTPSTrigger.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HTTPSTrigger::release_url() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.HTTPSTrigger.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HTTPSTrigger::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.HTTPSTrigger.url)
}

inline const HTTPSTrigger* HTTPSTrigger::internal_default_instance() {
  return &HTTPSTrigger_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventTrigger::kEventTypeFieldNumber;
const int EventTrigger::kResourceFieldNumber;
const int EventTrigger::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventTrigger::EventTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.EventTrigger)
}

void EventTrigger::InitAsDefaultInstance() {
}

EventTrigger::EventTrigger(const EventTrigger& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.EventTrigger)
}

void EventTrigger::SharedCtor() {
  event_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EventTrigger::~EventTrigger() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.EventTrigger)
  SharedDtor();
}

void EventTrigger::SharedDtor() {
  event_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventTrigger::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventTrigger_descriptor_;
}

const EventTrigger& EventTrigger::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EventTrigger> EventTrigger_default_instance_;

EventTrigger* EventTrigger::New(::google::protobuf::Arena* arena) const {
  EventTrigger* n = new EventTrigger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.EventTrigger)
  event_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EventTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.EventTrigger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_type().data(), this->event_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.EventTrigger.event_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resource;
        break;
      }

      // optional string resource = 2;
      case 2: {
        if (tag == 18) {
         parse_resource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource().data(), this->resource().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.EventTrigger.resource"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_path;
        break;
      }

      // optional string path = 3;
      case 3: {
        if (tag == 26) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.EventTrigger.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.EventTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.EventTrigger)
  return false;
#undef DO_
}

void EventTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.EventTrigger)
  // optional string event_type = 1;
  if (this->event_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_type().data(), this->event_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.event_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_type(), output);
  }

  // optional string resource = 2;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), this->resource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.resource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resource(), output);
  }

  // optional string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.EventTrigger)
}

::google::protobuf::uint8* EventTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.EventTrigger)
  // optional string event_type = 1;
  if (this->event_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_type().data(), this->event_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.event_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_type(), target);
  }

  // optional string resource = 2;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), this->resource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.resource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resource(), target);
  }

  // optional string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.EventTrigger.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.EventTrigger)
  return target;
}

size_t EventTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.EventTrigger)
  size_t total_size = 0;

  // optional string event_type = 1;
  if (this->event_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_type());
  }

  // optional string resource = 2;
  if (this->resource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource());
  }

  // optional string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.EventTrigger)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EventTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.EventTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.EventTrigger)
    UnsafeMergeFrom(*source);
  }
}

void EventTrigger::MergeFrom(const EventTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.EventTrigger)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EventTrigger::UnsafeMergeFrom(const EventTrigger& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.event_type().size() > 0) {

    event_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_type_);
  }
  if (from.resource().size() > 0) {

    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void EventTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.EventTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTrigger::CopyFrom(const EventTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.EventTrigger)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EventTrigger::IsInitialized() const {

  return true;
}

void EventTrigger::Swap(EventTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventTrigger::InternalSwap(EventTrigger* other) {
  event_type_.Swap(&other->event_type_);
  resource_.Swap(&other->resource_);
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventTrigger::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventTrigger_descriptor_;
  metadata.reflection = EventTrigger_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EventTrigger

// optional string event_type = 1;
void EventTrigger::clear_event_type() {
  event_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventTrigger::event_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.EventTrigger.event_type)
  return event_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventTrigger::set_event_type(const ::std::string& value) {
  
  event_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.EventTrigger.event_type)
}
void EventTrigger::set_event_type(const char* value) {
  
  event_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.EventTrigger.event_type)
}
void EventTrigger::set_event_type(const char* value, size_t size) {
  
  event_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.EventTrigger.event_type)
}
::std::string* EventTrigger::mutable_event_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.EventTrigger.event_type)
  return event_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventTrigger::release_event_type() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.EventTrigger.event_type)
  
  return event_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventTrigger::set_allocated_event_type(::std::string* event_type) {
  if (event_type != NULL) {
    
  } else {
    
  }
  event_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.EventTrigger.event_type)
}

// optional string resource = 2;
void EventTrigger::clear_resource() {
  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventTrigger::resource() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.EventTrigger.resource)
  return resource_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventTrigger::set_resource(const ::std::string& value) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.EventTrigger.resource)
}
void EventTrigger::set_resource(const char* value) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.EventTrigger.resource)
}
void EventTrigger::set_resource(const char* value, size_t size) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.EventTrigger.resource)
}
::std::string* EventTrigger::mutable_resource() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.EventTrigger.resource)
  return resource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventTrigger::release_resource() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.EventTrigger.resource)
  
  return resource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventTrigger::set_allocated_resource(::std::string* resource) {
  if (resource != NULL) {
    
  } else {
    
  }
  resource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.EventTrigger.resource)
}

// optional string path = 3;
void EventTrigger::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventTrigger::path() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.EventTrigger.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventTrigger::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.EventTrigger.path)
}
void EventTrigger::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.EventTrigger.path)
}
void EventTrigger::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.EventTrigger.path)
}
::std::string* EventTrigger::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.EventTrigger.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventTrigger::release_path() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.EventTrigger.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventTrigger::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.EventTrigger.path)
}

inline const EventTrigger* EventTrigger::internal_default_instance() {
  return &EventTrigger_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceRepository::kRepositoryUrlFieldNumber;
const int SourceRepository::kSourcePathFieldNumber;
const int SourceRepository::kBranchFieldNumber;
const int SourceRepository::kTagFieldNumber;
const int SourceRepository::kRevisionFieldNumber;
const int SourceRepository::kDeployedRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceRepository::SourceRepository()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.SourceRepository)
}

void SourceRepository::InitAsDefaultInstance() {
  SourceRepository_default_oneof_instance_->branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  SourceRepository_default_oneof_instance_->tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  SourceRepository_default_oneof_instance_->revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SourceRepository::SourceRepository(const SourceRepository& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.SourceRepository)
}

void SourceRepository::SharedCtor() {
  repository_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deployed_revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
  _cached_size_ = 0;
}

SourceRepository::~SourceRepository() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.SourceRepository)
  SharedDtor();
}

void SourceRepository::SharedDtor() {
  repository_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deployed_revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_version()) {
    clear_version();
  }
}

void SourceRepository::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceRepository::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SourceRepository_descriptor_;
}

const SourceRepository& SourceRepository::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SourceRepository> SourceRepository_default_instance_;

SourceRepository* SourceRepository::New(::google::protobuf::Arena* arena) const {
  SourceRepository* n = new SourceRepository;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceRepository::clear_version() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.functions.v1beta2.SourceRepository)
  switch (version_case()) {
    case kBranch: {
      version_.branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTag: {
      version_.tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRevision: {
      version_.revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VERSION_NOT_SET;
}


void SourceRepository::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.SourceRepository)
  repository_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deployed_revision_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_version();
}

bool SourceRepository::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.SourceRepository)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string repository_url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repository_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repository_url().data(), this->repository_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.repository_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_source_path;
        break;
      }

      // optional string source_path = 2;
      case 2: {
        if (tag == 18) {
         parse_source_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_path().data(), this->source_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.source_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_branch;
        break;
      }

      // optional string branch = 3;
      case 3: {
        if (tag == 26) {
         parse_branch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch().data(), this->branch().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.branch"));
        } else {
          goto handle_unusual;
        }
        goto after_revision;
        break;
      }

      // optional string tag = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.tag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_revision;
        break;
      }

      // optional string revision = 5;
      case 5: {
        if (tag == 42) {
         parse_revision:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revision()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->revision().data(), this->revision().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.revision"));
        } else {
          goto handle_unusual;
        }
       after_revision:
        if (input->ExpectTag(50)) goto parse_deployed_revision;
        break;
      }

      // optional string deployed_revision = 6;
      case 6: {
        if (tag == 50) {
         parse_deployed_revision:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deployed_revision()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deployed_revision().data(), this->deployed_revision().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.SourceRepository.deployed_revision"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.SourceRepository)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.SourceRepository)
  return false;
#undef DO_
}

void SourceRepository::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.SourceRepository)
  // optional string repository_url = 1;
  if (this->repository_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_url().data(), this->repository_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.repository_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->repository_url(), output);
  }

  // optional string source_path = 2;
  if (this->source_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_path().data(), this->source_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.source_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_path(), output);
  }

  // optional string branch = 3;
  if (has_branch()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), this->branch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->branch(), output);
  }

  // optional string tag = 4;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tag(), output);
  }

  // optional string revision = 5;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision().data(), this->revision().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->revision(), output);
  }

  // optional string deployed_revision = 6;
  if (this->deployed_revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deployed_revision().data(), this->deployed_revision().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.deployed_revision");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->deployed_revision(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.SourceRepository)
}

::google::protobuf::uint8* SourceRepository::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.SourceRepository)
  // optional string repository_url = 1;
  if (this->repository_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository_url().data(), this->repository_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.repository_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->repository_url(), target);
  }

  // optional string source_path = 2;
  if (this->source_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_path().data(), this->source_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.source_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_path(), target);
  }

  // optional string branch = 3;
  if (has_branch()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch().data(), this->branch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->branch(), target);
  }

  // optional string tag = 4;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tag(), target);
  }

  // optional string revision = 5;
  if (has_revision()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision().data(), this->revision().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->revision(), target);
  }

  // optional string deployed_revision = 6;
  if (this->deployed_revision().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deployed_revision().data(), this->deployed_revision().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.SourceRepository.deployed_revision");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->deployed_revision(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.SourceRepository)
  return target;
}

size_t SourceRepository::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.SourceRepository)
  size_t total_size = 0;

  // optional string repository_url = 1;
  if (this->repository_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repository_url());
  }

  // optional string source_path = 2;
  if (this->source_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_path());
  }

  // optional string deployed_revision = 6;
  if (this->deployed_revision().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deployed_revision());
  }

  switch (version_case()) {
    // optional string branch = 3;
    case kBranch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch());
      break;
    }
    // optional string tag = 4;
    case kTag: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag());
      break;
    }
    // optional string revision = 5;
    case kRevision: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revision());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceRepository::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.SourceRepository)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SourceRepository* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceRepository>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.SourceRepository)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.SourceRepository)
    UnsafeMergeFrom(*source);
  }
}

void SourceRepository::MergeFrom(const SourceRepository& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.SourceRepository)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SourceRepository::UnsafeMergeFrom(const SourceRepository& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.version_case()) {
    case kBranch: {
      set_branch(from.branch());
      break;
    }
    case kTag: {
      set_tag(from.tag());
      break;
    }
    case kRevision: {
      set_revision(from.revision());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  if (from.repository_url().size() > 0) {

    repository_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_url_);
  }
  if (from.source_path().size() > 0) {

    source_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_path_);
  }
  if (from.deployed_revision().size() > 0) {

    deployed_revision_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deployed_revision_);
  }
}

void SourceRepository::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.SourceRepository)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceRepository::CopyFrom(const SourceRepository& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.SourceRepository)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SourceRepository::IsInitialized() const {

  return true;
}

void SourceRepository::Swap(SourceRepository* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceRepository::InternalSwap(SourceRepository* other) {
  repository_url_.Swap(&other->repository_url_);
  source_path_.Swap(&other->source_path_);
  deployed_revision_.Swap(&other->deployed_revision_);
  std::swap(version_, other->version_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceRepository::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SourceRepository_descriptor_;
  metadata.reflection = SourceRepository_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceRepository

// optional string repository_url = 1;
void SourceRepository::clear_repository_url() {
  repository_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceRepository::repository_url() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.SourceRepository.repository_url)
  return repository_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceRepository::set_repository_url(const ::std::string& value) {
  
  repository_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.repository_url)
}
void SourceRepository::set_repository_url(const char* value) {
  
  repository_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.SourceRepository.repository_url)
}
void SourceRepository::set_repository_url(const char* value, size_t size) {
  
  repository_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.SourceRepository.repository_url)
}
::std::string* SourceRepository::mutable_repository_url() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.SourceRepository.repository_url)
  return repository_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceRepository::release_repository_url() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.SourceRepository.repository_url)
  
  return repository_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceRepository::set_allocated_repository_url(::std::string* repository_url) {
  if (repository_url != NULL) {
    
  } else {
    
  }
  repository_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), repository_url);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.SourceRepository.repository_url)
}

// optional string source_path = 2;
void SourceRepository::clear_source_path() {
  source_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceRepository::source_path() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.SourceRepository.source_path)
  return source_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceRepository::set_source_path(const ::std::string& value) {
  
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.source_path)
}
void SourceRepository::set_source_path(const char* value) {
  
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.SourceRepository.source_path)
}
void SourceRepository::set_source_path(const char* value, size_t size) {
  
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.SourceRepository.source_path)
}
::std::string* SourceRepository::mutable_source_path() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.SourceRepository.source_path)
  return source_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceRepository::release_source_path() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.SourceRepository.source_path)
  
  return source_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceRepository::set_allocated_source_path(::std::string* source_path) {
  if (source_path != NULL) {
    
  } else {
    
  }
  source_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_path);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.SourceRepository.source_path)
}

// optional string branch = 3;
bool SourceRepository::has_branch() const {
  return version_case() == kBranch;
}
void SourceRepository::set_has_branch() {
  _oneof_case_[0] = kBranch;
}
void SourceRepository::clear_branch() {
  if (has_branch()) {
    version_.branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_version();
  }
}
const ::std::string& SourceRepository::branch() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.SourceRepository.branch)
  if (has_branch()) {
    return version_.branch_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void SourceRepository::set_branch(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.branch)
  if (!has_branch()) {
    clear_version();
    set_has_branch();
    version_.branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.branch)
}
void SourceRepository::set_branch(const char* value) {
  if (!has_branch()) {
    clear_version();
    set_has_branch();
    version_.branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.SourceRepository.branch)
}
void SourceRepository::set_branch(const char* value, size_t size) {
  if (!has_branch()) {
    clear_version();
    set_has_branch();
    version_.branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.branch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.SourceRepository.branch)
}
::std::string* SourceRepository::mutable_branch() {
  if (!has_branch()) {
    clear_version();
    set_has_branch();
    version_.branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.SourceRepository.branch)
  return version_.branch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceRepository::release_branch() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.SourceRepository.branch)
  if (has_branch()) {
    clear_has_version();
    return version_.branch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void SourceRepository::set_allocated_branch(::std::string* branch) {
  if (!has_branch()) {
    version_.branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_version();
  if (branch != NULL) {
    set_has_branch();
    version_.branch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        branch);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.SourceRepository.branch)
}

// optional string tag = 4;
bool SourceRepository::has_tag() const {
  return version_case() == kTag;
}
void SourceRepository::set_has_tag() {
  _oneof_case_[0] = kTag;
}
void SourceRepository::clear_tag() {
  if (has_tag()) {
    version_.tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_version();
  }
}
const ::std::string& SourceRepository::tag() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.SourceRepository.tag)
  if (has_tag()) {
    return version_.tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void SourceRepository::set_tag(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.tag)
  if (!has_tag()) {
    clear_version();
    set_has_tag();
    version_.tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.tag)
}
void SourceRepository::set_tag(const char* value) {
  if (!has_tag()) {
    clear_version();
    set_has_tag();
    version_.tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.SourceRepository.tag)
}
void SourceRepository::set_tag(const char* value, size_t size) {
  if (!has_tag()) {
    clear_version();
    set_has_tag();
    version_.tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.SourceRepository.tag)
}
::std::string* SourceRepository::mutable_tag() {
  if (!has_tag()) {
    clear_version();
    set_has_tag();
    version_.tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.SourceRepository.tag)
  return version_.tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceRepository::release_tag() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.SourceRepository.tag)
  if (has_tag()) {
    clear_has_version();
    return version_.tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void SourceRepository::set_allocated_tag(::std::string* tag) {
  if (!has_tag()) {
    version_.tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_version();
  if (tag != NULL) {
    set_has_tag();
    version_.tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        tag);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.SourceRepository.tag)
}

// optional string revision = 5;
bool SourceRepository::has_revision() const {
  return version_case() == kRevision;
}
void SourceRepository::set_has_revision() {
  _oneof_case_[0] = kRevision;
}
void SourceRepository::clear_revision() {
  if (has_revision()) {
    version_.revision_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_version();
  }
}
const ::std::string& SourceRepository::revision() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.SourceRepository.revision)
  if (has_revision()) {
    return version_.revision_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void SourceRepository::set_revision(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.revision)
  if (!has_revision()) {
    clear_version();
    set_has_revision();
    version_.revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.revision_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.revision)
}
void SourceRepository::set_revision(const char* value) {
  if (!has_revision()) {
    clear_version();
    set_has_revision();
    version_.revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.revision_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.SourceRepository.revision)
}
void SourceRepository::set_revision(const char* value, size_t size) {
  if (!has_revision()) {
    clear_version();
    set_has_revision();
    version_.revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.revision_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.SourceRepository.revision)
}
::std::string* SourceRepository::mutable_revision() {
  if (!has_revision()) {
    clear_version();
    set_has_revision();
    version_.revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.SourceRepository.revision)
  return version_.revision_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceRepository::release_revision() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.SourceRepository.revision)
  if (has_revision()) {
    clear_has_version();
    return version_.revision_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void SourceRepository::set_allocated_revision(::std::string* revision) {
  if (!has_revision()) {
    version_.revision_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_version();
  if (revision != NULL) {
    set_has_revision();
    version_.revision_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        revision);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.SourceRepository.revision)
}

// optional string deployed_revision = 6;
void SourceRepository::clear_deployed_revision() {
  deployed_revision_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceRepository::deployed_revision() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.SourceRepository.deployed_revision)
  return deployed_revision_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceRepository::set_deployed_revision(const ::std::string& value) {
  
  deployed_revision_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.SourceRepository.deployed_revision)
}
void SourceRepository::set_deployed_revision(const char* value) {
  
  deployed_revision_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.SourceRepository.deployed_revision)
}
void SourceRepository::set_deployed_revision(const char* value, size_t size) {
  
  deployed_revision_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.SourceRepository.deployed_revision)
}
::std::string* SourceRepository::mutable_deployed_revision() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.SourceRepository.deployed_revision)
  return deployed_revision_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceRepository::release_deployed_revision() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.SourceRepository.deployed_revision)
  
  return deployed_revision_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceRepository::set_allocated_deployed_revision(::std::string* deployed_revision) {
  if (deployed_revision != NULL) {
    
  } else {
    
  }
  deployed_revision_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deployed_revision);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.SourceRepository.deployed_revision)
}

bool SourceRepository::has_version() const {
  return version_case() != VERSION_NOT_SET;
}
void SourceRepository::clear_has_version() {
  _oneof_case_[0] = VERSION_NOT_SET;
}
SourceRepository::VersionCase SourceRepository::version_case() const {
  return SourceRepository::VersionCase(_oneof_case_[0]);
}
inline const SourceRepository* SourceRepository::internal_default_instance() {
  return &SourceRepository_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFunctionRequest::kLocationFieldNumber;
const int CreateFunctionRequest::kFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFunctionRequest::CreateFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CreateFunctionRequest)
}

void CreateFunctionRequest::InitAsDefaultInstance() {
  function_ = const_cast< ::google::cloud::functions::v1beta2::CloudFunction*>(
      ::google::cloud::functions::v1beta2::CloudFunction::internal_default_instance());
}

CreateFunctionRequest::CreateFunctionRequest(const CreateFunctionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CreateFunctionRequest)
}

void CreateFunctionRequest::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_ = NULL;
  _cached_size_ = 0;
}

CreateFunctionRequest::~CreateFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CreateFunctionRequest)
  SharedDtor();
}

void CreateFunctionRequest::SharedDtor() {
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CreateFunctionRequest_default_instance_.get()) {
    delete function_;
  }
}

void CreateFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateFunctionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateFunctionRequest_descriptor_;
}

const CreateFunctionRequest& CreateFunctionRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateFunctionRequest> CreateFunctionRequest_default_instance_;

CreateFunctionRequest* CreateFunctionRequest::New(::google::protobuf::Arena* arena) const {
  CreateFunctionRequest* n = new CreateFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && function_ != NULL) delete function_;
  function_ = NULL;
}

bool CreateFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string location = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CreateFunctionRequest.location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_function;
        break;
      }

      // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
      case 2: {
        if (tag == 18) {
         parse_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CreateFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CreateFunctionRequest)
  return false;
#undef DO_
}

void CreateFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  // optional string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CreateFunctionRequest.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->location(), output);
  }

  // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->function_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CreateFunctionRequest)
}

::google::protobuf::uint8* CreateFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  // optional string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CreateFunctionRequest.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->location(), target);
  }

  // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->function_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CreateFunctionRequest)
  return target;
}

size_t CreateFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  size_t total_size = 0;

  // optional string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->function_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CreateFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CreateFunctionRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateFunctionRequest::MergeFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateFunctionRequest::UnsafeMergeFrom(const CreateFunctionRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.has_function()) {
    mutable_function()->::google::cloud::functions::v1beta2::CloudFunction::MergeFrom(from.function());
  }
}

void CreateFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFunctionRequest::CopyFrom(const CreateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CreateFunctionRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateFunctionRequest::IsInitialized() const {

  return true;
}

void CreateFunctionRequest::Swap(CreateFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFunctionRequest::InternalSwap(CreateFunctionRequest* other) {
  location_.Swap(&other->location_);
  std::swap(function_, other->function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateFunctionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateFunctionRequest_descriptor_;
  metadata.reflection = CreateFunctionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateFunctionRequest

// optional string location = 1;
void CreateFunctionRequest::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateFunctionRequest::location() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CreateFunctionRequest.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateFunctionRequest::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CreateFunctionRequest.location)
}
void CreateFunctionRequest::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CreateFunctionRequest.location)
}
void CreateFunctionRequest::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CreateFunctionRequest.location)
}
::std::string* CreateFunctionRequest::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CreateFunctionRequest.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateFunctionRequest::release_location() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CreateFunctionRequest.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateFunctionRequest::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CreateFunctionRequest.location)
}

// optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
bool CreateFunctionRequest::has_function() const {
  return this != internal_default_instance() && function_ != NULL;
}
void CreateFunctionRequest::clear_function() {
  if (GetArenaNoVirtual() == NULL && function_ != NULL) delete function_;
  function_ = NULL;
}
const ::google::cloud::functions::v1beta2::CloudFunction& CreateFunctionRequest::function() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CreateFunctionRequest.function)
  return function_ != NULL ? *function_
                         : *::google::cloud::functions::v1beta2::CloudFunction::internal_default_instance();
}
::google::cloud::functions::v1beta2::CloudFunction* CreateFunctionRequest::mutable_function() {
  
  if (function_ == NULL) {
    function_ = new ::google::cloud::functions::v1beta2::CloudFunction;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CreateFunctionRequest.function)
  return function_;
}
::google::cloud::functions::v1beta2::CloudFunction* CreateFunctionRequest::release_function() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CreateFunctionRequest.function)
  
  ::google::cloud::functions::v1beta2::CloudFunction* temp = function_;
  function_ = NULL;
  return temp;
}
void CreateFunctionRequest::set_allocated_function(::google::cloud::functions::v1beta2::CloudFunction* function) {
  delete function_;
  function_ = function;
  if (function) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CreateFunctionRequest.function)
}

inline const CreateFunctionRequest* CreateFunctionRequest::internal_default_instance() {
  return &CreateFunctionRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateFunctionRequest::kNameFieldNumber;
const int UpdateFunctionRequest::kFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateFunctionRequest::UpdateFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.UpdateFunctionRequest)
}

void UpdateFunctionRequest::InitAsDefaultInstance() {
  function_ = const_cast< ::google::cloud::functions::v1beta2::CloudFunction*>(
      ::google::cloud::functions::v1beta2::CloudFunction::internal_default_instance());
}

UpdateFunctionRequest::UpdateFunctionRequest(const UpdateFunctionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.UpdateFunctionRequest)
}

void UpdateFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_ = NULL;
  _cached_size_ = 0;
}

UpdateFunctionRequest::~UpdateFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  SharedDtor();
}

void UpdateFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &UpdateFunctionRequest_default_instance_.get()) {
    delete function_;
  }
}

void UpdateFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFunctionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateFunctionRequest_descriptor_;
}

const UpdateFunctionRequest& UpdateFunctionRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateFunctionRequest> UpdateFunctionRequest_default_instance_;

UpdateFunctionRequest* UpdateFunctionRequest::New(::google::protobuf::Arena* arena) const {
  UpdateFunctionRequest* n = new UpdateFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && function_ != NULL) delete function_;
  function_ = NULL;
}

bool UpdateFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.UpdateFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_function;
        break;
      }

      // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
      case 2: {
        if (tag == 18) {
         parse_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  return false;
#undef DO_
}

void UpdateFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.UpdateFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->function_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.UpdateFunctionRequest)
}

::google::protobuf::uint8* UpdateFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.UpdateFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->function_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  return target;
}

size_t UpdateFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
  if (this->has_function()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->function_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.UpdateFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.UpdateFunctionRequest)
    UnsafeMergeFrom(*source);
  }
}

void UpdateFunctionRequest::MergeFrom(const UpdateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateFunctionRequest::UnsafeMergeFrom(const UpdateFunctionRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_function()) {
    mutable_function()->::google::cloud::functions::v1beta2::CloudFunction::MergeFrom(from.function());
  }
}

void UpdateFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFunctionRequest::CopyFrom(const UpdateFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.UpdateFunctionRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateFunctionRequest::IsInitialized() const {

  return true;
}

void UpdateFunctionRequest::Swap(UpdateFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateFunctionRequest::InternalSwap(UpdateFunctionRequest* other) {
  name_.Swap(&other->name_);
  std::swap(function_, other->function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateFunctionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateFunctionRequest_descriptor_;
  metadata.reflection = UpdateFunctionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateFunctionRequest

// optional string name = 1;
void UpdateFunctionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateFunctionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.UpdateFunctionRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateFunctionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.UpdateFunctionRequest.name)
}
void UpdateFunctionRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.UpdateFunctionRequest.name)
}
void UpdateFunctionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.UpdateFunctionRequest.name)
}
::std::string* UpdateFunctionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.UpdateFunctionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateFunctionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.UpdateFunctionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateFunctionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.UpdateFunctionRequest.name)
}

// optional .google.cloud.functions.v1beta2.CloudFunction function = 2;
bool UpdateFunctionRequest::has_function() const {
  return this != internal_default_instance() && function_ != NULL;
}
void UpdateFunctionRequest::clear_function() {
  if (GetArenaNoVirtual() == NULL && function_ != NULL) delete function_;
  function_ = NULL;
}
const ::google::cloud::functions::v1beta2::CloudFunction& UpdateFunctionRequest::function() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.UpdateFunctionRequest.function)
  return function_ != NULL ? *function_
                         : *::google::cloud::functions::v1beta2::CloudFunction::internal_default_instance();
}
::google::cloud::functions::v1beta2::CloudFunction* UpdateFunctionRequest::mutable_function() {
  
  if (function_ == NULL) {
    function_ = new ::google::cloud::functions::v1beta2::CloudFunction;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.UpdateFunctionRequest.function)
  return function_;
}
::google::cloud::functions::v1beta2::CloudFunction* UpdateFunctionRequest::release_function() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.UpdateFunctionRequest.function)
  
  ::google::cloud::functions::v1beta2::CloudFunction* temp = function_;
  function_ = NULL;
  return temp;
}
void UpdateFunctionRequest::set_allocated_function(::google::cloud::functions::v1beta2::CloudFunction* function) {
  delete function_;
  function_ = function;
  if (function) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.UpdateFunctionRequest.function)
}

inline const UpdateFunctionRequest* UpdateFunctionRequest::internal_default_instance() {
  return &UpdateFunctionRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFunctionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFunctionRequest::GetFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.GetFunctionRequest)
}

void GetFunctionRequest::InitAsDefaultInstance() {
}

GetFunctionRequest::GetFunctionRequest(const GetFunctionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.GetFunctionRequest)
}

void GetFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetFunctionRequest::~GetFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.GetFunctionRequest)
  SharedDtor();
}

void GetFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFunctionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFunctionRequest_descriptor_;
}

const GetFunctionRequest& GetFunctionRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetFunctionRequest> GetFunctionRequest_default_instance_;

GetFunctionRequest* GetFunctionRequest::New(::google::protobuf::Arena* arena) const {
  GetFunctionRequest* n = new GetFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.GetFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.GetFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.GetFunctionRequest)
  return false;
#undef DO_
}

void GetFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.GetFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.GetFunctionRequest)
}

::google::protobuf::uint8* GetFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.GetFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.GetFunctionRequest)
  return target;
}

size_t GetFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.GetFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.GetFunctionRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetFunctionRequest::MergeFrom(const GetFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetFunctionRequest::UnsafeMergeFrom(const GetFunctionRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFunctionRequest::CopyFrom(const GetFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.GetFunctionRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetFunctionRequest::IsInitialized() const {

  return true;
}

void GetFunctionRequest::Swap(GetFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFunctionRequest::InternalSwap(GetFunctionRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFunctionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFunctionRequest_descriptor_;
  metadata.reflection = GetFunctionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFunctionRequest

// optional string name = 1;
void GetFunctionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetFunctionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.GetFunctionRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetFunctionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.GetFunctionRequest.name)
}
void GetFunctionRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.GetFunctionRequest.name)
}
void GetFunctionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.GetFunctionRequest.name)
}
::std::string* GetFunctionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.GetFunctionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetFunctionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.GetFunctionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetFunctionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.GetFunctionRequest.name)
}

inline const GetFunctionRequest* GetFunctionRequest::internal_default_instance() {
  return &GetFunctionRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFunctionsRequest::kLocationFieldNumber;
const int ListFunctionsRequest::kPageSizeFieldNumber;
const int ListFunctionsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFunctionsRequest::ListFunctionsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.ListFunctionsRequest)
}

void ListFunctionsRequest::InitAsDefaultInstance() {
}

ListFunctionsRequest::ListFunctionsRequest(const ListFunctionsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.ListFunctionsRequest)
}

void ListFunctionsRequest::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListFunctionsRequest::~ListFunctionsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.ListFunctionsRequest)
  SharedDtor();
}

void ListFunctionsRequest::SharedDtor() {
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListFunctionsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListFunctionsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListFunctionsRequest_descriptor_;
}

const ListFunctionsRequest& ListFunctionsRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListFunctionsRequest> ListFunctionsRequest_default_instance_;

ListFunctionsRequest* ListFunctionsRequest::New(::google::protobuf::Arena* arena) const {
  ListFunctionsRequest* n = new ListFunctionsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListFunctionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListFunctionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string location = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.ListFunctionsRequest.location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 2;
      case 2: {
        if (tag == 16) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_page_token;
        break;
      }

      // optional string page_token = 3;
      case 3: {
        if (tag == 26) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.ListFunctionsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.ListFunctionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.ListFunctionsRequest)
  return false;
#undef DO_
}

void ListFunctionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  // optional string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->location(), output);
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.ListFunctionsRequest)
}

::google::protobuf::uint8* ListFunctionsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  // optional string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->location(), target);
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.ListFunctionsRequest)
  return target;
}

size_t ListFunctionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  size_t total_size = 0;

  // optional string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListFunctionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListFunctionsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFunctionsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.ListFunctionsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.ListFunctionsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListFunctionsRequest::MergeFrom(const ListFunctionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListFunctionsRequest::UnsafeMergeFrom(const ListFunctionsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListFunctionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFunctionsRequest::CopyFrom(const ListFunctionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListFunctionsRequest::IsInitialized() const {

  return true;
}

void ListFunctionsRequest::Swap(ListFunctionsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFunctionsRequest::InternalSwap(ListFunctionsRequest* other) {
  location_.Swap(&other->location_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListFunctionsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListFunctionsRequest_descriptor_;
  metadata.reflection = ListFunctionsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListFunctionsRequest

// optional string location = 1;
void ListFunctionsRequest::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListFunctionsRequest::location() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.ListFunctionsRequest.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFunctionsRequest::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.ListFunctionsRequest.location)
}
void ListFunctionsRequest::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.ListFunctionsRequest.location)
}
void ListFunctionsRequest::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.ListFunctionsRequest.location)
}
::std::string* ListFunctionsRequest::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.ListFunctionsRequest.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListFunctionsRequest::release_location() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.ListFunctionsRequest.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFunctionsRequest::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.ListFunctionsRequest.location)
}

// optional int32 page_size = 2;
void ListFunctionsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListFunctionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.ListFunctionsRequest.page_size)
  return page_size_;
}
void ListFunctionsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.ListFunctionsRequest.page_size)
}

// optional string page_token = 3;
void ListFunctionsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListFunctionsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.ListFunctionsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFunctionsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.ListFunctionsRequest.page_token)
}
void ListFunctionsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.ListFunctionsRequest.page_token)
}
void ListFunctionsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.ListFunctionsRequest.page_token)
}
::std::string* ListFunctionsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.ListFunctionsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListFunctionsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.ListFunctionsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFunctionsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.ListFunctionsRequest.page_token)
}

inline const ListFunctionsRequest* ListFunctionsRequest::internal_default_instance() {
  return &ListFunctionsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFunctionsResponse::kFunctionsFieldNumber;
const int ListFunctionsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFunctionsResponse::ListFunctionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.ListFunctionsResponse)
}

void ListFunctionsResponse::InitAsDefaultInstance() {
}

ListFunctionsResponse::ListFunctionsResponse(const ListFunctionsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.ListFunctionsResponse)
}

void ListFunctionsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListFunctionsResponse::~ListFunctionsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.ListFunctionsResponse)
  SharedDtor();
}

void ListFunctionsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListFunctionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListFunctionsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListFunctionsResponse_descriptor_;
}

const ListFunctionsResponse& ListFunctionsResponse::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListFunctionsResponse> ListFunctionsResponse_default_instance_;

ListFunctionsResponse* ListFunctionsResponse::New(::google::protobuf::Arena* arena) const {
  ListFunctionsResponse* n = new ListFunctionsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListFunctionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  functions_.Clear();
}

bool ListFunctionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_functions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_functions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_functions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.ListFunctionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.ListFunctionsResponse)
  return false;
#undef DO_
}

void ListFunctionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
  for (unsigned int i = 0, n = this->functions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->functions(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.ListFunctionsResponse)
}

::google::protobuf::uint8* ListFunctionsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
  for (unsigned int i = 0, n = this->functions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->functions(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.ListFunctionsResponse)
  return target;
}

size_t ListFunctionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
  {
    unsigned int count = this->functions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->functions(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListFunctionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListFunctionsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFunctionsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.ListFunctionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.ListFunctionsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListFunctionsResponse::MergeFrom(const ListFunctionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListFunctionsResponse::UnsafeMergeFrom(const ListFunctionsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  functions_.MergeFrom(from.functions_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListFunctionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFunctionsResponse::CopyFrom(const ListFunctionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.ListFunctionsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListFunctionsResponse::IsInitialized() const {

  return true;
}

void ListFunctionsResponse::Swap(ListFunctionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFunctionsResponse::InternalSwap(ListFunctionsResponse* other) {
  functions_.UnsafeArenaSwap(&other->functions_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListFunctionsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListFunctionsResponse_descriptor_;
  metadata.reflection = ListFunctionsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListFunctionsResponse

// repeated .google.cloud.functions.v1beta2.CloudFunction functions = 1;
int ListFunctionsResponse::functions_size() const {
  return functions_.size();
}
void ListFunctionsResponse::clear_functions() {
  functions_.Clear();
}
const ::google::cloud::functions::v1beta2::CloudFunction& ListFunctionsResponse::functions(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.ListFunctionsResponse.functions)
  return functions_.Get(index);
}
::google::cloud::functions::v1beta2::CloudFunction* ListFunctionsResponse::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.ListFunctionsResponse.functions)
  return functions_.Mutable(index);
}
::google::cloud::functions::v1beta2::CloudFunction* ListFunctionsResponse::add_functions() {
  // @@protoc_insertion_point(field_add:google.cloud.functions.v1beta2.ListFunctionsResponse.functions)
  return functions_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::functions::v1beta2::CloudFunction >*
ListFunctionsResponse::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.functions.v1beta2.ListFunctionsResponse.functions)
  return &functions_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::functions::v1beta2::CloudFunction >&
ListFunctionsResponse::functions() const {
  // @@protoc_insertion_point(field_list:google.cloud.functions.v1beta2.ListFunctionsResponse.functions)
  return functions_;
}

// optional string next_page_token = 2;
void ListFunctionsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListFunctionsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFunctionsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token)
}
void ListFunctionsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token)
}
void ListFunctionsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token)
}
::std::string* ListFunctionsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListFunctionsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFunctionsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.ListFunctionsResponse.next_page_token)
}

inline const ListFunctionsResponse* ListFunctionsResponse::internal_default_instance() {
  return &ListFunctionsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFunctionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFunctionRequest::DeleteFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.DeleteFunctionRequest)
}

void DeleteFunctionRequest::InitAsDefaultInstance() {
}

DeleteFunctionRequest::DeleteFunctionRequest(const DeleteFunctionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.DeleteFunctionRequest)
}

void DeleteFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteFunctionRequest::~DeleteFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  SharedDtor();
}

void DeleteFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFunctionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteFunctionRequest_descriptor_;
}

const DeleteFunctionRequest& DeleteFunctionRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteFunctionRequest> DeleteFunctionRequest_default_instance_;

DeleteFunctionRequest* DeleteFunctionRequest::New(::google::protobuf::Arena* arena) const {
  DeleteFunctionRequest* n = new DeleteFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.DeleteFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  return false;
#undef DO_
}

void DeleteFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.DeleteFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.DeleteFunctionRequest)
}

::google::protobuf::uint8* DeleteFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.DeleteFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  return target;
}

size_t DeleteFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.DeleteFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.DeleteFunctionRequest)
    UnsafeMergeFrom(*source);
  }
}

void DeleteFunctionRequest::MergeFrom(const DeleteFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteFunctionRequest::UnsafeMergeFrom(const DeleteFunctionRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFunctionRequest::CopyFrom(const DeleteFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.DeleteFunctionRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteFunctionRequest::IsInitialized() const {

  return true;
}

void DeleteFunctionRequest::Swap(DeleteFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFunctionRequest::InternalSwap(DeleteFunctionRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFunctionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteFunctionRequest_descriptor_;
  metadata.reflection = DeleteFunctionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFunctionRequest

// optional string name = 1;
void DeleteFunctionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteFunctionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.DeleteFunctionRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteFunctionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.DeleteFunctionRequest.name)
}
void DeleteFunctionRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.DeleteFunctionRequest.name)
}
void DeleteFunctionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.DeleteFunctionRequest.name)
}
::std::string* DeleteFunctionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.DeleteFunctionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteFunctionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.DeleteFunctionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteFunctionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.DeleteFunctionRequest.name)
}

inline const DeleteFunctionRequest* DeleteFunctionRequest::internal_default_instance() {
  return &DeleteFunctionRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallFunctionRequest::kNameFieldNumber;
const int CallFunctionRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallFunctionRequest::CallFunctionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CallFunctionRequest)
}

void CallFunctionRequest::InitAsDefaultInstance() {
}

CallFunctionRequest::CallFunctionRequest(const CallFunctionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CallFunctionRequest)
}

void CallFunctionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CallFunctionRequest::~CallFunctionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CallFunctionRequest)
  SharedDtor();
}

void CallFunctionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallFunctionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallFunctionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallFunctionRequest_descriptor_;
}

const CallFunctionRequest& CallFunctionRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CallFunctionRequest> CallFunctionRequest_default_instance_;

CallFunctionRequest* CallFunctionRequest::New(::google::protobuf::Arena* arena) const {
  CallFunctionRequest* n = new CallFunctionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallFunctionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CallFunctionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional string data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionRequest.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CallFunctionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CallFunctionRequest)
  return false;
#undef DO_
}

void CallFunctionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CallFunctionRequest)
}

::google::protobuf::uint8* CallFunctionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionRequest.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CallFunctionRequest)
  return target;
}

size_t CallFunctionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallFunctionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CallFunctionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallFunctionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CallFunctionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CallFunctionRequest)
    UnsafeMergeFrom(*source);
  }
}

void CallFunctionRequest::MergeFrom(const CallFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CallFunctionRequest::UnsafeMergeFrom(const CallFunctionRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CallFunctionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallFunctionRequest::CopyFrom(const CallFunctionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CallFunctionRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CallFunctionRequest::IsInitialized() const {

  return true;
}

void CallFunctionRequest::Swap(CallFunctionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallFunctionRequest::InternalSwap(CallFunctionRequest* other) {
  name_.Swap(&other->name_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallFunctionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallFunctionRequest_descriptor_;
  metadata.reflection = CallFunctionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallFunctionRequest

// optional string name = 1;
void CallFunctionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CallFunctionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CallFunctionRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CallFunctionRequest.name)
}
void CallFunctionRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CallFunctionRequest.name)
}
void CallFunctionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CallFunctionRequest.name)
}
::std::string* CallFunctionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CallFunctionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallFunctionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CallFunctionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CallFunctionRequest.name)
}

// optional string data = 2;
void CallFunctionRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CallFunctionRequest::data() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CallFunctionRequest.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CallFunctionRequest.data)
}
void CallFunctionRequest::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CallFunctionRequest.data)
}
void CallFunctionRequest::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CallFunctionRequest.data)
}
::std::string* CallFunctionRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CallFunctionRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallFunctionRequest::release_data() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CallFunctionRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CallFunctionRequest.data)
}

inline const CallFunctionRequest* CallFunctionRequest::internal_default_instance() {
  return &CallFunctionRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallFunctionResponse::kExecutionIdFieldNumber;
const int CallFunctionResponse::kResultFieldNumber;
const int CallFunctionResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallFunctionResponse::CallFunctionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.functions.v1beta2.CallFunctionResponse)
}

void CallFunctionResponse::InitAsDefaultInstance() {
}

CallFunctionResponse::CallFunctionResponse(const CallFunctionResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.functions.v1beta2.CallFunctionResponse)
}

void CallFunctionResponse::SharedCtor() {
  execution_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CallFunctionResponse::~CallFunctionResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.functions.v1beta2.CallFunctionResponse)
  SharedDtor();
}

void CallFunctionResponse::SharedDtor() {
  execution_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallFunctionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallFunctionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallFunctionResponse_descriptor_;
}

const CallFunctionResponse& CallFunctionResponse::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2ffunctions_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CallFunctionResponse> CallFunctionResponse_default_instance_;

CallFunctionResponse* CallFunctionResponse::New(::google::protobuf::Arena* arena) const {
  CallFunctionResponse* n = new CallFunctionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallFunctionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  execution_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CallFunctionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string execution_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_execution_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->execution_id().data(), this->execution_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionResponse.execution_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_result;
        break;
      }

      // optional string result = 2;
      case 2: {
        if (tag == 18) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionResponse.result"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error;
        break;
      }

      // optional string error = 3;
      case 3: {
        if (tag == 26) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.functions.v1beta2.CallFunctionResponse.error"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.functions.v1beta2.CallFunctionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.functions.v1beta2.CallFunctionResponse)
  return false;
#undef DO_
}

void CallFunctionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  // optional string execution_id = 1;
  if (this->execution_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_id().data(), this->execution_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.execution_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->execution_id(), output);
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  // optional string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.functions.v1beta2.CallFunctionResponse)
}

::google::protobuf::uint8* CallFunctionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  // optional string execution_id = 1;
  if (this->execution_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->execution_id().data(), this->execution_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.execution_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->execution_id(), target);
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  // optional string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.functions.v1beta2.CallFunctionResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.functions.v1beta2.CallFunctionResponse)
  return target;
}

size_t CallFunctionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  size_t total_size = 0;

  // optional string execution_id = 1;
  if (this->execution_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->execution_id());
  }

  // optional string result = 2;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  // optional string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallFunctionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CallFunctionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallFunctionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.functions.v1beta2.CallFunctionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.functions.v1beta2.CallFunctionResponse)
    UnsafeMergeFrom(*source);
  }
}

void CallFunctionResponse::MergeFrom(const CallFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CallFunctionResponse::UnsafeMergeFrom(const CallFunctionResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.execution_id().size() > 0) {

    execution_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_id_);
  }
  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void CallFunctionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallFunctionResponse::CopyFrom(const CallFunctionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.functions.v1beta2.CallFunctionResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CallFunctionResponse::IsInitialized() const {

  return true;
}

void CallFunctionResponse::Swap(CallFunctionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallFunctionResponse::InternalSwap(CallFunctionResponse* other) {
  execution_id_.Swap(&other->execution_id_);
  result_.Swap(&other->result_);
  error_.Swap(&other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallFunctionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallFunctionResponse_descriptor_;
  metadata.reflection = CallFunctionResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallFunctionResponse

// optional string execution_id = 1;
void CallFunctionResponse::clear_execution_id() {
  execution_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CallFunctionResponse::execution_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CallFunctionResponse.execution_id)
  return execution_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionResponse::set_execution_id(const ::std::string& value) {
  
  execution_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CallFunctionResponse.execution_id)
}
void CallFunctionResponse::set_execution_id(const char* value) {
  
  execution_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CallFunctionResponse.execution_id)
}
void CallFunctionResponse::set_execution_id(const char* value, size_t size) {
  
  execution_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CallFunctionResponse.execution_id)
}
::std::string* CallFunctionResponse::mutable_execution_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CallFunctionResponse.execution_id)
  return execution_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallFunctionResponse::release_execution_id() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CallFunctionResponse.execution_id)
  
  return execution_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionResponse::set_allocated_execution_id(::std::string* execution_id) {
  if (execution_id != NULL) {
    
  } else {
    
  }
  execution_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), execution_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CallFunctionResponse.execution_id)
}

// optional string result = 2;
void CallFunctionResponse::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CallFunctionResponse::result() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CallFunctionResponse.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionResponse::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CallFunctionResponse.result)
}
void CallFunctionResponse::set_result(const char* value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CallFunctionResponse.result)
}
void CallFunctionResponse::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CallFunctionResponse.result)
}
::std::string* CallFunctionResponse::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CallFunctionResponse.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallFunctionResponse::release_result() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CallFunctionResponse.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionResponse::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CallFunctionResponse.result)
}

// optional string error = 3;
void CallFunctionResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CallFunctionResponse::error() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.CallFunctionResponse.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.CallFunctionResponse.error)
}
void CallFunctionResponse::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.CallFunctionResponse.error)
}
void CallFunctionResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.CallFunctionResponse.error)
}
::std::string* CallFunctionResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.CallFunctionResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CallFunctionResponse::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.CallFunctionResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CallFunctionResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.CallFunctionResponse.error)
}

inline const CallFunctionResponse* CallFunctionResponse::internal_default_instance() {
  return &CallFunctionResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta2
}  // namespace functions
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
