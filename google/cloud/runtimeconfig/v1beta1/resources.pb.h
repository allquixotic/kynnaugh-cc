// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/runtimeconfig/v1beta1/resources.proto

#ifndef PROTOBUF_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace runtimeconfig {
namespace v1beta1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
void protobuf_InitDefaults_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
void protobuf_AssignDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
void protobuf_ShutdownFile_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();

class EndCondition;
class EndCondition_Cardinality;
class RuntimeConfig;
class Variable;
class Waiter;

enum VariableState {
  VARIABLE_STATE_UNSPECIFIED = 0,
  UPDATED = 1,
  DELETED = 2,
  VariableState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VariableState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VariableState_IsValid(int value);
const VariableState VariableState_MIN = VARIABLE_STATE_UNSPECIFIED;
const VariableState VariableState_MAX = DELETED;
const int VariableState_ARRAYSIZE = VariableState_MAX + 1;

const ::google::protobuf::EnumDescriptor* VariableState_descriptor();
inline const ::std::string& VariableState_Name(VariableState value) {
  return ::google::protobuf::internal::NameOfEnum(
    VariableState_descriptor(), value);
}
inline bool VariableState_Parse(
    const ::std::string& name, VariableState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariableState>(
    VariableState_descriptor(), name, value);
}
// ===================================================================

class RuntimeConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.RuntimeConfig) */ {
 public:
  RuntimeConfig();
  virtual ~RuntimeConfig();

  RuntimeConfig(const RuntimeConfig& from);

  inline RuntimeConfig& operator=(const RuntimeConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RuntimeConfig& default_instance();

  static const RuntimeConfig* internal_default_instance();

  void Swap(RuntimeConfig* other);

  // implements Message ----------------------------------------------

  inline RuntimeConfig* New() const { return New(NULL); }

  RuntimeConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RuntimeConfig& from);
  void MergeFrom(const RuntimeConfig& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RuntimeConfig* other);
  void UnsafeMergeFrom(const RuntimeConfig& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.RuntimeConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RuntimeConfig> RuntimeConfig_default_instance_;

// -------------------------------------------------------------------

class Variable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.Variable) */ {
 public:
  Variable();
  virtual ~Variable();

  Variable(const Variable& from);

  inline Variable& operator=(const Variable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Variable& default_instance();

  enum ContentsCase {
    kValue = 2,
    kText = 5,
    CONTENTS_NOT_SET = 0,
  };

  static const Variable* internal_default_instance();

  void Swap(Variable* other);

  // implements Message ----------------------------------------------

  inline Variable* New() const { return New(NULL); }

  Variable* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Variable& from);
  void MergeFrom(const Variable& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Variable* other);
  void UnsafeMergeFrom(const Variable& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes value = 2;
  private:
  bool has_value() const;
  public:
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string text = 5;
  private:
  bool has_text() const;
  public:
  void clear_text();
  static const int kTextFieldNumber = 5;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional .google.protobuf.Timestamp update_time = 3;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* mutable_update_time();
  ::google::protobuf::Timestamp* release_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // optional .google.cloud.runtimeconfig.v1beta1.VariableState state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::cloud::runtimeconfig::v1beta1::VariableState state() const;
  void set_state(::google::cloud::runtimeconfig::v1beta1::VariableState value);

  ContentsCase contents_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.Variable)
 private:
  inline void set_has_value();
  inline void set_has_text();

  inline bool has_contents() const;
  void clear_contents();
  inline void clear_has_contents();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Timestamp* update_time_;
  int state_;
  union ContentsUnion {
    ContentsUnion() {}
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::ArenaStringPtr text_;
  } contents_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Variable> Variable_default_instance_;

// -------------------------------------------------------------------

class EndCondition_Cardinality : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality) */ {
 public:
  EndCondition_Cardinality();
  virtual ~EndCondition_Cardinality();

  EndCondition_Cardinality(const EndCondition_Cardinality& from);

  inline EndCondition_Cardinality& operator=(const EndCondition_Cardinality& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndCondition_Cardinality& default_instance();

  static const EndCondition_Cardinality* internal_default_instance();

  void Swap(EndCondition_Cardinality* other);

  // implements Message ----------------------------------------------

  inline EndCondition_Cardinality* New() const { return New(NULL); }

  EndCondition_Cardinality* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndCondition_Cardinality& from);
  void MergeFrom(const EndCondition_Cardinality& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EndCondition_Cardinality* other);
  void UnsafeMergeFrom(const EndCondition_Cardinality& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional int32 number = 2;
  void clear_number();
  static const int kNumberFieldNumber = 2;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::int32 number_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EndCondition_Cardinality> EndCondition_Cardinality_default_instance_;

// -------------------------------------------------------------------

class EndCondition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.EndCondition) */ {
 public:
  EndCondition();
  virtual ~EndCondition();

  EndCondition(const EndCondition& from);

  inline EndCondition& operator=(const EndCondition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndCondition& default_instance();

  enum ConditionCase {
    kCardinality = 1,
    CONDITION_NOT_SET = 0,
  };

  static const EndCondition* internal_default_instance();

  void Swap(EndCondition* other);

  // implements Message ----------------------------------------------

  inline EndCondition* New() const { return New(NULL); }

  EndCondition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndCondition& from);
  void MergeFrom(const EndCondition& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EndCondition* other);
  void UnsafeMergeFrom(const EndCondition& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EndCondition_Cardinality Cardinality;

  // accessors -------------------------------------------------------

  // optional .google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality cardinality = 1;
  bool has_cardinality() const;
  void clear_cardinality();
  static const int kCardinalityFieldNumber = 1;
  const ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality& cardinality() const;
  ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* mutable_cardinality();
  ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* release_cardinality();
  void set_allocated_cardinality(::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* cardinality);

  ConditionCase condition_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.EndCondition)
 private:
  inline void set_has_cardinality();

  inline bool has_condition() const;
  void clear_condition();
  inline void clear_has_condition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ConditionUnion {
    ConditionUnion() {}
    ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* cardinality_;
  } condition_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EndCondition> EndCondition_default_instance_;

// -------------------------------------------------------------------

class Waiter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.runtimeconfig.v1beta1.Waiter) */ {
 public:
  Waiter();
  virtual ~Waiter();

  Waiter(const Waiter& from);

  inline Waiter& operator=(const Waiter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Waiter& default_instance();

  static const Waiter* internal_default_instance();

  void Swap(Waiter* other);

  // implements Message ----------------------------------------------

  inline Waiter* New() const { return New(NULL); }

  Waiter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Waiter& from);
  void MergeFrom(const Waiter& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Waiter* other);
  void UnsafeMergeFrom(const Waiter& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .google.protobuf.Duration timeout = 2;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  const ::google::protobuf::Duration& timeout() const;
  ::google::protobuf::Duration* mutable_timeout();
  ::google::protobuf::Duration* release_timeout();
  void set_allocated_timeout(::google::protobuf::Duration* timeout);

  // optional .google.cloud.runtimeconfig.v1beta1.EndCondition failure = 3;
  bool has_failure() const;
  void clear_failure();
  static const int kFailureFieldNumber = 3;
  const ::google::cloud::runtimeconfig::v1beta1::EndCondition& failure() const;
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* mutable_failure();
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* release_failure();
  void set_allocated_failure(::google::cloud::runtimeconfig::v1beta1::EndCondition* failure);

  // optional .google.cloud.runtimeconfig.v1beta1.EndCondition success = 4;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 4;
  const ::google::cloud::runtimeconfig::v1beta1::EndCondition& success() const;
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* mutable_success();
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* release_success();
  void set_allocated_success(::google::cloud::runtimeconfig::v1beta1::EndCondition* success);

  // optional .google.protobuf.Timestamp create_time = 5;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* mutable_create_time();
  ::google::protobuf::Timestamp* release_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // optional bool done = 6;
  void clear_done();
  static const int kDoneFieldNumber = 6;
  bool done() const;
  void set_done(bool value);

  // optional .google.rpc.Status error = 7;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 7;
  const ::google::rpc::Status& error() const;
  ::google::rpc::Status* mutable_error();
  ::google::rpc::Status* release_error();
  void set_allocated_error(::google::rpc::Status* error);

  // @@protoc_insertion_point(class_scope:google.cloud.runtimeconfig.v1beta1.Waiter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Duration* timeout_;
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* failure_;
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* success_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::rpc::Status* error_;
  bool done_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Waiter> Waiter_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RuntimeConfig

// optional string name = 1;
inline void RuntimeConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RuntimeConfig::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RuntimeConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.name)
}
inline void RuntimeConfig::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.name)
}
inline void RuntimeConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.name)
}
inline ::std::string* RuntimeConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RuntimeConfig::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RuntimeConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.name)
}

// optional string description = 2;
inline void RuntimeConfig::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RuntimeConfig::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RuntimeConfig::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.description)
}
inline void RuntimeConfig::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.description)
}
inline void RuntimeConfig::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.description)
}
inline ::std::string* RuntimeConfig::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RuntimeConfig::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RuntimeConfig::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.RuntimeConfig.description)
}

inline const RuntimeConfig* RuntimeConfig::internal_default_instance() {
  return &RuntimeConfig_default_instance_.get();
}
// -------------------------------------------------------------------

// Variable

// optional string name = 1;
inline void Variable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Variable::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Variable.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Variable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Variable.name)
}
inline void Variable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.Variable.name)
}
inline void Variable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.Variable.name)
}
inline ::std::string* Variable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Variable.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Variable::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Variable.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Variable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Variable.name)
}

// optional bytes value = 2;
inline bool Variable::has_value() const {
  return contents_case() == kValue;
}
inline void Variable::set_has_value() {
  _oneof_case_[0] = kValue;
}
inline void Variable::clear_value() {
  if (has_value()) {
    contents_.value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_contents();
  }
}
inline const ::std::string& Variable::value() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Variable.value)
  if (has_value()) {
    return contents_.value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Variable::set_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Variable.value)
  if (!has_value()) {
    clear_contents();
    set_has_value();
    contents_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  contents_.value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Variable.value)
}
inline void Variable::set_value(const char* value) {
  if (!has_value()) {
    clear_contents();
    set_has_value();
    contents_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  contents_.value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.Variable.value)
}
inline void Variable::set_value(const void* value, size_t size) {
  if (!has_value()) {
    clear_contents();
    set_has_value();
    contents_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  contents_.value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.Variable.value)
}
inline ::std::string* Variable::mutable_value() {
  if (!has_value()) {
    clear_contents();
    set_has_value();
    contents_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Variable.value)
  return contents_.value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Variable::release_value() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Variable.value)
  if (has_value()) {
    clear_has_contents();
    return contents_.value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Variable::set_allocated_value(::std::string* value) {
  if (!has_value()) {
    contents_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_contents();
  if (value != NULL) {
    set_has_value();
    contents_.value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Variable.value)
}

// optional string text = 5;
inline bool Variable::has_text() const {
  return contents_case() == kText;
}
inline void Variable::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void Variable::clear_text() {
  if (has_text()) {
    contents_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_contents();
  }
}
inline const ::std::string& Variable::text() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Variable.text)
  if (has_text()) {
    return contents_.text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Variable::set_text(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Variable.text)
  if (!has_text()) {
    clear_contents();
    set_has_text();
    contents_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  contents_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Variable.text)
}
inline void Variable::set_text(const char* value) {
  if (!has_text()) {
    clear_contents();
    set_has_text();
    contents_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  contents_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.Variable.text)
}
inline void Variable::set_text(const char* value, size_t size) {
  if (!has_text()) {
    clear_contents();
    set_has_text();
    contents_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  contents_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.Variable.text)
}
inline ::std::string* Variable::mutable_text() {
  if (!has_text()) {
    clear_contents();
    set_has_text();
    contents_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Variable.text)
  return contents_.text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Variable::release_text() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Variable.text)
  if (has_text()) {
    clear_has_contents();
    return contents_.text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Variable::set_allocated_text(::std::string* text) {
  if (!has_text()) {
    contents_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_contents();
  if (text != NULL) {
    set_has_text();
    contents_.text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        text);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Variable.text)
}

// optional .google.protobuf.Timestamp update_time = 3;
inline bool Variable::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline void Variable::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) delete update_time_;
  update_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& Variable::update_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Variable.update_time)
  return update_time_ != NULL ? *update_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* Variable::mutable_update_time() {
  
  if (update_time_ == NULL) {
    update_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Variable.update_time)
  return update_time_;
}
inline ::google::protobuf::Timestamp* Variable::release_update_time() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Variable.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
inline void Variable::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  delete update_time_;
  if (update_time != NULL && update_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_update_time = new ::google::protobuf::Timestamp;
    new_update_time->CopyFrom(*update_time);
    update_time = new_update_time;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Variable.update_time)
}

// optional .google.cloud.runtimeconfig.v1beta1.VariableState state = 4;
inline void Variable::clear_state() {
  state_ = 0;
}
inline ::google::cloud::runtimeconfig::v1beta1::VariableState Variable::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Variable.state)
  return static_cast< ::google::cloud::runtimeconfig::v1beta1::VariableState >(state_);
}
inline void Variable::set_state(::google::cloud::runtimeconfig::v1beta1::VariableState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Variable.state)
}

inline bool Variable::has_contents() const {
  return contents_case() != CONTENTS_NOT_SET;
}
inline void Variable::clear_has_contents() {
  _oneof_case_[0] = CONTENTS_NOT_SET;
}
inline Variable::ContentsCase Variable::contents_case() const {
  return Variable::ContentsCase(_oneof_case_[0]);
}
inline const Variable* Variable::internal_default_instance() {
  return &Variable_default_instance_.get();
}
// -------------------------------------------------------------------

// EndCondition_Cardinality

// optional string path = 1;
inline void EndCondition_Cardinality::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EndCondition_Cardinality::path() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndCondition_Cardinality::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.path)
}
inline void EndCondition_Cardinality::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.path)
}
inline void EndCondition_Cardinality::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.path)
}
inline ::std::string* EndCondition_Cardinality::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EndCondition_Cardinality::release_path() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EndCondition_Cardinality::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.path)
}

// optional int32 number = 2;
inline void EndCondition_Cardinality::clear_number() {
  number_ = 0;
}
inline ::google::protobuf::int32 EndCondition_Cardinality::number() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.number)
  return number_;
}
inline void EndCondition_Cardinality::set_number(::google::protobuf::int32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality.number)
}

inline const EndCondition_Cardinality* EndCondition_Cardinality::internal_default_instance() {
  return &EndCondition_Cardinality_default_instance_.get();
}
// -------------------------------------------------------------------

// EndCondition

// optional .google.cloud.runtimeconfig.v1beta1.EndCondition.Cardinality cardinality = 1;
inline bool EndCondition::has_cardinality() const {
  return condition_case() == kCardinality;
}
inline void EndCondition::set_has_cardinality() {
  _oneof_case_[0] = kCardinality;
}
inline void EndCondition::clear_cardinality() {
  if (has_cardinality()) {
    delete condition_.cardinality_;
    clear_has_condition();
  }
}
inline  const ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality& EndCondition::cardinality() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.EndCondition.cardinality)
  return has_cardinality()
      ? *condition_.cardinality_
      : ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality::default_instance();
}
inline ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* EndCondition::mutable_cardinality() {
  if (!has_cardinality()) {
    clear_condition();
    set_has_cardinality();
    condition_.cardinality_ = new ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.EndCondition.cardinality)
  return condition_.cardinality_;
}
inline ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* EndCondition::release_cardinality() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.EndCondition.cardinality)
  if (has_cardinality()) {
    clear_has_condition();
    ::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* temp = condition_.cardinality_;
    condition_.cardinality_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void EndCondition::set_allocated_cardinality(::google::cloud::runtimeconfig::v1beta1::EndCondition_Cardinality* cardinality) {
  clear_condition();
  if (cardinality) {
    set_has_cardinality();
    condition_.cardinality_ = cardinality;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.EndCondition.cardinality)
}

inline bool EndCondition::has_condition() const {
  return condition_case() != CONDITION_NOT_SET;
}
inline void EndCondition::clear_has_condition() {
  _oneof_case_[0] = CONDITION_NOT_SET;
}
inline EndCondition::ConditionCase EndCondition::condition_case() const {
  return EndCondition::ConditionCase(_oneof_case_[0]);
}
inline const EndCondition* EndCondition::internal_default_instance() {
  return &EndCondition_default_instance_.get();
}
// -------------------------------------------------------------------

// Waiter

// optional string name = 1;
inline void Waiter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Waiter::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Waiter.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Waiter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Waiter.name)
}
inline void Waiter::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.runtimeconfig.v1beta1.Waiter.name)
}
inline void Waiter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.runtimeconfig.v1beta1.Waiter.name)
}
inline ::std::string* Waiter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Waiter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Waiter::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Waiter.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Waiter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Waiter.name)
}

// optional .google.protobuf.Duration timeout = 2;
inline bool Waiter::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline void Waiter::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;
}
inline const ::google::protobuf::Duration& Waiter::timeout() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Waiter.timeout)
  return timeout_ != NULL ? *timeout_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* Waiter::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Waiter.timeout)
  return timeout_;
}
inline ::google::protobuf::Duration* Waiter::release_timeout() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Waiter.timeout)
  
  ::google::protobuf::Duration* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline void Waiter::set_allocated_timeout(::google::protobuf::Duration* timeout) {
  delete timeout_;
  if (timeout != NULL && timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_timeout = new ::google::protobuf::Duration;
    new_timeout->CopyFrom(*timeout);
    timeout = new_timeout;
  }
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Waiter.timeout)
}

// optional .google.cloud.runtimeconfig.v1beta1.EndCondition failure = 3;
inline bool Waiter::has_failure() const {
  return this != internal_default_instance() && failure_ != NULL;
}
inline void Waiter::clear_failure() {
  if (GetArenaNoVirtual() == NULL && failure_ != NULL) delete failure_;
  failure_ = NULL;
}
inline const ::google::cloud::runtimeconfig::v1beta1::EndCondition& Waiter::failure() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Waiter.failure)
  return failure_ != NULL ? *failure_
                         : *::google::cloud::runtimeconfig::v1beta1::EndCondition::internal_default_instance();
}
inline ::google::cloud::runtimeconfig::v1beta1::EndCondition* Waiter::mutable_failure() {
  
  if (failure_ == NULL) {
    failure_ = new ::google::cloud::runtimeconfig::v1beta1::EndCondition;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Waiter.failure)
  return failure_;
}
inline ::google::cloud::runtimeconfig::v1beta1::EndCondition* Waiter::release_failure() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Waiter.failure)
  
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* temp = failure_;
  failure_ = NULL;
  return temp;
}
inline void Waiter::set_allocated_failure(::google::cloud::runtimeconfig::v1beta1::EndCondition* failure) {
  delete failure_;
  failure_ = failure;
  if (failure) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Waiter.failure)
}

// optional .google.cloud.runtimeconfig.v1beta1.EndCondition success = 4;
inline bool Waiter::has_success() const {
  return this != internal_default_instance() && success_ != NULL;
}
inline void Waiter::clear_success() {
  if (GetArenaNoVirtual() == NULL && success_ != NULL) delete success_;
  success_ = NULL;
}
inline const ::google::cloud::runtimeconfig::v1beta1::EndCondition& Waiter::success() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Waiter.success)
  return success_ != NULL ? *success_
                         : *::google::cloud::runtimeconfig::v1beta1::EndCondition::internal_default_instance();
}
inline ::google::cloud::runtimeconfig::v1beta1::EndCondition* Waiter::mutable_success() {
  
  if (success_ == NULL) {
    success_ = new ::google::cloud::runtimeconfig::v1beta1::EndCondition;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Waiter.success)
  return success_;
}
inline ::google::cloud::runtimeconfig::v1beta1::EndCondition* Waiter::release_success() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Waiter.success)
  
  ::google::cloud::runtimeconfig::v1beta1::EndCondition* temp = success_;
  success_ = NULL;
  return temp;
}
inline void Waiter::set_allocated_success(::google::cloud::runtimeconfig::v1beta1::EndCondition* success) {
  delete success_;
  success_ = success;
  if (success) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Waiter.success)
}

// optional .google.protobuf.Timestamp create_time = 5;
inline bool Waiter::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline void Waiter::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& Waiter::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Waiter.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* Waiter::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Waiter.create_time)
  return create_time_;
}
inline ::google::protobuf::Timestamp* Waiter::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Waiter.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline void Waiter::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Waiter.create_time)
}

// optional bool done = 6;
inline void Waiter::clear_done() {
  done_ = false;
}
inline bool Waiter::done() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Waiter.done)
  return done_;
}
inline void Waiter::set_done(bool value) {
  
  done_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.runtimeconfig.v1beta1.Waiter.done)
}

// optional .google.rpc.Status error = 7;
inline bool Waiter::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void Waiter::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::google::rpc::Status& Waiter::error() const {
  // @@protoc_insertion_point(field_get:google.cloud.runtimeconfig.v1beta1.Waiter.error)
  return error_ != NULL ? *error_
                         : *::google::rpc::Status::internal_default_instance();
}
inline ::google::rpc::Status* Waiter::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.runtimeconfig.v1beta1.Waiter.error)
  return error_;
}
inline ::google::rpc::Status* Waiter::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.runtimeconfig.v1beta1.Waiter.error)
  
  ::google::rpc::Status* temp = error_;
  error_ = NULL;
  return temp;
}
inline void Waiter::set_allocated_error(::google::rpc::Status* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.runtimeconfig.v1beta1.Waiter.error)
}

inline const Waiter* Waiter::internal_default_instance() {
  return &Waiter_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace runtimeconfig
}  // namespace cloud
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::runtimeconfig::v1beta1::VariableState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::runtimeconfig::v1beta1::VariableState>() {
  return ::google::cloud::runtimeconfig::v1beta1::VariableState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2fruntimeconfig_2fv1beta1_2fresources_2eproto__INCLUDED
