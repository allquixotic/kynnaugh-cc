// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vision/v1/image_annotator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/cloud/vision/v1/image_annotator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace vision {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* Feature_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Feature_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Feature_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ImageSource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImageSource_reflection_ = NULL;
const ::google::protobuf::Descriptor* Image_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Image_reflection_ = NULL;
const ::google::protobuf::Descriptor* FaceAnnotation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FaceAnnotation_reflection_ = NULL;
const ::google::protobuf::Descriptor* FaceAnnotation_Landmark_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FaceAnnotation_Landmark_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FaceAnnotation_Landmark_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* LocationInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LocationInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Property_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Property_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityAnnotation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityAnnotation_reflection_ = NULL;
const ::google::protobuf::Descriptor* SafeSearchAnnotation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SafeSearchAnnotation_reflection_ = NULL;
const ::google::protobuf::Descriptor* LatLongRect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LatLongRect_reflection_ = NULL;
const ::google::protobuf::Descriptor* ColorInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColorInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DominantColorsAnnotation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DominantColorsAnnotation_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImageProperties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImageProperties_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImageContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImageContext_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnnotateImageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnnotateImageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnnotateImageResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnnotateImageResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchAnnotateImagesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchAnnotateImagesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchAnnotateImagesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchAnnotateImagesResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Likelihood_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto() {
  protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/cloud/vision/v1/image_annotator.proto");
  GOOGLE_CHECK(file != NULL);
  Feature_descriptor_ = file->message_type(0);
  static const int Feature_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Feature, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Feature, max_results_),
  };
  Feature_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Feature_descriptor_,
      Feature::internal_default_instance(),
      Feature_offsets_,
      -1,
      -1,
      -1,
      sizeof(Feature),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Feature, _internal_metadata_));
  Feature_Type_descriptor_ = Feature_descriptor_->enum_type(0);
  ImageSource_descriptor_ = file->message_type(1);
  static const int ImageSource_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageSource, gcs_image_uri_),
  };
  ImageSource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImageSource_descriptor_,
      ImageSource::internal_default_instance(),
      ImageSource_offsets_,
      -1,
      -1,
      -1,
      sizeof(ImageSource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageSource, _internal_metadata_));
  Image_descriptor_ = file->message_type(2);
  static const int Image_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, source_),
  };
  Image_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Image_descriptor_,
      Image::internal_default_instance(),
      Image_offsets_,
      -1,
      -1,
      -1,
      sizeof(Image),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _internal_metadata_));
  FaceAnnotation_descriptor_ = file->message_type(3);
  static const int FaceAnnotation_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, bounding_poly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, fd_bounding_poly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, landmarks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, roll_angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, pan_angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, tilt_angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, detection_confidence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, landmarking_confidence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, joy_likelihood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, sorrow_likelihood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, anger_likelihood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, surprise_likelihood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, under_exposed_likelihood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, blurred_likelihood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, headwear_likelihood_),
  };
  FaceAnnotation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FaceAnnotation_descriptor_,
      FaceAnnotation::internal_default_instance(),
      FaceAnnotation_offsets_,
      -1,
      -1,
      -1,
      sizeof(FaceAnnotation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation, _internal_metadata_));
  FaceAnnotation_Landmark_descriptor_ = FaceAnnotation_descriptor_->nested_type(0);
  static const int FaceAnnotation_Landmark_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation_Landmark, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation_Landmark, position_),
  };
  FaceAnnotation_Landmark_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FaceAnnotation_Landmark_descriptor_,
      FaceAnnotation_Landmark::internal_default_instance(),
      FaceAnnotation_Landmark_offsets_,
      -1,
      -1,
      -1,
      sizeof(FaceAnnotation_Landmark),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAnnotation_Landmark, _internal_metadata_));
  FaceAnnotation_Landmark_Type_descriptor_ = FaceAnnotation_Landmark_descriptor_->enum_type(0);
  LocationInfo_descriptor_ = file->message_type(4);
  static const int LocationInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationInfo, lat_lng_),
  };
  LocationInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LocationInfo_descriptor_,
      LocationInfo::internal_default_instance(),
      LocationInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(LocationInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocationInfo, _internal_metadata_));
  Property_descriptor_ = file->message_type(5);
  static const int Property_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, value_),
  };
  Property_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Property_descriptor_,
      Property::internal_default_instance(),
      Property_offsets_,
      -1,
      -1,
      -1,
      sizeof(Property),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, _internal_metadata_));
  EntityAnnotation_descriptor_ = file->message_type(6);
  static const int EntityAnnotation_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, mid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, confidence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, topicality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, bounding_poly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, locations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, properties_),
  };
  EntityAnnotation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityAnnotation_descriptor_,
      EntityAnnotation::internal_default_instance(),
      EntityAnnotation_offsets_,
      -1,
      -1,
      -1,
      sizeof(EntityAnnotation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAnnotation, _internal_metadata_));
  SafeSearchAnnotation_descriptor_ = file->message_type(7);
  static const int SafeSearchAnnotation_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SafeSearchAnnotation, adult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SafeSearchAnnotation, spoof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SafeSearchAnnotation, medical_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SafeSearchAnnotation, violence_),
  };
  SafeSearchAnnotation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SafeSearchAnnotation_descriptor_,
      SafeSearchAnnotation::internal_default_instance(),
      SafeSearchAnnotation_offsets_,
      -1,
      -1,
      -1,
      sizeof(SafeSearchAnnotation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SafeSearchAnnotation, _internal_metadata_));
  LatLongRect_descriptor_ = file->message_type(8);
  static const int LatLongRect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLongRect, min_lat_lng_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLongRect, max_lat_lng_),
  };
  LatLongRect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LatLongRect_descriptor_,
      LatLongRect::internal_default_instance(),
      LatLongRect_offsets_,
      -1,
      -1,
      -1,
      sizeof(LatLongRect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLongRect, _internal_metadata_));
  ColorInfo_descriptor_ = file->message_type(9);
  static const int ColorInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColorInfo, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColorInfo, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColorInfo, pixel_fraction_),
  };
  ColorInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ColorInfo_descriptor_,
      ColorInfo::internal_default_instance(),
      ColorInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ColorInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColorInfo, _internal_metadata_));
  DominantColorsAnnotation_descriptor_ = file->message_type(10);
  static const int DominantColorsAnnotation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DominantColorsAnnotation, colors_),
  };
  DominantColorsAnnotation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DominantColorsAnnotation_descriptor_,
      DominantColorsAnnotation::internal_default_instance(),
      DominantColorsAnnotation_offsets_,
      -1,
      -1,
      -1,
      sizeof(DominantColorsAnnotation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DominantColorsAnnotation, _internal_metadata_));
  ImageProperties_descriptor_ = file->message_type(11);
  static const int ImageProperties_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageProperties, dominant_colors_),
  };
  ImageProperties_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImageProperties_descriptor_,
      ImageProperties::internal_default_instance(),
      ImageProperties_offsets_,
      -1,
      -1,
      -1,
      sizeof(ImageProperties),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageProperties, _internal_metadata_));
  ImageContext_descriptor_ = file->message_type(12);
  static const int ImageContext_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageContext, lat_long_rect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageContext, language_hints_),
  };
  ImageContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImageContext_descriptor_,
      ImageContext::internal_default_instance(),
      ImageContext_offsets_,
      -1,
      -1,
      -1,
      sizeof(ImageContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageContext, _internal_metadata_));
  AnnotateImageRequest_descriptor_ = file->message_type(13);
  static const int AnnotateImageRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageRequest, image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageRequest, features_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageRequest, image_context_),
  };
  AnnotateImageRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnnotateImageRequest_descriptor_,
      AnnotateImageRequest::internal_default_instance(),
      AnnotateImageRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnnotateImageRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageRequest, _internal_metadata_));
  AnnotateImageResponse_descriptor_ = file->message_type(14);
  static const int AnnotateImageResponse_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, face_annotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, landmark_annotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, logo_annotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, label_annotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, text_annotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, safe_search_annotation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, image_properties_annotation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, error_),
  };
  AnnotateImageResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnnotateImageResponse_descriptor_,
      AnnotateImageResponse::internal_default_instance(),
      AnnotateImageResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnnotateImageResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnnotateImageResponse, _internal_metadata_));
  BatchAnnotateImagesRequest_descriptor_ = file->message_type(15);
  static const int BatchAnnotateImagesRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAnnotateImagesRequest, requests_),
  };
  BatchAnnotateImagesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BatchAnnotateImagesRequest_descriptor_,
      BatchAnnotateImagesRequest::internal_default_instance(),
      BatchAnnotateImagesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(BatchAnnotateImagesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAnnotateImagesRequest, _internal_metadata_));
  BatchAnnotateImagesResponse_descriptor_ = file->message_type(16);
  static const int BatchAnnotateImagesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAnnotateImagesResponse, responses_),
  };
  BatchAnnotateImagesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BatchAnnotateImagesResponse_descriptor_,
      BatchAnnotateImagesResponse::internal_default_instance(),
      BatchAnnotateImagesResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(BatchAnnotateImagesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAnnotateImagesResponse, _internal_metadata_));
  Likelihood_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Feature_descriptor_, Feature::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImageSource_descriptor_, ImageSource::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Image_descriptor_, Image::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FaceAnnotation_descriptor_, FaceAnnotation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FaceAnnotation_Landmark_descriptor_, FaceAnnotation_Landmark::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LocationInfo_descriptor_, LocationInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Property_descriptor_, Property::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityAnnotation_descriptor_, EntityAnnotation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SafeSearchAnnotation_descriptor_, SafeSearchAnnotation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LatLongRect_descriptor_, LatLongRect::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ColorInfo_descriptor_, ColorInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DominantColorsAnnotation_descriptor_, DominantColorsAnnotation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImageProperties_descriptor_, ImageProperties::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImageContext_descriptor_, ImageContext::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnnotateImageRequest_descriptor_, AnnotateImageRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnnotateImageResponse_descriptor_, AnnotateImageResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BatchAnnotateImagesRequest_descriptor_, BatchAnnotateImagesRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BatchAnnotateImagesResponse_descriptor_, BatchAnnotateImagesResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto() {
  Feature_default_instance_.Shutdown();
  delete Feature_reflection_;
  ImageSource_default_instance_.Shutdown();
  delete ImageSource_reflection_;
  Image_default_instance_.Shutdown();
  delete Image_reflection_;
  FaceAnnotation_default_instance_.Shutdown();
  delete FaceAnnotation_reflection_;
  FaceAnnotation_Landmark_default_instance_.Shutdown();
  delete FaceAnnotation_Landmark_reflection_;
  LocationInfo_default_instance_.Shutdown();
  delete LocationInfo_reflection_;
  Property_default_instance_.Shutdown();
  delete Property_reflection_;
  EntityAnnotation_default_instance_.Shutdown();
  delete EntityAnnotation_reflection_;
  SafeSearchAnnotation_default_instance_.Shutdown();
  delete SafeSearchAnnotation_reflection_;
  LatLongRect_default_instance_.Shutdown();
  delete LatLongRect_reflection_;
  ColorInfo_default_instance_.Shutdown();
  delete ColorInfo_reflection_;
  DominantColorsAnnotation_default_instance_.Shutdown();
  delete DominantColorsAnnotation_reflection_;
  ImageProperties_default_instance_.Shutdown();
  delete ImageProperties_reflection_;
  ImageContext_default_instance_.Shutdown();
  delete ImageContext_reflection_;
  AnnotateImageRequest_default_instance_.Shutdown();
  delete AnnotateImageRequest_reflection_;
  AnnotateImageResponse_default_instance_.Shutdown();
  delete AnnotateImageResponse_reflection_;
  BatchAnnotateImagesRequest_default_instance_.Shutdown();
  delete BatchAnnotateImagesRequest_reflection_;
  BatchAnnotateImagesResponse_default_instance_.Shutdown();
  delete BatchAnnotateImagesResponse_reflection_;
}

void protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::cloud::vision::v1::protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto();
  ::google::rpc::protobuf_InitDefaults_google_2frpc_2fstatus_2eproto();
  ::google::type::protobuf_InitDefaults_google_2ftype_2fcolor_2eproto();
  ::google::type::protobuf_InitDefaults_google_2ftype_2flatlng_2eproto();
  Feature_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ImageSource_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Image_default_instance_.DefaultConstruct();
  FaceAnnotation_default_instance_.DefaultConstruct();
  FaceAnnotation_Landmark_default_instance_.DefaultConstruct();
  LocationInfo_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Property_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EntityAnnotation_default_instance_.DefaultConstruct();
  SafeSearchAnnotation_default_instance_.DefaultConstruct();
  LatLongRect_default_instance_.DefaultConstruct();
  ColorInfo_default_instance_.DefaultConstruct();
  DominantColorsAnnotation_default_instance_.DefaultConstruct();
  ImageProperties_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ImageContext_default_instance_.DefaultConstruct();
  AnnotateImageRequest_default_instance_.DefaultConstruct();
  AnnotateImageResponse_default_instance_.DefaultConstruct();
  BatchAnnotateImagesRequest_default_instance_.DefaultConstruct();
  BatchAnnotateImagesResponse_default_instance_.DefaultConstruct();
  Feature_default_instance_.get_mutable()->InitAsDefaultInstance();
  ImageSource_default_instance_.get_mutable()->InitAsDefaultInstance();
  Image_default_instance_.get_mutable()->InitAsDefaultInstance();
  FaceAnnotation_default_instance_.get_mutable()->InitAsDefaultInstance();
  FaceAnnotation_Landmark_default_instance_.get_mutable()->InitAsDefaultInstance();
  LocationInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  Property_default_instance_.get_mutable()->InitAsDefaultInstance();
  EntityAnnotation_default_instance_.get_mutable()->InitAsDefaultInstance();
  SafeSearchAnnotation_default_instance_.get_mutable()->InitAsDefaultInstance();
  LatLongRect_default_instance_.get_mutable()->InitAsDefaultInstance();
  ColorInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  DominantColorsAnnotation_default_instance_.get_mutable()->InitAsDefaultInstance();
  ImageProperties_default_instance_.get_mutable()->InitAsDefaultInstance();
  ImageContext_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnnotateImageRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnnotateImageResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  BatchAnnotateImagesRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  BatchAnnotateImagesResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_once_);
void protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_once_,
                 &protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl);
}
void protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n,google/cloud/vision/v1/image_annotator"
    ".proto\022\026google.cloud.vision.v1\032\034google/a"
    "pi/annotations.proto\032%google/cloud/visio"
    "n/v1/geometry.proto\032\027google/rpc/status.p"
    "roto\032\027google/type/color.proto\032\030google/ty"
    "pe/latlng.proto\"\213\002\n\007Feature\0222\n\004type\030\001 \001("
    "\0162$.google.cloud.vision.v1.Feature.Type\022"
    "\023\n\013max_results\030\002 \001(\005\"\266\001\n\004Type\022\024\n\020TYPE_UN"
    "SPECIFIED\020\000\022\022\n\016FACE_DETECTION\020\001\022\026\n\022LANDM"
    "ARK_DETECTION\020\002\022\022\n\016LOGO_DETECTION\020\003\022\023\n\017L"
    "ABEL_DETECTION\020\004\022\022\n\016TEXT_DETECTION\020\005\022\031\n\025"
    "SAFE_SEARCH_DETECTION\020\006\022\024\n\020IMAGE_PROPERT"
    "IES\020\007\"$\n\013ImageSource\022\025\n\rgcs_image_uri\030\001 "
    "\001(\t\"M\n\005Image\022\017\n\007content\030\001 \001(\014\0223\n\006source\030"
    "\002 \001(\0132#.google.cloud.vision.v1.ImageSour"
    "ce\"\307\r\n\016FaceAnnotation\022;\n\rbounding_poly\030\001"
    " \001(\0132$.google.cloud.vision.v1.BoundingPo"
    "ly\022>\n\020fd_bounding_poly\030\002 \001(\0132$.google.cl"
    "oud.vision.v1.BoundingPoly\022B\n\tlandmarks\030"
    "\003 \003(\0132/.google.cloud.vision.v1.FaceAnnot"
    "ation.Landmark\022\022\n\nroll_angle\030\004 \001(\002\022\021\n\tpa"
    "n_angle\030\005 \001(\002\022\022\n\ntilt_angle\030\006 \001(\002\022\034\n\024det"
    "ection_confidence\030\007 \001(\002\022\036\n\026landmarking_c"
    "onfidence\030\010 \001(\002\022:\n\016joy_likelihood\030\t \001(\0162"
    "\".google.cloud.vision.v1.Likelihood\022=\n\021s"
    "orrow_likelihood\030\n \001(\0162\".google.cloud.vi"
    "sion.v1.Likelihood\022<\n\020anger_likelihood\030\013"
    " \001(\0162\".google.cloud.vision.v1.Likelihood"
    "\022\?\n\023surprise_likelihood\030\014 \001(\0162\".google.c"
    "loud.vision.v1.Likelihood\022D\n\030under_expos"
    "ed_likelihood\030\r \001(\0162\".google.cloud.visio"
    "n.v1.Likelihood\022>\n\022blurred_likelihood\030\016 "
    "\001(\0162\".google.cloud.vision.v1.Likelihood\022"
    "\?\n\023headwear_likelihood\030\017 \001(\0162\".google.cl"
    "oud.vision.v1.Likelihood\032\271\007\n\010Landmark\022B\n"
    "\004type\030\003 \001(\01624.google.cloud.vision.v1.Fac"
    "eAnnotation.Landmark.Type\0222\n\010position\030\004 "
    "\001(\0132 .google.cloud.vision.v1.Position\"\264\006"
    "\n\004Type\022\024\n\020UNKNOWN_LANDMARK\020\000\022\014\n\010LEFT_EYE"
    "\020\001\022\r\n\tRIGHT_EYE\020\002\022\030\n\024LEFT_OF_LEFT_EYEBRO"
    "W\020\003\022\031\n\025RIGHT_OF_LEFT_EYEBROW\020\004\022\031\n\025LEFT_O"
    "F_RIGHT_EYEBROW\020\005\022\032\n\026RIGHT_OF_RIGHT_EYEB"
    "ROW\020\006\022\031\n\025MIDPOINT_BETWEEN_EYES\020\007\022\014\n\010NOSE"
    "_TIP\020\010\022\r\n\tUPPER_LIP\020\t\022\r\n\tLOWER_LIP\020\n\022\016\n\n"
    "MOUTH_LEFT\020\013\022\017\n\013MOUTH_RIGHT\020\014\022\020\n\014MOUTH_C"
    "ENTER\020\r\022\025\n\021NOSE_BOTTOM_RIGHT\020\016\022\024\n\020NOSE_B"
    "OTTOM_LEFT\020\017\022\026\n\022NOSE_BOTTOM_CENTER\020\020\022\031\n\025"
    "LEFT_EYE_TOP_BOUNDARY\020\021\022\031\n\025LEFT_EYE_RIGH"
    "T_CORNER\020\022\022\034\n\030LEFT_EYE_BOTTOM_BOUNDARY\020\023"
    "\022\030\n\024LEFT_EYE_LEFT_CORNER\020\024\022\032\n\026RIGHT_EYE_"
    "TOP_BOUNDARY\020\025\022\032\n\026RIGHT_EYE_RIGHT_CORNER"
    "\020\026\022\035\n\031RIGHT_EYE_BOTTOM_BOUNDARY\020\027\022\031\n\025RIG"
    "HT_EYE_LEFT_CORNER\020\030\022\037\n\033LEFT_EYEBROW_UPP"
    "ER_MIDPOINT\020\031\022 \n\034RIGHT_EYEBROW_UPPER_MID"
    "POINT\020\032\022\024\n\020LEFT_EAR_TRAGION\020\033\022\025\n\021RIGHT_E"
    "AR_TRAGION\020\034\022\022\n\016LEFT_EYE_PUPIL\020\035\022\023\n\017RIGH"
    "T_EYE_PUPIL\020\036\022\025\n\021FOREHEAD_GLABELLA\020\037\022\021\n\r"
    "CHIN_GNATHION\020 \022\024\n\020CHIN_LEFT_GONION\020!\022\025\n"
    "\021CHIN_RIGHT_GONION\020\"\"4\n\014LocationInfo\022$\n\007"
    "lat_lng\030\001 \001(\0132\023.google.type.LatLng\"\'\n\010Pr"
    "operty\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\247\002\n\020"
    "EntityAnnotation\022\013\n\003mid\030\001 \001(\t\022\016\n\006locale\030"
    "\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\r\n\005score\030\004 \001("
    "\002\022\022\n\nconfidence\030\005 \001(\002\022\022\n\ntopicality\030\006 \001("
    "\002\022;\n\rbounding_poly\030\007 \001(\0132$.google.cloud."
    "vision.v1.BoundingPoly\0227\n\tlocations\030\010 \003("
    "\0132$.google.cloud.vision.v1.LocationInfo\022"
    "4\n\nproperties\030\t \003(\0132 .google.cloud.visio"
    "n.v1.Property\"\347\001\n\024SafeSearchAnnotation\0221"
    "\n\005adult\030\001 \001(\0162\".google.cloud.vision.v1.L"
    "ikelihood\0221\n\005spoof\030\002 \001(\0162\".google.cloud."
    "vision.v1.Likelihood\0223\n\007medical\030\003 \001(\0162\"."
    "google.cloud.vision.v1.Likelihood\0224\n\010vio"
    "lence\030\004 \001(\0162\".google.cloud.vision.v1.Lik"
    "elihood\"a\n\013LatLongRect\022(\n\013min_lat_lng\030\001 "
    "\001(\0132\023.google.type.LatLng\022(\n\013max_lat_lng\030"
    "\002 \001(\0132\023.google.type.LatLng\"U\n\tColorInfo\022"
    "!\n\005color\030\001 \001(\0132\022.google.type.Color\022\r\n\005sc"
    "ore\030\002 \001(\002\022\026\n\016pixel_fraction\030\003 \001(\002\"M\n\030Dom"
    "inantColorsAnnotation\0221\n\006colors\030\001 \003(\0132!."
    "google.cloud.vision.v1.ColorInfo\"\\\n\017Imag"
    "eProperties\022I\n\017dominant_colors\030\001 \001(\01320.g"
    "oogle.cloud.vision.v1.DominantColorsAnno"
    "tation\"b\n\014ImageContext\022:\n\rlat_long_rect\030"
    "\001 \001(\0132#.google.cloud.vision.v1.LatLongRe"
    "ct\022\026\n\016language_hints\030\002 \003(\t\"\264\001\n\024AnnotateI"
    "mageRequest\022,\n\005image\030\001 \001(\0132\035.google.clou"
    "d.vision.v1.Image\0221\n\010features\030\002 \003(\0132\037.go"
    "ogle.cloud.vision.v1.Feature\022;\n\rimage_co"
    "ntext\030\003 \001(\0132$.google.cloud.vision.v1.Ima"
    "geContext\"\255\004\n\025AnnotateImageResponse\022@\n\020f"
    "ace_annotations\030\001 \003(\0132&.google.cloud.vis"
    "ion.v1.FaceAnnotation\022F\n\024landmark_annota"
    "tions\030\002 \003(\0132(.google.cloud.vision.v1.Ent"
    "ityAnnotation\022B\n\020logo_annotations\030\003 \003(\0132"
    "(.google.cloud.vision.v1.EntityAnnotatio"
    "n\022C\n\021label_annotations\030\004 \003(\0132(.google.cl"
    "oud.vision.v1.EntityAnnotation\022B\n\020text_a"
    "nnotations\030\005 \003(\0132(.google.cloud.vision.v"
    "1.EntityAnnotation\022L\n\026safe_search_annota"
    "tion\030\006 \001(\0132,.google.cloud.vision.v1.Safe"
    "SearchAnnotation\022L\n\033image_properties_ann"
    "otation\030\010 \001(\0132\'.google.cloud.vision.v1.I"
    "mageProperties\022!\n\005error\030\t \001(\0132\022.google.r"
    "pc.Status\"\\\n\032BatchAnnotateImagesRequest\022"
    ">\n\010requests\030\001 \003(\0132,.google.cloud.vision."
    "v1.AnnotateImageRequest\"_\n\033BatchAnnotate"
    "ImagesResponse\022@\n\tresponses\030\001 \003(\0132-.goog"
    "le.cloud.vision.v1.AnnotateImageResponse"
    "*e\n\nLikelihood\022\013\n\007UNKNOWN\020\000\022\021\n\rVERY_UNLI"
    "KELY\020\001\022\014\n\010UNLIKELY\020\002\022\014\n\010POSSIBLE\020\003\022\n\n\006LI"
    "KELY\020\004\022\017\n\013VERY_LIKELY\020\0052\261\001\n\016ImageAnnotat"
    "or\022\236\001\n\023BatchAnnotateImages\0222.google.clou"
    "d.vision.v1.BatchAnnotateImagesRequest\0323"
    ".google.cloud.vision.v1.BatchAnnotateIma"
    "gesResponse\"\036\202\323\344\223\002\030\"\023/v1/images:annotate"
    ":\001*Bt\n\032com.google.cloud.vision.v1B\023Image"
    "AnnotatorProtoP\001Z<google.golang.org/genp"
    "roto/googleapis/cloud/vision/v1;vision\370\001"
    "\001b\006proto3", 4769);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/vision/v1/image_annotator.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::cloud::vision::v1::protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fgeometry_2eproto();
  ::google::rpc::protobuf_AddDesc_google_2frpc_2fstatus_2eproto();
  ::google::type::protobuf_AddDesc_google_2ftype_2fcolor_2eproto();
  ::google::type::protobuf_AddDesc_google_2ftype_2flatlng_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_once_);
void protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_once_,
                 &protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto {
  StaticDescriptorInitializer_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto() {
    protobuf_AddDesc_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  }
} static_descriptor_initializer_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto_;
const ::google::protobuf::EnumDescriptor* Likelihood_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Likelihood_descriptor_;
}
bool Likelihood_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Feature_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Feature_Type_descriptor_;
}
bool Feature_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Feature_Type Feature::TYPE_UNSPECIFIED;
const Feature_Type Feature::FACE_DETECTION;
const Feature_Type Feature::LANDMARK_DETECTION;
const Feature_Type Feature::LOGO_DETECTION;
const Feature_Type Feature::LABEL_DETECTION;
const Feature_Type Feature::TEXT_DETECTION;
const Feature_Type Feature::SAFE_SEARCH_DETECTION;
const Feature_Type Feature::IMAGE_PROPERTIES;
const Feature_Type Feature::Type_MIN;
const Feature_Type Feature::Type_MAX;
const int Feature::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Feature::kTypeFieldNumber;
const int Feature::kMaxResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Feature::Feature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Feature)
}
Feature::Feature(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Feature)
}

void Feature::InitAsDefaultInstance() {
}

Feature::Feature(const Feature& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Feature)
}

void Feature::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&max_results_) -
    reinterpret_cast<char*>(&type_) + sizeof(max_results_));
  _cached_size_ = 0;
}

Feature::~Feature() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Feature)
  SharedDtor();
}

void Feature::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Feature::ArenaDtor(void* object) {
  Feature* _this = reinterpret_cast< Feature* >(object);
  (void)_this;
}
void Feature::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Feature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Feature::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Feature_descriptor_;
}

const Feature& Feature::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Feature> Feature_default_instance_;

Feature* Feature::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Feature>(arena);
}

void Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Feature)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Feature, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Feature*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, max_results_);

#undef ZR_HELPER_
#undef ZR_

}

bool Feature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Feature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.vision.v1.Feature.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::vision::v1::Feature_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_results;
        break;
      }

      // optional int32 max_results = 2;
      case 2: {
        if (tag == 16) {
         parse_max_results:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_results_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Feature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Feature)
  return false;
#undef DO_
}

void Feature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Feature)
  // optional .google.cloud.vision.v1.Feature.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 max_results = 2;
  if (this->max_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_results(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Feature)
}

::google::protobuf::uint8* Feature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Feature)
  // optional .google.cloud.vision.v1.Feature.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 max_results = 2;
  if (this->max_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_results(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Feature)
  return target;
}

size_t Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Feature)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.Feature.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int32 max_results = 2;
  if (this->max_results() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_results());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Feature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Feature)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Feature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Feature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Feature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Feature)
    UnsafeMergeFrom(*source);
  }
}

void Feature::MergeFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Feature)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Feature::UnsafeMergeFrom(const Feature& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.max_results() != 0) {
    set_max_results(from.max_results());
  }
}

void Feature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Feature::CopyFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Feature)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Feature::IsInitialized() const {

  return true;
}

void Feature::Swap(Feature* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Feature temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Feature::UnsafeArenaSwap(Feature* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Feature::InternalSwap(Feature* other) {
  std::swap(type_, other->type_);
  std::swap(max_results_, other->max_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Feature::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Feature_descriptor_;
  metadata.reflection = Feature_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Feature

// optional .google.cloud.vision.v1.Feature.Type type = 1;
void Feature::clear_type() {
  type_ = 0;
}
::google::cloud::vision::v1::Feature_Type Feature::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Feature.type)
  return static_cast< ::google::cloud::vision::v1::Feature_Type >(type_);
}
void Feature::set_type(::google::cloud::vision::v1::Feature_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Feature.type)
}

// optional int32 max_results = 2;
void Feature::clear_max_results() {
  max_results_ = 0;
}
::google::protobuf::int32 Feature::max_results() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Feature.max_results)
  return max_results_;
}
void Feature::set_max_results(::google::protobuf::int32 value) {
  
  max_results_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Feature.max_results)
}

inline const Feature* Feature::internal_default_instance() {
  return &Feature_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageSource::kGcsImageUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageSource::ImageSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ImageSource)
}
ImageSource::ImageSource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ImageSource)
}

void ImageSource::InitAsDefaultInstance() {
}

ImageSource::ImageSource(const ImageSource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ImageSource)
}

void ImageSource::SharedCtor() {
  gcs_image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ImageSource::~ImageSource() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ImageSource)
  SharedDtor();
}

void ImageSource::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  gcs_image_uri_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ImageSource::ArenaDtor(void* object) {
  ImageSource* _this = reinterpret_cast< ImageSource* >(object);
  (void)_this;
}
void ImageSource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageSource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImageSource_descriptor_;
}

const ImageSource& ImageSource::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ImageSource> ImageSource_default_instance_;

ImageSource* ImageSource::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ImageSource>(arena);
}

void ImageSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ImageSource)
  gcs_image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ImageSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ImageSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gcs_image_uri = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcs_image_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcs_image_uri().data(), this->gcs_image_uri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.ImageSource.gcs_image_uri"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ImageSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ImageSource)
  return false;
#undef DO_
}

void ImageSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ImageSource)
  // optional string gcs_image_uri = 1;
  if (this->gcs_image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_image_uri().data(), this->gcs_image_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageSource.gcs_image_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gcs_image_uri(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ImageSource)
}

::google::protobuf::uint8* ImageSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ImageSource)
  // optional string gcs_image_uri = 1;
  if (this->gcs_image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcs_image_uri().data(), this->gcs_image_uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageSource.gcs_image_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gcs_image_uri(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ImageSource)
  return target;
}

size_t ImageSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ImageSource)
  size_t total_size = 0;

  // optional string gcs_image_uri = 1;
  if (this->gcs_image_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcs_image_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ImageSource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ImageSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ImageSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ImageSource)
    UnsafeMergeFrom(*source);
  }
}

void ImageSource::MergeFrom(const ImageSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ImageSource)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ImageSource::UnsafeMergeFrom(const ImageSource& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.gcs_image_uri().size() > 0) {
    set_gcs_image_uri(from.gcs_image_uri());
  }
}

void ImageSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ImageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageSource::CopyFrom(const ImageSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ImageSource)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ImageSource::IsInitialized() const {

  return true;
}

void ImageSource::Swap(ImageSource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageSource temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ImageSource::UnsafeArenaSwap(ImageSource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageSource::InternalSwap(ImageSource* other) {
  gcs_image_uri_.Swap(&other->gcs_image_uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageSource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImageSource_descriptor_;
  metadata.reflection = ImageSource_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageSource

// optional string gcs_image_uri = 1;
void ImageSource::clear_gcs_image_uri() {
  gcs_image_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ImageSource::gcs_image_uri() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  return gcs_image_uri_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImageSource::set_gcs_image_uri(const ::std::string& value) {
  
  gcs_image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
void ImageSource::set_gcs_image_uri(const char* value) {
  
  gcs_image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
void ImageSource::set_gcs_image_uri(const char* value,
    size_t size) {
  
  gcs_image_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
::std::string* ImageSource::mutable_gcs_image_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  return gcs_image_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ImageSource::release_gcs_image_uri() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  
  return gcs_image_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ImageSource::unsafe_arena_release_gcs_image_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.ImageSource.gcs_image_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return gcs_image_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ImageSource::set_allocated_gcs_image_uri(::std::string* gcs_image_uri) {
  if (gcs_image_uri != NULL) {
    
  } else {
    
  }
  gcs_image_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcs_image_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}
void ImageSource::unsafe_arena_set_allocated_gcs_image_uri(
    ::std::string* gcs_image_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (gcs_image_uri != NULL) {
    
  } else {
    
  }
  gcs_image_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      gcs_image_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageSource.gcs_image_uri)
}

inline const ImageSource* ImageSource::internal_default_instance() {
  return &ImageSource_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Image::_slow_mutable_source() {
  source_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::ImageSource >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::ImageSource* Image::_slow_release_source() {
  if (source_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::ImageSource* temp = new ::google::cloud::vision::v1::ImageSource(*source_);
    source_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::ImageSource* Image::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Image.source)
  
  ::google::cloud::vision::v1::ImageSource* temp = source_;
  source_ = NULL;
  return temp;
}
void Image::_slow_set_allocated_source(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::ImageSource** source) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*source) == NULL) {
      message_arena->Own(*source);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*source)) {
      ::google::cloud::vision::v1::ImageSource* new_source = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::ImageSource >(
            message_arena);
      new_source->CopyFrom(**source);
      *source = new_source;
    }
}
void Image::unsafe_arena_set_allocated_source(
    ::google::cloud::vision::v1::ImageSource* source) {
  if (GetArenaNoVirtual() == NULL) {
    delete source_;
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Image.source)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kContentFieldNumber;
const int Image::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Image)
}
Image::Image(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Image)
}

void Image::InitAsDefaultInstance() {
  source_ = const_cast< ::google::cloud::vision::v1::ImageSource*>(
      ::google::cloud::vision::v1::ImageSource::internal_default_instance());
}

Image::Image(const Image& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Image)
}

void Image::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ = NULL;
  _cached_size_ = 0;
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  content_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &Image_default_instance_.get()) {
    delete source_;
  }
}

void Image::ArenaDtor(void* object) {
  Image* _this = reinterpret_cast< Image* >(object);
  (void)_this;
}
void Image::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Image_descriptor_;
}

const Image& Image::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Image> Image_default_instance_;

Image* Image::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Image>(arena);
}

void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Image)
  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_source;
        break;
      }

      // optional .google.cloud.vision.v1.ImageSource source = 2;
      case 2: {
        if (tag == 18) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Image)
  // optional bytes content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->content(), output);
  }

  // optional .google.cloud.vision.v1.ImageSource source = 2;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->source_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Image)
  // optional bytes content = 1;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->content(), target);
  }

  // optional .google.cloud.vision.v1.ImageSource source = 2;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->source_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Image)
  size_t total_size = 0;

  // optional bytes content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // optional .google.cloud.vision.v1.ImageSource source = 2;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Image)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Image)
    UnsafeMergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Image)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Image::UnsafeMergeFrom(const Image& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.content().size() > 0) {
    set_content(from.content());
  }
  if (from.has_source()) {
    mutable_source()->::google::cloud::vision::v1::ImageSource::MergeFrom(from.source());
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Image)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Image::IsInitialized() const {

  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Image temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Image::UnsafeArenaSwap(Image* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  content_.Swap(&other->content_);
  std::swap(source_, other->source_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Image_descriptor_;
  metadata.reflection = Image_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Image

// optional bytes content = 1;
void Image::clear_content() {
  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Image::content() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Image.content)
  return content_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Image::set_content(const ::std::string& value) {
  
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Image.content)
}
void Image::set_content(const char* value) {
  
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.Image.content)
}
void Image::set_content(const void* value,
    size_t size) {
  
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.Image.content)
}
::std::string* Image::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Image.content)
  return content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Image::release_content() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Image.content)
  
  return content_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Image::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Image.content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return content_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Image::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Image.content)
}
void Image::unsafe_arena_set_allocated_content(
    ::std::string* content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (content != NULL) {
    
  } else {
    
  }
  content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      content, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Image.content)
}

// optional .google.cloud.vision.v1.ImageSource source = 2;
bool Image::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
void Image::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
}
const ::google::cloud::vision::v1::ImageSource& Image::source() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Image.source)
  return source_ != NULL ? *source_
                         : *::google::cloud::vision::v1::ImageSource::internal_default_instance();
}
::google::cloud::vision::v1::ImageSource* Image::mutable_source() {
  
  if (source_ == NULL) {
    _slow_mutable_source();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Image.source)
  return source_;
}
::google::cloud::vision::v1::ImageSource* Image::release_source() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Image.source)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_source();
  } else {
    ::google::cloud::vision::v1::ImageSource* temp = source_;
    source_ = NULL;
    return temp;
  }
}
 void Image::set_allocated_source(::google::cloud::vision::v1::ImageSource* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete source_;
  }
  if (source != NULL) {
    _slow_set_allocated_source(message_arena, &source);
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Image.source)
}

inline const Image* Image::internal_default_instance() {
  return &Image_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* FaceAnnotation_Landmark_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FaceAnnotation_Landmark_Type_descriptor_;
}
bool FaceAnnotation_Landmark_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::UNKNOWN_LANDMARK;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_OF_LEFT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_OF_LEFT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_OF_RIGHT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_OF_RIGHT_EYEBROW;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MIDPOINT_BETWEEN_EYES;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_TIP;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::UPPER_LIP;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LOWER_LIP;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MOUTH_LEFT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MOUTH_RIGHT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::MOUTH_CENTER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_BOTTOM_RIGHT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_BOTTOM_LEFT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::NOSE_BOTTOM_CENTER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_TOP_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_RIGHT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_BOTTOM_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_LEFT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_TOP_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_RIGHT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_BOTTOM_BOUNDARY;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_LEFT_CORNER;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYEBROW_UPPER_MIDPOINT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYEBROW_UPPER_MIDPOINT;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EAR_TRAGION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EAR_TRAGION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::LEFT_EYE_PUPIL;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::RIGHT_EYE_PUPIL;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::FOREHEAD_GLABELLA;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::CHIN_GNATHION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::CHIN_LEFT_GONION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::CHIN_RIGHT_GONION;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::Type_MIN;
const FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::Type_MAX;
const int FaceAnnotation_Landmark::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
void FaceAnnotation_Landmark::_slow_mutable_position() {
  position_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::Position >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::Position* FaceAnnotation_Landmark::_slow_release_position() {
  if (position_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::Position* temp = new ::google::cloud::vision::v1::Position(*position_);
    position_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::Position* FaceAnnotation_Landmark::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
  
  ::google::cloud::vision::v1::Position* temp = position_;
  position_ = NULL;
  return temp;
}
void FaceAnnotation_Landmark::_slow_set_allocated_position(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::Position** position) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*position) == NULL) {
      message_arena->Own(*position);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*position)) {
      ::google::cloud::vision::v1::Position* new_position = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::Position >(
            message_arena);
      new_position->CopyFrom(**position);
      *position = new_position;
    }
}
void FaceAnnotation_Landmark::unsafe_arena_set_allocated_position(
    ::google::cloud::vision::v1::Position* position) {
  if (GetArenaNoVirtual() == NULL) {
    delete position_;
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceAnnotation_Landmark::kTypeFieldNumber;
const int FaceAnnotation_Landmark::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceAnnotation_Landmark::FaceAnnotation_Landmark()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
}
FaceAnnotation_Landmark::FaceAnnotation_Landmark(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
}

void FaceAnnotation_Landmark::InitAsDefaultInstance() {
  position_ = const_cast< ::google::cloud::vision::v1::Position*>(
      ::google::cloud::vision::v1::Position::internal_default_instance());
}

FaceAnnotation_Landmark::FaceAnnotation_Landmark(const FaceAnnotation_Landmark& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
}

void FaceAnnotation_Landmark::SharedCtor() {
  position_ = NULL;
  type_ = 0;
  _cached_size_ = 0;
}

FaceAnnotation_Landmark::~FaceAnnotation_Landmark() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.FaceAnnotation.Landmark)
  SharedDtor();
}

void FaceAnnotation_Landmark::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &FaceAnnotation_Landmark_default_instance_.get()) {
    delete position_;
  }
}

void FaceAnnotation_Landmark::ArenaDtor(void* object) {
  FaceAnnotation_Landmark* _this = reinterpret_cast< FaceAnnotation_Landmark* >(object);
  (void)_this;
}
void FaceAnnotation_Landmark::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FaceAnnotation_Landmark::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceAnnotation_Landmark::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FaceAnnotation_Landmark_descriptor_;
}

const FaceAnnotation_Landmark& FaceAnnotation_Landmark::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FaceAnnotation_Landmark> FaceAnnotation_Landmark_default_instance_;

FaceAnnotation_Landmark* FaceAnnotation_Landmark::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FaceAnnotation_Landmark>(arena);
}

void FaceAnnotation_Landmark::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  type_ = 0;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}

bool FaceAnnotation_Landmark::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
      case 3: {
        if (tag == 24) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_position;
        break;
      }

      // optional .google.cloud.vision.v1.Position position = 4;
      case 4: {
        if (tag == 34) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.FaceAnnotation.Landmark)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.FaceAnnotation.Landmark)
  return false;
#undef DO_
}

void FaceAnnotation_Landmark::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  // optional .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional .google.cloud.vision.v1.Position position = 4;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->position_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.FaceAnnotation.Landmark)
}

::google::protobuf::uint8* FaceAnnotation_Landmark::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  // optional .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional .google.cloud.vision.v1.Position position = 4;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->position_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.FaceAnnotation.Landmark)
  return target;
}

size_t FaceAnnotation_Landmark::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .google.cloud.vision.v1.Position position = 4;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceAnnotation_Landmark::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FaceAnnotation_Landmark* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceAnnotation_Landmark>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.FaceAnnotation.Landmark)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.FaceAnnotation.Landmark)
    UnsafeMergeFrom(*source);
  }
}

void FaceAnnotation_Landmark::MergeFrom(const FaceAnnotation_Landmark& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FaceAnnotation_Landmark::UnsafeMergeFrom(const FaceAnnotation_Landmark& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.has_position()) {
    mutable_position()->::google::cloud::vision::v1::Position::MergeFrom(from.position());
  }
}

void FaceAnnotation_Landmark::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceAnnotation_Landmark::CopyFrom(const FaceAnnotation_Landmark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.FaceAnnotation.Landmark)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FaceAnnotation_Landmark::IsInitialized() const {

  return true;
}

void FaceAnnotation_Landmark::Swap(FaceAnnotation_Landmark* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FaceAnnotation_Landmark temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void FaceAnnotation_Landmark::UnsafeArenaSwap(FaceAnnotation_Landmark* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FaceAnnotation_Landmark::InternalSwap(FaceAnnotation_Landmark* other) {
  std::swap(type_, other->type_);
  std::swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceAnnotation_Landmark::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FaceAnnotation_Landmark_descriptor_;
  metadata.reflection = FaceAnnotation_Landmark_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

void FaceAnnotation::_slow_mutable_bounding_poly() {
  bounding_poly_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::_slow_release_bounding_poly() {
  if (bounding_poly_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = new ::google::cloud::vision::v1::BoundingPoly(*bounding_poly_);
    bounding_poly_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::unsafe_arena_release_bounding_poly() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
  
  ::google::cloud::vision::v1::BoundingPoly* temp = bounding_poly_;
  bounding_poly_ = NULL;
  return temp;
}
void FaceAnnotation::_slow_set_allocated_bounding_poly(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_poly) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bounding_poly) == NULL) {
      message_arena->Own(*bounding_poly);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bounding_poly)) {
      ::google::cloud::vision::v1::BoundingPoly* new_bounding_poly = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
            message_arena);
      new_bounding_poly->CopyFrom(**bounding_poly);
      *bounding_poly = new_bounding_poly;
    }
}
void FaceAnnotation::unsafe_arena_set_allocated_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
}
void FaceAnnotation::_slow_mutable_fd_bounding_poly() {
  fd_bounding_poly_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::_slow_release_fd_bounding_poly() {
  if (fd_bounding_poly_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = new ::google::cloud::vision::v1::BoundingPoly(*fd_bounding_poly_);
    fd_bounding_poly_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::unsafe_arena_release_fd_bounding_poly() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
  
  ::google::cloud::vision::v1::BoundingPoly* temp = fd_bounding_poly_;
  fd_bounding_poly_ = NULL;
  return temp;
}
void FaceAnnotation::_slow_set_allocated_fd_bounding_poly(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** fd_bounding_poly) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*fd_bounding_poly) == NULL) {
      message_arena->Own(*fd_bounding_poly);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*fd_bounding_poly)) {
      ::google::cloud::vision::v1::BoundingPoly* new_fd_bounding_poly = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
            message_arena);
      new_fd_bounding_poly->CopyFrom(**fd_bounding_poly);
      *fd_bounding_poly = new_fd_bounding_poly;
    }
}
void FaceAnnotation::unsafe_arena_set_allocated_fd_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* fd_bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete fd_bounding_poly_;
  }
  fd_bounding_poly_ = fd_bounding_poly;
  if (fd_bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceAnnotation::kBoundingPolyFieldNumber;
const int FaceAnnotation::kFdBoundingPolyFieldNumber;
const int FaceAnnotation::kLandmarksFieldNumber;
const int FaceAnnotation::kRollAngleFieldNumber;
const int FaceAnnotation::kPanAngleFieldNumber;
const int FaceAnnotation::kTiltAngleFieldNumber;
const int FaceAnnotation::kDetectionConfidenceFieldNumber;
const int FaceAnnotation::kLandmarkingConfidenceFieldNumber;
const int FaceAnnotation::kJoyLikelihoodFieldNumber;
const int FaceAnnotation::kSorrowLikelihoodFieldNumber;
const int FaceAnnotation::kAngerLikelihoodFieldNumber;
const int FaceAnnotation::kSurpriseLikelihoodFieldNumber;
const int FaceAnnotation::kUnderExposedLikelihoodFieldNumber;
const int FaceAnnotation::kBlurredLikelihoodFieldNumber;
const int FaceAnnotation::kHeadwearLikelihoodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceAnnotation::FaceAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.FaceAnnotation)
}
FaceAnnotation::FaceAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  landmarks_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.FaceAnnotation)
}

void FaceAnnotation::InitAsDefaultInstance() {
  bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
  fd_bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
}

FaceAnnotation::FaceAnnotation(const FaceAnnotation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.FaceAnnotation)
}

void FaceAnnotation::SharedCtor() {
  bounding_poly_ = NULL;
  fd_bounding_poly_ = NULL;
  ::memset(&roll_angle_, 0, reinterpret_cast<char*>(&headwear_likelihood_) -
    reinterpret_cast<char*>(&roll_angle_) + sizeof(headwear_likelihood_));
  _cached_size_ = 0;
}

FaceAnnotation::~FaceAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.FaceAnnotation)
  SharedDtor();
}

void FaceAnnotation::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &FaceAnnotation_default_instance_.get()) {
    delete bounding_poly_;
    delete fd_bounding_poly_;
  }
}

void FaceAnnotation::ArenaDtor(void* object) {
  FaceAnnotation* _this = reinterpret_cast< FaceAnnotation* >(object);
  (void)_this;
}
void FaceAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FaceAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceAnnotation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FaceAnnotation_descriptor_;
}

const FaceAnnotation& FaceAnnotation::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FaceAnnotation> FaceAnnotation_default_instance_;

FaceAnnotation* FaceAnnotation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FaceAnnotation>(arena);
}

void FaceAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.FaceAnnotation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FaceAnnotation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FaceAnnotation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roll_angle_, landmarking_confidence_);
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) delete bounding_poly_;
  bounding_poly_ = NULL;
  if (GetArenaNoVirtual() == NULL && fd_bounding_poly_ != NULL) delete fd_bounding_poly_;
  fd_bounding_poly_ = NULL;
  ZR_(joy_likelihood_, headwear_likelihood_);

#undef ZR_HELPER_
#undef ZR_

  landmarks_.Clear();
}

bool FaceAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.FaceAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fd_bounding_poly;
        break;
      }

      // optional .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
      case 2: {
        if (tag == 18) {
         parse_fd_bounding_poly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fd_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_landmarks;
        break;
      }

      // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
      case 3: {
        if (tag == 26) {
         parse_landmarks:
          DO_(input->IncrementRecursionDepth());
         parse_loop_landmarks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_landmarks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_landmarks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(37)) goto parse_roll_angle;
        break;
      }

      // optional float roll_angle = 4;
      case 4: {
        if (tag == 37) {
         parse_roll_angle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_angle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_pan_angle;
        break;
      }

      // optional float pan_angle = 5;
      case 5: {
        if (tag == 45) {
         parse_pan_angle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pan_angle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_tilt_angle;
        break;
      }

      // optional float tilt_angle = 6;
      case 6: {
        if (tag == 53) {
         parse_tilt_angle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tilt_angle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_detection_confidence;
        break;
      }

      // optional float detection_confidence = 7;
      case 7: {
        if (tag == 61) {
         parse_detection_confidence:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &detection_confidence_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_landmarking_confidence;
        break;
      }

      // optional float landmarking_confidence = 8;
      case 8: {
        if (tag == 69) {
         parse_landmarking_confidence:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &landmarking_confidence_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_joy_likelihood;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
      case 9: {
        if (tag == 72) {
         parse_joy_likelihood:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_joy_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_sorrow_likelihood;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
      case 10: {
        if (tag == 80) {
         parse_sorrow_likelihood:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sorrow_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_anger_likelihood;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
      case 11: {
        if (tag == 88) {
         parse_anger_likelihood:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_anger_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_surprise_likelihood;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
      case 12: {
        if (tag == 96) {
         parse_surprise_likelihood:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_surprise_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_under_exposed_likelihood;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
      case 13: {
        if (tag == 104) {
         parse_under_exposed_likelihood:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_under_exposed_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_blurred_likelihood;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
      case 14: {
        if (tag == 112) {
         parse_blurred_likelihood:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_blurred_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_headwear_likelihood;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
      case 15: {
        if (tag == 120) {
         parse_headwear_likelihood:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_headwear_likelihood(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.FaceAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.FaceAnnotation)
  return false;
#undef DO_
}

void FaceAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.FaceAnnotation)
  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bounding_poly_, output);
  }

  // optional .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
  if (this->has_fd_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->fd_bounding_poly_, output);
  }

  // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
  for (unsigned int i = 0, n = this->landmarks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->landmarks(i), output);
  }

  // optional float roll_angle = 4;
  if (this->roll_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->roll_angle(), output);
  }

  // optional float pan_angle = 5;
  if (this->pan_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pan_angle(), output);
  }

  // optional float tilt_angle = 6;
  if (this->tilt_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->tilt_angle(), output);
  }

  // optional float detection_confidence = 7;
  if (this->detection_confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->detection_confidence(), output);
  }

  // optional float landmarking_confidence = 8;
  if (this->landmarking_confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->landmarking_confidence(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
  if (this->joy_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->joy_likelihood(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
  if (this->sorrow_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->sorrow_likelihood(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
  if (this->anger_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->anger_likelihood(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
  if (this->surprise_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->surprise_likelihood(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
  if (this->under_exposed_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->under_exposed_likelihood(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
  if (this->blurred_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->blurred_likelihood(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
  if (this->headwear_likelihood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->headwear_likelihood(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.FaceAnnotation)
}

::google::protobuf::uint8* FaceAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.FaceAnnotation)
  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bounding_poly_, false, target);
  }

  // optional .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
  if (this->has_fd_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->fd_bounding_poly_, false, target);
  }

  // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
  for (unsigned int i = 0, n = this->landmarks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->landmarks(i), false, target);
  }

  // optional float roll_angle = 4;
  if (this->roll_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->roll_angle(), target);
  }

  // optional float pan_angle = 5;
  if (this->pan_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pan_angle(), target);
  }

  // optional float tilt_angle = 6;
  if (this->tilt_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->tilt_angle(), target);
  }

  // optional float detection_confidence = 7;
  if (this->detection_confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->detection_confidence(), target);
  }

  // optional float landmarking_confidence = 8;
  if (this->landmarking_confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->landmarking_confidence(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
  if (this->joy_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->joy_likelihood(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
  if (this->sorrow_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->sorrow_likelihood(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
  if (this->anger_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->anger_likelihood(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
  if (this->surprise_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->surprise_likelihood(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
  if (this->under_exposed_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->under_exposed_likelihood(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
  if (this->blurred_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->blurred_likelihood(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
  if (this->headwear_likelihood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->headwear_likelihood(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.FaceAnnotation)
  return target;
}

size_t FaceAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.FaceAnnotation)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
  if (this->has_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bounding_poly_);
  }

  // optional .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
  if (this->has_fd_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fd_bounding_poly_);
  }

  // optional float roll_angle = 4;
  if (this->roll_angle() != 0) {
    total_size += 1 + 4;
  }

  // optional float pan_angle = 5;
  if (this->pan_angle() != 0) {
    total_size += 1 + 4;
  }

  // optional float tilt_angle = 6;
  if (this->tilt_angle() != 0) {
    total_size += 1 + 4;
  }

  // optional float detection_confidence = 7;
  if (this->detection_confidence() != 0) {
    total_size += 1 + 4;
  }

  // optional float landmarking_confidence = 8;
  if (this->landmarking_confidence() != 0) {
    total_size += 1 + 4;
  }

  // optional .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
  if (this->joy_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->joy_likelihood());
  }

  // optional .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
  if (this->sorrow_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sorrow_likelihood());
  }

  // optional .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
  if (this->anger_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->anger_likelihood());
  }

  // optional .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
  if (this->surprise_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->surprise_likelihood());
  }

  // optional .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
  if (this->under_exposed_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->under_exposed_likelihood());
  }

  // optional .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
  if (this->blurred_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->blurred_likelihood());
  }

  // optional .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
  if (this->headwear_likelihood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->headwear_likelihood());
  }

  // repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
  {
    unsigned int count = this->landmarks_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->landmarks(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.FaceAnnotation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FaceAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.FaceAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.FaceAnnotation)
    UnsafeMergeFrom(*source);
  }
}

void FaceAnnotation::MergeFrom(const FaceAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.FaceAnnotation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FaceAnnotation::UnsafeMergeFrom(const FaceAnnotation& from) {
  GOOGLE_DCHECK(&from != this);
  landmarks_.MergeFrom(from.landmarks_);
  if (from.has_bounding_poly()) {
    mutable_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_poly());
  }
  if (from.has_fd_bounding_poly()) {
    mutable_fd_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.fd_bounding_poly());
  }
  if (from.roll_angle() != 0) {
    set_roll_angle(from.roll_angle());
  }
  if (from.pan_angle() != 0) {
    set_pan_angle(from.pan_angle());
  }
  if (from.tilt_angle() != 0) {
    set_tilt_angle(from.tilt_angle());
  }
  if (from.detection_confidence() != 0) {
    set_detection_confidence(from.detection_confidence());
  }
  if (from.landmarking_confidence() != 0) {
    set_landmarking_confidence(from.landmarking_confidence());
  }
  if (from.joy_likelihood() != 0) {
    set_joy_likelihood(from.joy_likelihood());
  }
  if (from.sorrow_likelihood() != 0) {
    set_sorrow_likelihood(from.sorrow_likelihood());
  }
  if (from.anger_likelihood() != 0) {
    set_anger_likelihood(from.anger_likelihood());
  }
  if (from.surprise_likelihood() != 0) {
    set_surprise_likelihood(from.surprise_likelihood());
  }
  if (from.under_exposed_likelihood() != 0) {
    set_under_exposed_likelihood(from.under_exposed_likelihood());
  }
  if (from.blurred_likelihood() != 0) {
    set_blurred_likelihood(from.blurred_likelihood());
  }
  if (from.headwear_likelihood() != 0) {
    set_headwear_likelihood(from.headwear_likelihood());
  }
}

void FaceAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.FaceAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceAnnotation::CopyFrom(const FaceAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.FaceAnnotation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FaceAnnotation::IsInitialized() const {

  return true;
}

void FaceAnnotation::Swap(FaceAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FaceAnnotation temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void FaceAnnotation::UnsafeArenaSwap(FaceAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FaceAnnotation::InternalSwap(FaceAnnotation* other) {
  std::swap(bounding_poly_, other->bounding_poly_);
  std::swap(fd_bounding_poly_, other->fd_bounding_poly_);
  landmarks_.UnsafeArenaSwap(&other->landmarks_);
  std::swap(roll_angle_, other->roll_angle_);
  std::swap(pan_angle_, other->pan_angle_);
  std::swap(tilt_angle_, other->tilt_angle_);
  std::swap(detection_confidence_, other->detection_confidence_);
  std::swap(landmarking_confidence_, other->landmarking_confidence_);
  std::swap(joy_likelihood_, other->joy_likelihood_);
  std::swap(sorrow_likelihood_, other->sorrow_likelihood_);
  std::swap(anger_likelihood_, other->anger_likelihood_);
  std::swap(surprise_likelihood_, other->surprise_likelihood_);
  std::swap(under_exposed_likelihood_, other->under_exposed_likelihood_);
  std::swap(blurred_likelihood_, other->blurred_likelihood_);
  std::swap(headwear_likelihood_, other->headwear_likelihood_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceAnnotation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FaceAnnotation_descriptor_;
  metadata.reflection = FaceAnnotation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FaceAnnotation_Landmark

// optional .google.cloud.vision.v1.FaceAnnotation.Landmark.Type type = 3;
void FaceAnnotation_Landmark::clear_type() {
  type_ = 0;
}
::google::cloud::vision::v1::FaceAnnotation_Landmark_Type FaceAnnotation_Landmark::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.Landmark.type)
  return static_cast< ::google::cloud::vision::v1::FaceAnnotation_Landmark_Type >(type_);
}
void FaceAnnotation_Landmark::set_type(::google::cloud::vision::v1::FaceAnnotation_Landmark_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.Landmark.type)
}

// optional .google.cloud.vision.v1.Position position = 4;
bool FaceAnnotation_Landmark::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void FaceAnnotation_Landmark::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::google::cloud::vision::v1::Position& FaceAnnotation_Landmark::position() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
  return position_ != NULL ? *position_
                         : *::google::cloud::vision::v1::Position::internal_default_instance();
}
::google::cloud::vision::v1::Position* FaceAnnotation_Landmark::mutable_position() {
  
  if (position_ == NULL) {
    _slow_mutable_position();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
  return position_;
}
::google::cloud::vision::v1::Position* FaceAnnotation_Landmark::release_position() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_position();
  } else {
    ::google::cloud::vision::v1::Position* temp = position_;
    position_ = NULL;
    return temp;
  }
}
 void FaceAnnotation_Landmark::set_allocated_position(::google::cloud::vision::v1::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position != NULL) {
    _slow_set_allocated_position(message_arena, &position);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.FaceAnnotation.Landmark.position)
}

inline const FaceAnnotation_Landmark* FaceAnnotation_Landmark::internal_default_instance() {
  return &FaceAnnotation_Landmark_default_instance_.get();
}
// -------------------------------------------------------------------

// FaceAnnotation

// optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 1;
bool FaceAnnotation::has_bounding_poly() const {
  return this != internal_default_instance() && bounding_poly_ != NULL;
}
void FaceAnnotation::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) delete bounding_poly_;
  bounding_poly_ = NULL;
}
const ::google::cloud::vision::v1::BoundingPoly& FaceAnnotation::bounding_poly() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
  return bounding_poly_ != NULL ? *bounding_poly_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::mutable_bounding_poly() {
  
  if (bounding_poly_ == NULL) {
    _slow_mutable_bounding_poly();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
  return bounding_poly_;
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::release_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_poly();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_poly_;
    bounding_poly_ = NULL;
    return temp;
  }
}
 void FaceAnnotation::set_allocated_bounding_poly(::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_poly_;
  }
  if (bounding_poly != NULL) {
    _slow_set_allocated_bounding_poly(message_arena, &bounding_poly);
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.FaceAnnotation.bounding_poly)
}

// optional .google.cloud.vision.v1.BoundingPoly fd_bounding_poly = 2;
bool FaceAnnotation::has_fd_bounding_poly() const {
  return this != internal_default_instance() && fd_bounding_poly_ != NULL;
}
void FaceAnnotation::clear_fd_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && fd_bounding_poly_ != NULL) delete fd_bounding_poly_;
  fd_bounding_poly_ = NULL;
}
const ::google::cloud::vision::v1::BoundingPoly& FaceAnnotation::fd_bounding_poly() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
  return fd_bounding_poly_ != NULL ? *fd_bounding_poly_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::mutable_fd_bounding_poly() {
  
  if (fd_bounding_poly_ == NULL) {
    _slow_mutable_fd_bounding_poly();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
  return fd_bounding_poly_;
}
::google::cloud::vision::v1::BoundingPoly* FaceAnnotation::release_fd_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_fd_bounding_poly();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = fd_bounding_poly_;
    fd_bounding_poly_ = NULL;
    return temp;
  }
}
 void FaceAnnotation::set_allocated_fd_bounding_poly(::google::cloud::vision::v1::BoundingPoly* fd_bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fd_bounding_poly_;
  }
  if (fd_bounding_poly != NULL) {
    _slow_set_allocated_fd_bounding_poly(message_arena, &fd_bounding_poly);
  }
  fd_bounding_poly_ = fd_bounding_poly;
  if (fd_bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.FaceAnnotation.fd_bounding_poly)
}

// repeated .google.cloud.vision.v1.FaceAnnotation.Landmark landmarks = 3;
int FaceAnnotation::landmarks_size() const {
  return landmarks_.size();
}
void FaceAnnotation::clear_landmarks() {
  landmarks_.Clear();
}
const ::google::cloud::vision::v1::FaceAnnotation_Landmark& FaceAnnotation::landmarks(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_.Get(index);
}
::google::cloud::vision::v1::FaceAnnotation_Landmark* FaceAnnotation::mutable_landmarks(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_.Mutable(index);
}
::google::cloud::vision::v1::FaceAnnotation_Landmark* FaceAnnotation::add_landmarks() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation_Landmark >*
FaceAnnotation::mutable_landmarks() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return &landmarks_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation_Landmark >&
FaceAnnotation::landmarks() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.FaceAnnotation.landmarks)
  return landmarks_;
}

// optional float roll_angle = 4;
void FaceAnnotation::clear_roll_angle() {
  roll_angle_ = 0;
}
float FaceAnnotation::roll_angle() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.roll_angle)
  return roll_angle_;
}
void FaceAnnotation::set_roll_angle(float value) {
  
  roll_angle_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.roll_angle)
}

// optional float pan_angle = 5;
void FaceAnnotation::clear_pan_angle() {
  pan_angle_ = 0;
}
float FaceAnnotation::pan_angle() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.pan_angle)
  return pan_angle_;
}
void FaceAnnotation::set_pan_angle(float value) {
  
  pan_angle_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.pan_angle)
}

// optional float tilt_angle = 6;
void FaceAnnotation::clear_tilt_angle() {
  tilt_angle_ = 0;
}
float FaceAnnotation::tilt_angle() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.tilt_angle)
  return tilt_angle_;
}
void FaceAnnotation::set_tilt_angle(float value) {
  
  tilt_angle_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.tilt_angle)
}

// optional float detection_confidence = 7;
void FaceAnnotation::clear_detection_confidence() {
  detection_confidence_ = 0;
}
float FaceAnnotation::detection_confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.detection_confidence)
  return detection_confidence_;
}
void FaceAnnotation::set_detection_confidence(float value) {
  
  detection_confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.detection_confidence)
}

// optional float landmarking_confidence = 8;
void FaceAnnotation::clear_landmarking_confidence() {
  landmarking_confidence_ = 0;
}
float FaceAnnotation::landmarking_confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.landmarking_confidence)
  return landmarking_confidence_;
}
void FaceAnnotation::set_landmarking_confidence(float value) {
  
  landmarking_confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.landmarking_confidence)
}

// optional .google.cloud.vision.v1.Likelihood joy_likelihood = 9;
void FaceAnnotation::clear_joy_likelihood() {
  joy_likelihood_ = 0;
}
::google::cloud::vision::v1::Likelihood FaceAnnotation::joy_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.joy_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(joy_likelihood_);
}
void FaceAnnotation::set_joy_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  joy_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.joy_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood sorrow_likelihood = 10;
void FaceAnnotation::clear_sorrow_likelihood() {
  sorrow_likelihood_ = 0;
}
::google::cloud::vision::v1::Likelihood FaceAnnotation::sorrow_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.sorrow_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(sorrow_likelihood_);
}
void FaceAnnotation::set_sorrow_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  sorrow_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.sorrow_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood anger_likelihood = 11;
void FaceAnnotation::clear_anger_likelihood() {
  anger_likelihood_ = 0;
}
::google::cloud::vision::v1::Likelihood FaceAnnotation::anger_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.anger_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(anger_likelihood_);
}
void FaceAnnotation::set_anger_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  anger_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.anger_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood surprise_likelihood = 12;
void FaceAnnotation::clear_surprise_likelihood() {
  surprise_likelihood_ = 0;
}
::google::cloud::vision::v1::Likelihood FaceAnnotation::surprise_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.surprise_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(surprise_likelihood_);
}
void FaceAnnotation::set_surprise_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  surprise_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.surprise_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood under_exposed_likelihood = 13;
void FaceAnnotation::clear_under_exposed_likelihood() {
  under_exposed_likelihood_ = 0;
}
::google::cloud::vision::v1::Likelihood FaceAnnotation::under_exposed_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.under_exposed_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(under_exposed_likelihood_);
}
void FaceAnnotation::set_under_exposed_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  under_exposed_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.under_exposed_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood blurred_likelihood = 14;
void FaceAnnotation::clear_blurred_likelihood() {
  blurred_likelihood_ = 0;
}
::google::cloud::vision::v1::Likelihood FaceAnnotation::blurred_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.blurred_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(blurred_likelihood_);
}
void FaceAnnotation::set_blurred_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  blurred_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.blurred_likelihood)
}

// optional .google.cloud.vision.v1.Likelihood headwear_likelihood = 15;
void FaceAnnotation::clear_headwear_likelihood() {
  headwear_likelihood_ = 0;
}
::google::cloud::vision::v1::Likelihood FaceAnnotation::headwear_likelihood() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.FaceAnnotation.headwear_likelihood)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(headwear_likelihood_);
}
void FaceAnnotation::set_headwear_likelihood(::google::cloud::vision::v1::Likelihood value) {
  
  headwear_likelihood_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.FaceAnnotation.headwear_likelihood)
}

inline const FaceAnnotation* FaceAnnotation::internal_default_instance() {
  return &FaceAnnotation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void LocationInfo::_slow_mutable_lat_lng() {
  lat_lng_ = ::google::protobuf::Arena::Create< ::google::type::LatLng >(
      GetArenaNoVirtual());
}
::google::type::LatLng* LocationInfo::_slow_release_lat_lng() {
  if (lat_lng_ == NULL) {
    return NULL;
  } else {
    ::google::type::LatLng* temp = new ::google::type::LatLng(*lat_lng_);
    lat_lng_ = NULL;
    return temp;
  }
}
::google::type::LatLng* LocationInfo::unsafe_arena_release_lat_lng() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.LocationInfo.lat_lng)
  
  ::google::type::LatLng* temp = lat_lng_;
  lat_lng_ = NULL;
  return temp;
}
void LocationInfo::unsafe_arena_set_allocated_lat_lng(
    ::google::type::LatLng* lat_lng) {
  if (GetArenaNoVirtual() == NULL) {
    delete lat_lng_;
  }
  lat_lng_ = lat_lng;
  if (lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.LocationInfo.lat_lng)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationInfo::kLatLngFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationInfo::LocationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.LocationInfo)
}
LocationInfo::LocationInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.LocationInfo)
}

void LocationInfo::InitAsDefaultInstance() {
  lat_lng_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
}

LocationInfo::LocationInfo(const LocationInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.LocationInfo)
}

void LocationInfo::SharedCtor() {
  lat_lng_ = NULL;
  _cached_size_ = 0;
}

LocationInfo::~LocationInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.LocationInfo)
  SharedDtor();
}

void LocationInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &LocationInfo_default_instance_.get()) {
    delete lat_lng_;
  }
}

void LocationInfo::ArenaDtor(void* object) {
  LocationInfo* _this = reinterpret_cast< LocationInfo* >(object);
  (void)_this;
}
void LocationInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LocationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocationInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LocationInfo_descriptor_;
}

const LocationInfo& LocationInfo::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LocationInfo> LocationInfo_default_instance_;

LocationInfo* LocationInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<LocationInfo>(arena);
}

void LocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.LocationInfo)
  if (GetArenaNoVirtual() == NULL && lat_lng_ != NULL) delete lat_lng_;
  lat_lng_ = NULL;
}

bool LocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.LocationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.type.LatLng lat_lng = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lat_lng()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.LocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.LocationInfo)
  return false;
#undef DO_
}

void LocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.LocationInfo)
  // optional .google.type.LatLng lat_lng = 1;
  if (this->has_lat_lng()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lat_lng_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.LocationInfo)
}

::google::protobuf::uint8* LocationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.LocationInfo)
  // optional .google.type.LatLng lat_lng = 1;
  if (this->has_lat_lng()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lat_lng_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.LocationInfo)
  return target;
}

size_t LocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.LocationInfo)
  size_t total_size = 0;

  // optional .google.type.LatLng lat_lng = 1;
  if (this->has_lat_lng()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lat_lng_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.LocationInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LocationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.LocationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.LocationInfo)
    UnsafeMergeFrom(*source);
  }
}

void LocationInfo::MergeFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.LocationInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LocationInfo::UnsafeMergeFrom(const LocationInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_lat_lng()) {
    mutable_lat_lng()->::google::type::LatLng::MergeFrom(from.lat_lng());
  }
}

void LocationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.LocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationInfo::CopyFrom(const LocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.LocationInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LocationInfo::IsInitialized() const {

  return true;
}

void LocationInfo::Swap(LocationInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LocationInfo temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void LocationInfo::UnsafeArenaSwap(LocationInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LocationInfo::InternalSwap(LocationInfo* other) {
  std::swap(lat_lng_, other->lat_lng_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocationInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LocationInfo_descriptor_;
  metadata.reflection = LocationInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocationInfo

// optional .google.type.LatLng lat_lng = 1;
bool LocationInfo::has_lat_lng() const {
  return this != internal_default_instance() && lat_lng_ != NULL;
}
void LocationInfo::clear_lat_lng() {
  if (GetArenaNoVirtual() == NULL && lat_lng_ != NULL) delete lat_lng_;
  lat_lng_ = NULL;
}
const ::google::type::LatLng& LocationInfo::lat_lng() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.LocationInfo.lat_lng)
  return lat_lng_ != NULL ? *lat_lng_
                         : *::google::type::LatLng::internal_default_instance();
}
::google::type::LatLng* LocationInfo::mutable_lat_lng() {
  
  if (lat_lng_ == NULL) {
    _slow_mutable_lat_lng();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.LocationInfo.lat_lng)
  return lat_lng_;
}
::google::type::LatLng* LocationInfo::release_lat_lng() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.LocationInfo.lat_lng)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_lat_lng();
  } else {
    ::google::type::LatLng* temp = lat_lng_;
    lat_lng_ = NULL;
    return temp;
  }
}
 void LocationInfo::set_allocated_lat_lng(::google::type::LatLng* lat_lng) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete lat_lng_;
  }
  if (lat_lng != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(lat_lng);
    }
  }
  lat_lng_ = lat_lng;
  if (lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.LocationInfo.lat_lng)
}

inline const LocationInfo* LocationInfo::internal_default_instance() {
  return &LocationInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kNameFieldNumber;
const int Property::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.Property)
}
Property::Property(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.Property)
}

void Property::InitAsDefaultInstance() {
}

Property::Property(const Property& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.Property)
}

void Property::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void Property::ArenaDtor(void* object) {
  Property* _this = reinterpret_cast< Property* >(object);
  (void)_this;
}
void Property::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Property::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Property_descriptor_;
}

const Property& Property::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Property> Property_default_instance_;

Property* Property::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Property>(arena);
}

void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.Property)
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.Property)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.Property.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.Property.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.Property)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.Property)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.Property.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.Property)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.Property)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.Property)
    UnsafeMergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.Property)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Property::UnsafeMergeFrom(const Property& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.value().size() > 0) {
    set_value(from.value());
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.Property)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Property::IsInitialized() const {

  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Property temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Property::UnsafeArenaSwap(Property* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Property_descriptor_;
  metadata.reflection = Property_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Property

// optional string name = 1;
void Property::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Property::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Property.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Property.name)
}
void Property::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.Property.name)
}
void Property::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.Property.name)
}
::std::string* Property::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Property.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Property::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Property.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Property::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Property.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Property::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Property.name)
}
void Property::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Property.name)
}

// optional string value = 2;
void Property::clear_value() {
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Property::value() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.Property.value)
  return value_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_value(const ::std::string& value) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.Property.value)
}
void Property::set_value(const char* value) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.Property.value)
}
void Property::set_value(const char* value,
    size_t size) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.Property.value)
}
::std::string* Property::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.Property.value)
  return value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Property::release_value() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.Property.value)
  
  return value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Property::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.Property.value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Property::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.Property.value)
}
void Property::unsafe_arena_set_allocated_value(
    ::std::string* value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (value != NULL) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.Property.value)
}

inline const Property* Property::internal_default_instance() {
  return &Property_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void EntityAnnotation::_slow_mutable_bounding_poly() {
  bounding_poly_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::BoundingPoly* EntityAnnotation::_slow_release_bounding_poly() {
  if (bounding_poly_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = new ::google::cloud::vision::v1::BoundingPoly(*bounding_poly_);
    bounding_poly_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::BoundingPoly* EntityAnnotation::unsafe_arena_release_bounding_poly() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
  
  ::google::cloud::vision::v1::BoundingPoly* temp = bounding_poly_;
  bounding_poly_ = NULL;
  return temp;
}
void EntityAnnotation::_slow_set_allocated_bounding_poly(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::BoundingPoly** bounding_poly) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*bounding_poly) == NULL) {
      message_arena->Own(*bounding_poly);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*bounding_poly)) {
      ::google::cloud::vision::v1::BoundingPoly* new_bounding_poly = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::BoundingPoly >(
            message_arena);
      new_bounding_poly->CopyFrom(**bounding_poly);
      *bounding_poly = new_bounding_poly;
    }
}
void EntityAnnotation::unsafe_arena_set_allocated_bounding_poly(
    ::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  if (GetArenaNoVirtual() == NULL) {
    delete bounding_poly_;
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAnnotation::kMidFieldNumber;
const int EntityAnnotation::kLocaleFieldNumber;
const int EntityAnnotation::kDescriptionFieldNumber;
const int EntityAnnotation::kScoreFieldNumber;
const int EntityAnnotation::kConfidenceFieldNumber;
const int EntityAnnotation::kTopicalityFieldNumber;
const int EntityAnnotation::kBoundingPolyFieldNumber;
const int EntityAnnotation::kLocationsFieldNumber;
const int EntityAnnotation::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityAnnotation::EntityAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.EntityAnnotation)
}
EntityAnnotation::EntityAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  locations_(arena),
  properties_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.EntityAnnotation)
}

void EntityAnnotation::InitAsDefaultInstance() {
  bounding_poly_ = const_cast< ::google::cloud::vision::v1::BoundingPoly*>(
      ::google::cloud::vision::v1::BoundingPoly::internal_default_instance());
}

EntityAnnotation::EntityAnnotation(const EntityAnnotation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.EntityAnnotation)
}

void EntityAnnotation::SharedCtor() {
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bounding_poly_ = NULL;
  ::memset(&score_, 0, reinterpret_cast<char*>(&topicality_) -
    reinterpret_cast<char*>(&score_) + sizeof(topicality_));
  _cached_size_ = 0;
}

EntityAnnotation::~EntityAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.EntityAnnotation)
  SharedDtor();
}

void EntityAnnotation::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  mid_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  locale_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  description_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &EntityAnnotation_default_instance_.get()) {
    delete bounding_poly_;
  }
}

void EntityAnnotation::ArenaDtor(void* object) {
  EntityAnnotation* _this = reinterpret_cast< EntityAnnotation* >(object);
  (void)_this;
}
void EntityAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EntityAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityAnnotation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityAnnotation_descriptor_;
}

const EntityAnnotation& EntityAnnotation::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EntityAnnotation> EntityAnnotation_default_instance_;

EntityAnnotation* EntityAnnotation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EntityAnnotation>(arena);
}

void EntityAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.EntityAnnotation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EntityAnnotation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EntityAnnotation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(score_, topicality_);
  mid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  locale_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) delete bounding_poly_;
  bounding_poly_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  locations_.Clear();
  properties_.Clear();
}

bool EntityAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.EntityAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mid().data(), this->mid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.EntityAnnotation.mid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_locale;
        break;
      }

      // optional string locale = 2;
      case 2: {
        if (tag == 18) {
         parse_locale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), this->locale().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.EntityAnnotation.locale"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.EntityAnnotation.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_score;
        break;
      }

      // optional float score = 4;
      case 4: {
        if (tag == 37) {
         parse_score:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_confidence;
        break;
      }

      // optional float confidence = 5;
      case 5: {
        if (tag == 45) {
         parse_confidence:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_topicality;
        break;
      }

      // optional float topicality = 6;
      case 6: {
        if (tag == 53) {
         parse_topicality:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &topicality_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_bounding_poly;
        break;
      }

      // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
      case 7: {
        if (tag == 58) {
         parse_bounding_poly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bounding_poly()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_locations;
        break;
      }

      // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
      case 8: {
        if (tag == 66) {
         parse_locations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_locations;
        if (input->ExpectTag(74)) goto parse_loop_properties;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.cloud.vision.v1.Property properties = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_properties;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.EntityAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.EntityAnnotation)
  return false;
#undef DO_
}

void EntityAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.EntityAnnotation)
  // optional string mid = 1;
  if (this->mid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mid(), output);
  }

  // optional string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->locale(), output);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional float score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->score(), output);
  }

  // optional float confidence = 5;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->confidence(), output);
  }

  // optional float topicality = 6;
  if (this->topicality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->topicality(), output);
  }

  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
  if (this->has_bounding_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->bounding_poly_, output);
  }

  // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->locations(i), output);
  }

  // repeated .google.cloud.vision.v1.Property properties = 9;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->properties(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.EntityAnnotation)
}

::google::protobuf::uint8* EntityAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.EntityAnnotation)
  // optional string mid = 1;
  if (this->mid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mid(), target);
  }

  // optional string locale = 2;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->locale(), target);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.EntityAnnotation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional float score = 4;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->score(), target);
  }

  // optional float confidence = 5;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->confidence(), target);
  }

  // optional float topicality = 6;
  if (this->topicality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->topicality(), target);
  }

  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
  if (this->has_bounding_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->bounding_poly_, false, target);
  }

  // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->locations(i), false, target);
  }

  // repeated .google.cloud.vision.v1.Property properties = 9;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->properties(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.EntityAnnotation)
  return target;
}

size_t EntityAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.EntityAnnotation)
  size_t total_size = 0;

  // optional string mid = 1;
  if (this->mid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mid());
  }

  // optional string locale = 2;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional float score = 4;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  // optional float confidence = 5;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  // optional float topicality = 6;
  if (this->topicality() != 0) {
    total_size += 1 + 4;
  }

  // optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
  if (this->has_bounding_poly()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bounding_poly_);
  }

  // repeated .google.cloud.vision.v1.LocationInfo locations = 8;
  {
    unsigned int count = this->locations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->locations(i));
    }
  }

  // repeated .google.cloud.vision.v1.Property properties = 9;
  {
    unsigned int count = this->properties_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.EntityAnnotation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EntityAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.EntityAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.EntityAnnotation)
    UnsafeMergeFrom(*source);
  }
}

void EntityAnnotation::MergeFrom(const EntityAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.EntityAnnotation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EntityAnnotation::UnsafeMergeFrom(const EntityAnnotation& from) {
  GOOGLE_DCHECK(&from != this);
  locations_.MergeFrom(from.locations_);
  properties_.MergeFrom(from.properties_);
  if (from.mid().size() > 0) {
    set_mid(from.mid());
  }
  if (from.locale().size() > 0) {
    set_locale(from.locale());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.topicality() != 0) {
    set_topicality(from.topicality());
  }
  if (from.has_bounding_poly()) {
    mutable_bounding_poly()->::google::cloud::vision::v1::BoundingPoly::MergeFrom(from.bounding_poly());
  }
}

void EntityAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.EntityAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAnnotation::CopyFrom(const EntityAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.EntityAnnotation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EntityAnnotation::IsInitialized() const {

  return true;
}

void EntityAnnotation::Swap(EntityAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EntityAnnotation temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void EntityAnnotation::UnsafeArenaSwap(EntityAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EntityAnnotation::InternalSwap(EntityAnnotation* other) {
  mid_.Swap(&other->mid_);
  locale_.Swap(&other->locale_);
  description_.Swap(&other->description_);
  std::swap(score_, other->score_);
  std::swap(confidence_, other->confidence_);
  std::swap(topicality_, other->topicality_);
  std::swap(bounding_poly_, other->bounding_poly_);
  locations_.UnsafeArenaSwap(&other->locations_);
  properties_.UnsafeArenaSwap(&other->properties_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityAnnotation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityAnnotation_descriptor_;
  metadata.reflection = EntityAnnotation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityAnnotation

// optional string mid = 1;
void EntityAnnotation::clear_mid() {
  mid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& EntityAnnotation::mid() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.mid)
  return mid_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityAnnotation::set_mid(const ::std::string& value) {
  
  mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.mid)
}
void EntityAnnotation::set_mid(const char* value) {
  
  mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.EntityAnnotation.mid)
}
void EntityAnnotation::set_mid(const char* value,
    size_t size) {
  
  mid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.EntityAnnotation.mid)
}
::std::string* EntityAnnotation::mutable_mid() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.mid)
  return mid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EntityAnnotation::release_mid() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.mid)
  
  return mid_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EntityAnnotation::unsafe_arena_release_mid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.EntityAnnotation.mid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return mid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void EntityAnnotation::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    
  } else {
    
  }
  mid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.mid)
}
void EntityAnnotation::unsafe_arena_set_allocated_mid(
    ::std::string* mid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mid != NULL) {
    
  } else {
    
  }
  mid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.mid)
}

// optional string locale = 2;
void EntityAnnotation::clear_locale() {
  locale_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& EntityAnnotation::locale() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.locale)
  return locale_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityAnnotation::set_locale(const ::std::string& value) {
  
  locale_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.locale)
}
void EntityAnnotation::set_locale(const char* value) {
  
  locale_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.EntityAnnotation.locale)
}
void EntityAnnotation::set_locale(const char* value,
    size_t size) {
  
  locale_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.EntityAnnotation.locale)
}
::std::string* EntityAnnotation::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.locale)
  return locale_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EntityAnnotation::release_locale() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.locale)
  
  return locale_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EntityAnnotation::unsafe_arena_release_locale() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.EntityAnnotation.locale)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return locale_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void EntityAnnotation::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.locale)
}
void EntityAnnotation::unsafe_arena_set_allocated_locale(
    ::std::string* locale) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      locale, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.locale)
}

// optional string description = 3;
void EntityAnnotation::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& EntityAnnotation::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.description)
  return description_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EntityAnnotation::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.description)
}
void EntityAnnotation::set_description(const char* value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.EntityAnnotation.description)
}
void EntityAnnotation::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.EntityAnnotation.description)
}
::std::string* EntityAnnotation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EntityAnnotation::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* EntityAnnotation::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.EntityAnnotation.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void EntityAnnotation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.description)
}
void EntityAnnotation::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.EntityAnnotation.description)
}

// optional float score = 4;
void EntityAnnotation::clear_score() {
  score_ = 0;
}
float EntityAnnotation::score() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.score)
  return score_;
}
void EntityAnnotation::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.score)
}

// optional float confidence = 5;
void EntityAnnotation::clear_confidence() {
  confidence_ = 0;
}
float EntityAnnotation::confidence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.confidence)
  return confidence_;
}
void EntityAnnotation::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.confidence)
}

// optional float topicality = 6;
void EntityAnnotation::clear_topicality() {
  topicality_ = 0;
}
float EntityAnnotation::topicality() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.topicality)
  return topicality_;
}
void EntityAnnotation::set_topicality(float value) {
  
  topicality_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.EntityAnnotation.topicality)
}

// optional .google.cloud.vision.v1.BoundingPoly bounding_poly = 7;
bool EntityAnnotation::has_bounding_poly() const {
  return this != internal_default_instance() && bounding_poly_ != NULL;
}
void EntityAnnotation::clear_bounding_poly() {
  if (GetArenaNoVirtual() == NULL && bounding_poly_ != NULL) delete bounding_poly_;
  bounding_poly_ = NULL;
}
const ::google::cloud::vision::v1::BoundingPoly& EntityAnnotation::bounding_poly() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
  return bounding_poly_ != NULL ? *bounding_poly_
                         : *::google::cloud::vision::v1::BoundingPoly::internal_default_instance();
}
::google::cloud::vision::v1::BoundingPoly* EntityAnnotation::mutable_bounding_poly() {
  
  if (bounding_poly_ == NULL) {
    _slow_mutable_bounding_poly();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
  return bounding_poly_;
}
::google::cloud::vision::v1::BoundingPoly* EntityAnnotation::release_bounding_poly() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_bounding_poly();
  } else {
    ::google::cloud::vision::v1::BoundingPoly* temp = bounding_poly_;
    bounding_poly_ = NULL;
    return temp;
  }
}
 void EntityAnnotation::set_allocated_bounding_poly(::google::cloud::vision::v1::BoundingPoly* bounding_poly) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bounding_poly_;
  }
  if (bounding_poly != NULL) {
    _slow_set_allocated_bounding_poly(message_arena, &bounding_poly);
  }
  bounding_poly_ = bounding_poly;
  if (bounding_poly) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.EntityAnnotation.bounding_poly)
}

// repeated .google.cloud.vision.v1.LocationInfo locations = 8;
int EntityAnnotation::locations_size() const {
  return locations_.size();
}
void EntityAnnotation::clear_locations() {
  locations_.Clear();
}
const ::google::cloud::vision::v1::LocationInfo& EntityAnnotation::locations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_.Get(index);
}
::google::cloud::vision::v1::LocationInfo* EntityAnnotation::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_.Mutable(index);
}
::google::cloud::vision::v1::LocationInfo* EntityAnnotation::add_locations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::LocationInfo >*
EntityAnnotation::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.EntityAnnotation.locations)
  return &locations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::LocationInfo >&
EntityAnnotation::locations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.EntityAnnotation.locations)
  return locations_;
}

// repeated .google.cloud.vision.v1.Property properties = 9;
int EntityAnnotation::properties_size() const {
  return properties_.size();
}
void EntityAnnotation::clear_properties() {
  properties_.Clear();
}
const ::google::cloud::vision::v1::Property& EntityAnnotation::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_.Get(index);
}
::google::cloud::vision::v1::Property* EntityAnnotation::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_.Mutable(index);
}
::google::cloud::vision::v1::Property* EntityAnnotation::add_properties() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Property >*
EntityAnnotation::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.EntityAnnotation.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Property >&
EntityAnnotation::properties() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.EntityAnnotation.properties)
  return properties_;
}

inline const EntityAnnotation* EntityAnnotation::internal_default_instance() {
  return &EntityAnnotation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SafeSearchAnnotation::kAdultFieldNumber;
const int SafeSearchAnnotation::kSpoofFieldNumber;
const int SafeSearchAnnotation::kMedicalFieldNumber;
const int SafeSearchAnnotation::kViolenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SafeSearchAnnotation::SafeSearchAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.SafeSearchAnnotation)
}
SafeSearchAnnotation::SafeSearchAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.SafeSearchAnnotation)
}

void SafeSearchAnnotation::InitAsDefaultInstance() {
}

SafeSearchAnnotation::SafeSearchAnnotation(const SafeSearchAnnotation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.SafeSearchAnnotation)
}

void SafeSearchAnnotation::SharedCtor() {
  ::memset(&adult_, 0, reinterpret_cast<char*>(&violence_) -
    reinterpret_cast<char*>(&adult_) + sizeof(violence_));
  _cached_size_ = 0;
}

SafeSearchAnnotation::~SafeSearchAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.SafeSearchAnnotation)
  SharedDtor();
}

void SafeSearchAnnotation::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void SafeSearchAnnotation::ArenaDtor(void* object) {
  SafeSearchAnnotation* _this = reinterpret_cast< SafeSearchAnnotation* >(object);
  (void)_this;
}
void SafeSearchAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SafeSearchAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SafeSearchAnnotation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SafeSearchAnnotation_descriptor_;
}

const SafeSearchAnnotation& SafeSearchAnnotation::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SafeSearchAnnotation> SafeSearchAnnotation_default_instance_;

SafeSearchAnnotation* SafeSearchAnnotation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SafeSearchAnnotation>(arena);
}

void SafeSearchAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.SafeSearchAnnotation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SafeSearchAnnotation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SafeSearchAnnotation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(adult_, violence_);

#undef ZR_HELPER_
#undef ZR_

}

bool SafeSearchAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.SafeSearchAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.vision.v1.Likelihood adult = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_adult(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_spoof;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood spoof = 2;
      case 2: {
        if (tag == 16) {
         parse_spoof:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_spoof(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_medical;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood medical = 3;
      case 3: {
        if (tag == 24) {
         parse_medical:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_medical(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_violence;
        break;
      }

      // optional .google.cloud.vision.v1.Likelihood violence = 4;
      case 4: {
        if (tag == 32) {
         parse_violence:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_violence(static_cast< ::google::cloud::vision::v1::Likelihood >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.SafeSearchAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.SafeSearchAnnotation)
  return false;
#undef DO_
}

void SafeSearchAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.SafeSearchAnnotation)
  // optional .google.cloud.vision.v1.Likelihood adult = 1;
  if (this->adult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->adult(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->spoof(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood medical = 3;
  if (this->medical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->medical(), output);
  }

  // optional .google.cloud.vision.v1.Likelihood violence = 4;
  if (this->violence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->violence(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.SafeSearchAnnotation)
}

::google::protobuf::uint8* SafeSearchAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.SafeSearchAnnotation)
  // optional .google.cloud.vision.v1.Likelihood adult = 1;
  if (this->adult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->adult(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->spoof(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood medical = 3;
  if (this->medical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->medical(), target);
  }

  // optional .google.cloud.vision.v1.Likelihood violence = 4;
  if (this->violence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->violence(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.SafeSearchAnnotation)
  return target;
}

size_t SafeSearchAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.SafeSearchAnnotation)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.Likelihood adult = 1;
  if (this->adult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->adult());
  }

  // optional .google.cloud.vision.v1.Likelihood spoof = 2;
  if (this->spoof() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->spoof());
  }

  // optional .google.cloud.vision.v1.Likelihood medical = 3;
  if (this->medical() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->medical());
  }

  // optional .google.cloud.vision.v1.Likelihood violence = 4;
  if (this->violence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->violence());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SafeSearchAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SafeSearchAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SafeSearchAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.SafeSearchAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.SafeSearchAnnotation)
    UnsafeMergeFrom(*source);
  }
}

void SafeSearchAnnotation::MergeFrom(const SafeSearchAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SafeSearchAnnotation::UnsafeMergeFrom(const SafeSearchAnnotation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.adult() != 0) {
    set_adult(from.adult());
  }
  if (from.spoof() != 0) {
    set_spoof(from.spoof());
  }
  if (from.medical() != 0) {
    set_medical(from.medical());
  }
  if (from.violence() != 0) {
    set_violence(from.violence());
  }
}

void SafeSearchAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SafeSearchAnnotation::CopyFrom(const SafeSearchAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.SafeSearchAnnotation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SafeSearchAnnotation::IsInitialized() const {

  return true;
}

void SafeSearchAnnotation::Swap(SafeSearchAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SafeSearchAnnotation temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SafeSearchAnnotation::UnsafeArenaSwap(SafeSearchAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SafeSearchAnnotation::InternalSwap(SafeSearchAnnotation* other) {
  std::swap(adult_, other->adult_);
  std::swap(spoof_, other->spoof_);
  std::swap(medical_, other->medical_);
  std::swap(violence_, other->violence_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SafeSearchAnnotation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SafeSearchAnnotation_descriptor_;
  metadata.reflection = SafeSearchAnnotation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SafeSearchAnnotation

// optional .google.cloud.vision.v1.Likelihood adult = 1;
void SafeSearchAnnotation::clear_adult() {
  adult_ = 0;
}
::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::adult() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.adult)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(adult_);
}
void SafeSearchAnnotation::set_adult(::google::cloud::vision::v1::Likelihood value) {
  
  adult_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.adult)
}

// optional .google.cloud.vision.v1.Likelihood spoof = 2;
void SafeSearchAnnotation::clear_spoof() {
  spoof_ = 0;
}
::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::spoof() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.spoof)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(spoof_);
}
void SafeSearchAnnotation::set_spoof(::google::cloud::vision::v1::Likelihood value) {
  
  spoof_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.spoof)
}

// optional .google.cloud.vision.v1.Likelihood medical = 3;
void SafeSearchAnnotation::clear_medical() {
  medical_ = 0;
}
::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::medical() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.medical)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(medical_);
}
void SafeSearchAnnotation::set_medical(::google::cloud::vision::v1::Likelihood value) {
  
  medical_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.medical)
}

// optional .google.cloud.vision.v1.Likelihood violence = 4;
void SafeSearchAnnotation::clear_violence() {
  violence_ = 0;
}
::google::cloud::vision::v1::Likelihood SafeSearchAnnotation::violence() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.SafeSearchAnnotation.violence)
  return static_cast< ::google::cloud::vision::v1::Likelihood >(violence_);
}
void SafeSearchAnnotation::set_violence(::google::cloud::vision::v1::Likelihood value) {
  
  violence_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.SafeSearchAnnotation.violence)
}

inline const SafeSearchAnnotation* SafeSearchAnnotation::internal_default_instance() {
  return &SafeSearchAnnotation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void LatLongRect::_slow_mutable_min_lat_lng() {
  min_lat_lng_ = ::google::protobuf::Arena::Create< ::google::type::LatLng >(
      GetArenaNoVirtual());
}
::google::type::LatLng* LatLongRect::_slow_release_min_lat_lng() {
  if (min_lat_lng_ == NULL) {
    return NULL;
  } else {
    ::google::type::LatLng* temp = new ::google::type::LatLng(*min_lat_lng_);
    min_lat_lng_ = NULL;
    return temp;
  }
}
::google::type::LatLng* LatLongRect::unsafe_arena_release_min_lat_lng() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.LatLongRect.min_lat_lng)
  
  ::google::type::LatLng* temp = min_lat_lng_;
  min_lat_lng_ = NULL;
  return temp;
}
void LatLongRect::unsafe_arena_set_allocated_min_lat_lng(
    ::google::type::LatLng* min_lat_lng) {
  if (GetArenaNoVirtual() == NULL) {
    delete min_lat_lng_;
  }
  min_lat_lng_ = min_lat_lng;
  if (min_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.LatLongRect.min_lat_lng)
}
void LatLongRect::_slow_mutable_max_lat_lng() {
  max_lat_lng_ = ::google::protobuf::Arena::Create< ::google::type::LatLng >(
      GetArenaNoVirtual());
}
::google::type::LatLng* LatLongRect::_slow_release_max_lat_lng() {
  if (max_lat_lng_ == NULL) {
    return NULL;
  } else {
    ::google::type::LatLng* temp = new ::google::type::LatLng(*max_lat_lng_);
    max_lat_lng_ = NULL;
    return temp;
  }
}
::google::type::LatLng* LatLongRect::unsafe_arena_release_max_lat_lng() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.LatLongRect.max_lat_lng)
  
  ::google::type::LatLng* temp = max_lat_lng_;
  max_lat_lng_ = NULL;
  return temp;
}
void LatLongRect::unsafe_arena_set_allocated_max_lat_lng(
    ::google::type::LatLng* max_lat_lng) {
  if (GetArenaNoVirtual() == NULL) {
    delete max_lat_lng_;
  }
  max_lat_lng_ = max_lat_lng;
  if (max_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.LatLongRect.max_lat_lng)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatLongRect::kMinLatLngFieldNumber;
const int LatLongRect::kMaxLatLngFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatLongRect::LatLongRect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.LatLongRect)
}
LatLongRect::LatLongRect(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.LatLongRect)
}

void LatLongRect::InitAsDefaultInstance() {
  min_lat_lng_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
  max_lat_lng_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
}

LatLongRect::LatLongRect(const LatLongRect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.LatLongRect)
}

void LatLongRect::SharedCtor() {
  min_lat_lng_ = NULL;
  max_lat_lng_ = NULL;
  _cached_size_ = 0;
}

LatLongRect::~LatLongRect() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.LatLongRect)
  SharedDtor();
}

void LatLongRect::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &LatLongRect_default_instance_.get()) {
    delete min_lat_lng_;
    delete max_lat_lng_;
  }
}

void LatLongRect::ArenaDtor(void* object) {
  LatLongRect* _this = reinterpret_cast< LatLongRect* >(object);
  (void)_this;
}
void LatLongRect::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LatLongRect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatLongRect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LatLongRect_descriptor_;
}

const LatLongRect& LatLongRect::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LatLongRect> LatLongRect_default_instance_;

LatLongRect* LatLongRect::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<LatLongRect>(arena);
}

void LatLongRect::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.LatLongRect)
  if (GetArenaNoVirtual() == NULL && min_lat_lng_ != NULL) delete min_lat_lng_;
  min_lat_lng_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_lat_lng_ != NULL) delete max_lat_lng_;
  max_lat_lng_ = NULL;
}

bool LatLongRect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.LatLongRect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.type.LatLng min_lat_lng = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_min_lat_lng()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_max_lat_lng;
        break;
      }

      // optional .google.type.LatLng max_lat_lng = 2;
      case 2: {
        if (tag == 18) {
         parse_max_lat_lng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_max_lat_lng()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.LatLongRect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.LatLongRect)
  return false;
#undef DO_
}

void LatLongRect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.LatLongRect)
  // optional .google.type.LatLng min_lat_lng = 1;
  if (this->has_min_lat_lng()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->min_lat_lng_, output);
  }

  // optional .google.type.LatLng max_lat_lng = 2;
  if (this->has_max_lat_lng()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->max_lat_lng_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.LatLongRect)
}

::google::protobuf::uint8* LatLongRect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.LatLongRect)
  // optional .google.type.LatLng min_lat_lng = 1;
  if (this->has_min_lat_lng()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->min_lat_lng_, false, target);
  }

  // optional .google.type.LatLng max_lat_lng = 2;
  if (this->has_max_lat_lng()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->max_lat_lng_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.LatLongRect)
  return target;
}

size_t LatLongRect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.LatLongRect)
  size_t total_size = 0;

  // optional .google.type.LatLng min_lat_lng = 1;
  if (this->has_min_lat_lng()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->min_lat_lng_);
  }

  // optional .google.type.LatLng max_lat_lng = 2;
  if (this->has_max_lat_lng()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->max_lat_lng_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatLongRect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.LatLongRect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LatLongRect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatLongRect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.LatLongRect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.LatLongRect)
    UnsafeMergeFrom(*source);
  }
}

void LatLongRect::MergeFrom(const LatLongRect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.LatLongRect)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LatLongRect::UnsafeMergeFrom(const LatLongRect& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_min_lat_lng()) {
    mutable_min_lat_lng()->::google::type::LatLng::MergeFrom(from.min_lat_lng());
  }
  if (from.has_max_lat_lng()) {
    mutable_max_lat_lng()->::google::type::LatLng::MergeFrom(from.max_lat_lng());
  }
}

void LatLongRect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.LatLongRect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatLongRect::CopyFrom(const LatLongRect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.LatLongRect)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LatLongRect::IsInitialized() const {

  return true;
}

void LatLongRect::Swap(LatLongRect* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LatLongRect temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void LatLongRect::UnsafeArenaSwap(LatLongRect* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LatLongRect::InternalSwap(LatLongRect* other) {
  std::swap(min_lat_lng_, other->min_lat_lng_);
  std::swap(max_lat_lng_, other->max_lat_lng_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatLongRect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LatLongRect_descriptor_;
  metadata.reflection = LatLongRect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatLongRect

// optional .google.type.LatLng min_lat_lng = 1;
bool LatLongRect::has_min_lat_lng() const {
  return this != internal_default_instance() && min_lat_lng_ != NULL;
}
void LatLongRect::clear_min_lat_lng() {
  if (GetArenaNoVirtual() == NULL && min_lat_lng_ != NULL) delete min_lat_lng_;
  min_lat_lng_ = NULL;
}
const ::google::type::LatLng& LatLongRect::min_lat_lng() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.LatLongRect.min_lat_lng)
  return min_lat_lng_ != NULL ? *min_lat_lng_
                         : *::google::type::LatLng::internal_default_instance();
}
::google::type::LatLng* LatLongRect::mutable_min_lat_lng() {
  
  if (min_lat_lng_ == NULL) {
    _slow_mutable_min_lat_lng();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.LatLongRect.min_lat_lng)
  return min_lat_lng_;
}
::google::type::LatLng* LatLongRect::release_min_lat_lng() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.LatLongRect.min_lat_lng)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_min_lat_lng();
  } else {
    ::google::type::LatLng* temp = min_lat_lng_;
    min_lat_lng_ = NULL;
    return temp;
  }
}
 void LatLongRect::set_allocated_min_lat_lng(::google::type::LatLng* min_lat_lng) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete min_lat_lng_;
  }
  if (min_lat_lng != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(min_lat_lng);
    }
  }
  min_lat_lng_ = min_lat_lng;
  if (min_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.LatLongRect.min_lat_lng)
}

// optional .google.type.LatLng max_lat_lng = 2;
bool LatLongRect::has_max_lat_lng() const {
  return this != internal_default_instance() && max_lat_lng_ != NULL;
}
void LatLongRect::clear_max_lat_lng() {
  if (GetArenaNoVirtual() == NULL && max_lat_lng_ != NULL) delete max_lat_lng_;
  max_lat_lng_ = NULL;
}
const ::google::type::LatLng& LatLongRect::max_lat_lng() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.LatLongRect.max_lat_lng)
  return max_lat_lng_ != NULL ? *max_lat_lng_
                         : *::google::type::LatLng::internal_default_instance();
}
::google::type::LatLng* LatLongRect::mutable_max_lat_lng() {
  
  if (max_lat_lng_ == NULL) {
    _slow_mutable_max_lat_lng();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.LatLongRect.max_lat_lng)
  return max_lat_lng_;
}
::google::type::LatLng* LatLongRect::release_max_lat_lng() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.LatLongRect.max_lat_lng)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_max_lat_lng();
  } else {
    ::google::type::LatLng* temp = max_lat_lng_;
    max_lat_lng_ = NULL;
    return temp;
  }
}
 void LatLongRect::set_allocated_max_lat_lng(::google::type::LatLng* max_lat_lng) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete max_lat_lng_;
  }
  if (max_lat_lng != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(max_lat_lng);
    }
  }
  max_lat_lng_ = max_lat_lng;
  if (max_lat_lng) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.LatLongRect.max_lat_lng)
}

inline const LatLongRect* LatLongRect::internal_default_instance() {
  return &LatLongRect_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ColorInfo::_slow_mutable_color() {
  color_ = ::google::protobuf::Arena::Create< ::google::type::Color >(
      GetArenaNoVirtual());
}
::google::type::Color* ColorInfo::_slow_release_color() {
  if (color_ == NULL) {
    return NULL;
  } else {
    ::google::type::Color* temp = new ::google::type::Color(*color_);
    color_ = NULL;
    return temp;
  }
}
::google::type::Color* ColorInfo::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.ColorInfo.color)
  
  ::google::type::Color* temp = color_;
  color_ = NULL;
  return temp;
}
void ColorInfo::unsafe_arena_set_allocated_color(
    ::google::type::Color* color) {
  if (GetArenaNoVirtual() == NULL) {
    delete color_;
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ColorInfo.color)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColorInfo::kColorFieldNumber;
const int ColorInfo::kScoreFieldNumber;
const int ColorInfo::kPixelFractionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColorInfo::ColorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ColorInfo)
}
ColorInfo::ColorInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ColorInfo)
}

void ColorInfo::InitAsDefaultInstance() {
  color_ = const_cast< ::google::type::Color*>(
      ::google::type::Color::internal_default_instance());
}

ColorInfo::ColorInfo(const ColorInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ColorInfo)
}

void ColorInfo::SharedCtor() {
  color_ = NULL;
  ::memset(&score_, 0, reinterpret_cast<char*>(&pixel_fraction_) -
    reinterpret_cast<char*>(&score_) + sizeof(pixel_fraction_));
  _cached_size_ = 0;
}

ColorInfo::~ColorInfo() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ColorInfo)
  SharedDtor();
}

void ColorInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &ColorInfo_default_instance_.get()) {
    delete color_;
  }
}

void ColorInfo::ArenaDtor(void* object) {
  ColorInfo* _this = reinterpret_cast< ColorInfo* >(object);
  (void)_this;
}
void ColorInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ColorInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColorInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColorInfo_descriptor_;
}

const ColorInfo& ColorInfo::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ColorInfo> ColorInfo_default_instance_;

ColorInfo* ColorInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ColorInfo>(arena);
}

void ColorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ColorInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ColorInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ColorInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(score_, pixel_fraction_);
  if (GetArenaNoVirtual() == NULL && color_ != NULL) delete color_;
  color_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ColorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ColorInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.type.Color color = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_score;
        break;
      }

      // optional float score = 2;
      case 2: {
        if (tag == 21) {
         parse_score:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_pixel_fraction;
        break;
      }

      // optional float pixel_fraction = 3;
      case 3: {
        if (tag == 29) {
         parse_pixel_fraction:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pixel_fraction_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ColorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ColorInfo)
  return false;
#undef DO_
}

void ColorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ColorInfo)
  // optional .google.type.Color color = 1;
  if (this->has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->color_, output);
  }

  // optional float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  // optional float pixel_fraction = 3;
  if (this->pixel_fraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pixel_fraction(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ColorInfo)
}

::google::protobuf::uint8* ColorInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ColorInfo)
  // optional .google.type.Color color = 1;
  if (this->has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->color_, false, target);
  }

  // optional float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  // optional float pixel_fraction = 3;
  if (this->pixel_fraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pixel_fraction(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ColorInfo)
  return target;
}

size_t ColorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ColorInfo)
  size_t total_size = 0;

  // optional .google.type.Color color = 1;
  if (this->has_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->color_);
  }

  // optional float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  // optional float pixel_fraction = 3;
  if (this->pixel_fraction() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ColorInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ColorInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColorInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ColorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ColorInfo)
    UnsafeMergeFrom(*source);
  }
}

void ColorInfo::MergeFrom(const ColorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ColorInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ColorInfo::UnsafeMergeFrom(const ColorInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_color()) {
    mutable_color()->::google::type::Color::MergeFrom(from.color());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.pixel_fraction() != 0) {
    set_pixel_fraction(from.pixel_fraction());
  }
}

void ColorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ColorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColorInfo::CopyFrom(const ColorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ColorInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ColorInfo::IsInitialized() const {

  return true;
}

void ColorInfo::Swap(ColorInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ColorInfo temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ColorInfo::UnsafeArenaSwap(ColorInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ColorInfo::InternalSwap(ColorInfo* other) {
  std::swap(color_, other->color_);
  std::swap(score_, other->score_);
  std::swap(pixel_fraction_, other->pixel_fraction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColorInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColorInfo_descriptor_;
  metadata.reflection = ColorInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ColorInfo

// optional .google.type.Color color = 1;
bool ColorInfo::has_color() const {
  return this != internal_default_instance() && color_ != NULL;
}
void ColorInfo::clear_color() {
  if (GetArenaNoVirtual() == NULL && color_ != NULL) delete color_;
  color_ = NULL;
}
const ::google::type::Color& ColorInfo::color() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ColorInfo.color)
  return color_ != NULL ? *color_
                         : *::google::type::Color::internal_default_instance();
}
::google::type::Color* ColorInfo::mutable_color() {
  
  if (color_ == NULL) {
    _slow_mutable_color();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ColorInfo.color)
  return color_;
}
::google::type::Color* ColorInfo::release_color() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ColorInfo.color)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_color();
  } else {
    ::google::type::Color* temp = color_;
    color_ = NULL;
    return temp;
  }
}
 void ColorInfo::set_allocated_color(::google::type::Color* color) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete color_;
  }
  if (color != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(color);
    }
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ColorInfo.color)
}

// optional float score = 2;
void ColorInfo::clear_score() {
  score_ = 0;
}
float ColorInfo::score() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ColorInfo.score)
  return score_;
}
void ColorInfo::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ColorInfo.score)
}

// optional float pixel_fraction = 3;
void ColorInfo::clear_pixel_fraction() {
  pixel_fraction_ = 0;
}
float ColorInfo::pixel_fraction() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ColorInfo.pixel_fraction)
  return pixel_fraction_;
}
void ColorInfo::set_pixel_fraction(float value) {
  
  pixel_fraction_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ColorInfo.pixel_fraction)
}

inline const ColorInfo* ColorInfo::internal_default_instance() {
  return &ColorInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DominantColorsAnnotation::kColorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DominantColorsAnnotation::DominantColorsAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.DominantColorsAnnotation)
}
DominantColorsAnnotation::DominantColorsAnnotation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  colors_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.DominantColorsAnnotation)
}

void DominantColorsAnnotation::InitAsDefaultInstance() {
}

DominantColorsAnnotation::DominantColorsAnnotation(const DominantColorsAnnotation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.DominantColorsAnnotation)
}

void DominantColorsAnnotation::SharedCtor() {
  _cached_size_ = 0;
}

DominantColorsAnnotation::~DominantColorsAnnotation() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.DominantColorsAnnotation)
  SharedDtor();
}

void DominantColorsAnnotation::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void DominantColorsAnnotation::ArenaDtor(void* object) {
  DominantColorsAnnotation* _this = reinterpret_cast< DominantColorsAnnotation* >(object);
  (void)_this;
}
void DominantColorsAnnotation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DominantColorsAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DominantColorsAnnotation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DominantColorsAnnotation_descriptor_;
}

const DominantColorsAnnotation& DominantColorsAnnotation::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DominantColorsAnnotation> DominantColorsAnnotation_default_instance_;

DominantColorsAnnotation* DominantColorsAnnotation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DominantColorsAnnotation>(arena);
}

void DominantColorsAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.DominantColorsAnnotation)
  colors_.Clear();
}

bool DominantColorsAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.DominantColorsAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_colors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_colors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_colors;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.DominantColorsAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.DominantColorsAnnotation)
  return false;
#undef DO_
}

void DominantColorsAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.DominantColorsAnnotation)
  // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
  for (unsigned int i = 0, n = this->colors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->colors(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.DominantColorsAnnotation)
}

::google::protobuf::uint8* DominantColorsAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.DominantColorsAnnotation)
  // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
  for (unsigned int i = 0, n = this->colors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->colors(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.DominantColorsAnnotation)
  return target;
}

size_t DominantColorsAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.DominantColorsAnnotation)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.ColorInfo colors = 1;
  {
    unsigned int count = this->colors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->colors(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DominantColorsAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DominantColorsAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DominantColorsAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.DominantColorsAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.DominantColorsAnnotation)
    UnsafeMergeFrom(*source);
  }
}

void DominantColorsAnnotation::MergeFrom(const DominantColorsAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DominantColorsAnnotation::UnsafeMergeFrom(const DominantColorsAnnotation& from) {
  GOOGLE_DCHECK(&from != this);
  colors_.MergeFrom(from.colors_);
}

void DominantColorsAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DominantColorsAnnotation::CopyFrom(const DominantColorsAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.DominantColorsAnnotation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DominantColorsAnnotation::IsInitialized() const {

  return true;
}

void DominantColorsAnnotation::Swap(DominantColorsAnnotation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DominantColorsAnnotation temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void DominantColorsAnnotation::UnsafeArenaSwap(DominantColorsAnnotation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DominantColorsAnnotation::InternalSwap(DominantColorsAnnotation* other) {
  colors_.UnsafeArenaSwap(&other->colors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DominantColorsAnnotation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DominantColorsAnnotation_descriptor_;
  metadata.reflection = DominantColorsAnnotation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DominantColorsAnnotation

// repeated .google.cloud.vision.v1.ColorInfo colors = 1;
int DominantColorsAnnotation::colors_size() const {
  return colors_.size();
}
void DominantColorsAnnotation::clear_colors() {
  colors_.Clear();
}
const ::google::cloud::vision::v1::ColorInfo& DominantColorsAnnotation::colors(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_.Get(index);
}
::google::cloud::vision::v1::ColorInfo* DominantColorsAnnotation::mutable_colors(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_.Mutable(index);
}
::google::cloud::vision::v1::ColorInfo* DominantColorsAnnotation::add_colors() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::ColorInfo >*
DominantColorsAnnotation::mutable_colors() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return &colors_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::ColorInfo >&
DominantColorsAnnotation::colors() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.DominantColorsAnnotation.colors)
  return colors_;
}

inline const DominantColorsAnnotation* DominantColorsAnnotation::internal_default_instance() {
  return &DominantColorsAnnotation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ImageProperties::_slow_mutable_dominant_colors() {
  dominant_colors_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::DominantColorsAnnotation >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::DominantColorsAnnotation* ImageProperties::_slow_release_dominant_colors() {
  if (dominant_colors_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::DominantColorsAnnotation* temp = new ::google::cloud::vision::v1::DominantColorsAnnotation(*dominant_colors_);
    dominant_colors_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::DominantColorsAnnotation* ImageProperties::unsafe_arena_release_dominant_colors() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.ImageProperties.dominant_colors)
  
  ::google::cloud::vision::v1::DominantColorsAnnotation* temp = dominant_colors_;
  dominant_colors_ = NULL;
  return temp;
}
void ImageProperties::_slow_set_allocated_dominant_colors(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::DominantColorsAnnotation** dominant_colors) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*dominant_colors) == NULL) {
      message_arena->Own(*dominant_colors);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*dominant_colors)) {
      ::google::cloud::vision::v1::DominantColorsAnnotation* new_dominant_colors = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::DominantColorsAnnotation >(
            message_arena);
      new_dominant_colors->CopyFrom(**dominant_colors);
      *dominant_colors = new_dominant_colors;
    }
}
void ImageProperties::unsafe_arena_set_allocated_dominant_colors(
    ::google::cloud::vision::v1::DominantColorsAnnotation* dominant_colors) {
  if (GetArenaNoVirtual() == NULL) {
    delete dominant_colors_;
  }
  dominant_colors_ = dominant_colors;
  if (dominant_colors) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageProperties.dominant_colors)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageProperties::kDominantColorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageProperties::ImageProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ImageProperties)
}
ImageProperties::ImageProperties(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ImageProperties)
}

void ImageProperties::InitAsDefaultInstance() {
  dominant_colors_ = const_cast< ::google::cloud::vision::v1::DominantColorsAnnotation*>(
      ::google::cloud::vision::v1::DominantColorsAnnotation::internal_default_instance());
}

ImageProperties::ImageProperties(const ImageProperties& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ImageProperties)
}

void ImageProperties::SharedCtor() {
  dominant_colors_ = NULL;
  _cached_size_ = 0;
}

ImageProperties::~ImageProperties() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ImageProperties)
  SharedDtor();
}

void ImageProperties::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &ImageProperties_default_instance_.get()) {
    delete dominant_colors_;
  }
}

void ImageProperties::ArenaDtor(void* object) {
  ImageProperties* _this = reinterpret_cast< ImageProperties* >(object);
  (void)_this;
}
void ImageProperties::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageProperties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImageProperties_descriptor_;
}

const ImageProperties& ImageProperties::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ImageProperties> ImageProperties_default_instance_;

ImageProperties* ImageProperties::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ImageProperties>(arena);
}

void ImageProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ImageProperties)
  if (GetArenaNoVirtual() == NULL && dominant_colors_ != NULL) delete dominant_colors_;
  dominant_colors_ = NULL;
}

bool ImageProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ImageProperties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dominant_colors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ImageProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ImageProperties)
  return false;
#undef DO_
}

void ImageProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ImageProperties)
  // optional .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
  if (this->has_dominant_colors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dominant_colors_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ImageProperties)
}

::google::protobuf::uint8* ImageProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ImageProperties)
  // optional .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
  if (this->has_dominant_colors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->dominant_colors_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ImageProperties)
  return target;
}

size_t ImageProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ImageProperties)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
  if (this->has_dominant_colors()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dominant_colors_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ImageProperties)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ImageProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ImageProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ImageProperties)
    UnsafeMergeFrom(*source);
  }
}

void ImageProperties::MergeFrom(const ImageProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ImageProperties)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ImageProperties::UnsafeMergeFrom(const ImageProperties& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_dominant_colors()) {
    mutable_dominant_colors()->::google::cloud::vision::v1::DominantColorsAnnotation::MergeFrom(from.dominant_colors());
  }
}

void ImageProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ImageProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageProperties::CopyFrom(const ImageProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ImageProperties)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ImageProperties::IsInitialized() const {

  return true;
}

void ImageProperties::Swap(ImageProperties* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageProperties temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ImageProperties::UnsafeArenaSwap(ImageProperties* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageProperties::InternalSwap(ImageProperties* other) {
  std::swap(dominant_colors_, other->dominant_colors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageProperties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImageProperties_descriptor_;
  metadata.reflection = ImageProperties_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageProperties

// optional .google.cloud.vision.v1.DominantColorsAnnotation dominant_colors = 1;
bool ImageProperties::has_dominant_colors() const {
  return this != internal_default_instance() && dominant_colors_ != NULL;
}
void ImageProperties::clear_dominant_colors() {
  if (GetArenaNoVirtual() == NULL && dominant_colors_ != NULL) delete dominant_colors_;
  dominant_colors_ = NULL;
}
const ::google::cloud::vision::v1::DominantColorsAnnotation& ImageProperties::dominant_colors() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageProperties.dominant_colors)
  return dominant_colors_ != NULL ? *dominant_colors_
                         : *::google::cloud::vision::v1::DominantColorsAnnotation::internal_default_instance();
}
::google::cloud::vision::v1::DominantColorsAnnotation* ImageProperties::mutable_dominant_colors() {
  
  if (dominant_colors_ == NULL) {
    _slow_mutable_dominant_colors();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageProperties.dominant_colors)
  return dominant_colors_;
}
::google::cloud::vision::v1::DominantColorsAnnotation* ImageProperties::release_dominant_colors() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ImageProperties.dominant_colors)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_dominant_colors();
  } else {
    ::google::cloud::vision::v1::DominantColorsAnnotation* temp = dominant_colors_;
    dominant_colors_ = NULL;
    return temp;
  }
}
 void ImageProperties::set_allocated_dominant_colors(::google::cloud::vision::v1::DominantColorsAnnotation* dominant_colors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dominant_colors_;
  }
  if (dominant_colors != NULL) {
    _slow_set_allocated_dominant_colors(message_arena, &dominant_colors);
  }
  dominant_colors_ = dominant_colors;
  if (dominant_colors) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ImageProperties.dominant_colors)
}

inline const ImageProperties* ImageProperties::internal_default_instance() {
  return &ImageProperties_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ImageContext::_slow_mutable_lat_long_rect() {
  lat_long_rect_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::LatLongRect >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::LatLongRect* ImageContext::_slow_release_lat_long_rect() {
  if (lat_long_rect_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::LatLongRect* temp = new ::google::cloud::vision::v1::LatLongRect(*lat_long_rect_);
    lat_long_rect_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::LatLongRect* ImageContext::unsafe_arena_release_lat_long_rect() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.ImageContext.lat_long_rect)
  
  ::google::cloud::vision::v1::LatLongRect* temp = lat_long_rect_;
  lat_long_rect_ = NULL;
  return temp;
}
void ImageContext::_slow_set_allocated_lat_long_rect(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::LatLongRect** lat_long_rect) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*lat_long_rect) == NULL) {
      message_arena->Own(*lat_long_rect);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*lat_long_rect)) {
      ::google::cloud::vision::v1::LatLongRect* new_lat_long_rect = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::LatLongRect >(
            message_arena);
      new_lat_long_rect->CopyFrom(**lat_long_rect);
      *lat_long_rect = new_lat_long_rect;
    }
}
void ImageContext::unsafe_arena_set_allocated_lat_long_rect(
    ::google::cloud::vision::v1::LatLongRect* lat_long_rect) {
  if (GetArenaNoVirtual() == NULL) {
    delete lat_long_rect_;
  }
  lat_long_rect_ = lat_long_rect;
  if (lat_long_rect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.ImageContext.lat_long_rect)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageContext::kLatLongRectFieldNumber;
const int ImageContext::kLanguageHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageContext::ImageContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.ImageContext)
}
ImageContext::ImageContext(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  language_hints_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.ImageContext)
}

void ImageContext::InitAsDefaultInstance() {
  lat_long_rect_ = const_cast< ::google::cloud::vision::v1::LatLongRect*>(
      ::google::cloud::vision::v1::LatLongRect::internal_default_instance());
}

ImageContext::ImageContext(const ImageContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.ImageContext)
}

void ImageContext::SharedCtor() {
  lat_long_rect_ = NULL;
  _cached_size_ = 0;
}

ImageContext::~ImageContext() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.ImageContext)
  SharedDtor();
}

void ImageContext::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &ImageContext_default_instance_.get()) {
    delete lat_long_rect_;
  }
}

void ImageContext::ArenaDtor(void* object) {
  ImageContext* _this = reinterpret_cast< ImageContext* >(object);
  (void)_this;
}
void ImageContext::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ImageContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImageContext_descriptor_;
}

const ImageContext& ImageContext::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ImageContext> ImageContext_default_instance_;

ImageContext* ImageContext::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ImageContext>(arena);
}

void ImageContext::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.ImageContext)
  if (GetArenaNoVirtual() == NULL && lat_long_rect_ != NULL) delete lat_long_rect_;
  lat_long_rect_ = NULL;
  language_hints_.Clear();
}

bool ImageContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.ImageContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lat_long_rect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_language_hints;
        break;
      }

      // repeated string language_hints = 2;
      case 2: {
        if (tag == 18) {
         parse_language_hints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_language_hints()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_hints(this->language_hints_size() - 1).data(),
            this->language_hints(this->language_hints_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.vision.v1.ImageContext.language_hints"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_language_hints;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.ImageContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.ImageContext)
  return false;
#undef DO_
}

void ImageContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.ImageContext)
  // optional .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
  if (this->has_lat_long_rect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lat_long_rect_, output);
  }

  // repeated string language_hints = 2;
  for (int i = 0; i < this->language_hints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_hints(i).data(), this->language_hints(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageContext.language_hints");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->language_hints(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.ImageContext)
}

::google::protobuf::uint8* ImageContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.ImageContext)
  // optional .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
  if (this->has_lat_long_rect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lat_long_rect_, false, target);
  }

  // repeated string language_hints = 2;
  for (int i = 0; i < this->language_hints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_hints(i).data(), this->language_hints(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.vision.v1.ImageContext.language_hints");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->language_hints(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.ImageContext)
  return target;
}

size_t ImageContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.ImageContext)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
  if (this->has_lat_long_rect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lat_long_rect_);
  }

  // repeated string language_hints = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->language_hints_size());
  for (int i = 0; i < this->language_hints_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->language_hints(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.ImageContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ImageContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.ImageContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.ImageContext)
    UnsafeMergeFrom(*source);
  }
}

void ImageContext::MergeFrom(const ImageContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.ImageContext)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ImageContext::UnsafeMergeFrom(const ImageContext& from) {
  GOOGLE_DCHECK(&from != this);
  language_hints_.UnsafeMergeFrom(from.language_hints_);
  if (from.has_lat_long_rect()) {
    mutable_lat_long_rect()->::google::cloud::vision::v1::LatLongRect::MergeFrom(from.lat_long_rect());
  }
}

void ImageContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.ImageContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageContext::CopyFrom(const ImageContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.ImageContext)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ImageContext::IsInitialized() const {

  return true;
}

void ImageContext::Swap(ImageContext* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ImageContext temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ImageContext::UnsafeArenaSwap(ImageContext* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ImageContext::InternalSwap(ImageContext* other) {
  std::swap(lat_long_rect_, other->lat_long_rect_);
  language_hints_.UnsafeArenaSwap(&other->language_hints_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImageContext_descriptor_;
  metadata.reflection = ImageContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageContext

// optional .google.cloud.vision.v1.LatLongRect lat_long_rect = 1;
bool ImageContext::has_lat_long_rect() const {
  return this != internal_default_instance() && lat_long_rect_ != NULL;
}
void ImageContext::clear_lat_long_rect() {
  if (GetArenaNoVirtual() == NULL && lat_long_rect_ != NULL) delete lat_long_rect_;
  lat_long_rect_ = NULL;
}
const ::google::cloud::vision::v1::LatLongRect& ImageContext::lat_long_rect() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageContext.lat_long_rect)
  return lat_long_rect_ != NULL ? *lat_long_rect_
                         : *::google::cloud::vision::v1::LatLongRect::internal_default_instance();
}
::google::cloud::vision::v1::LatLongRect* ImageContext::mutable_lat_long_rect() {
  
  if (lat_long_rect_ == NULL) {
    _slow_mutable_lat_long_rect();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageContext.lat_long_rect)
  return lat_long_rect_;
}
::google::cloud::vision::v1::LatLongRect* ImageContext::release_lat_long_rect() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.ImageContext.lat_long_rect)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_lat_long_rect();
  } else {
    ::google::cloud::vision::v1::LatLongRect* temp = lat_long_rect_;
    lat_long_rect_ = NULL;
    return temp;
  }
}
 void ImageContext::set_allocated_lat_long_rect(::google::cloud::vision::v1::LatLongRect* lat_long_rect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete lat_long_rect_;
  }
  if (lat_long_rect != NULL) {
    _slow_set_allocated_lat_long_rect(message_arena, &lat_long_rect);
  }
  lat_long_rect_ = lat_long_rect;
  if (lat_long_rect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.ImageContext.lat_long_rect)
}

// repeated string language_hints = 2;
int ImageContext::language_hints_size() const {
  return language_hints_.size();
}
void ImageContext::clear_language_hints() {
  language_hints_.Clear();
}
const ::std::string& ImageContext::language_hints(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_.Get(index);
}
::std::string* ImageContext::mutable_language_hints(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_.Mutable(index);
}
void ImageContext::set_language_hints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.vision.v1.ImageContext.language_hints)
  language_hints_.Mutable(index)->assign(value);
}
void ImageContext::set_language_hints(int index, const char* value) {
  language_hints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.vision.v1.ImageContext.language_hints)
}
void ImageContext::set_language_hints(int index, const char* value, size_t size) {
  language_hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.vision.v1.ImageContext.language_hints)
}
::std::string* ImageContext::add_language_hints() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_.Add();
}
void ImageContext::add_language_hints(const ::std::string& value) {
  language_hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.ImageContext.language_hints)
}
void ImageContext::add_language_hints(const char* value) {
  language_hints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.vision.v1.ImageContext.language_hints)
}
void ImageContext::add_language_hints(const char* value, size_t size) {
  language_hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.vision.v1.ImageContext.language_hints)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImageContext::language_hints() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.ImageContext.language_hints)
  return language_hints_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ImageContext::mutable_language_hints() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.ImageContext.language_hints)
  return &language_hints_;
}

inline const ImageContext* ImageContext::internal_default_instance() {
  return &ImageContext_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void AnnotateImageRequest::_slow_mutable_image() {
  image_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::Image >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::Image* AnnotateImageRequest::_slow_release_image() {
  if (image_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::Image* temp = new ::google::cloud::vision::v1::Image(*image_);
    image_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::Image* AnnotateImageRequest::unsafe_arena_release_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.AnnotateImageRequest.image)
  
  ::google::cloud::vision::v1::Image* temp = image_;
  image_ = NULL;
  return temp;
}
void AnnotateImageRequest::_slow_set_allocated_image(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::Image** image) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*image) == NULL) {
      message_arena->Own(*image);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*image)) {
      ::google::cloud::vision::v1::Image* new_image = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::Image >(
            message_arena);
      new_image->CopyFrom(**image);
      *image = new_image;
    }
}
void AnnotateImageRequest::unsafe_arena_set_allocated_image(
    ::google::cloud::vision::v1::Image* image) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_;
  }
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image)
}
void AnnotateImageRequest::_slow_mutable_image_context() {
  image_context_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::ImageContext >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::ImageContext* AnnotateImageRequest::_slow_release_image_context() {
  if (image_context_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::ImageContext* temp = new ::google::cloud::vision::v1::ImageContext(*image_context_);
    image_context_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::ImageContext* AnnotateImageRequest::unsafe_arena_release_image_context() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.AnnotateImageRequest.image_context)
  
  ::google::cloud::vision::v1::ImageContext* temp = image_context_;
  image_context_ = NULL;
  return temp;
}
void AnnotateImageRequest::_slow_set_allocated_image_context(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::ImageContext** image_context) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*image_context) == NULL) {
      message_arena->Own(*image_context);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*image_context)) {
      ::google::cloud::vision::v1::ImageContext* new_image_context = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::ImageContext >(
            message_arena);
      new_image_context->CopyFrom(**image_context);
      *image_context = new_image_context;
    }
}
void AnnotateImageRequest::unsafe_arena_set_allocated_image_context(
    ::google::cloud::vision::v1::ImageContext* image_context) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_context_;
  }
  image_context_ = image_context;
  if (image_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image_context)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateImageRequest::kImageFieldNumber;
const int AnnotateImageRequest::kFeaturesFieldNumber;
const int AnnotateImageRequest::kImageContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateImageRequest::AnnotateImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AnnotateImageRequest)
}
AnnotateImageRequest::AnnotateImageRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  features_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AnnotateImageRequest)
}

void AnnotateImageRequest::InitAsDefaultInstance() {
  image_ = const_cast< ::google::cloud::vision::v1::Image*>(
      ::google::cloud::vision::v1::Image::internal_default_instance());
  image_context_ = const_cast< ::google::cloud::vision::v1::ImageContext*>(
      ::google::cloud::vision::v1::ImageContext::internal_default_instance());
}

AnnotateImageRequest::AnnotateImageRequest(const AnnotateImageRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AnnotateImageRequest)
}

void AnnotateImageRequest::SharedCtor() {
  image_ = NULL;
  image_context_ = NULL;
  _cached_size_ = 0;
}

AnnotateImageRequest::~AnnotateImageRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AnnotateImageRequest)
  SharedDtor();
}

void AnnotateImageRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &AnnotateImageRequest_default_instance_.get()) {
    delete image_;
    delete image_context_;
  }
}

void AnnotateImageRequest::ArenaDtor(void* object) {
  AnnotateImageRequest* _this = reinterpret_cast< AnnotateImageRequest* >(object);
  (void)_this;
}
void AnnotateImageRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AnnotateImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnotateImageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnnotateImageRequest_descriptor_;
}

const AnnotateImageRequest& AnnotateImageRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnnotateImageRequest> AnnotateImageRequest_default_instance_;

AnnotateImageRequest* AnnotateImageRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AnnotateImageRequest>(arena);
}

void AnnotateImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AnnotateImageRequest)
  if (GetArenaNoVirtual() == NULL && image_ != NULL) delete image_;
  image_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_context_ != NULL) delete image_context_;
  image_context_ = NULL;
  features_.Clear();
}

bool AnnotateImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AnnotateImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.vision.v1.Image image = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_features;
        break;
      }

      // repeated .google.cloud.vision.v1.Feature features = 2;
      case 2: {
        if (tag == 18) {
         parse_features:
          DO_(input->IncrementRecursionDepth());
         parse_loop_features:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_features;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_image_context;
        break;
      }

      // optional .google.cloud.vision.v1.ImageContext image_context = 3;
      case 3: {
        if (tag == 26) {
         parse_image_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AnnotateImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AnnotateImageRequest)
  return false;
#undef DO_
}

void AnnotateImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AnnotateImageRequest)
  // optional .google.cloud.vision.v1.Image image = 1;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->image_, output);
  }

  // repeated .google.cloud.vision.v1.Feature features = 2;
  for (unsigned int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->features(i), output);
  }

  // optional .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->image_context_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AnnotateImageRequest)
}

::google::protobuf::uint8* AnnotateImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AnnotateImageRequest)
  // optional .google.cloud.vision.v1.Image image = 1;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->image_, false, target);
  }

  // repeated .google.cloud.vision.v1.Feature features = 2;
  for (unsigned int i = 0, n = this->features_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->features(i), false, target);
  }

  // optional .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->image_context_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AnnotateImageRequest)
  return target;
}

size_t AnnotateImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AnnotateImageRequest)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.Image image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->image_);
  }

  // optional .google.cloud.vision.v1.ImageContext image_context = 3;
  if (this->has_image_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->image_context_);
  }

  // repeated .google.cloud.vision.v1.Feature features = 2;
  {
    unsigned int count = this->features_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->features(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnotateImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnnotateImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AnnotateImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AnnotateImageRequest)
    UnsafeMergeFrom(*source);
  }
}

void AnnotateImageRequest::MergeFrom(const AnnotateImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnnotateImageRequest::UnsafeMergeFrom(const AnnotateImageRequest& from) {
  GOOGLE_DCHECK(&from != this);
  features_.MergeFrom(from.features_);
  if (from.has_image()) {
    mutable_image()->::google::cloud::vision::v1::Image::MergeFrom(from.image());
  }
  if (from.has_image_context()) {
    mutable_image_context()->::google::cloud::vision::v1::ImageContext::MergeFrom(from.image_context());
  }
}

void AnnotateImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateImageRequest::CopyFrom(const AnnotateImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AnnotateImageRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnnotateImageRequest::IsInitialized() const {

  return true;
}

void AnnotateImageRequest::Swap(AnnotateImageRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AnnotateImageRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AnnotateImageRequest::UnsafeArenaSwap(AnnotateImageRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AnnotateImageRequest::InternalSwap(AnnotateImageRequest* other) {
  std::swap(image_, other->image_);
  features_.UnsafeArenaSwap(&other->features_);
  std::swap(image_context_, other->image_context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnotateImageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnnotateImageRequest_descriptor_;
  metadata.reflection = AnnotateImageRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnnotateImageRequest

// optional .google.cloud.vision.v1.Image image = 1;
bool AnnotateImageRequest::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
void AnnotateImageRequest::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) delete image_;
  image_ = NULL;
}
const ::google::cloud::vision::v1::Image& AnnotateImageRequest::image() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageRequest.image)
  return image_ != NULL ? *image_
                         : *::google::cloud::vision::v1::Image::internal_default_instance();
}
::google::cloud::vision::v1::Image* AnnotateImageRequest::mutable_image() {
  
  if (image_ == NULL) {
    _slow_mutable_image();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageRequest.image)
  return image_;
}
::google::cloud::vision::v1::Image* AnnotateImageRequest::release_image() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageRequest.image)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_image();
  } else {
    ::google::cloud::vision::v1::Image* temp = image_;
    image_ = NULL;
    return temp;
  }
}
 void AnnotateImageRequest::set_allocated_image(::google::cloud::vision::v1::Image* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_;
  }
  if (image != NULL) {
    _slow_set_allocated_image(message_arena, &image);
  }
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image)
}

// repeated .google.cloud.vision.v1.Feature features = 2;
int AnnotateImageRequest::features_size() const {
  return features_.size();
}
void AnnotateImageRequest::clear_features() {
  features_.Clear();
}
const ::google::cloud::vision::v1::Feature& AnnotateImageRequest::features(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_.Get(index);
}
::google::cloud::vision::v1::Feature* AnnotateImageRequest::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_.Mutable(index);
}
::google::cloud::vision::v1::Feature* AnnotateImageRequest::add_features() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Feature >*
AnnotateImageRequest::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageRequest.features)
  return &features_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::Feature >&
AnnotateImageRequest::features() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageRequest.features)
  return features_;
}

// optional .google.cloud.vision.v1.ImageContext image_context = 3;
bool AnnotateImageRequest::has_image_context() const {
  return this != internal_default_instance() && image_context_ != NULL;
}
void AnnotateImageRequest::clear_image_context() {
  if (GetArenaNoVirtual() == NULL && image_context_ != NULL) delete image_context_;
  image_context_ = NULL;
}
const ::google::cloud::vision::v1::ImageContext& AnnotateImageRequest::image_context() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageRequest.image_context)
  return image_context_ != NULL ? *image_context_
                         : *::google::cloud::vision::v1::ImageContext::internal_default_instance();
}
::google::cloud::vision::v1::ImageContext* AnnotateImageRequest::mutable_image_context() {
  
  if (image_context_ == NULL) {
    _slow_mutable_image_context();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageRequest.image_context)
  return image_context_;
}
::google::cloud::vision::v1::ImageContext* AnnotateImageRequest::release_image_context() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageRequest.image_context)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_image_context();
  } else {
    ::google::cloud::vision::v1::ImageContext* temp = image_context_;
    image_context_ = NULL;
    return temp;
  }
}
 void AnnotateImageRequest::set_allocated_image_context(::google::cloud::vision::v1::ImageContext* image_context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_context_;
  }
  if (image_context != NULL) {
    _slow_set_allocated_image_context(message_arena, &image_context);
  }
  image_context_ = image_context;
  if (image_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageRequest.image_context)
}

inline const AnnotateImageRequest* AnnotateImageRequest::internal_default_instance() {
  return &AnnotateImageRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void AnnotateImageResponse::_slow_mutable_safe_search_annotation() {
  safe_search_annotation_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::SafeSearchAnnotation >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::SafeSearchAnnotation* AnnotateImageResponse::_slow_release_safe_search_annotation() {
  if (safe_search_annotation_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::SafeSearchAnnotation* temp = new ::google::cloud::vision::v1::SafeSearchAnnotation(*safe_search_annotation_);
    safe_search_annotation_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::SafeSearchAnnotation* AnnotateImageResponse::unsafe_arena_release_safe_search_annotation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
  
  ::google::cloud::vision::v1::SafeSearchAnnotation* temp = safe_search_annotation_;
  safe_search_annotation_ = NULL;
  return temp;
}
void AnnotateImageResponse::_slow_set_allocated_safe_search_annotation(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::SafeSearchAnnotation** safe_search_annotation) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*safe_search_annotation) == NULL) {
      message_arena->Own(*safe_search_annotation);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*safe_search_annotation)) {
      ::google::cloud::vision::v1::SafeSearchAnnotation* new_safe_search_annotation = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::SafeSearchAnnotation >(
            message_arena);
      new_safe_search_annotation->CopyFrom(**safe_search_annotation);
      *safe_search_annotation = new_safe_search_annotation;
    }
}
void AnnotateImageResponse::unsafe_arena_set_allocated_safe_search_annotation(
    ::google::cloud::vision::v1::SafeSearchAnnotation* safe_search_annotation) {
  if (GetArenaNoVirtual() == NULL) {
    delete safe_search_annotation_;
  }
  safe_search_annotation_ = safe_search_annotation;
  if (safe_search_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
}
void AnnotateImageResponse::_slow_mutable_image_properties_annotation() {
  image_properties_annotation_ = ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::ImageProperties >(
      GetArenaNoVirtual());
}
::google::cloud::vision::v1::ImageProperties* AnnotateImageResponse::_slow_release_image_properties_annotation() {
  if (image_properties_annotation_ == NULL) {
    return NULL;
  } else {
    ::google::cloud::vision::v1::ImageProperties* temp = new ::google::cloud::vision::v1::ImageProperties(*image_properties_annotation_);
    image_properties_annotation_ = NULL;
    return temp;
  }
}
::google::cloud::vision::v1::ImageProperties* AnnotateImageResponse::unsafe_arena_release_image_properties_annotation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
  
  ::google::cloud::vision::v1::ImageProperties* temp = image_properties_annotation_;
  image_properties_annotation_ = NULL;
  return temp;
}
void AnnotateImageResponse::_slow_set_allocated_image_properties_annotation(
    ::google::protobuf::Arena* message_arena, ::google::cloud::vision::v1::ImageProperties** image_properties_annotation) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*image_properties_annotation) == NULL) {
      message_arena->Own(*image_properties_annotation);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*image_properties_annotation)) {
      ::google::cloud::vision::v1::ImageProperties* new_image_properties_annotation = 
            ::google::protobuf::Arena::CreateMessage< ::google::cloud::vision::v1::ImageProperties >(
            message_arena);
      new_image_properties_annotation->CopyFrom(**image_properties_annotation);
      *image_properties_annotation = new_image_properties_annotation;
    }
}
void AnnotateImageResponse::unsafe_arena_set_allocated_image_properties_annotation(
    ::google::cloud::vision::v1::ImageProperties* image_properties_annotation) {
  if (GetArenaNoVirtual() == NULL) {
    delete image_properties_annotation_;
  }
  image_properties_annotation_ = image_properties_annotation;
  if (image_properties_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
}
void AnnotateImageResponse::_slow_mutable_error() {
  error_ = ::google::protobuf::Arena::Create< ::google::rpc::Status >(
      GetArenaNoVirtual());
}
::google::rpc::Status* AnnotateImageResponse::_slow_release_error() {
  if (error_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::Status* temp = new ::google::rpc::Status(*error_);
    error_ = NULL;
    return temp;
  }
}
::google::rpc::Status* AnnotateImageResponse::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.vision.v1.AnnotateImageResponse.error)
  
  ::google::rpc::Status* temp = error_;
  error_ = NULL;
  return temp;
}
void AnnotateImageResponse::unsafe_arena_set_allocated_error(
    ::google::rpc::Status* error) {
  if (GetArenaNoVirtual() == NULL) {
    delete error_;
  }
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.error)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotateImageResponse::kFaceAnnotationsFieldNumber;
const int AnnotateImageResponse::kLandmarkAnnotationsFieldNumber;
const int AnnotateImageResponse::kLogoAnnotationsFieldNumber;
const int AnnotateImageResponse::kLabelAnnotationsFieldNumber;
const int AnnotateImageResponse::kTextAnnotationsFieldNumber;
const int AnnotateImageResponse::kSafeSearchAnnotationFieldNumber;
const int AnnotateImageResponse::kImagePropertiesAnnotationFieldNumber;
const int AnnotateImageResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnnotateImageResponse::AnnotateImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.AnnotateImageResponse)
}
AnnotateImageResponse::AnnotateImageResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  face_annotations_(arena),
  landmark_annotations_(arena),
  logo_annotations_(arena),
  label_annotations_(arena),
  text_annotations_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.AnnotateImageResponse)
}

void AnnotateImageResponse::InitAsDefaultInstance() {
  safe_search_annotation_ = const_cast< ::google::cloud::vision::v1::SafeSearchAnnotation*>(
      ::google::cloud::vision::v1::SafeSearchAnnotation::internal_default_instance());
  image_properties_annotation_ = const_cast< ::google::cloud::vision::v1::ImageProperties*>(
      ::google::cloud::vision::v1::ImageProperties::internal_default_instance());
  error_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}

AnnotateImageResponse::AnnotateImageResponse(const AnnotateImageResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.AnnotateImageResponse)
}

void AnnotateImageResponse::SharedCtor() {
  safe_search_annotation_ = NULL;
  image_properties_annotation_ = NULL;
  error_ = NULL;
  _cached_size_ = 0;
}

AnnotateImageResponse::~AnnotateImageResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.AnnotateImageResponse)
  SharedDtor();
}

void AnnotateImageResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &AnnotateImageResponse_default_instance_.get()) {
    delete safe_search_annotation_;
    delete image_properties_annotation_;
    delete error_;
  }
}

void AnnotateImageResponse::ArenaDtor(void* object) {
  AnnotateImageResponse* _this = reinterpret_cast< AnnotateImageResponse* >(object);
  (void)_this;
}
void AnnotateImageResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AnnotateImageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnnotateImageResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnnotateImageResponse_descriptor_;
}

const AnnotateImageResponse& AnnotateImageResponse::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnnotateImageResponse> AnnotateImageResponse_default_instance_;

AnnotateImageResponse* AnnotateImageResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AnnotateImageResponse>(arena);
}

void AnnotateImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.AnnotateImageResponse)
  if (GetArenaNoVirtual() == NULL && safe_search_annotation_ != NULL) delete safe_search_annotation_;
  safe_search_annotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_properties_annotation_ != NULL) delete image_properties_annotation_;
  image_properties_annotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  face_annotations_.Clear();
  landmark_annotations_.Clear();
  logo_annotations_.Clear();
  label_annotations_.Clear();
  text_annotations_.Clear();
}

bool AnnotateImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.AnnotateImageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_face_annotations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_face_annotations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_face_annotations;
        if (input->ExpectTag(18)) goto parse_loop_landmark_annotations;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_landmark_annotations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_landmark_annotations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_landmark_annotations;
        if (input->ExpectTag(26)) goto parse_loop_logo_annotations;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_logo_annotations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_logo_annotations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_logo_annotations;
        if (input->ExpectTag(34)) goto parse_loop_label_annotations;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_label_annotations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_label_annotations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_label_annotations;
        if (input->ExpectTag(42)) goto parse_loop_text_annotations;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_text_annotations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_text_annotations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_text_annotations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_safe_search_annotation;
        break;
      }

      // optional .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
      case 6: {
        if (tag == 50) {
         parse_safe_search_annotation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_safe_search_annotation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_image_properties_annotation;
        break;
      }

      // optional .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
      case 8: {
        if (tag == 66) {
         parse_image_properties_annotation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image_properties_annotation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_error;
        break;
      }

      // optional .google.rpc.Status error = 9;
      case 9: {
        if (tag == 74) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.AnnotateImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.AnnotateImageResponse)
  return false;
#undef DO_
}

void AnnotateImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.AnnotateImageResponse)
  // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
  for (unsigned int i = 0, n = this->face_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->face_annotations(i), output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
  for (unsigned int i = 0, n = this->landmark_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->landmark_annotations(i), output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
  for (unsigned int i = 0, n = this->logo_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->logo_annotations(i), output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
  for (unsigned int i = 0, n = this->label_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->label_annotations(i), output);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
  for (unsigned int i = 0, n = this->text_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->text_annotations(i), output);
  }

  // optional .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
  if (this->has_safe_search_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->safe_search_annotation_, output);
  }

  // optional .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
  if (this->has_image_properties_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->image_properties_annotation_, output);
  }

  // optional .google.rpc.Status error = 9;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.AnnotateImageResponse)
}

::google::protobuf::uint8* AnnotateImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.AnnotateImageResponse)
  // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
  for (unsigned int i = 0, n = this->face_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->face_annotations(i), false, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
  for (unsigned int i = 0, n = this->landmark_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->landmark_annotations(i), false, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
  for (unsigned int i = 0, n = this->logo_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->logo_annotations(i), false, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
  for (unsigned int i = 0, n = this->label_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->label_annotations(i), false, target);
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
  for (unsigned int i = 0, n = this->text_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->text_annotations(i), false, target);
  }

  // optional .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
  if (this->has_safe_search_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->safe_search_annotation_, false, target);
  }

  // optional .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
  if (this->has_image_properties_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->image_properties_annotation_, false, target);
  }

  // optional .google.rpc.Status error = 9;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.AnnotateImageResponse)
  return target;
}

size_t AnnotateImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.AnnotateImageResponse)
  size_t total_size = 0;

  // optional .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
  if (this->has_safe_search_annotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->safe_search_annotation_);
  }

  // optional .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
  if (this->has_image_properties_annotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->image_properties_annotation_);
  }

  // optional .google.rpc.Status error = 9;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
  {
    unsigned int count = this->face_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->face_annotations(i));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
  {
    unsigned int count = this->landmark_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->landmark_annotations(i));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
  {
    unsigned int count = this->logo_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->logo_annotations(i));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
  {
    unsigned int count = this->label_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->label_annotations(i));
    }
  }

  // repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
  {
    unsigned int count = this->text_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->text_annotations(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnnotateImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnnotateImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnnotateImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.AnnotateImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.AnnotateImageResponse)
    UnsafeMergeFrom(*source);
  }
}

void AnnotateImageResponse::MergeFrom(const AnnotateImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnnotateImageResponse::UnsafeMergeFrom(const AnnotateImageResponse& from) {
  GOOGLE_DCHECK(&from != this);
  face_annotations_.MergeFrom(from.face_annotations_);
  landmark_annotations_.MergeFrom(from.landmark_annotations_);
  logo_annotations_.MergeFrom(from.logo_annotations_);
  label_annotations_.MergeFrom(from.label_annotations_);
  text_annotations_.MergeFrom(from.text_annotations_);
  if (from.has_safe_search_annotation()) {
    mutable_safe_search_annotation()->::google::cloud::vision::v1::SafeSearchAnnotation::MergeFrom(from.safe_search_annotation());
  }
  if (from.has_image_properties_annotation()) {
    mutable_image_properties_annotation()->::google::cloud::vision::v1::ImageProperties::MergeFrom(from.image_properties_annotation());
  }
  if (from.has_error()) {
    mutable_error()->::google::rpc::Status::MergeFrom(from.error());
  }
}

void AnnotateImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotateImageResponse::CopyFrom(const AnnotateImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.AnnotateImageResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnnotateImageResponse::IsInitialized() const {

  return true;
}

void AnnotateImageResponse::Swap(AnnotateImageResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AnnotateImageResponse temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AnnotateImageResponse::UnsafeArenaSwap(AnnotateImageResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AnnotateImageResponse::InternalSwap(AnnotateImageResponse* other) {
  face_annotations_.UnsafeArenaSwap(&other->face_annotations_);
  landmark_annotations_.UnsafeArenaSwap(&other->landmark_annotations_);
  logo_annotations_.UnsafeArenaSwap(&other->logo_annotations_);
  label_annotations_.UnsafeArenaSwap(&other->label_annotations_);
  text_annotations_.UnsafeArenaSwap(&other->text_annotations_);
  std::swap(safe_search_annotation_, other->safe_search_annotation_);
  std::swap(image_properties_annotation_, other->image_properties_annotation_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnnotateImageResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnnotateImageResponse_descriptor_;
  metadata.reflection = AnnotateImageResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnnotateImageResponse

// repeated .google.cloud.vision.v1.FaceAnnotation face_annotations = 1;
int AnnotateImageResponse::face_annotations_size() const {
  return face_annotations_.size();
}
void AnnotateImageResponse::clear_face_annotations() {
  face_annotations_.Clear();
}
const ::google::cloud::vision::v1::FaceAnnotation& AnnotateImageResponse::face_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_.Get(index);
}
::google::cloud::vision::v1::FaceAnnotation* AnnotateImageResponse::mutable_face_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_.Mutable(index);
}
::google::cloud::vision::v1::FaceAnnotation* AnnotateImageResponse::add_face_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation >*
AnnotateImageResponse::mutable_face_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return &face_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::FaceAnnotation >&
AnnotateImageResponse::face_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.face_annotations)
  return face_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation landmark_annotations = 2;
int AnnotateImageResponse::landmark_annotations_size() const {
  return landmark_annotations_.size();
}
void AnnotateImageResponse::clear_landmark_annotations() {
  landmark_annotations_.Clear();
}
const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::landmark_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_.Get(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_landmark_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_.Mutable(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_landmark_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_landmark_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return &landmark_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::landmark_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.landmark_annotations)
  return landmark_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation logo_annotations = 3;
int AnnotateImageResponse::logo_annotations_size() const {
  return logo_annotations_.size();
}
void AnnotateImageResponse::clear_logo_annotations() {
  logo_annotations_.Clear();
}
const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::logo_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_.Get(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_logo_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_.Mutable(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_logo_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_logo_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return &logo_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::logo_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.logo_annotations)
  return logo_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation label_annotations = 4;
int AnnotateImageResponse::label_annotations_size() const {
  return label_annotations_.size();
}
void AnnotateImageResponse::clear_label_annotations() {
  label_annotations_.Clear();
}
const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::label_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_.Get(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_label_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_.Mutable(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_label_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_label_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return &label_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::label_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.label_annotations)
  return label_annotations_;
}

// repeated .google.cloud.vision.v1.EntityAnnotation text_annotations = 5;
int AnnotateImageResponse::text_annotations_size() const {
  return text_annotations_.size();
}
void AnnotateImageResponse::clear_text_annotations() {
  text_annotations_.Clear();
}
const ::google::cloud::vision::v1::EntityAnnotation& AnnotateImageResponse::text_annotations(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_.Get(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::mutable_text_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_.Mutable(index);
}
::google::cloud::vision::v1::EntityAnnotation* AnnotateImageResponse::add_text_annotations() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >*
AnnotateImageResponse::mutable_text_annotations() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return &text_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::EntityAnnotation >&
AnnotateImageResponse::text_annotations() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.AnnotateImageResponse.text_annotations)
  return text_annotations_;
}

// optional .google.cloud.vision.v1.SafeSearchAnnotation safe_search_annotation = 6;
bool AnnotateImageResponse::has_safe_search_annotation() const {
  return this != internal_default_instance() && safe_search_annotation_ != NULL;
}
void AnnotateImageResponse::clear_safe_search_annotation() {
  if (GetArenaNoVirtual() == NULL && safe_search_annotation_ != NULL) delete safe_search_annotation_;
  safe_search_annotation_ = NULL;
}
const ::google::cloud::vision::v1::SafeSearchAnnotation& AnnotateImageResponse::safe_search_annotation() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
  return safe_search_annotation_ != NULL ? *safe_search_annotation_
                         : *::google::cloud::vision::v1::SafeSearchAnnotation::internal_default_instance();
}
::google::cloud::vision::v1::SafeSearchAnnotation* AnnotateImageResponse::mutable_safe_search_annotation() {
  
  if (safe_search_annotation_ == NULL) {
    _slow_mutable_safe_search_annotation();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
  return safe_search_annotation_;
}
::google::cloud::vision::v1::SafeSearchAnnotation* AnnotateImageResponse::release_safe_search_annotation() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_safe_search_annotation();
  } else {
    ::google::cloud::vision::v1::SafeSearchAnnotation* temp = safe_search_annotation_;
    safe_search_annotation_ = NULL;
    return temp;
  }
}
 void AnnotateImageResponse::set_allocated_safe_search_annotation(::google::cloud::vision::v1::SafeSearchAnnotation* safe_search_annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete safe_search_annotation_;
  }
  if (safe_search_annotation != NULL) {
    _slow_set_allocated_safe_search_annotation(message_arena, &safe_search_annotation);
  }
  safe_search_annotation_ = safe_search_annotation;
  if (safe_search_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.safe_search_annotation)
}

// optional .google.cloud.vision.v1.ImageProperties image_properties_annotation = 8;
bool AnnotateImageResponse::has_image_properties_annotation() const {
  return this != internal_default_instance() && image_properties_annotation_ != NULL;
}
void AnnotateImageResponse::clear_image_properties_annotation() {
  if (GetArenaNoVirtual() == NULL && image_properties_annotation_ != NULL) delete image_properties_annotation_;
  image_properties_annotation_ = NULL;
}
const ::google::cloud::vision::v1::ImageProperties& AnnotateImageResponse::image_properties_annotation() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
  return image_properties_annotation_ != NULL ? *image_properties_annotation_
                         : *::google::cloud::vision::v1::ImageProperties::internal_default_instance();
}
::google::cloud::vision::v1::ImageProperties* AnnotateImageResponse::mutable_image_properties_annotation() {
  
  if (image_properties_annotation_ == NULL) {
    _slow_mutable_image_properties_annotation();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
  return image_properties_annotation_;
}
::google::cloud::vision::v1::ImageProperties* AnnotateImageResponse::release_image_properties_annotation() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_image_properties_annotation();
  } else {
    ::google::cloud::vision::v1::ImageProperties* temp = image_properties_annotation_;
    image_properties_annotation_ = NULL;
    return temp;
  }
}
 void AnnotateImageResponse::set_allocated_image_properties_annotation(::google::cloud::vision::v1::ImageProperties* image_properties_annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_properties_annotation_;
  }
  if (image_properties_annotation != NULL) {
    _slow_set_allocated_image_properties_annotation(message_arena, &image_properties_annotation);
  }
  image_properties_annotation_ = image_properties_annotation;
  if (image_properties_annotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.image_properties_annotation)
}

// optional .google.rpc.Status error = 9;
bool AnnotateImageResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void AnnotateImageResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::google::rpc::Status& AnnotateImageResponse::error() const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.AnnotateImageResponse.error)
  return error_ != NULL ? *error_
                         : *::google::rpc::Status::internal_default_instance();
}
::google::rpc::Status* AnnotateImageResponse::mutable_error() {
  
  if (error_ == NULL) {
    _slow_mutable_error();
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.AnnotateImageResponse.error)
  return error_;
}
::google::rpc::Status* AnnotateImageResponse::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.vision.v1.AnnotateImageResponse.error)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_error();
  } else {
    ::google::rpc::Status* temp = error_;
    error_ = NULL;
    return temp;
  }
}
 void AnnotateImageResponse::set_allocated_error(::google::rpc::Status* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete error_;
  }
  if (error != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(error);
    }
  }
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.vision.v1.AnnotateImageResponse.error)
}

inline const AnnotateImageResponse* AnnotateImageResponse::internal_default_instance() {
  return &AnnotateImageResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchAnnotateImagesRequest::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchAnnotateImagesRequest::BatchAnnotateImagesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}
BatchAnnotateImagesRequest::BatchAnnotateImagesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  requests_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}

void BatchAnnotateImagesRequest::InitAsDefaultInstance() {
}

BatchAnnotateImagesRequest::BatchAnnotateImagesRequest(const BatchAnnotateImagesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}

void BatchAnnotateImagesRequest::SharedCtor() {
  _cached_size_ = 0;
}

BatchAnnotateImagesRequest::~BatchAnnotateImagesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  SharedDtor();
}

void BatchAnnotateImagesRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void BatchAnnotateImagesRequest::ArenaDtor(void* object) {
  BatchAnnotateImagesRequest* _this = reinterpret_cast< BatchAnnotateImagesRequest* >(object);
  (void)_this;
}
void BatchAnnotateImagesRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BatchAnnotateImagesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchAnnotateImagesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchAnnotateImagesRequest_descriptor_;
}

const BatchAnnotateImagesRequest& BatchAnnotateImagesRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BatchAnnotateImagesRequest> BatchAnnotateImagesRequest_default_instance_;

BatchAnnotateImagesRequest* BatchAnnotateImagesRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BatchAnnotateImagesRequest>(arena);
}

void BatchAnnotateImagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  requests_.Clear();
}

bool BatchAnnotateImagesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_requests;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  return false;
#undef DO_
}

void BatchAnnotateImagesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
  for (unsigned int i = 0, n = this->requests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->requests(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.BatchAnnotateImagesRequest)
}

::google::protobuf::uint8* BatchAnnotateImagesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
  for (unsigned int i = 0, n = this->requests_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->requests(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  return target;
}

size_t BatchAnnotateImagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
  {
    unsigned int count = this->requests_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->requests(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchAnnotateImagesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BatchAnnotateImagesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchAnnotateImagesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.BatchAnnotateImagesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.BatchAnnotateImagesRequest)
    UnsafeMergeFrom(*source);
  }
}

void BatchAnnotateImagesRequest::MergeFrom(const BatchAnnotateImagesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BatchAnnotateImagesRequest::UnsafeMergeFrom(const BatchAnnotateImagesRequest& from) {
  GOOGLE_DCHECK(&from != this);
  requests_.MergeFrom(from.requests_);
}

void BatchAnnotateImagesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchAnnotateImagesRequest::CopyFrom(const BatchAnnotateImagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BatchAnnotateImagesRequest::IsInitialized() const {

  return true;
}

void BatchAnnotateImagesRequest::Swap(BatchAnnotateImagesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BatchAnnotateImagesRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void BatchAnnotateImagesRequest::UnsafeArenaSwap(BatchAnnotateImagesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BatchAnnotateImagesRequest::InternalSwap(BatchAnnotateImagesRequest* other) {
  requests_.UnsafeArenaSwap(&other->requests_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchAnnotateImagesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchAnnotateImagesRequest_descriptor_;
  metadata.reflection = BatchAnnotateImagesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchAnnotateImagesRequest

// repeated .google.cloud.vision.v1.AnnotateImageRequest requests = 1;
int BatchAnnotateImagesRequest::requests_size() const {
  return requests_.size();
}
void BatchAnnotateImagesRequest::clear_requests() {
  requests_.Clear();
}
const ::google::cloud::vision::v1::AnnotateImageRequest& BatchAnnotateImagesRequest::requests(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_.Get(index);
}
::google::cloud::vision::v1::AnnotateImageRequest* BatchAnnotateImagesRequest::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_.Mutable(index);
}
::google::cloud::vision::v1::AnnotateImageRequest* BatchAnnotateImagesRequest::add_requests() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageRequest >*
BatchAnnotateImagesRequest::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return &requests_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageRequest >&
BatchAnnotateImagesRequest::requests() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.BatchAnnotateImagesRequest.requests)
  return requests_;
}

inline const BatchAnnotateImagesRequest* BatchAnnotateImagesRequest::internal_default_instance() {
  return &BatchAnnotateImagesRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchAnnotateImagesResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchAnnotateImagesResponse::BatchAnnotateImagesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}
BatchAnnotateImagesResponse::BatchAnnotateImagesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  responses_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}

void BatchAnnotateImagesResponse::InitAsDefaultInstance() {
}

BatchAnnotateImagesResponse::BatchAnnotateImagesResponse(const BatchAnnotateImagesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}

void BatchAnnotateImagesResponse::SharedCtor() {
  _cached_size_ = 0;
}

BatchAnnotateImagesResponse::~BatchAnnotateImagesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  SharedDtor();
}

void BatchAnnotateImagesResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void BatchAnnotateImagesResponse::ArenaDtor(void* object) {
  BatchAnnotateImagesResponse* _this = reinterpret_cast< BatchAnnotateImagesResponse* >(object);
  (void)_this;
}
void BatchAnnotateImagesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BatchAnnotateImagesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchAnnotateImagesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchAnnotateImagesResponse_descriptor_;
}

const BatchAnnotateImagesResponse& BatchAnnotateImagesResponse::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fvision_2fv1_2fimage_5fannotator_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BatchAnnotateImagesResponse> BatchAnnotateImagesResponse_default_instance_;

BatchAnnotateImagesResponse* BatchAnnotateImagesResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BatchAnnotateImagesResponse>(arena);
}

void BatchAnnotateImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  responses_.Clear();
}

bool BatchAnnotateImagesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_responses:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_responses;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  return false;
#undef DO_
}

void BatchAnnotateImagesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
  for (unsigned int i = 0, n = this->responses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->responses(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.vision.v1.BatchAnnotateImagesResponse)
}

::google::protobuf::uint8* BatchAnnotateImagesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
  for (unsigned int i = 0, n = this->responses_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->responses(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  return target;
}

size_t BatchAnnotateImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  size_t total_size = 0;

  // repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
  {
    unsigned int count = this->responses_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->responses(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchAnnotateImagesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BatchAnnotateImagesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchAnnotateImagesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.vision.v1.BatchAnnotateImagesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.vision.v1.BatchAnnotateImagesResponse)
    UnsafeMergeFrom(*source);
  }
}

void BatchAnnotateImagesResponse::MergeFrom(const BatchAnnotateImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BatchAnnotateImagesResponse::UnsafeMergeFrom(const BatchAnnotateImagesResponse& from) {
  GOOGLE_DCHECK(&from != this);
  responses_.MergeFrom(from.responses_);
}

void BatchAnnotateImagesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchAnnotateImagesResponse::CopyFrom(const BatchAnnotateImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.vision.v1.BatchAnnotateImagesResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BatchAnnotateImagesResponse::IsInitialized() const {

  return true;
}

void BatchAnnotateImagesResponse::Swap(BatchAnnotateImagesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BatchAnnotateImagesResponse temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void BatchAnnotateImagesResponse::UnsafeArenaSwap(BatchAnnotateImagesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BatchAnnotateImagesResponse::InternalSwap(BatchAnnotateImagesResponse* other) {
  responses_.UnsafeArenaSwap(&other->responses_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchAnnotateImagesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchAnnotateImagesResponse_descriptor_;
  metadata.reflection = BatchAnnotateImagesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchAnnotateImagesResponse

// repeated .google.cloud.vision.v1.AnnotateImageResponse responses = 1;
int BatchAnnotateImagesResponse::responses_size() const {
  return responses_.size();
}
void BatchAnnotateImagesResponse::clear_responses() {
  responses_.Clear();
}
const ::google::cloud::vision::v1::AnnotateImageResponse& BatchAnnotateImagesResponse::responses(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_.Get(index);
}
::google::cloud::vision::v1::AnnotateImageResponse* BatchAnnotateImagesResponse::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_.Mutable(index);
}
::google::cloud::vision::v1::AnnotateImageResponse* BatchAnnotateImagesResponse::add_responses() {
  // @@protoc_insertion_point(field_add:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageResponse >*
BatchAnnotateImagesResponse::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return &responses_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::vision::v1::AnnotateImageResponse >&
BatchAnnotateImagesResponse::responses() const {
  // @@protoc_insertion_point(field_list:google.cloud.vision.v1.BatchAnnotateImagesResponse.responses)
  return responses_;
}

inline const BatchAnnotateImagesResponse* BatchAnnotateImagesResponse::internal_default_instance() {
  return &BatchAnnotateImagesResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace vision
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
