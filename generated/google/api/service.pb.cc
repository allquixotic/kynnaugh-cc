// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
class ServiceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Service> {};
ServiceDefaultTypeInternal _Service_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fservice_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, config_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, producer_project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, apis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, enums_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, documentation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, backend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, http_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, authentication_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, usage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, endpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, control_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, logs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, metrics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, monitored_resources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, logging_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, monitoring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Service, system_parameters_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Service)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Service_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_google_2fapi_2fservice_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/api/service.proto", schemas, file_default_instances, protobuf_Offsets_google_2fapi_2fservice_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fservice_2eproto() {
  _Service_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void protobuf_InitDefaults_google_2fapi_2fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fauth_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fbackend_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fcontext_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fcontrol_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fdocumentation_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fendpoint_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fhttp_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2flabel_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2flog_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2flogging_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmetric_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmonitoring_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fsystem_5fparameter_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fusage_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fapi_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftype_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::internal::InitProtobufDefaults();
  _Service_default_instance_.DefaultConstruct();
  _Service_default_instance_.get_mutable()->config_version_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  _Service_default_instance_.get_mutable()->documentation_ = const_cast< ::google::api::Documentation*>(
      ::google::api::Documentation::internal_default_instance());
  _Service_default_instance_.get_mutable()->backend_ = const_cast< ::google::api::Backend*>(
      ::google::api::Backend::internal_default_instance());
  _Service_default_instance_.get_mutable()->http_ = const_cast< ::google::api::Http*>(
      ::google::api::Http::internal_default_instance());
  _Service_default_instance_.get_mutable()->authentication_ = const_cast< ::google::api::Authentication*>(
      ::google::api::Authentication::internal_default_instance());
  _Service_default_instance_.get_mutable()->context_ = const_cast< ::google::api::Context*>(
      ::google::api::Context::internal_default_instance());
  _Service_default_instance_.get_mutable()->usage_ = const_cast< ::google::api::Usage*>(
      ::google::api::Usage::internal_default_instance());
  _Service_default_instance_.get_mutable()->control_ = const_cast< ::google::api::Control*>(
      ::google::api::Control::internal_default_instance());
  _Service_default_instance_.get_mutable()->logging_ = const_cast< ::google::api::Logging*>(
      ::google::api::Logging::internal_default_instance());
  _Service_default_instance_.get_mutable()->monitoring_ = const_cast< ::google::api::Monitoring*>(
      ::google::api::Monitoring::internal_default_instance());
  _Service_default_instance_.get_mutable()->system_parameters_ = const_cast< ::google::api::SystemParameters*>(
      ::google::api::SystemParameters::internal_default_instance());
}

void protobuf_InitDefaults_google_2fapi_2fservice_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_google_2fapi_2fservice_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fservice_2eproto_impl() {
  protobuf_InitDefaults_google_2fapi_2fservice_2eproto();
  static const char descriptor[] = {
      "\n\030google/api/service.proto\022\ngoogle.api\032\034"
      "google/api/annotations.proto\032\025google/api"
      "/auth.proto\032\030google/api/backend.proto\032\030g"
      "oogle/api/context.proto\032\030google/api/cont"
      "rol.proto\032\036google/api/documentation.prot"
      "o\032\031google/api/endpoint.proto\032\025google/api"
      "/http.proto\032\026google/api/label.proto\032\024goo"
      "gle/api/log.proto\032\030google/api/logging.pr"
      "oto\032\027google/api/metric.proto\032#google/api"
      "/monitored_resource.proto\032\033google/api/mo"
      "nitoring.proto\032!google/api/system_parame"
      "ter.proto\032\026google/api/usage.proto\032\031googl"
      "e/protobuf/any.proto\032\031google/protobuf/ap"
      "i.proto\032\032google/protobuf/type.proto\032\036goo"
      "gle/protobuf/wrappers.proto\"\341\006\n\007Service\022"
      "4\n\016config_version\030\024 \001(\0132\034.google.protobu"
      "f.UInt32Value\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030! \001(\t\022"
      "\r\n\005title\030\002 \001(\t\022\033\n\023producer_project_id\030\026 "
      "\001(\t\022\"\n\004apis\030\003 \003(\0132\024.google.protobuf.Api\022"
      "$\n\005types\030\004 \003(\0132\025.google.protobuf.Type\022$\n"
      "\005enums\030\005 \003(\0132\025.google.protobuf.Enum\0220\n\rd"
      "ocumentation\030\006 \001(\0132\031.google.api.Document"
      "ation\022$\n\007backend\030\010 \001(\0132\023.google.api.Back"
      "end\022\036\n\004http\030\t \001(\0132\020.google.api.Http\0222\n\016a"
      "uthentication\030\013 \001(\0132\032.google.api.Authent"
      "ication\022$\n\007context\030\014 \001(\0132\023.google.api.Co"
      "ntext\022 \n\005usage\030\017 \001(\0132\021.google.api.Usage\022"
      "\'\n\tendpoints\030\022 \003(\0132\024.google.api.Endpoint"
      "\022$\n\007control\030\025 \001(\0132\023.google.api.Control\022\'"
      "\n\004logs\030\027 \003(\0132\031.google.api.LogDescriptor\022"
      "-\n\007metrics\030\030 \003(\0132\034.google.api.MetricDesc"
      "riptor\022D\n\023monitored_resources\030\031 \003(\0132\'.go"
      "ogle.api.MonitoredResourceDescriptor\022$\n\007"
      "logging\030\033 \001(\0132\023.google.api.Logging\022*\n\nmo"
      "nitoring\030\034 \001(\0132\026.google.api.Monitoring\0227"
      "\n\021system_parameters\030\035 \001(\0132\034.google.api.S"
      "ystemParametersB\'\n\016com.google.apiB\014Servi"
      "ceProtoP\001\242\002\004GAPIb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1504);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/service.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fauth_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fbackend_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fcontext_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fcontrol_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fdocumentation_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fendpoint_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fhttp_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2flabel_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2flog_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2flogging_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmetric_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmonitoring_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fsystem_5fparameter_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fusage_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fapi_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftype_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fservice_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fservice_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fservice_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fservice_2eproto() {
    protobuf_AddDesc_google_2fapi_2fservice_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fservice_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service::kConfigVersionFieldNumber;
const int Service::kNameFieldNumber;
const int Service::kIdFieldNumber;
const int Service::kTitleFieldNumber;
const int Service::kProducerProjectIdFieldNumber;
const int Service::kApisFieldNumber;
const int Service::kTypesFieldNumber;
const int Service::kEnumsFieldNumber;
const int Service::kDocumentationFieldNumber;
const int Service::kBackendFieldNumber;
const int Service::kHttpFieldNumber;
const int Service::kAuthenticationFieldNumber;
const int Service::kContextFieldNumber;
const int Service::kUsageFieldNumber;
const int Service::kEndpointsFieldNumber;
const int Service::kControlFieldNumber;
const int Service::kLogsFieldNumber;
const int Service::kMetricsFieldNumber;
const int Service::kMonitoredResourcesFieldNumber;
const int Service::kLoggingFieldNumber;
const int Service::kMonitoringFieldNumber;
const int Service::kSystemParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service::Service()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2fapi_2fservice_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Service)
}
Service::Service(const Service& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      apis_(from.apis_),
      types_(from.types_),
      enums_(from.enums_),
      endpoints_(from.endpoints_),
      logs_(from.logs_),
      metrics_(from.metrics_),
      monitored_resources_(from.monitored_resources_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  producer_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.producer_project_id().size() > 0) {
    producer_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  if (from.has_config_version()) {
    config_version_ = new ::google::protobuf::UInt32Value(*from.config_version_);
  } else {
    config_version_ = NULL;
  }
  if (from.has_documentation()) {
    documentation_ = new ::google::api::Documentation(*from.documentation_);
  } else {
    documentation_ = NULL;
  }
  if (from.has_backend()) {
    backend_ = new ::google::api::Backend(*from.backend_);
  } else {
    backend_ = NULL;
  }
  if (from.has_http()) {
    http_ = new ::google::api::Http(*from.http_);
  } else {
    http_ = NULL;
  }
  if (from.has_authentication()) {
    authentication_ = new ::google::api::Authentication(*from.authentication_);
  } else {
    authentication_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::api::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_usage()) {
    usage_ = new ::google::api::Usage(*from.usage_);
  } else {
    usage_ = NULL;
  }
  if (from.has_control()) {
    control_ = new ::google::api::Control(*from.control_);
  } else {
    control_ = NULL;
  }
  if (from.has_logging()) {
    logging_ = new ::google::api::Logging(*from.logging_);
  } else {
    logging_ = NULL;
  }
  if (from.has_monitoring()) {
    monitoring_ = new ::google::api::Monitoring(*from.monitoring_);
  } else {
    monitoring_ = NULL;
  }
  if (from.has_system_parameters()) {
    system_parameters_ = new ::google::api::SystemParameters(*from.system_parameters_);
  } else {
    system_parameters_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.Service)
}

void Service::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_version_, 0, reinterpret_cast<char*>(&system_parameters_) -
    reinterpret_cast<char*>(&config_version_) + sizeof(system_parameters_));
  _cached_size_ = 0;
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:google.api.Service)
  SharedDtor();
}

void Service::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete config_version_;
  }
  if (this != internal_default_instance()) {
    delete documentation_;
  }
  if (this != internal_default_instance()) {
    delete backend_;
  }
  if (this != internal_default_instance()) {
    delete http_;
  }
  if (this != internal_default_instance()) {
    delete authentication_;
  }
  if (this != internal_default_instance()) {
    delete context_;
  }
  if (this != internal_default_instance()) {
    delete usage_;
  }
  if (this != internal_default_instance()) {
    delete control_;
  }
  if (this != internal_default_instance()) {
    delete logging_;
  }
  if (this != internal_default_instance()) {
    delete monitoring_;
  }
  if (this != internal_default_instance()) {
    delete system_parameters_;
  }
}

void Service::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Service::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const Service& Service::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservice_2eproto();
  return *internal_default_instance();
}

Service* Service::New(::google::protobuf::Arena* arena) const {
  Service* n = new Service;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Service)
  apis_.Clear();
  types_.Clear();
  enums_.Clear();
  endpoints_.Clear();
  logs_.Clear();
  metrics_.Clear();
  monitored_resources_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_version_ != NULL) {
    delete config_version_;
  }
  config_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && documentation_ != NULL) {
    delete documentation_;
  }
  documentation_ = NULL;
  if (GetArenaNoVirtual() == NULL && backend_ != NULL) {
    delete backend_;
  }
  backend_ = NULL;
  if (GetArenaNoVirtual() == NULL && http_ != NULL) {
    delete http_;
  }
  http_ = NULL;
  if (GetArenaNoVirtual() == NULL && authentication_ != NULL) {
    delete authentication_;
  }
  authentication_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && usage_ != NULL) {
    delete usage_;
  }
  usage_ = NULL;
  if (GetArenaNoVirtual() == NULL && control_ != NULL) {
    delete control_;
  }
  control_ = NULL;
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) {
    delete logging_;
  }
  logging_ = NULL;
  if (GetArenaNoVirtual() == NULL && monitoring_ != NULL) {
    delete monitoring_;
  }
  monitoring_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_parameters_ != NULL) {
    delete system_parameters_;
  }
  system_parameters_ = NULL;
}

bool Service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Service)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Api apis = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_apis()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.protobuf.Type types = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.protobuf.Enum enums = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_enums()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .google.api.Documentation documentation = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_documentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Backend backend = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_backend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Http http = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Authentication authentication = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_authentication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Context context = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Usage usage = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.Endpoint endpoints = 18;
      case 18: {
        if (tag == 146u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_endpoints()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .google.protobuf.UInt32Value config_version = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Control control = 21;
      case 21: {
        if (tag == 170u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string producer_project_id = 22;
      case 22: {
        if (tag == 178u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->producer_project_id().data(), this->producer_project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.producer_project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.LogDescriptor logs = 23;
      case 23: {
        if (tag == 186u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_logs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.api.MetricDescriptor metrics = 24;
      case 24: {
        if (tag == 194u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
      case 25: {
        if (tag == 202u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_monitored_resources()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .google.api.Logging logging = 27;
      case 27: {
        if (tag == 218u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logging()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Monitoring monitoring = 28;
      case 28: {
        if (tag == 226u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_monitoring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.SystemParameters system_parameters = 29;
      case 29: {
        if (tag == 234u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_system_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 33;
      case 33: {
        if (tag == 266u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Service)
  return false;
#undef DO_
}

void Service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Service)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned int i = 0, n = this->apis_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->apis(i), output);
  }

  // repeated .google.protobuf.Type types = 4;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->types(i), output);
  }

  // repeated .google.protobuf.Enum enums = 5;
  for (unsigned int i = 0, n = this->enums_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->enums(i), output);
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->documentation_, output);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->backend_, output);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->http_, output);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->authentication_, output);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->context_, output);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->usage_, output);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned int i = 0, n = this->endpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->endpoints(i), output);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->config_version_, output);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->control_, output);
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), this->producer_project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.producer_project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->producer_project_id(), output);
  }

  // repeated .google.api.LogDescriptor logs = 23;
  for (unsigned int i = 0, n = this->logs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->logs(i), output);
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  for (unsigned int i = 0, n = this->metrics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->metrics(i), output);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned int i = 0, n = this->monitored_resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->monitored_resources(i), output);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->logging_, output);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->monitoring_, output);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, *this->system_parameters_, output);
  }

  // string id = 33;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.Service)
}

::google::protobuf::uint8* Service::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Service)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned int i = 0, n = this->apis_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->apis(i), false, target);
  }

  // repeated .google.protobuf.Type types = 4;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->types(i), false, target);
  }

  // repeated .google.protobuf.Enum enums = 5;
  for (unsigned int i = 0, n = this->enums_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->enums(i), false, target);
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->documentation_, false, target);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->backend_, false, target);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->http_, false, target);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->authentication_, false, target);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->context_, false, target);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->usage_, false, target);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned int i = 0, n = this->endpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, this->endpoints(i), false, target);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->config_version_, false, target);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->control_, false, target);
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), this->producer_project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.producer_project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->producer_project_id(), target);
  }

  // repeated .google.api.LogDescriptor logs = 23;
  for (unsigned int i = 0, n = this->logs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, this->logs(i), false, target);
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  for (unsigned int i = 0, n = this->metrics_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, this->metrics(i), false, target);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned int i = 0, n = this->monitored_resources_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, this->monitored_resources(i), false, target);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->logging_, false, target);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->monitoring_, false, target);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        29, *this->system_parameters_, false, target);
  }

  // string id = 33;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Service)
  size_t total_size = 0;

  // repeated .google.protobuf.Api apis = 3;
  {
    unsigned int count = this->apis_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->apis(i));
    }
  }

  // repeated .google.protobuf.Type types = 4;
  {
    unsigned int count = this->types_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->types(i));
    }
  }

  // repeated .google.protobuf.Enum enums = 5;
  {
    unsigned int count = this->enums_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->enums(i));
    }
  }

  // repeated .google.api.Endpoint endpoints = 18;
  {
    unsigned int count = this->endpoints_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->endpoints(i));
    }
  }

  // repeated .google.api.LogDescriptor logs = 23;
  {
    unsigned int count = this->logs_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->logs(i));
    }
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  {
    unsigned int count = this->metrics_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metrics(i));
    }
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  {
    unsigned int count = this->monitored_resources_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->monitored_resources(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string id = 33;
  if (this->id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->producer_project_id());
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_version_);
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->documentation_);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->backend_);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->http_);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->authentication_);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->context_);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->usage_);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->control_);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->logging_);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->monitoring_);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->system_parameters_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Service::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Service* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Service)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Service)
    MergeFrom(*source);
  }
}

void Service::MergeFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apis_.MergeFrom(from.apis_);
  types_.MergeFrom(from.types_);
  enums_.MergeFrom(from.enums_);
  endpoints_.MergeFrom(from.endpoints_);
  logs_.MergeFrom(from.logs_);
  metrics_.MergeFrom(from.metrics_);
  monitored_resources_.MergeFrom(from.monitored_resources_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.producer_project_id().size() > 0) {

    producer_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  if (from.has_config_version()) {
    mutable_config_version()->::google::protobuf::UInt32Value::MergeFrom(from.config_version());
  }
  if (from.has_documentation()) {
    mutable_documentation()->::google::api::Documentation::MergeFrom(from.documentation());
  }
  if (from.has_backend()) {
    mutable_backend()->::google::api::Backend::MergeFrom(from.backend());
  }
  if (from.has_http()) {
    mutable_http()->::google::api::Http::MergeFrom(from.http());
  }
  if (from.has_authentication()) {
    mutable_authentication()->::google::api::Authentication::MergeFrom(from.authentication());
  }
  if (from.has_context()) {
    mutable_context()->::google::api::Context::MergeFrom(from.context());
  }
  if (from.has_usage()) {
    mutable_usage()->::google::api::Usage::MergeFrom(from.usage());
  }
  if (from.has_control()) {
    mutable_control()->::google::api::Control::MergeFrom(from.control());
  }
  if (from.has_logging()) {
    mutable_logging()->::google::api::Logging::MergeFrom(from.logging());
  }
  if (from.has_monitoring()) {
    mutable_monitoring()->::google::api::Monitoring::MergeFrom(from.monitoring());
  }
  if (from.has_system_parameters()) {
    mutable_system_parameters()->::google::api::SystemParameters::MergeFrom(from.system_parameters());
  }
}

void Service::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::Swap(Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service::InternalSwap(Service* other) {
  apis_.UnsafeArenaSwap(&other->apis_);
  types_.UnsafeArenaSwap(&other->types_);
  enums_.UnsafeArenaSwap(&other->enums_);
  endpoints_.UnsafeArenaSwap(&other->endpoints_);
  logs_.UnsafeArenaSwap(&other->logs_);
  metrics_.UnsafeArenaSwap(&other->metrics_);
  monitored_resources_.UnsafeArenaSwap(&other->monitored_resources_);
  name_.Swap(&other->name_);
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  producer_project_id_.Swap(&other->producer_project_id_);
  std::swap(config_version_, other->config_version_);
  std::swap(documentation_, other->documentation_);
  std::swap(backend_, other->backend_);
  std::swap(http_, other->http_);
  std::swap(authentication_, other->authentication_);
  std::swap(context_, other->context_);
  std::swap(usage_, other->usage_);
  std::swap(control_, other->control_);
  std::swap(logging_, other->logging_);
  std::swap(monitoring_, other->monitoring_);
  std::swap(system_parameters_, other->system_parameters_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Service::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Service

// .google.protobuf.UInt32Value config_version = 20;
bool Service::has_config_version() const {
  return this != internal_default_instance() && config_version_ != NULL;
}
void Service::clear_config_version() {
  if (GetArenaNoVirtual() == NULL && config_version_ != NULL) delete config_version_;
  config_version_ = NULL;
}
const ::google::protobuf::UInt32Value& Service::config_version() const {
  // @@protoc_insertion_point(field_get:google.api.Service.config_version)
  return config_version_ != NULL ? *config_version_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
::google::protobuf::UInt32Value* Service::mutable_config_version() {
  
  if (config_version_ == NULL) {
    config_version_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.config_version)
  return config_version_;
}
::google::protobuf::UInt32Value* Service::release_config_version() {
  // @@protoc_insertion_point(field_release:google.api.Service.config_version)
  
  ::google::protobuf::UInt32Value* temp = config_version_;
  config_version_ = NULL;
  return temp;
}
void Service::set_allocated_config_version(::google::protobuf::UInt32Value* config_version) {
  delete config_version_;
  if (config_version != NULL && config_version->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_config_version = new ::google::protobuf::UInt32Value;
    new_config_version->CopyFrom(*config_version);
    config_version = new_config_version;
  }
  config_version_ = config_version;
  if (config_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.config_version)
}

// string name = 1;
void Service::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Service::name() const {
  // @@protoc_insertion_point(field_get:google.api.Service.name)
  return name_.GetNoArena();
}
void Service::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.name)
}
void Service::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.name)
}
void Service::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.name)
}
::std::string* Service::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Service::release_name() {
  // @@protoc_insertion_point(field_release:google.api.Service.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Service::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.name)
}

// string id = 33;
void Service::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Service::id() const {
  // @@protoc_insertion_point(field_get:google.api.Service.id)
  return id_.GetNoArena();
}
void Service::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.id)
}
void Service::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.id)
}
void Service::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.id)
}
::std::string* Service::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Service::release_id() {
  // @@protoc_insertion_point(field_release:google.api.Service.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Service::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.id)
}

// string title = 2;
void Service::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Service::title() const {
  // @@protoc_insertion_point(field_get:google.api.Service.title)
  return title_.GetNoArena();
}
void Service::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.title)
}
void Service::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.title)
}
void Service::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.title)
}
::std::string* Service::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Service::release_title() {
  // @@protoc_insertion_point(field_release:google.api.Service.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Service::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.title)
}

// string producer_project_id = 22;
void Service::clear_producer_project_id() {
  producer_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Service::producer_project_id() const {
  // @@protoc_insertion_point(field_get:google.api.Service.producer_project_id)
  return producer_project_id_.GetNoArena();
}
void Service::set_producer_project_id(const ::std::string& value) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.producer_project_id)
}
void Service::set_producer_project_id(const char* value) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.producer_project_id)
}
void Service::set_producer_project_id(const char* value, size_t size) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.producer_project_id)
}
::std::string* Service::mutable_producer_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.producer_project_id)
  return producer_project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Service::release_producer_project_id() {
  // @@protoc_insertion_point(field_release:google.api.Service.producer_project_id)
  
  return producer_project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Service::set_allocated_producer_project_id(::std::string* producer_project_id) {
  if (producer_project_id != NULL) {
    
  } else {
    
  }
  producer_project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_project_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.producer_project_id)
}

// repeated .google.protobuf.Api apis = 3;
int Service::apis_size() const {
  return apis_.size();
}
void Service::clear_apis() {
  apis_.Clear();
}
const ::google::protobuf::Api& Service::apis(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.apis)
  return apis_.Get(index);
}
::google::protobuf::Api* Service::mutable_apis(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.apis)
  return apis_.Mutable(index);
}
::google::protobuf::Api* Service::add_apis() {
  // @@protoc_insertion_point(field_add:google.api.Service.apis)
  return apis_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Api >*
Service::mutable_apis() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.apis)
  return &apis_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Api >&
Service::apis() const {
  // @@protoc_insertion_point(field_list:google.api.Service.apis)
  return apis_;
}

// repeated .google.protobuf.Type types = 4;
int Service::types_size() const {
  return types_.size();
}
void Service::clear_types() {
  types_.Clear();
}
const ::google::protobuf::Type& Service::types(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.types)
  return types_.Get(index);
}
::google::protobuf::Type* Service::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.types)
  return types_.Mutable(index);
}
::google::protobuf::Type* Service::add_types() {
  // @@protoc_insertion_point(field_add:google.api.Service.types)
  return types_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Type >*
Service::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.types)
  return &types_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Type >&
Service::types() const {
  // @@protoc_insertion_point(field_list:google.api.Service.types)
  return types_;
}

// repeated .google.protobuf.Enum enums = 5;
int Service::enums_size() const {
  return enums_.size();
}
void Service::clear_enums() {
  enums_.Clear();
}
const ::google::protobuf::Enum& Service::enums(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.enums)
  return enums_.Get(index);
}
::google::protobuf::Enum* Service::mutable_enums(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.enums)
  return enums_.Mutable(index);
}
::google::protobuf::Enum* Service::add_enums() {
  // @@protoc_insertion_point(field_add:google.api.Service.enums)
  return enums_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Enum >*
Service::mutable_enums() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.enums)
  return &enums_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Enum >&
Service::enums() const {
  // @@protoc_insertion_point(field_list:google.api.Service.enums)
  return enums_;
}

// .google.api.Documentation documentation = 6;
bool Service::has_documentation() const {
  return this != internal_default_instance() && documentation_ != NULL;
}
void Service::clear_documentation() {
  if (GetArenaNoVirtual() == NULL && documentation_ != NULL) delete documentation_;
  documentation_ = NULL;
}
const ::google::api::Documentation& Service::documentation() const {
  // @@protoc_insertion_point(field_get:google.api.Service.documentation)
  return documentation_ != NULL ? *documentation_
                         : *::google::api::Documentation::internal_default_instance();
}
::google::api::Documentation* Service::mutable_documentation() {
  
  if (documentation_ == NULL) {
    documentation_ = new ::google::api::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.documentation)
  return documentation_;
}
::google::api::Documentation* Service::release_documentation() {
  // @@protoc_insertion_point(field_release:google.api.Service.documentation)
  
  ::google::api::Documentation* temp = documentation_;
  documentation_ = NULL;
  return temp;
}
void Service::set_allocated_documentation(::google::api::Documentation* documentation) {
  delete documentation_;
  documentation_ = documentation;
  if (documentation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.documentation)
}

// .google.api.Backend backend = 8;
bool Service::has_backend() const {
  return this != internal_default_instance() && backend_ != NULL;
}
void Service::clear_backend() {
  if (GetArenaNoVirtual() == NULL && backend_ != NULL) delete backend_;
  backend_ = NULL;
}
const ::google::api::Backend& Service::backend() const {
  // @@protoc_insertion_point(field_get:google.api.Service.backend)
  return backend_ != NULL ? *backend_
                         : *::google::api::Backend::internal_default_instance();
}
::google::api::Backend* Service::mutable_backend() {
  
  if (backend_ == NULL) {
    backend_ = new ::google::api::Backend;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.backend)
  return backend_;
}
::google::api::Backend* Service::release_backend() {
  // @@protoc_insertion_point(field_release:google.api.Service.backend)
  
  ::google::api::Backend* temp = backend_;
  backend_ = NULL;
  return temp;
}
void Service::set_allocated_backend(::google::api::Backend* backend) {
  delete backend_;
  backend_ = backend;
  if (backend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.backend)
}

// .google.api.Http http = 9;
bool Service::has_http() const {
  return this != internal_default_instance() && http_ != NULL;
}
void Service::clear_http() {
  if (GetArenaNoVirtual() == NULL && http_ != NULL) delete http_;
  http_ = NULL;
}
const ::google::api::Http& Service::http() const {
  // @@protoc_insertion_point(field_get:google.api.Service.http)
  return http_ != NULL ? *http_
                         : *::google::api::Http::internal_default_instance();
}
::google::api::Http* Service::mutable_http() {
  
  if (http_ == NULL) {
    http_ = new ::google::api::Http;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.http)
  return http_;
}
::google::api::Http* Service::release_http() {
  // @@protoc_insertion_point(field_release:google.api.Service.http)
  
  ::google::api::Http* temp = http_;
  http_ = NULL;
  return temp;
}
void Service::set_allocated_http(::google::api::Http* http) {
  delete http_;
  if (http != NULL && http->GetArena() != NULL) {
    ::google::api::Http* new_http = new ::google::api::Http;
    new_http->CopyFrom(*http);
    http = new_http;
  }
  http_ = http;
  if (http) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.http)
}

// .google.api.Authentication authentication = 11;
bool Service::has_authentication() const {
  return this != internal_default_instance() && authentication_ != NULL;
}
void Service::clear_authentication() {
  if (GetArenaNoVirtual() == NULL && authentication_ != NULL) delete authentication_;
  authentication_ = NULL;
}
const ::google::api::Authentication& Service::authentication() const {
  // @@protoc_insertion_point(field_get:google.api.Service.authentication)
  return authentication_ != NULL ? *authentication_
                         : *::google::api::Authentication::internal_default_instance();
}
::google::api::Authentication* Service::mutable_authentication() {
  
  if (authentication_ == NULL) {
    authentication_ = new ::google::api::Authentication;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.authentication)
  return authentication_;
}
::google::api::Authentication* Service::release_authentication() {
  // @@protoc_insertion_point(field_release:google.api.Service.authentication)
  
  ::google::api::Authentication* temp = authentication_;
  authentication_ = NULL;
  return temp;
}
void Service::set_allocated_authentication(::google::api::Authentication* authentication) {
  delete authentication_;
  authentication_ = authentication;
  if (authentication) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.authentication)
}

// .google.api.Context context = 12;
bool Service::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
void Service::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
const ::google::api::Context& Service::context() const {
  // @@protoc_insertion_point(field_get:google.api.Service.context)
  return context_ != NULL ? *context_
                         : *::google::api::Context::internal_default_instance();
}
::google::api::Context* Service::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::google::api::Context;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.context)
  return context_;
}
::google::api::Context* Service::release_context() {
  // @@protoc_insertion_point(field_release:google.api.Service.context)
  
  ::google::api::Context* temp = context_;
  context_ = NULL;
  return temp;
}
void Service::set_allocated_context(::google::api::Context* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.context)
}

// .google.api.Usage usage = 15;
bool Service::has_usage() const {
  return this != internal_default_instance() && usage_ != NULL;
}
void Service::clear_usage() {
  if (GetArenaNoVirtual() == NULL && usage_ != NULL) delete usage_;
  usage_ = NULL;
}
const ::google::api::Usage& Service::usage() const {
  // @@protoc_insertion_point(field_get:google.api.Service.usage)
  return usage_ != NULL ? *usage_
                         : *::google::api::Usage::internal_default_instance();
}
::google::api::Usage* Service::mutable_usage() {
  
  if (usage_ == NULL) {
    usage_ = new ::google::api::Usage;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.usage)
  return usage_;
}
::google::api::Usage* Service::release_usage() {
  // @@protoc_insertion_point(field_release:google.api.Service.usage)
  
  ::google::api::Usage* temp = usage_;
  usage_ = NULL;
  return temp;
}
void Service::set_allocated_usage(::google::api::Usage* usage) {
  delete usage_;
  usage_ = usage;
  if (usage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.usage)
}

// repeated .google.api.Endpoint endpoints = 18;
int Service::endpoints_size() const {
  return endpoints_.size();
}
void Service::clear_endpoints() {
  endpoints_.Clear();
}
const ::google::api::Endpoint& Service::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.endpoints)
  return endpoints_.Get(index);
}
::google::api::Endpoint* Service::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.endpoints)
  return endpoints_.Mutable(index);
}
::google::api::Endpoint* Service::add_endpoints() {
  // @@protoc_insertion_point(field_add:google.api.Service.endpoints)
  return endpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::Endpoint >*
Service::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.endpoints)
  return &endpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::Endpoint >&
Service::endpoints() const {
  // @@protoc_insertion_point(field_list:google.api.Service.endpoints)
  return endpoints_;
}

// .google.api.Control control = 21;
bool Service::has_control() const {
  return this != internal_default_instance() && control_ != NULL;
}
void Service::clear_control() {
  if (GetArenaNoVirtual() == NULL && control_ != NULL) delete control_;
  control_ = NULL;
}
const ::google::api::Control& Service::control() const {
  // @@protoc_insertion_point(field_get:google.api.Service.control)
  return control_ != NULL ? *control_
                         : *::google::api::Control::internal_default_instance();
}
::google::api::Control* Service::mutable_control() {
  
  if (control_ == NULL) {
    control_ = new ::google::api::Control;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.control)
  return control_;
}
::google::api::Control* Service::release_control() {
  // @@protoc_insertion_point(field_release:google.api.Service.control)
  
  ::google::api::Control* temp = control_;
  control_ = NULL;
  return temp;
}
void Service::set_allocated_control(::google::api::Control* control) {
  delete control_;
  control_ = control;
  if (control) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.control)
}

// repeated .google.api.LogDescriptor logs = 23;
int Service::logs_size() const {
  return logs_.size();
}
void Service::clear_logs() {
  logs_.Clear();
}
const ::google::api::LogDescriptor& Service::logs(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.logs)
  return logs_.Get(index);
}
::google::api::LogDescriptor* Service::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.logs)
  return logs_.Mutable(index);
}
::google::api::LogDescriptor* Service::add_logs() {
  // @@protoc_insertion_point(field_add:google.api.Service.logs)
  return logs_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::LogDescriptor >*
Service::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.logs)
  return &logs_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::LogDescriptor >&
Service::logs() const {
  // @@protoc_insertion_point(field_list:google.api.Service.logs)
  return logs_;
}

// repeated .google.api.MetricDescriptor metrics = 24;
int Service::metrics_size() const {
  return metrics_.size();
}
void Service::clear_metrics() {
  metrics_.Clear();
}
const ::google::api::MetricDescriptor& Service::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.metrics)
  return metrics_.Get(index);
}
::google::api::MetricDescriptor* Service::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.metrics)
  return metrics_.Mutable(index);
}
::google::api::MetricDescriptor* Service::add_metrics() {
  // @@protoc_insertion_point(field_add:google.api.Service.metrics)
  return metrics_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >*
Service::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.metrics)
  return &metrics_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >&
Service::metrics() const {
  // @@protoc_insertion_point(field_list:google.api.Service.metrics)
  return metrics_;
}

// repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
int Service::monitored_resources_size() const {
  return monitored_resources_.size();
}
void Service::clear_monitored_resources() {
  monitored_resources_.Clear();
}
const ::google::api::MonitoredResourceDescriptor& Service::monitored_resources(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.monitored_resources)
  return monitored_resources_.Get(index);
}
::google::api::MonitoredResourceDescriptor* Service::mutable_monitored_resources(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.monitored_resources)
  return monitored_resources_.Mutable(index);
}
::google::api::MonitoredResourceDescriptor* Service::add_monitored_resources() {
  // @@protoc_insertion_point(field_add:google.api.Service.monitored_resources)
  return monitored_resources_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
Service::mutable_monitored_resources() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.monitored_resources)
  return &monitored_resources_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
Service::monitored_resources() const {
  // @@protoc_insertion_point(field_list:google.api.Service.monitored_resources)
  return monitored_resources_;
}

// .google.api.Logging logging = 27;
bool Service::has_logging() const {
  return this != internal_default_instance() && logging_ != NULL;
}
void Service::clear_logging() {
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) delete logging_;
  logging_ = NULL;
}
const ::google::api::Logging& Service::logging() const {
  // @@protoc_insertion_point(field_get:google.api.Service.logging)
  return logging_ != NULL ? *logging_
                         : *::google::api::Logging::internal_default_instance();
}
::google::api::Logging* Service::mutable_logging() {
  
  if (logging_ == NULL) {
    logging_ = new ::google::api::Logging;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.logging)
  return logging_;
}
::google::api::Logging* Service::release_logging() {
  // @@protoc_insertion_point(field_release:google.api.Service.logging)
  
  ::google::api::Logging* temp = logging_;
  logging_ = NULL;
  return temp;
}
void Service::set_allocated_logging(::google::api::Logging* logging) {
  delete logging_;
  logging_ = logging;
  if (logging) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.logging)
}

// .google.api.Monitoring monitoring = 28;
bool Service::has_monitoring() const {
  return this != internal_default_instance() && monitoring_ != NULL;
}
void Service::clear_monitoring() {
  if (GetArenaNoVirtual() == NULL && monitoring_ != NULL) delete monitoring_;
  monitoring_ = NULL;
}
const ::google::api::Monitoring& Service::monitoring() const {
  // @@protoc_insertion_point(field_get:google.api.Service.monitoring)
  return monitoring_ != NULL ? *monitoring_
                         : *::google::api::Monitoring::internal_default_instance();
}
::google::api::Monitoring* Service::mutable_monitoring() {
  
  if (monitoring_ == NULL) {
    monitoring_ = new ::google::api::Monitoring;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.monitoring)
  return monitoring_;
}
::google::api::Monitoring* Service::release_monitoring() {
  // @@protoc_insertion_point(field_release:google.api.Service.monitoring)
  
  ::google::api::Monitoring* temp = monitoring_;
  monitoring_ = NULL;
  return temp;
}
void Service::set_allocated_monitoring(::google::api::Monitoring* monitoring) {
  delete monitoring_;
  monitoring_ = monitoring;
  if (monitoring) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.monitoring)
}

// .google.api.SystemParameters system_parameters = 29;
bool Service::has_system_parameters() const {
  return this != internal_default_instance() && system_parameters_ != NULL;
}
void Service::clear_system_parameters() {
  if (GetArenaNoVirtual() == NULL && system_parameters_ != NULL) delete system_parameters_;
  system_parameters_ = NULL;
}
const ::google::api::SystemParameters& Service::system_parameters() const {
  // @@protoc_insertion_point(field_get:google.api.Service.system_parameters)
  return system_parameters_ != NULL ? *system_parameters_
                         : *::google::api::SystemParameters::internal_default_instance();
}
::google::api::SystemParameters* Service::mutable_system_parameters() {
  
  if (system_parameters_ == NULL) {
    system_parameters_ = new ::google::api::SystemParameters;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.system_parameters)
  return system_parameters_;
}
::google::api::SystemParameters* Service::release_system_parameters() {
  // @@protoc_insertion_point(field_release:google.api.Service.system_parameters)
  
  ::google::api::SystemParameters* temp = system_parameters_;
  system_parameters_ = NULL;
  return temp;
}
void Service::set_allocated_system_parameters(::google::api::SystemParameters* system_parameters) {
  delete system_parameters_;
  system_parameters_ = system_parameters;
  if (system_parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.system_parameters)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
