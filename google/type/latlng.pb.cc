// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/latlng.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/type/latlng.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace type {

namespace {

const ::google::protobuf::Descriptor* LatLng_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LatLng_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2ftype_2flatlng_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2ftype_2flatlng_2eproto() {
  protobuf_AddDesc_google_2ftype_2flatlng_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/type/latlng.proto");
  GOOGLE_CHECK(file != NULL);
  LatLng_descriptor_ = file->message_type(0);
  static const int LatLng_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLng, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLng, longitude_),
  };
  LatLng_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LatLng_descriptor_,
      LatLng::default_instance_,
      LatLng_offsets_,
      -1,
      -1,
      -1,
      sizeof(LatLng),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLng, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLng, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2ftype_2flatlng_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LatLng_descriptor_, &LatLng::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2ftype_2flatlng_2eproto() {
  delete LatLng::default_instance_;
  delete LatLng_reflection_;
}

void protobuf_AddDesc_google_2ftype_2flatlng_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_google_2ftype_2flatlng_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030google/type/latlng.proto\022\013google.type\""
    "-\n\006LatLng\022\020\n\010latitude\030\001 \001(\001\022\021\n\tlongitude"
    "\030\002 \001(\001B&\n\017com.google.typeB\013LatLngProtoP\001"
    "\242\002\003GTPb\006proto3", 134);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/type/latlng.proto", &protobuf_RegisterTypes);
  LatLng::default_instance_ = new LatLng();
  LatLng::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2ftype_2flatlng_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2ftype_2flatlng_2eproto {
  StaticDescriptorInitializer_google_2ftype_2flatlng_2eproto() {
    protobuf_AddDesc_google_2ftype_2flatlng_2eproto();
  }
} static_descriptor_initializer_google_2ftype_2flatlng_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatLng::kLatitudeFieldNumber;
const int LatLng::kLongitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatLng::LatLng()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.type.LatLng)
}

void LatLng::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LatLng::LatLng(const LatLng& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.type.LatLng)
}

void LatLng::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  latitude_ = 0;
  longitude_ = 0;
}

LatLng::~LatLng() {
  // @@protoc_insertion_point(destructor:google.type.LatLng)
  SharedDtor();
}

void LatLng::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LatLng::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatLng::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LatLng_descriptor_;
}

const LatLng& LatLng::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2ftype_2flatlng_2eproto();
  return *default_instance_;
}

LatLng* LatLng::default_instance_ = NULL;

LatLng* LatLng::New(::google::protobuf::Arena* arena) const {
  LatLng* n = new LatLng;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatLng::Clear() {
// @@protoc_insertion_point(message_clear_start:google.type.LatLng)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LatLng, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LatLng*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(latitude_, longitude_);

#undef ZR_HELPER_
#undef ZR_

}

bool LatLng::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.type.LatLng)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double latitude = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_longitude;
        break;
      }

      // optional double longitude = 2;
      case 2: {
        if (tag == 17) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.type.LatLng)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.type.LatLng)
  return false;
#undef DO_
}

void LatLng::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.type.LatLng)
  // optional double latitude = 1;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude(), output);
  }

  // optional double longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.type.LatLng)
}

::google::protobuf::uint8* LatLng::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.type.LatLng)
  // optional double latitude = 1;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude(), target);
  }

  // optional double longitude = 2;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.type.LatLng)
  return target;
}

int LatLng::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.type.LatLng)
  int total_size = 0;

  // optional double latitude = 1;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatLng::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.type.LatLng)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LatLng* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LatLng>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.type.LatLng)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.type.LatLng)
    MergeFrom(*source);
  }
}

void LatLng::MergeFrom(const LatLng& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.type.LatLng)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
}

void LatLng::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.type.LatLng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatLng::CopyFrom(const LatLng& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.type.LatLng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatLng::IsInitialized() const {

  return true;
}

void LatLng::Swap(LatLng* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatLng::InternalSwap(LatLng* other) {
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatLng::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LatLng_descriptor_;
  metadata.reflection = LatLng_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatLng

// optional double latitude = 1;
void LatLng::clear_latitude() {
  latitude_ = 0;
}
 double LatLng::latitude() const {
  // @@protoc_insertion_point(field_get:google.type.LatLng.latitude)
  return latitude_;
}
 void LatLng::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:google.type.LatLng.latitude)
}

// optional double longitude = 2;
void LatLng::clear_longitude() {
  longitude_ = 0;
}
 double LatLng::longitude() const {
  // @@protoc_insertion_point(field_get:google.type.LatLng.longitude)
  return longitude_;
}
 void LatLng::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:google.type.LatLng.longitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace google

// @@protoc_insertion_point(global_scope)
