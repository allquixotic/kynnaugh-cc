// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/service_controller.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/servicecontrol/v1/service_controller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* CheckRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportResponse_ReportError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportResponse_ReportError_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto() {
  protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/servicecontrol/v1/service_controller.proto");
  GOOGLE_CHECK(file != NULL);
  CheckRequest_descriptor_ = file->message_type(0);
  static const int CheckRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckRequest, service_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckRequest, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckRequest, service_config_id_),
  };
  CheckRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckRequest_descriptor_,
      CheckRequest::internal_default_instance(),
      CheckRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckRequest, _internal_metadata_));
  CheckResponse_descriptor_ = file->message_type(1);
  static const int CheckResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckResponse, operation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckResponse, check_errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckResponse, service_config_id_),
  };
  CheckResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckResponse_descriptor_,
      CheckResponse::internal_default_instance(),
      CheckResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckResponse, _internal_metadata_));
  ReportRequest_descriptor_ = file->message_type(2);
  static const int ReportRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportRequest, service_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportRequest, operations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportRequest, service_config_id_),
  };
  ReportRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportRequest_descriptor_,
      ReportRequest::internal_default_instance(),
      ReportRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportRequest, _internal_metadata_));
  ReportResponse_descriptor_ = file->message_type(3);
  static const int ReportResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportResponse, report_errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportResponse, service_config_id_),
  };
  ReportResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportResponse_descriptor_,
      ReportResponse::internal_default_instance(),
      ReportResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportResponse, _internal_metadata_));
  ReportResponse_ReportError_descriptor_ = ReportResponse_descriptor_->nested_type(0);
  static const int ReportResponse_ReportError_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportResponse_ReportError, operation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportResponse_ReportError, status_),
  };
  ReportResponse_ReportError_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportResponse_ReportError_descriptor_,
      ReportResponse_ReportError::internal_default_instance(),
      ReportResponse_ReportError_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportResponse_ReportError),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportResponse_ReportError, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckRequest_descriptor_, CheckRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckResponse_descriptor_, CheckResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportRequest_descriptor_, ReportRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportResponse_descriptor_, ReportResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportResponse_ReportError_descriptor_, ReportResponse_ReportError::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto() {
  CheckRequest_default_instance_.Shutdown();
  delete CheckRequest_reflection_;
  CheckResponse_default_instance_.Shutdown();
  delete CheckResponse_reflection_;
  ReportRequest_default_instance_.Shutdown();
  delete ReportRequest_reflection_;
  ReportResponse_default_instance_.Shutdown();
  delete ReportResponse_reflection_;
  ReportResponse_ReportError_default_instance_.Shutdown();
  delete ReportResponse_ReportError_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::api::servicecontrol::v1::protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto();
  ::google::api::servicecontrol::v1::protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto();
  ::google::rpc::protobuf_InitDefaults_google_2frpc_2fstatus_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  CheckRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CheckResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReportRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReportResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReportResponse_ReportError_default_instance_.DefaultConstruct();
  CheckRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CheckResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportResponse_ReportError_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n5google/api/servicecontrol/v1/service_c"
    "ontroller.proto\022\034google.api.servicecontr"
    "ol.v1\032\034google/api/annotations.proto\032.goo"
    "gle/api/servicecontrol/v1/check_error.pr"
    "oto\032,google/api/servicecontrol/v1/operat"
    "ion.proto\032\027google/rpc/status.proto\"{\n\014Ch"
    "eckRequest\022\024\n\014service_name\030\001 \001(\t\022:\n\toper"
    "ation\030\002 \001(\0132\'.google.api.servicecontrol."
    "v1.Operation\022\031\n\021service_config_id\030\004 \001(\t\""
    "\200\001\n\rCheckResponse\022\024\n\014operation_id\030\001 \001(\t\022"
    ">\n\014check_errors\030\002 \003(\0132(.google.api.servi"
    "cecontrol.v1.CheckError\022\031\n\021service_confi"
    "g_id\030\005 \001(\t\"}\n\rReportRequest\022\024\n\014service_n"
    "ame\030\001 \001(\t\022;\n\noperations\030\002 \003(\0132\'.google.a"
    "pi.servicecontrol.v1.Operation\022\031\n\021servic"
    "e_config_id\030\003 \001(\t\"\305\001\n\016ReportResponse\022O\n\r"
    "report_errors\030\001 \003(\01328.google.api.service"
    "control.v1.ReportResponse.ReportError\022\031\n"
    "\021service_config_id\030\002 \001(\t\032G\n\013ReportError\022"
    "\024\n\014operation_id\030\001 \001(\t\022\"\n\006status\030\002 \001(\0132\022."
    "google.rpc.Status2\271\002\n\021ServiceController\022"
    "\216\001\n\005Check\022*.google.api.servicecontrol.v1"
    ".CheckRequest\032+.google.api.servicecontro"
    "l.v1.CheckResponse\",\202\323\344\223\002&\"!/v1/services"
    "/{service_name}:check:\001*\022\222\001\n\006Report\022+.go"
    "ogle.api.servicecontrol.v1.ReportRequest"
    "\032,.google.api.servicecontrol.v1.ReportRe"
    "sponse\"-\202\323\344\223\002\'\"\"/v1/services/{service_na"
    "me}:report:\001*B\222\001\n com.google.api.service"
    "control.v1B\026ServiceControllerProtoP\001ZJgo"
    "ogle.golang.org/genproto/googleapis/api/"
    "servicecontrol/v1;servicecontrol\370\001\001\242\002\004GA"
    "SCb\006proto3", 1290);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicecontrol/v1/service_controller.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::api::servicecontrol::v1::protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto();
  ::google::api::servicecontrol::v1::protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto();
  ::google::rpc::protobuf_AddDesc_google_2frpc_2fstatus_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto() {
    protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

void CheckRequest::_slow_mutable_operation() {
  operation_ = ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Operation >(
      GetArenaNoVirtual());
}
::google::api::servicecontrol::v1::Operation* CheckRequest::_slow_release_operation() {
  if (operation_ == NULL) {
    return NULL;
  } else {
    ::google::api::servicecontrol::v1::Operation* temp = new ::google::api::servicecontrol::v1::Operation(*operation_);
    operation_ = NULL;
    return temp;
  }
}
::google::api::servicecontrol::v1::Operation* CheckRequest::unsafe_arena_release_operation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.CheckRequest.operation)
  
  ::google::api::servicecontrol::v1::Operation* temp = operation_;
  operation_ = NULL;
  return temp;
}
void CheckRequest::_slow_set_allocated_operation(
    ::google::protobuf::Arena* message_arena, ::google::api::servicecontrol::v1::Operation** operation) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*operation) == NULL) {
      message_arena->Own(*operation);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*operation)) {
      ::google::api::servicecontrol::v1::Operation* new_operation = 
            ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Operation >(
            message_arena);
      new_operation->CopyFrom(**operation);
      *operation = new_operation;
    }
}
void CheckRequest::unsafe_arena_set_allocated_operation(
    ::google::api::servicecontrol::v1::Operation* operation) {
  if (GetArenaNoVirtual() == NULL) {
    delete operation_;
  }
  operation_ = operation;
  if (operation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckRequest.operation)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckRequest::kServiceNameFieldNumber;
const int CheckRequest::kOperationFieldNumber;
const int CheckRequest::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckRequest::CheckRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.CheckRequest)
}
CheckRequest::CheckRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckRequest)
}

void CheckRequest::InitAsDefaultInstance() {
  operation_ = const_cast< ::google::api::servicecontrol::v1::Operation*>(
      ::google::api::servicecontrol::v1::Operation::internal_default_instance());
}

CheckRequest::CheckRequest(const CheckRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckRequest)
}

void CheckRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_ = NULL;
  _cached_size_ = 0;
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckRequest)
  SharedDtor();
}

void CheckRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  service_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  service_config_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &CheckRequest_default_instance_.get()) {
    delete operation_;
  }
}

void CheckRequest::ArenaDtor(void* object) {
  CheckRequest* _this = reinterpret_cast< CheckRequest* >(object);
  (void)_this;
}
void CheckRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckRequest_descriptor_;
}

const CheckRequest& CheckRequest::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CheckRequest> CheckRequest_default_instance_;

CheckRequest* CheckRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CheckRequest>(arena);
}

void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckRequest)
  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) delete operation_;
  operation_ = NULL;
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool CheckRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.CheckRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), this->service_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_operation;
        break;
      }

      // optional .google.api.servicecontrol.v1.Operation operation = 2;
      case 2: {
        if (tag == 18) {
         parse_operation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_operation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_service_config_id;
        break;
      }

      // optional string service_config_id = 4;
      case 4: {
        if (tag == 34) {
         parse_service_config_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), this->service_config_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckRequest.service_config_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.CheckRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.CheckRequest)
  return false;
#undef DO_
}

void CheckRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.CheckRequest)
  // optional string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), this->service_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // optional .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->operation_, output);
  }

  // optional string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->service_config_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.CheckRequest)
}

::google::protobuf::uint8* CheckRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckRequest)
  // optional string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), this->service_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // optional .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->operation_, false, target);
  }

  // optional string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->service_config_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckRequest)
  size_t total_size = 0;

  // optional string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // optional .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->has_operation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->operation_);
  }

  // optional string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.CheckRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CheckRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.CheckRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.CheckRequest)
    UnsafeMergeFrom(*source);
  }
}

void CheckRequest::MergeFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CheckRequest::UnsafeMergeFrom(const CheckRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.service_name().size() > 0) {
    set_service_name(from.service_name());
  }
  if (from.has_operation()) {
    mutable_operation()->::google::api::servicecontrol::v1::Operation::MergeFrom(from.operation());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
}

void CheckRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CheckRequest::IsInitialized() const {

  return true;
}

void CheckRequest::Swap(CheckRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void CheckRequest::UnsafeArenaSwap(CheckRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckRequest::InternalSwap(CheckRequest* other) {
  service_name_.Swap(&other->service_name_);
  std::swap(operation_, other->operation_);
  service_config_id_.Swap(&other->service_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckRequest_descriptor_;
  metadata.reflection = CheckRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckRequest

// optional string service_name = 1;
void CheckRequest::clear_service_name() {
  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.CheckRequest.service_name)
  return service_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckRequest::set_service_name(const ::std::string& value) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.CheckRequest.service_name)
}
void CheckRequest::set_service_name(const char* value) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.CheckRequest.service_name)
}
void CheckRequest::set_service_name(const char* value,
    size_t size) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.CheckRequest.service_name)
}
::std::string* CheckRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.CheckRequest.service_name)
  return service_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.CheckRequest.service_name)
  
  return service_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckRequest::unsafe_arena_release_service_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.CheckRequest.service_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.CheckRequest.service_name)
}
void CheckRequest::unsafe_arena_set_allocated_service_name(
    ::std::string* service_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckRequest.service_name)
}

// optional .google.api.servicecontrol.v1.Operation operation = 2;
bool CheckRequest::has_operation() const {
  return this != internal_default_instance() && operation_ != NULL;
}
void CheckRequest::clear_operation() {
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) delete operation_;
  operation_ = NULL;
}
const ::google::api::servicecontrol::v1::Operation& CheckRequest::operation() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.CheckRequest.operation)
  return operation_ != NULL ? *operation_
                         : *::google::api::servicecontrol::v1::Operation::internal_default_instance();
}
::google::api::servicecontrol::v1::Operation* CheckRequest::mutable_operation() {
  
  if (operation_ == NULL) {
    _slow_mutable_operation();
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.CheckRequest.operation)
  return operation_;
}
::google::api::servicecontrol::v1::Operation* CheckRequest::release_operation() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.CheckRequest.operation)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_operation();
  } else {
    ::google::api::servicecontrol::v1::Operation* temp = operation_;
    operation_ = NULL;
    return temp;
  }
}
 void CheckRequest::set_allocated_operation(::google::api::servicecontrol::v1::Operation* operation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete operation_;
  }
  if (operation != NULL) {
    _slow_set_allocated_operation(message_arena, &operation);
  }
  operation_ = operation;
  if (operation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.CheckRequest.operation)
}

// optional string service_config_id = 4;
void CheckRequest::clear_service_config_id() {
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckRequest::service_config_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.CheckRequest.service_config_id)
  return service_config_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckRequest::set_service_config_id(const ::std::string& value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.CheckRequest.service_config_id)
}
void CheckRequest::set_service_config_id(const char* value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.CheckRequest.service_config_id)
}
void CheckRequest::set_service_config_id(const char* value,
    size_t size) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.CheckRequest.service_config_id)
}
::std::string* CheckRequest::mutable_service_config_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.CheckRequest.service_config_id)
  return service_config_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckRequest::release_service_config_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.CheckRequest.service_config_id)
  
  return service_config_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckRequest::unsafe_arena_release_service_config_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.CheckRequest.service_config_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_config_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckRequest::set_allocated_service_config_id(::std::string* service_config_id) {
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_config_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.CheckRequest.service_config_id)
}
void CheckRequest::unsafe_arena_set_allocated_service_config_id(
    ::std::string* service_config_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_config_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckRequest.service_config_id)
}

inline const CheckRequest* CheckRequest::internal_default_instance() {
  return &CheckRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse::kOperationIdFieldNumber;
const int CheckResponse::kCheckErrorsFieldNumber;
const int CheckResponse::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse::CheckResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.CheckResponse)
}
CheckResponse::CheckResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  check_errors_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckResponse)
}

void CheckResponse::InitAsDefaultInstance() {
}

CheckResponse::CheckResponse(const CheckResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckResponse)
}

void CheckResponse::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckResponse)
  SharedDtor();
}

void CheckResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  operation_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  service_config_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void CheckResponse::ArenaDtor(void* object) {
  CheckResponse* _this = reinterpret_cast< CheckResponse* >(object);
  (void)_this;
}
void CheckResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckResponse_descriptor_;
}

const CheckResponse& CheckResponse::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CheckResponse> CheckResponse_default_instance_;

CheckResponse* CheckResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CheckResponse>(arena);
}

void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckResponse)
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  check_errors_.Clear();
}

bool CheckResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.CheckResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string operation_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), this->operation_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckResponse.operation_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_check_errors;
        break;
      }

      // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
      case 2: {
        if (tag == 18) {
         parse_check_errors:
          DO_(input->IncrementRecursionDepth());
         parse_loop_check_errors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_check_errors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_check_errors;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_service_config_id;
        break;
      }

      // optional string service_config_id = 5;
      case 5: {
        if (tag == 42) {
         parse_service_config_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), this->service_config_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckResponse.service_config_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.CheckResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.CheckResponse)
  return false;
#undef DO_
}

void CheckResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.CheckResponse)
  // optional string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), this->operation_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  for (unsigned int i = 0, n = this->check_errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->check_errors(i), output);
  }

  // optional string service_config_id = 5;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->service_config_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.CheckResponse)
}

::google::protobuf::uint8* CheckResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckResponse)
  // optional string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), this->operation_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  for (unsigned int i = 0, n = this->check_errors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->check_errors(i), false, target);
  }

  // optional string service_config_id = 5;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->service_config_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckResponse)
  size_t total_size = 0;

  // optional string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // optional string service_config_id = 5;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  {
    unsigned int count = this->check_errors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->check_errors(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.CheckResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CheckResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.CheckResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.CheckResponse)
    UnsafeMergeFrom(*source);
  }
}

void CheckResponse::MergeFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CheckResponse::UnsafeMergeFrom(const CheckResponse& from) {
  GOOGLE_DCHECK(&from != this);
  check_errors_.MergeFrom(from.check_errors_);
  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
}

void CheckResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CheckResponse::IsInitialized() const {

  return true;
}

void CheckResponse::Swap(CheckResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void CheckResponse::UnsafeArenaSwap(CheckResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse::InternalSwap(CheckResponse* other) {
  operation_id_.Swap(&other->operation_id_);
  check_errors_.UnsafeArenaSwap(&other->check_errors_);
  service_config_id_.Swap(&other->service_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckResponse_descriptor_;
  metadata.reflection = CheckResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckResponse

// optional string operation_id = 1;
void CheckResponse::clear_operation_id() {
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckResponse::operation_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.CheckResponse.operation_id)
  return operation_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckResponse::set_operation_id(const ::std::string& value) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.CheckResponse.operation_id)
}
void CheckResponse::set_operation_id(const char* value) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.CheckResponse.operation_id)
}
void CheckResponse::set_operation_id(const char* value,
    size_t size) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.CheckResponse.operation_id)
}
::std::string* CheckResponse::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.CheckResponse.operation_id)
  return operation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckResponse::release_operation_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.CheckResponse.operation_id)
  
  return operation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckResponse::unsafe_arena_release_operation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.CheckResponse.operation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return operation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckResponse::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.CheckResponse.operation_id)
}
void CheckResponse::unsafe_arena_set_allocated_operation_id(
    ::std::string* operation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      operation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckResponse.operation_id)
}

// repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
int CheckResponse::check_errors_size() const {
  return check_errors_.size();
}
void CheckResponse::clear_check_errors() {
  check_errors_.Clear();
}
const ::google::api::servicecontrol::v1::CheckError& CheckResponse::check_errors(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.CheckResponse.check_errors)
  return check_errors_.Get(index);
}
::google::api::servicecontrol::v1::CheckError* CheckResponse::mutable_check_errors(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.CheckResponse.check_errors)
  return check_errors_.Mutable(index);
}
::google::api::servicecontrol::v1::CheckError* CheckResponse::add_check_errors() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.CheckResponse.check_errors)
  return check_errors_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::CheckError >*
CheckResponse::mutable_check_errors() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.CheckResponse.check_errors)
  return &check_errors_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::CheckError >&
CheckResponse::check_errors() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.CheckResponse.check_errors)
  return check_errors_;
}

// optional string service_config_id = 5;
void CheckResponse::clear_service_config_id() {
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CheckResponse::service_config_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.CheckResponse.service_config_id)
  return service_config_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckResponse::set_service_config_id(const ::std::string& value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.CheckResponse.service_config_id)
}
void CheckResponse::set_service_config_id(const char* value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.CheckResponse.service_config_id)
}
void CheckResponse::set_service_config_id(const char* value,
    size_t size) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.CheckResponse.service_config_id)
}
::std::string* CheckResponse::mutable_service_config_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.CheckResponse.service_config_id)
  return service_config_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckResponse::release_service_config_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.CheckResponse.service_config_id)
  
  return service_config_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CheckResponse::unsafe_arena_release_service_config_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.CheckResponse.service_config_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_config_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CheckResponse::set_allocated_service_config_id(::std::string* service_config_id) {
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_config_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.CheckResponse.service_config_id)
}
void CheckResponse::unsafe_arena_set_allocated_service_config_id(
    ::std::string* service_config_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_config_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckResponse.service_config_id)
}

inline const CheckResponse* CheckResponse::internal_default_instance() {
  return &CheckResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportRequest::kServiceNameFieldNumber;
const int ReportRequest::kOperationsFieldNumber;
const int ReportRequest::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportRequest::ReportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.ReportRequest)
}
ReportRequest::ReportRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  operations_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportRequest)
}

void ReportRequest::InitAsDefaultInstance() {
}

ReportRequest::ReportRequest(const ReportRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportRequest)
}

void ReportRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReportRequest::~ReportRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportRequest)
  SharedDtor();
}

void ReportRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  service_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  service_config_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ReportRequest::ArenaDtor(void* object) {
  ReportRequest* _this = reinterpret_cast< ReportRequest* >(object);
  (void)_this;
}
void ReportRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportRequest_descriptor_;
}

const ReportRequest& ReportRequest::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportRequest> ReportRequest_default_instance_;

ReportRequest* ReportRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReportRequest>(arena);
}

void ReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportRequest)
  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  operations_.Clear();
}

bool ReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.ReportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), this->service_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_operations;
        break;
      }

      // repeated .google.api.servicecontrol.v1.Operation operations = 2;
      case 2: {
        if (tag == 18) {
         parse_operations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_operations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_operations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_service_config_id;
        break;
      }

      // optional string service_config_id = 3;
      case 3: {
        if (tag == 26) {
         parse_service_config_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), this->service_config_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportRequest.service_config_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.ReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.ReportRequest)
  return false;
#undef DO_
}

void ReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.ReportRequest)
  // optional string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), this->service_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  for (unsigned int i = 0, n = this->operations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->operations(i), output);
  }

  // optional string service_config_id = 3;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_config_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.ReportRequest)
}

::google::protobuf::uint8* ReportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportRequest)
  // optional string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), this->service_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  for (unsigned int i = 0, n = this->operations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->operations(i), false, target);
  }

  // optional string service_config_id = 3;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_config_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportRequest)
  return target;
}

size_t ReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportRequest)
  size_t total_size = 0;

  // optional string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // optional string service_config_id = 3;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  {
    unsigned int count = this->operations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->operations(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.ReportRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.ReportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.ReportRequest)
    UnsafeMergeFrom(*source);
  }
}

void ReportRequest::MergeFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportRequest::UnsafeMergeFrom(const ReportRequest& from) {
  GOOGLE_DCHECK(&from != this);
  operations_.MergeFrom(from.operations_);
  if (from.service_name().size() > 0) {
    set_service_name(from.service_name());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
}

void ReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportRequest::CopyFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportRequest::IsInitialized() const {

  return true;
}

void ReportRequest::Swap(ReportRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ReportRequest::UnsafeArenaSwap(ReportRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportRequest::InternalSwap(ReportRequest* other) {
  service_name_.Swap(&other->service_name_);
  operations_.UnsafeArenaSwap(&other->operations_);
  service_config_id_.Swap(&other->service_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportRequest_descriptor_;
  metadata.reflection = ReportRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportRequest

// optional string service_name = 1;
void ReportRequest::clear_service_name() {
  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReportRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.ReportRequest.service_name)
  return service_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportRequest::set_service_name(const ::std::string& value) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.ReportRequest.service_name)
}
void ReportRequest::set_service_name(const char* value) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.ReportRequest.service_name)
}
void ReportRequest::set_service_name(const char* value,
    size_t size) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.ReportRequest.service_name)
}
::std::string* ReportRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.ReportRequest.service_name)
  return service_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.ReportRequest.service_name)
  
  return service_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportRequest::unsafe_arena_release_service_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.ReportRequest.service_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReportRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.ReportRequest.service_name)
}
void ReportRequest::unsafe_arena_set_allocated_service_name(
    ::std::string* service_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.ReportRequest.service_name)
}

// repeated .google.api.servicecontrol.v1.Operation operations = 2;
int ReportRequest::operations_size() const {
  return operations_.size();
}
void ReportRequest::clear_operations() {
  operations_.Clear();
}
const ::google::api::servicecontrol::v1::Operation& ReportRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.ReportRequest.operations)
  return operations_.Get(index);
}
::google::api::servicecontrol::v1::Operation* ReportRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.ReportRequest.operations)
  return operations_.Mutable(index);
}
::google::api::servicecontrol::v1::Operation* ReportRequest::add_operations() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.ReportRequest.operations)
  return operations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::Operation >*
ReportRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.ReportRequest.operations)
  return &operations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::Operation >&
ReportRequest::operations() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.ReportRequest.operations)
  return operations_;
}

// optional string service_config_id = 3;
void ReportRequest::clear_service_config_id() {
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReportRequest::service_config_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.ReportRequest.service_config_id)
  return service_config_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportRequest::set_service_config_id(const ::std::string& value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.ReportRequest.service_config_id)
}
void ReportRequest::set_service_config_id(const char* value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.ReportRequest.service_config_id)
}
void ReportRequest::set_service_config_id(const char* value,
    size_t size) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.ReportRequest.service_config_id)
}
::std::string* ReportRequest::mutable_service_config_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.ReportRequest.service_config_id)
  return service_config_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportRequest::release_service_config_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.ReportRequest.service_config_id)
  
  return service_config_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportRequest::unsafe_arena_release_service_config_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.ReportRequest.service_config_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_config_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReportRequest::set_allocated_service_config_id(::std::string* service_config_id) {
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_config_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.ReportRequest.service_config_id)
}
void ReportRequest::unsafe_arena_set_allocated_service_config_id(
    ::std::string* service_config_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_config_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.ReportRequest.service_config_id)
}

inline const ReportRequest* ReportRequest::internal_default_instance() {
  return &ReportRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ReportResponse_ReportError::_slow_mutable_status() {
  status_ = ::google::protobuf::Arena::Create< ::google::rpc::Status >(
      GetArenaNoVirtual());
}
::google::rpc::Status* ReportResponse_ReportError::_slow_release_status() {
  if (status_ == NULL) {
    return NULL;
  } else {
    ::google::rpc::Status* temp = new ::google::rpc::Status(*status_);
    status_ = NULL;
    return temp;
  }
}
::google::rpc::Status* ReportResponse_ReportError::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.ReportResponse.ReportError.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void ReportResponse_ReportError::unsafe_arena_set_allocated_status(
    ::google::rpc::Status* status) {
  if (GetArenaNoVirtual() == NULL) {
    delete status_;
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.ReportResponse.ReportError.status)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportResponse_ReportError::kOperationIdFieldNumber;
const int ReportResponse_ReportError::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportResponse_ReportError::ReportResponse_ReportError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}
ReportResponse_ReportError::ReportResponse_ReportError(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}

void ReportResponse_ReportError::InitAsDefaultInstance() {
  status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}

ReportResponse_ReportError::ReportResponse_ReportError(const ReportResponse_ReportError& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}

void ReportResponse_ReportError::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
  _cached_size_ = 0;
}

ReportResponse_ReportError::~ReportResponse_ReportError() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
  SharedDtor();
}

void ReportResponse_ReportError::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  operation_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &ReportResponse_ReportError_default_instance_.get()) {
    delete status_;
  }
}

void ReportResponse_ReportError::ArenaDtor(void* object) {
  ReportResponse_ReportError* _this = reinterpret_cast< ReportResponse_ReportError* >(object);
  (void)_this;
}
void ReportResponse_ReportError::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportResponse_ReportError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportResponse_ReportError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportResponse_ReportError_descriptor_;
}

const ReportResponse_ReportError& ReportResponse_ReportError::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportResponse_ReportError> ReportResponse_ReportError_default_instance_;

ReportResponse_ReportError* ReportResponse_ReportError::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReportResponse_ReportError>(arena);
}

void ReportResponse_ReportError::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}

bool ReportResponse_ReportError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string operation_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), this->operation_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_status;
        break;
      }

      // optional .google.rpc.Status status = 2;
      case 2: {
        if (tag == 18) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.ReportResponse.ReportError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.ReportResponse.ReportError)
  return false;
#undef DO_
}

void ReportResponse_ReportError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  // optional string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), this->operation_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // optional .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->status_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.ReportResponse.ReportError)
}

::google::protobuf::uint8* ReportResponse_ReportError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  // optional string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), this->operation_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // optional .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->status_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportResponse.ReportError)
  return target;
}

size_t ReportResponse_ReportError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  size_t total_size = 0;

  // optional string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // optional .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportResponse_ReportError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportResponse_ReportError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportResponse_ReportError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.ReportResponse.ReportError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.ReportResponse.ReportError)
    UnsafeMergeFrom(*source);
  }
}

void ReportResponse_ReportError::MergeFrom(const ReportResponse_ReportError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportResponse_ReportError::UnsafeMergeFrom(const ReportResponse_ReportError& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void ReportResponse_ReportError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportResponse_ReportError::CopyFrom(const ReportResponse_ReportError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportResponse_ReportError::IsInitialized() const {

  return true;
}

void ReportResponse_ReportError::Swap(ReportResponse_ReportError* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportResponse_ReportError temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ReportResponse_ReportError::UnsafeArenaSwap(ReportResponse_ReportError* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportResponse_ReportError::InternalSwap(ReportResponse_ReportError* other) {
  operation_id_.Swap(&other->operation_id_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportResponse_ReportError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportResponse_ReportError_descriptor_;
  metadata.reflection = ReportResponse_ReportError_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportResponse::kReportErrorsFieldNumber;
const int ReportResponse::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportResponse::ReportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.ReportResponse)
}
ReportResponse::ReportResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  report_errors_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportResponse)
}

void ReportResponse::InitAsDefaultInstance() {
}

ReportResponse::ReportResponse(const ReportResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportResponse)
}

void ReportResponse::SharedCtor() {
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReportResponse::~ReportResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportResponse)
  SharedDtor();
}

void ReportResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  service_config_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ReportResponse::ArenaDtor(void* object) {
  ReportResponse* _this = reinterpret_cast< ReportResponse* >(object);
  (void)_this;
}
void ReportResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportResponse_descriptor_;
}

const ReportResponse& ReportResponse::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportResponse> ReportResponse_default_instance_;

ReportResponse* ReportResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReportResponse>(arena);
}

void ReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportResponse)
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  report_errors_.Clear();
}

bool ReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.ReportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_report_errors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_report_errors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_report_errors;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_service_config_id;
        break;
      }

      // optional string service_config_id = 2;
      case 2: {
        if (tag == 18) {
         parse_service_config_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), this->service_config_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportResponse.service_config_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.ReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.ReportResponse)
  return false;
#undef DO_
}

void ReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.ReportResponse)
  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  for (unsigned int i = 0, n = this->report_errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->report_errors(i), output);
  }

  // optional string service_config_id = 2;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service_config_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.ReportResponse)
}

::google::protobuf::uint8* ReportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportResponse)
  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  for (unsigned int i = 0, n = this->report_errors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->report_errors(i), false, target);
  }

  // optional string service_config_id = 2;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), this->service_config_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service_config_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportResponse)
  return target;
}

size_t ReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportResponse)
  size_t total_size = 0;

  // optional string service_config_id = 2;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  {
    unsigned int count = this->report_errors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->report_errors(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.ReportResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.ReportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.ReportResponse)
    UnsafeMergeFrom(*source);
  }
}

void ReportResponse::MergeFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportResponse::UnsafeMergeFrom(const ReportResponse& from) {
  GOOGLE_DCHECK(&from != this);
  report_errors_.MergeFrom(from.report_errors_);
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
}

void ReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportResponse::CopyFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportResponse::IsInitialized() const {

  return true;
}

void ReportResponse::Swap(ReportResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportResponse temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ReportResponse::UnsafeArenaSwap(ReportResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportResponse::InternalSwap(ReportResponse* other) {
  report_errors_.UnsafeArenaSwap(&other->report_errors_);
  service_config_id_.Swap(&other->service_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportResponse_descriptor_;
  metadata.reflection = ReportResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportResponse_ReportError

// optional string operation_id = 1;
void ReportResponse_ReportError::clear_operation_id() {
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReportResponse_ReportError::operation_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
  return operation_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportResponse_ReportError::set_operation_id(const ::std::string& value) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
}
void ReportResponse_ReportError::set_operation_id(const char* value) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
}
void ReportResponse_ReportError::set_operation_id(const char* value,
    size_t size) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
}
::std::string* ReportResponse_ReportError::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
  return operation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportResponse_ReportError::release_operation_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
  
  return operation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportResponse_ReportError::unsafe_arena_release_operation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return operation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReportResponse_ReportError::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
}
void ReportResponse_ReportError::unsafe_arena_set_allocated_operation_id(
    ::std::string* operation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      operation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id)
}

// optional .google.rpc.Status status = 2;
bool ReportResponse_ReportError::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
void ReportResponse_ReportError::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::google::rpc::Status& ReportResponse_ReportError::status() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.ReportResponse.ReportError.status)
  return status_ != NULL ? *status_
                         : *::google::rpc::Status::internal_default_instance();
}
::google::rpc::Status* ReportResponse_ReportError::mutable_status() {
  
  if (status_ == NULL) {
    _slow_mutable_status();
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.ReportResponse.ReportError.status)
  return status_;
}
::google::rpc::Status* ReportResponse_ReportError::release_status() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.ReportResponse.ReportError.status)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_status();
  } else {
    ::google::rpc::Status* temp = status_;
    status_ = NULL;
    return temp;
  }
}
 void ReportResponse_ReportError::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(status);
    }
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.ReportResponse.ReportError.status)
}

inline const ReportResponse_ReportError* ReportResponse_ReportError::internal_default_instance() {
  return &ReportResponse_ReportError_default_instance_.get();
}
// -------------------------------------------------------------------

// ReportResponse

// repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
int ReportResponse::report_errors_size() const {
  return report_errors_.size();
}
void ReportResponse::clear_report_errors() {
  report_errors_.Clear();
}
const ::google::api::servicecontrol::v1::ReportResponse_ReportError& ReportResponse::report_errors(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.ReportResponse.report_errors)
  return report_errors_.Get(index);
}
::google::api::servicecontrol::v1::ReportResponse_ReportError* ReportResponse::mutable_report_errors(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.ReportResponse.report_errors)
  return report_errors_.Mutable(index);
}
::google::api::servicecontrol::v1::ReportResponse_ReportError* ReportResponse::add_report_errors() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.ReportResponse.report_errors)
  return report_errors_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::ReportResponse_ReportError >*
ReportResponse::mutable_report_errors() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.ReportResponse.report_errors)
  return &report_errors_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::ReportResponse_ReportError >&
ReportResponse::report_errors() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.ReportResponse.report_errors)
  return report_errors_;
}

// optional string service_config_id = 2;
void ReportResponse::clear_service_config_id() {
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReportResponse::service_config_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.ReportResponse.service_config_id)
  return service_config_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportResponse::set_service_config_id(const ::std::string& value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.ReportResponse.service_config_id)
}
void ReportResponse::set_service_config_id(const char* value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.ReportResponse.service_config_id)
}
void ReportResponse::set_service_config_id(const char* value,
    size_t size) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.ReportResponse.service_config_id)
}
::std::string* ReportResponse::mutable_service_config_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.ReportResponse.service_config_id)
  return service_config_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportResponse::release_service_config_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.ReportResponse.service_config_id)
  
  return service_config_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReportResponse::unsafe_arena_release_service_config_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.ReportResponse.service_config_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_config_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReportResponse::set_allocated_service_config_id(::std::string* service_config_id) {
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_config_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.ReportResponse.service_config_id)
}
void ReportResponse::unsafe_arena_set_allocated_service_config_id(
    ::std::string* service_config_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_config_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.ReportResponse.service_config_id)
}

inline const ReportResponse* ReportResponse::internal_default_instance() {
  return &ReportResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
