// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/common.proto

#ifndef PROTOBUF_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto__INCLUDED
#define PROTOBUF_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/monitored_resource.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

class ErrorContext;
class ErrorEvent;
class ErrorGroup;
class HttpRequestContext;
class ServiceContext;
class SourceLocation;
class TrackingIssue;

// ===================================================================

class ErrorGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ErrorGroup) */ {
 public:
  ErrorGroup();
  virtual ~ErrorGroup();

  ErrorGroup(const ErrorGroup& from);

  inline ErrorGroup& operator=(const ErrorGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorGroup& default_instance();

  static const ErrorGroup* internal_default_instance();

  void Swap(ErrorGroup* other);

  // implements Message ----------------------------------------------

  inline ErrorGroup* New() const { return New(NULL); }

  ErrorGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorGroup& from);
  void MergeFrom(const ErrorGroup& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorGroup* other);
  void UnsafeMergeFrom(const ErrorGroup& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  const ::std::string& group_id() const;
  void set_group_id(const ::std::string& value);
  void set_group_id(const char* value);
  void set_group_id(const char* value, size_t size);
  ::std::string* mutable_group_id();
  ::std::string* release_group_id();
  void set_allocated_group_id(::std::string* group_id);

  // repeated .google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
  int tracking_issues_size() const;
  void clear_tracking_issues();
  static const int kTrackingIssuesFieldNumber = 3;
  const ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue& tracking_issues(int index) const;
  ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue* mutable_tracking_issues(int index);
  ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue* add_tracking_issues();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue >*
      mutable_tracking_issues();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue >&
      tracking_issues() const;

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ErrorGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue > tracking_issues_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr group_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ErrorGroup> ErrorGroup_default_instance_;

// -------------------------------------------------------------------

class TrackingIssue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.TrackingIssue) */ {
 public:
  TrackingIssue();
  virtual ~TrackingIssue();

  TrackingIssue(const TrackingIssue& from);

  inline TrackingIssue& operator=(const TrackingIssue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackingIssue& default_instance();

  static const TrackingIssue* internal_default_instance();

  void Swap(TrackingIssue* other);

  // implements Message ----------------------------------------------

  inline TrackingIssue* New() const { return New(NULL); }

  TrackingIssue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackingIssue& from);
  void MergeFrom(const TrackingIssue& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackingIssue* other);
  void UnsafeMergeFrom(const TrackingIssue& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.TrackingIssue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TrackingIssue> TrackingIssue_default_instance_;

// -------------------------------------------------------------------

class ErrorEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ErrorEvent) */ {
 public:
  ErrorEvent();
  virtual ~ErrorEvent();

  ErrorEvent(const ErrorEvent& from);

  inline ErrorEvent& operator=(const ErrorEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorEvent& default_instance();

  static const ErrorEvent* internal_default_instance();

  void Swap(ErrorEvent* other);

  // implements Message ----------------------------------------------

  inline ErrorEvent* New() const { return New(NULL); }

  ErrorEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorEvent& from);
  void MergeFrom(const ErrorEvent& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorEvent* other);
  void UnsafeMergeFrom(const ErrorEvent& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Timestamp event_time = 1;
  bool has_event_time() const;
  void clear_event_time();
  static const int kEventTimeFieldNumber = 1;
  const ::google::protobuf::Timestamp& event_time() const;
  ::google::protobuf::Timestamp* mutable_event_time();
  ::google::protobuf::Timestamp* release_event_time();
  void set_allocated_event_time(::google::protobuf::Timestamp* event_time);

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  bool has_service_context() const;
  void clear_service_context();
  static const int kServiceContextFieldNumber = 2;
  const ::google::devtools::clouderrorreporting::v1beta1::ServiceContext& service_context() const;
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* mutable_service_context();
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* release_service_context();
  void set_allocated_service_context(::google::devtools::clouderrorreporting::v1beta1::ServiceContext* service_context);

  // optional string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 5;
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorContext& context() const;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* mutable_context();
  ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* release_context();
  void set_allocated_context(::google::devtools::clouderrorreporting::v1beta1::ErrorContext* context);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ErrorEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::Timestamp* event_time_;
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* service_context_;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* context_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ErrorEvent> ErrorEvent_default_instance_;

// -------------------------------------------------------------------

class ServiceContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ServiceContext) */ {
 public:
  ServiceContext();
  virtual ~ServiceContext();

  ServiceContext(const ServiceContext& from);

  inline ServiceContext& operator=(const ServiceContext& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceContext& default_instance();

  static const ServiceContext* internal_default_instance();

  void Swap(ServiceContext* other);

  // implements Message ----------------------------------------------

  inline ServiceContext* New() const { return New(NULL); }

  ServiceContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceContext& from);
  void MergeFrom(const ServiceContext& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServiceContext* other);
  void UnsafeMergeFrom(const ServiceContext& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service = 2;
  void clear_service();
  static const int kServiceFieldNumber = 2;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // optional string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string resource_type = 4;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 4;
  const ::std::string& resource_type() const;
  void set_resource_type(const ::std::string& value);
  void set_resource_type(const char* value);
  void set_resource_type(const char* value, size_t size);
  ::std::string* mutable_resource_type();
  ::std::string* release_resource_type();
  void set_allocated_resource_type(::std::string* resource_type);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ServiceContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr resource_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ServiceContext> ServiceContext_default_instance_;

// -------------------------------------------------------------------

class ErrorContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ErrorContext) */ {
 public:
  ErrorContext();
  virtual ~ErrorContext();

  ErrorContext(const ErrorContext& from);

  inline ErrorContext& operator=(const ErrorContext& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorContext& default_instance();

  static const ErrorContext* internal_default_instance();

  void Swap(ErrorContext* other);

  // implements Message ----------------------------------------------

  inline ErrorContext* New() const { return New(NULL); }

  ErrorContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorContext& from);
  void MergeFrom(const ErrorContext& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorContext* other);
  void UnsafeMergeFrom(const ErrorContext& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
  bool has_http_request() const;
  void clear_http_request();
  static const int kHttpRequestFieldNumber = 1;
  const ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext& http_request() const;
  ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* mutable_http_request();
  ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* release_http_request();
  void set_allocated_http_request(::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* http_request);

  // optional string user = 2;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // optional .google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
  bool has_report_location() const;
  void clear_report_location();
  static const int kReportLocationFieldNumber = 3;
  const ::google::devtools::clouderrorreporting::v1beta1::SourceLocation& report_location() const;
  ::google::devtools::clouderrorreporting::v1beta1::SourceLocation* mutable_report_location();
  ::google::devtools::clouderrorreporting::v1beta1::SourceLocation* release_report_location();
  void set_allocated_report_location(::google::devtools::clouderrorreporting::v1beta1::SourceLocation* report_location);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ErrorContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* http_request_;
  ::google::devtools::clouderrorreporting::v1beta1::SourceLocation* report_location_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ErrorContext> ErrorContext_default_instance_;

// -------------------------------------------------------------------

class HttpRequestContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext) */ {
 public:
  HttpRequestContext();
  virtual ~HttpRequestContext();

  HttpRequestContext(const HttpRequestContext& from);

  inline HttpRequestContext& operator=(const HttpRequestContext& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpRequestContext& default_instance();

  static const HttpRequestContext* internal_default_instance();

  void Swap(HttpRequestContext* other);

  // implements Message ----------------------------------------------

  inline HttpRequestContext* New() const { return New(NULL); }

  HttpRequestContext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpRequestContext& from);
  void MergeFrom(const HttpRequestContext& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpRequestContext* other);
  void UnsafeMergeFrom(const HttpRequestContext& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method = 1;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string user_agent = 3;
  void clear_user_agent();
  static const int kUserAgentFieldNumber = 3;
  const ::std::string& user_agent() const;
  void set_user_agent(const ::std::string& value);
  void set_user_agent(const char* value);
  void set_user_agent(const char* value, size_t size);
  ::std::string* mutable_user_agent();
  ::std::string* release_user_agent();
  void set_allocated_user_agent(::std::string* user_agent);

  // optional string referrer = 4;
  void clear_referrer();
  static const int kReferrerFieldNumber = 4;
  const ::std::string& referrer() const;
  void set_referrer(const ::std::string& value);
  void set_referrer(const char* value);
  void set_referrer(const char* value, size_t size);
  ::std::string* mutable_referrer();
  ::std::string* release_referrer();
  void set_allocated_referrer(::std::string* referrer);

  // optional int32 response_status_code = 5;
  void clear_response_status_code();
  static const int kResponseStatusCodeFieldNumber = 5;
  ::google::protobuf::int32 response_status_code() const;
  void set_response_status_code(::google::protobuf::int32 value);

  // optional string remote_ip = 6;
  void clear_remote_ip();
  static const int kRemoteIpFieldNumber = 6;
  const ::std::string& remote_ip() const;
  void set_remote_ip(const ::std::string& value);
  void set_remote_ip(const char* value);
  void set_remote_ip(const char* value, size_t size);
  ::std::string* mutable_remote_ip();
  ::std::string* release_remote_ip();
  void set_allocated_remote_ip(::std::string* remote_ip);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr user_agent_;
  ::google::protobuf::internal::ArenaStringPtr referrer_;
  ::google::protobuf::internal::ArenaStringPtr remote_ip_;
  ::google::protobuf::int32 response_status_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HttpRequestContext> HttpRequestContext_default_instance_;

// -------------------------------------------------------------------

class SourceLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.SourceLocation) */ {
 public:
  SourceLocation();
  virtual ~SourceLocation();

  SourceLocation(const SourceLocation& from);

  inline SourceLocation& operator=(const SourceLocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SourceLocation& default_instance();

  static const SourceLocation* internal_default_instance();

  void Swap(SourceLocation* other);

  // implements Message ----------------------------------------------

  inline SourceLocation* New() const { return New(NULL); }

  SourceLocation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SourceLocation& from);
  void MergeFrom(const SourceLocation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SourceLocation* other);
  void UnsafeMergeFrom(const SourceLocation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_path = 1;
  void clear_file_path();
  static const int kFilePathFieldNumber = 1;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // optional int32 line_number = 2;
  void clear_line_number();
  static const int kLineNumberFieldNumber = 2;
  ::google::protobuf::int32 line_number() const;
  void set_line_number(::google::protobuf::int32 value);

  // optional string function_name = 4;
  void clear_function_name();
  static const int kFunctionNameFieldNumber = 4;
  const ::std::string& function_name() const;
  void set_function_name(const ::std::string& value);
  void set_function_name(const char* value);
  void set_function_name(const char* value, size_t size);
  ::std::string* mutable_function_name();
  ::std::string* release_function_name();
  void set_allocated_function_name(::std::string* function_name);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.SourceLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  ::google::protobuf::internal::ArenaStringPtr function_name_;
  ::google::protobuf::int32 line_number_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SourceLocation> SourceLocation_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorGroup

// optional string name = 1;
inline void ErrorGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorGroup::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}
inline void ErrorGroup::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}
inline void ErrorGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}
inline ::std::string* ErrorGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorGroup::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.name)
}

// optional string group_id = 2;
inline void ErrorGroup::clear_group_id() {
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorGroup::group_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
  return group_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorGroup::set_group_id(const ::std::string& value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}
inline void ErrorGroup::set_group_id(const char* value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}
inline void ErrorGroup::set_group_id(const char* value, size_t size) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}
inline ::std::string* ErrorGroup::mutable_group_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
  return group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorGroup::release_group_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
  
  return group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id != NULL) {
    
  } else {
    
  }
  group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.group_id)
}

// repeated .google.devtools.clouderrorreporting.v1beta1.TrackingIssue tracking_issues = 3;
inline int ErrorGroup::tracking_issues_size() const {
  return tracking_issues_.size();
}
inline void ErrorGroup::clear_tracking_issues() {
  tracking_issues_.Clear();
}
inline const ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue& ErrorGroup::tracking_issues(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_.Get(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue* ErrorGroup::mutable_tracking_issues(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_.Mutable(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue* ErrorGroup::add_tracking_issues() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue >*
ErrorGroup::mutable_tracking_issues() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return &tracking_issues_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TrackingIssue >&
ErrorGroup::tracking_issues() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroup.tracking_issues)
  return tracking_issues_;
}

inline const ErrorGroup* ErrorGroup::internal_default_instance() {
  return &ErrorGroup_default_instance_.get();
}
// -------------------------------------------------------------------

// TrackingIssue

// optional string url = 1;
inline void TrackingIssue::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackingIssue::url() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIssue::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}
inline void TrackingIssue::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}
inline void TrackingIssue::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}
inline ::std::string* TrackingIssue::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackingIssue::release_url() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackingIssue::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.TrackingIssue.url)
}

inline const TrackingIssue* TrackingIssue::internal_default_instance() {
  return &TrackingIssue_default_instance_.get();
}
// -------------------------------------------------------------------

// ErrorEvent

// optional .google.protobuf.Timestamp event_time = 1;
inline bool ErrorEvent::has_event_time() const {
  return this != internal_default_instance() && event_time_ != NULL;
}
inline void ErrorEvent::clear_event_time() {
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) delete event_time_;
  event_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& ErrorEvent::event_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
  return event_time_ != NULL ? *event_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ErrorEvent::mutable_event_time() {
  
  if (event_time_ == NULL) {
    event_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
  return event_time_;
}
inline ::google::protobuf::Timestamp* ErrorEvent::release_event_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
  
  ::google::protobuf::Timestamp* temp = event_time_;
  event_time_ = NULL;
  return temp;
}
inline void ErrorEvent::set_allocated_event_time(::google::protobuf::Timestamp* event_time) {
  delete event_time_;
  if (event_time != NULL && event_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_event_time = new ::google::protobuf::Timestamp;
    new_event_time->CopyFrom(*event_time);
    event_time = new_event_time;
  }
  event_time_ = event_time;
  if (event_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.event_time)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
inline bool ErrorEvent::has_service_context() const {
  return this != internal_default_instance() && service_context_ != NULL;
}
inline void ErrorEvent::clear_service_context() {
  if (GetArenaNoVirtual() == NULL && service_context_ != NULL) delete service_context_;
  service_context_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ServiceContext& ErrorEvent::service_context() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
  return service_context_ != NULL ? *service_context_
                         : *::google::devtools::clouderrorreporting::v1beta1::ServiceContext::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorEvent::mutable_service_context() {
  
  if (service_context_ == NULL) {
    service_context_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
  return service_context_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorEvent::release_service_context() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
  
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* temp = service_context_;
  service_context_ = NULL;
  return temp;
}
inline void ErrorEvent::set_allocated_service_context(::google::devtools::clouderrorreporting::v1beta1::ServiceContext* service_context) {
  delete service_context_;
  service_context_ = service_context;
  if (service_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.service_context)
}

// optional string message = 3;
inline void ErrorEvent::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorEvent::message() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorEvent::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}
inline void ErrorEvent::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}
inline void ErrorEvent::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}
inline ::std::string* ErrorEvent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorEvent::release_message() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorEvent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.message)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 5;
inline bool ErrorEvent::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void ErrorEvent::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ErrorContext& ErrorEvent::context() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
  return context_ != NULL ? *context_
                         : *::google::devtools::clouderrorreporting::v1beta1::ErrorContext::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* ErrorEvent::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
  return context_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* ErrorEvent::release_context() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* temp = context_;
  context_ = NULL;
  return temp;
}
inline void ErrorEvent::set_allocated_context(::google::devtools::clouderrorreporting::v1beta1::ErrorContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorEvent.context)
}

inline const ErrorEvent* ErrorEvent::internal_default_instance() {
  return &ErrorEvent_default_instance_.get();
}
// -------------------------------------------------------------------

// ServiceContext

// optional string service = 2;
inline void ServiceContext::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceContext::service() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
  return service_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContext::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}
inline void ServiceContext::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}
inline void ServiceContext::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}
inline ::std::string* ServiceContext::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceContext::release_service() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContext::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContext.service)
}

// optional string version = 3;
inline void ServiceContext::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceContext::version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContext::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}
inline void ServiceContext::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}
inline void ServiceContext::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}
inline ::std::string* ServiceContext::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceContext::release_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContext::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContext.version)
}

// optional string resource_type = 4;
inline void ServiceContext::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceContext::resource_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
  return resource_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContext::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}
inline void ServiceContext::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}
inline void ServiceContext::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}
inline ::std::string* ServiceContext::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceContext::release_resource_type() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContext::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContext.resource_type)
}

inline const ServiceContext* ServiceContext::internal_default_instance() {
  return &ServiceContext_default_instance_.get();
}
// -------------------------------------------------------------------

// ErrorContext

// optional .google.devtools.clouderrorreporting.v1beta1.HttpRequestContext http_request = 1;
inline bool ErrorContext::has_http_request() const {
  return this != internal_default_instance() && http_request_ != NULL;
}
inline void ErrorContext::clear_http_request() {
  if (GetArenaNoVirtual() == NULL && http_request_ != NULL) delete http_request_;
  http_request_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext& ErrorContext::http_request() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
  return http_request_ != NULL ? *http_request_
                         : *::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* ErrorContext::mutable_http_request() {
  
  if (http_request_ == NULL) {
    http_request_ = new ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
  return http_request_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* ErrorContext::release_http_request() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
  
  ::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* temp = http_request_;
  http_request_ = NULL;
  return temp;
}
inline void ErrorContext::set_allocated_http_request(::google::devtools::clouderrorreporting::v1beta1::HttpRequestContext* http_request) {
  delete http_request_;
  http_request_ = http_request;
  if (http_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorContext.http_request)
}

// optional string user = 2;
inline void ErrorContext::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorContext::user() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorContext::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}
inline void ErrorContext::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}
inline void ErrorContext::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}
inline ::std::string* ErrorContext::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorContext::release_user() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorContext::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorContext.user)
}

// optional .google.devtools.clouderrorreporting.v1beta1.SourceLocation report_location = 3;
inline bool ErrorContext::has_report_location() const {
  return this != internal_default_instance() && report_location_ != NULL;
}
inline void ErrorContext::clear_report_location() {
  if (GetArenaNoVirtual() == NULL && report_location_ != NULL) delete report_location_;
  report_location_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::SourceLocation& ErrorContext::report_location() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
  return report_location_ != NULL ? *report_location_
                         : *::google::devtools::clouderrorreporting::v1beta1::SourceLocation::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::SourceLocation* ErrorContext::mutable_report_location() {
  
  if (report_location_ == NULL) {
    report_location_ = new ::google::devtools::clouderrorreporting::v1beta1::SourceLocation;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
  return report_location_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::SourceLocation* ErrorContext::release_report_location() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
  
  ::google::devtools::clouderrorreporting::v1beta1::SourceLocation* temp = report_location_;
  report_location_ = NULL;
  return temp;
}
inline void ErrorContext::set_allocated_report_location(::google::devtools::clouderrorreporting::v1beta1::SourceLocation* report_location) {
  delete report_location_;
  report_location_ = report_location;
  if (report_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorContext.report_location)
}

inline const ErrorContext* ErrorContext::internal_default_instance() {
  return &ErrorContext_default_instance_.get();
}
// -------------------------------------------------------------------

// HttpRequestContext

// optional string method = 1;
inline void HttpRequestContext::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpRequestContext::method() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}
inline void HttpRequestContext::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}
inline void HttpRequestContext::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}
inline ::std::string* HttpRequestContext::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestContext::release_method() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.method)
}

// optional string url = 2;
inline void HttpRequestContext::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpRequestContext::url() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}
inline void HttpRequestContext::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}
inline void HttpRequestContext::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}
inline ::std::string* HttpRequestContext::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestContext::release_url() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.url)
}

// optional string user_agent = 3;
inline void HttpRequestContext::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpRequestContext::user_agent() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
  return user_agent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_user_agent(const ::std::string& value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}
inline void HttpRequestContext::set_user_agent(const char* value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}
inline void HttpRequestContext::set_user_agent(const char* value, size_t size) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}
inline ::std::string* HttpRequestContext::mutable_user_agent() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestContext::release_user_agent() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
  
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    
  } else {
    
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.user_agent)
}

// optional string referrer = 4;
inline void HttpRequestContext::clear_referrer() {
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpRequestContext::referrer() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
  return referrer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_referrer(const ::std::string& value) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}
inline void HttpRequestContext::set_referrer(const char* value) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}
inline void HttpRequestContext::set_referrer(const char* value, size_t size) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}
inline ::std::string* HttpRequestContext::mutable_referrer() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
  return referrer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestContext::release_referrer() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
  
  return referrer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_allocated_referrer(::std::string* referrer) {
  if (referrer != NULL) {
    
  } else {
    
  }
  referrer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.referrer)
}

// optional int32 response_status_code = 5;
inline void HttpRequestContext::clear_response_status_code() {
  response_status_code_ = 0;
}
inline ::google::protobuf::int32 HttpRequestContext::response_status_code() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.response_status_code)
  return response_status_code_;
}
inline void HttpRequestContext::set_response_status_code(::google::protobuf::int32 value) {
  
  response_status_code_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.response_status_code)
}

// optional string remote_ip = 6;
inline void HttpRequestContext::clear_remote_ip() {
  remote_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpRequestContext::remote_ip() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
  return remote_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_remote_ip(const ::std::string& value) {
  
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}
inline void HttpRequestContext::set_remote_ip(const char* value) {
  
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}
inline void HttpRequestContext::set_remote_ip(const char* value, size_t size) {
  
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}
inline ::std::string* HttpRequestContext::mutable_remote_ip() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
  return remote_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequestContext::release_remote_ip() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
  
  return remote_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequestContext::set_allocated_remote_ip(::std::string* remote_ip) {
  if (remote_ip != NULL) {
    
  } else {
    
  }
  remote_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remote_ip);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.HttpRequestContext.remote_ip)
}

inline const HttpRequestContext* HttpRequestContext::internal_default_instance() {
  return &HttpRequestContext_default_instance_.get();
}
// -------------------------------------------------------------------

// SourceLocation

// optional string file_path = 1;
inline void SourceLocation::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SourceLocation::file_path() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SourceLocation::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}
inline void SourceLocation::set_file_path(const char* value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}
inline void SourceLocation::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}
inline ::std::string* SourceLocation::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SourceLocation::release_file_path() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SourceLocation::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.SourceLocation.file_path)
}

// optional int32 line_number = 2;
inline void SourceLocation::clear_line_number() {
  line_number_ = 0;
}
inline ::google::protobuf::int32 SourceLocation::line_number() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.SourceLocation.line_number)
  return line_number_;
}
inline void SourceLocation::set_line_number(::google::protobuf::int32 value) {
  
  line_number_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.SourceLocation.line_number)
}

// optional string function_name = 4;
inline void SourceLocation::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SourceLocation::function_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
  return function_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SourceLocation::set_function_name(const ::std::string& value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}
inline void SourceLocation::set_function_name(const char* value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}
inline void SourceLocation::set_function_name(const char* value, size_t size) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}
inline ::std::string* SourceLocation::mutable_function_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SourceLocation::release_function_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
  
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SourceLocation::set_allocated_function_name(::std::string* function_name) {
  if (function_name != NULL) {
    
  } else {
    
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.SourceLocation.function_name)
}

inline const SourceLocation* SourceLocation::internal_default_instance() {
  return &SourceLocation_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto__INCLUDED
