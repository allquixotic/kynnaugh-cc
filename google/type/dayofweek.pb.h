// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/dayofweek.proto

#ifndef PROTOBUF_google_2ftype_2fdayofweek_2eproto__INCLUDED
#define PROTOBUF_google_2ftype_2fdayofweek_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace type {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2ftype_2fdayofweek_2eproto();
void protobuf_InitDefaults_google_2ftype_2fdayofweek_2eproto();
void protobuf_AssignDesc_google_2ftype_2fdayofweek_2eproto();
void protobuf_ShutdownFile_google_2ftype_2fdayofweek_2eproto();


enum DayOfWeek {
  DAY_OF_WEEK_UNSPECIFIED = 0,
  MONDAY = 1,
  TUESDAY = 2,
  WEDNESDAY = 3,
  THURSDAY = 4,
  FRIDAY = 5,
  SATURDAY = 6,
  SUNDAY = 7,
  DayOfWeek_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DayOfWeek_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DayOfWeek_IsValid(int value);
const DayOfWeek DayOfWeek_MIN = DAY_OF_WEEK_UNSPECIFIED;
const DayOfWeek DayOfWeek_MAX = SUNDAY;
const int DayOfWeek_ARRAYSIZE = DayOfWeek_MAX + 1;

const ::google::protobuf::EnumDescriptor* DayOfWeek_descriptor();
inline const ::std::string& DayOfWeek_Name(DayOfWeek value) {
  return ::google::protobuf::internal::NameOfEnum(
    DayOfWeek_descriptor(), value);
}
inline bool DayOfWeek_Parse(
    const ::std::string& name, DayOfWeek* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DayOfWeek>(
    DayOfWeek_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::type::DayOfWeek> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::type::DayOfWeek>() {
  return ::google::type::DayOfWeek_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2ftype_2fdayofweek_2eproto__INCLUDED
