// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/rpc/error_details.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/rpc/error_details.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace rpc {
class RetryInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RetryInfo> {};
RetryInfoDefaultTypeInternal _RetryInfo_default_instance_;
class DebugInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DebugInfo> {};
DebugInfoDefaultTypeInternal _DebugInfo_default_instance_;
class QuotaFailure_ViolationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QuotaFailure_Violation> {};
QuotaFailure_ViolationDefaultTypeInternal _QuotaFailure_Violation_default_instance_;
class QuotaFailureDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QuotaFailure> {};
QuotaFailureDefaultTypeInternal _QuotaFailure_default_instance_;
class BadRequest_FieldViolationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BadRequest_FieldViolation> {};
BadRequest_FieldViolationDefaultTypeInternal _BadRequest_FieldViolation_default_instance_;
class BadRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BadRequest> {};
BadRequestDefaultTypeInternal _BadRequest_default_instance_;
class RequestInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RequestInfo> {};
RequestInfoDefaultTypeInternal _RequestInfo_default_instance_;
class ResourceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResourceInfo> {};
ResourceInfoDefaultTypeInternal _ResourceInfo_default_instance_;
class Help_LinkDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Help_Link> {};
Help_LinkDefaultTypeInternal _Help_Link_default_instance_;
class HelpDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Help> {};
HelpDefaultTypeInternal _Help_default_instance_;
class LocalizedMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LocalizedMessage> {};
LocalizedMessageDefaultTypeInternal _LocalizedMessage_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[11];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_google_2frpc_2ferror_5fdetails_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_google_2frpc_2ferror_5fdetails_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryInfo, retry_delay_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, stack_entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugInfo, detail_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuotaFailure_Violation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuotaFailure_Violation, subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuotaFailure_Violation, description_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuotaFailure, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuotaFailure, violations_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadRequest_FieldViolation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadRequest_FieldViolation, field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadRequest_FieldViolation, description_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadRequest, field_violations_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestInfo, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestInfo, serving_data_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, resource_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, resource_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, owner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, description_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Help_Link, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Help_Link, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Help_Link, url_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Help, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Help, links_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizedMessage, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizedMessage, message_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RetryInfo)},
  { 5, -1, sizeof(DebugInfo)},
  { 11, -1, sizeof(QuotaFailure_Violation)},
  { 17, -1, sizeof(QuotaFailure)},
  { 22, -1, sizeof(BadRequest_FieldViolation)},
  { 28, -1, sizeof(BadRequest)},
  { 33, -1, sizeof(RequestInfo)},
  { 39, -1, sizeof(ResourceInfo)},
  { 47, -1, sizeof(Help_Link)},
  { 53, -1, sizeof(Help)},
  { 58, -1, sizeof(LocalizedMessage)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_RetryInfo_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_DebugInfo_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_QuotaFailure_Violation_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_QuotaFailure_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_BadRequest_FieldViolation_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_BadRequest_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_RequestInfo_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_ResourceInfo_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Help_Link_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Help_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_LocalizedMessage_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/rpc/error_details.proto", schemas, file_default_instances, protobuf_Offsets_google_2frpc_2ferror_5fdetails_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace

void protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto() {
  _RetryInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DebugInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _QuotaFailure_Violation_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _QuotaFailure_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _BadRequest_FieldViolation_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _BadRequest_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _RequestInfo_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ResourceInfo_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _Help_Link_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Help_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _LocalizedMessage_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
}

void protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::InitProtobufDefaults();
  _RetryInfo_default_instance_.DefaultConstruct();
  _DebugInfo_default_instance_.DefaultConstruct();
  _QuotaFailure_Violation_default_instance_.DefaultConstruct();
  _QuotaFailure_default_instance_.DefaultConstruct();
  _BadRequest_FieldViolation_default_instance_.DefaultConstruct();
  _BadRequest_default_instance_.DefaultConstruct();
  _RequestInfo_default_instance_.DefaultConstruct();
  _ResourceInfo_default_instance_.DefaultConstruct();
  _Help_Link_default_instance_.DefaultConstruct();
  _Help_default_instance_.DefaultConstruct();
  _LocalizedMessage_default_instance_.DefaultConstruct();
  _RetryInfo_default_instance_.get_mutable()->retry_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

void protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto_impl);
}
void protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  static const char descriptor[] = {
      "\n\036google/rpc/error_details.proto\022\ngoogle"
      ".rpc\032\036google/protobuf/duration.proto\";\n\t"
      "RetryInfo\022.\n\013retry_delay\030\001 \001(\0132\031.google."
      "protobuf.Duration\"2\n\tDebugInfo\022\025\n\rstack_"
      "entries\030\001 \003(\t\022\016\n\006detail\030\002 \001(\t\"y\n\014QuotaFa"
      "ilure\0226\n\nviolations\030\001 \003(\0132\".google.rpc.Q"
      "uotaFailure.Violation\0321\n\tViolation\022\017\n\007su"
      "bject\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\"\203\001\n\nBad"
      "Request\022\?\n\020field_violations\030\001 \003(\0132%.goog"
      "le.rpc.BadRequest.FieldViolation\0324\n\016Fiel"
      "dViolation\022\r\n\005field\030\001 \001(\t\022\023\n\013description"
      "\030\002 \001(\t\"7\n\013RequestInfo\022\022\n\nrequest_id\030\001 \001("
      "\t\022\024\n\014serving_data\030\002 \001(\t\"`\n\014ResourceInfo\022"
      "\025\n\rresource_type\030\001 \001(\t\022\025\n\rresource_name\030"
      "\002 \001(\t\022\r\n\005owner\030\003 \001(\t\022\023\n\013description\030\004 \001("
      "\t\"V\n\004Help\022$\n\005links\030\001 \003(\0132\025.google.rpc.He"
      "lp.Link\032(\n\004Link\022\023\n\013description\030\001 \001(\t\022\013\n\003"
      "url\030\002 \001(\t\"3\n\020LocalizedMessage\022\016\n\006locale\030"
      "\001 \001(\t\022\017\n\007message\030\002 \001(\tBl\n\016com.google.rpc"
      "B\021ErrorDetailsProtoP\001Z\?google.golang.org"
      "/genproto/googleapis/rpc/errdetails;errd"
      "etails\242\002\003RPCb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 860);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/rpc/error_details.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2frpc_2ferror_5fdetails_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_once_);
void protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_once_,
                 &protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2frpc_2ferror_5fdetails_2eproto {
  StaticDescriptorInitializer_google_2frpc_2ferror_5fdetails_2eproto() {
    protobuf_AddDesc_google_2frpc_2ferror_5fdetails_2eproto();
  }
} static_descriptor_initializer_google_2frpc_2ferror_5fdetails_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetryInfo::kRetryDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetryInfo::RetryInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.RetryInfo)
}
RetryInfo::RetryInfo(const RetryInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_retry_delay()) {
    retry_delay_ = new ::google::protobuf::Duration(*from.retry_delay_);
  } else {
    retry_delay_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.RetryInfo)
}

void RetryInfo::SharedCtor() {
  retry_delay_ = NULL;
  _cached_size_ = 0;
}

RetryInfo::~RetryInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.RetryInfo)
  SharedDtor();
}

void RetryInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete retry_delay_;
  }
}

void RetryInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetryInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const RetryInfo& RetryInfo::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

RetryInfo* RetryInfo::New(::google::protobuf::Arena* arena) const {
  RetryInfo* n = new RetryInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.RetryInfo)
  if (GetArenaNoVirtual() == NULL && retry_delay_ != NULL) {
    delete retry_delay_;
  }
  retry_delay_ = NULL;
}

bool RetryInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.RetryInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration retry_delay = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retry_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.RetryInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.RetryInfo)
  return false;
#undef DO_
}

void RetryInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.RetryInfo)
  // .google.protobuf.Duration retry_delay = 1;
  if (this->has_retry_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->retry_delay_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.RetryInfo)
}

::google::protobuf::uint8* RetryInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.RetryInfo)
  // .google.protobuf.Duration retry_delay = 1;
  if (this->has_retry_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->retry_delay_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.RetryInfo)
  return target;
}

size_t RetryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.RetryInfo)
  size_t total_size = 0;

  // .google.protobuf.Duration retry_delay = 1;
  if (this->has_retry_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retry_delay_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetryInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.RetryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RetryInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetryInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.RetryInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.RetryInfo)
    MergeFrom(*source);
  }
}

void RetryInfo::MergeFrom(const RetryInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.RetryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_retry_delay()) {
    mutable_retry_delay()->::google::protobuf::Duration::MergeFrom(from.retry_delay());
  }
}

void RetryInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.RetryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetryInfo::CopyFrom(const RetryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.RetryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetryInfo::IsInitialized() const {
  return true;
}

void RetryInfo::Swap(RetryInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetryInfo::InternalSwap(RetryInfo* other) {
  std::swap(retry_delay_, other->retry_delay_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetryInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetryInfo

// .google.protobuf.Duration retry_delay = 1;
bool RetryInfo::has_retry_delay() const {
  return this != internal_default_instance() && retry_delay_ != NULL;
}
void RetryInfo::clear_retry_delay() {
  if (GetArenaNoVirtual() == NULL && retry_delay_ != NULL) delete retry_delay_;
  retry_delay_ = NULL;
}
const ::google::protobuf::Duration& RetryInfo::retry_delay() const {
  // @@protoc_insertion_point(field_get:google.rpc.RetryInfo.retry_delay)
  return retry_delay_ != NULL ? *retry_delay_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* RetryInfo::mutable_retry_delay() {
  
  if (retry_delay_ == NULL) {
    retry_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.rpc.RetryInfo.retry_delay)
  return retry_delay_;
}
::google::protobuf::Duration* RetryInfo::release_retry_delay() {
  // @@protoc_insertion_point(field_release:google.rpc.RetryInfo.retry_delay)
  
  ::google::protobuf::Duration* temp = retry_delay_;
  retry_delay_ = NULL;
  return temp;
}
void RetryInfo::set_allocated_retry_delay(::google::protobuf::Duration* retry_delay) {
  delete retry_delay_;
  if (retry_delay != NULL && retry_delay->GetArena() != NULL) {
    ::google::protobuf::Duration* new_retry_delay = new ::google::protobuf::Duration;
    new_retry_delay->CopyFrom(*retry_delay);
    retry_delay = new_retry_delay;
  }
  retry_delay_ = retry_delay;
  if (retry_delay) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.rpc.RetryInfo.retry_delay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugInfo::kStackEntriesFieldNumber;
const int DebugInfo::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugInfo::DebugInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.DebugInfo)
}
DebugInfo::DebugInfo(const DebugInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stack_entries_(from.stack_entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.DebugInfo)
}

void DebugInfo::SharedCtor() {
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DebugInfo::~DebugInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.DebugInfo)
  SharedDtor();
}

void DebugInfo::SharedDtor() {
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1].descriptor;
}

const DebugInfo& DebugInfo::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

DebugInfo* DebugInfo::New(::google::protobuf::Arena* arena) const {
  DebugInfo* n = new DebugInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.DebugInfo)
  stack_entries_.Clear();
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DebugInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.DebugInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string stack_entries = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stack_entries()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stack_entries(this->stack_entries_size() - 1).data(),
            this->stack_entries(this->stack_entries_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.DebugInfo.stack_entries"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), this->detail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.DebugInfo.detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.DebugInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.DebugInfo)
  return false;
#undef DO_
}

void DebugInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.DebugInfo)
  // repeated string stack_entries = 1;
  for (int i = 0; i < this->stack_entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_entries(i).data(), this->stack_entries(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.DebugInfo.stack_entries");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stack_entries(i), output);
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.DebugInfo.detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->detail(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.DebugInfo)
}

::google::protobuf::uint8* DebugInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.DebugInfo)
  // repeated string stack_entries = 1;
  for (int i = 0; i < this->stack_entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stack_entries(i).data(), this->stack_entries(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.DebugInfo.stack_entries");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->stack_entries(i), target);
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.DebugInfo.detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->detail(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.DebugInfo)
  return target;
}

size_t DebugInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.DebugInfo)
  size_t total_size = 0;

  // repeated string stack_entries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stack_entries_size());
  for (int i = 0; i < this->stack_entries_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stack_entries(i));
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.DebugInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.DebugInfo)
    MergeFrom(*source);
  }
}

void DebugInfo::MergeFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stack_entries_.MergeFrom(from.stack_entries_);
  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
}

void DebugInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugInfo::CopyFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugInfo::IsInitialized() const {
  return true;
}

void DebugInfo::Swap(DebugInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugInfo::InternalSwap(DebugInfo* other) {
  stack_entries_.UnsafeArenaSwap(&other->stack_entries_);
  detail_.Swap(&other->detail_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugInfo

// repeated string stack_entries = 1;
int DebugInfo::stack_entries_size() const {
  return stack_entries_.size();
}
void DebugInfo::clear_stack_entries() {
  stack_entries_.Clear();
}
const ::std::string& DebugInfo::stack_entries(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.DebugInfo.stack_entries)
  return stack_entries_.Get(index);
}
::std::string* DebugInfo::mutable_stack_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.DebugInfo.stack_entries)
  return stack_entries_.Mutable(index);
}
void DebugInfo::set_stack_entries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.rpc.DebugInfo.stack_entries)
  stack_entries_.Mutable(index)->assign(value);
}
void DebugInfo::set_stack_entries(int index, const char* value) {
  stack_entries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.rpc.DebugInfo.stack_entries)
}
void DebugInfo::set_stack_entries(int index, const char* value, size_t size) {
  stack_entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.rpc.DebugInfo.stack_entries)
}
::std::string* DebugInfo::add_stack_entries() {
  // @@protoc_insertion_point(field_add_mutable:google.rpc.DebugInfo.stack_entries)
  return stack_entries_.Add();
}
void DebugInfo::add_stack_entries(const ::std::string& value) {
  stack_entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.rpc.DebugInfo.stack_entries)
}
void DebugInfo::add_stack_entries(const char* value) {
  stack_entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.rpc.DebugInfo.stack_entries)
}
void DebugInfo::add_stack_entries(const char* value, size_t size) {
  stack_entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.rpc.DebugInfo.stack_entries)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DebugInfo::stack_entries() const {
  // @@protoc_insertion_point(field_list:google.rpc.DebugInfo.stack_entries)
  return stack_entries_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DebugInfo::mutable_stack_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.DebugInfo.stack_entries)
  return &stack_entries_;
}

// string detail = 2;
void DebugInfo::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DebugInfo::detail() const {
  // @@protoc_insertion_point(field_get:google.rpc.DebugInfo.detail)
  return detail_.GetNoArena();
}
void DebugInfo::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.DebugInfo.detail)
}
void DebugInfo::set_detail(const char* value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.DebugInfo.detail)
}
void DebugInfo::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.DebugInfo.detail)
}
::std::string* DebugInfo::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.DebugInfo.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DebugInfo::release_detail() {
  // @@protoc_insertion_point(field_release:google.rpc.DebugInfo.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DebugInfo::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.DebugInfo.detail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaFailure_Violation::kSubjectFieldNumber;
const int QuotaFailure_Violation::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaFailure_Violation::QuotaFailure_Violation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.QuotaFailure.Violation)
}
QuotaFailure_Violation::QuotaFailure_Violation(const QuotaFailure_Violation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.QuotaFailure.Violation)
}

void QuotaFailure_Violation::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QuotaFailure_Violation::~QuotaFailure_Violation() {
  // @@protoc_insertion_point(destructor:google.rpc.QuotaFailure.Violation)
  SharedDtor();
}

void QuotaFailure_Violation::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuotaFailure_Violation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaFailure_Violation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2].descriptor;
}

const QuotaFailure_Violation& QuotaFailure_Violation::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

QuotaFailure_Violation* QuotaFailure_Violation::New(::google::protobuf::Arena* arena) const {
  QuotaFailure_Violation* n = new QuotaFailure_Violation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaFailure_Violation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.QuotaFailure.Violation)
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QuotaFailure_Violation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.QuotaFailure.Violation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subject = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), this->subject().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.QuotaFailure.Violation.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.QuotaFailure.Violation.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.QuotaFailure.Violation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.QuotaFailure.Violation)
  return false;
#undef DO_
}

void QuotaFailure_Violation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.QuotaFailure.Violation)
  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.QuotaFailure.Violation.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.QuotaFailure.Violation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.QuotaFailure.Violation)
}

::google::protobuf::uint8* QuotaFailure_Violation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.QuotaFailure.Violation)
  // string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.QuotaFailure.Violation.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.QuotaFailure.Violation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.QuotaFailure.Violation)
  return target;
}

size_t QuotaFailure_Violation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.QuotaFailure.Violation)
  size_t total_size = 0;

  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaFailure_Violation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.QuotaFailure.Violation)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaFailure_Violation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaFailure_Violation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.QuotaFailure.Violation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.QuotaFailure.Violation)
    MergeFrom(*source);
  }
}

void QuotaFailure_Violation::MergeFrom(const QuotaFailure_Violation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.QuotaFailure.Violation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void QuotaFailure_Violation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.QuotaFailure.Violation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaFailure_Violation::CopyFrom(const QuotaFailure_Violation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.QuotaFailure.Violation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaFailure_Violation::IsInitialized() const {
  return true;
}

void QuotaFailure_Violation::Swap(QuotaFailure_Violation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaFailure_Violation::InternalSwap(QuotaFailure_Violation* other) {
  subject_.Swap(&other->subject_);
  description_.Swap(&other->description_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaFailure_Violation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuotaFailure_Violation

// string subject = 1;
void QuotaFailure_Violation::clear_subject() {
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuotaFailure_Violation::subject() const {
  // @@protoc_insertion_point(field_get:google.rpc.QuotaFailure.Violation.subject)
  return subject_.GetNoArena();
}
void QuotaFailure_Violation::set_subject(const ::std::string& value) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.QuotaFailure.Violation.subject)
}
void QuotaFailure_Violation::set_subject(const char* value) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.QuotaFailure.Violation.subject)
}
void QuotaFailure_Violation::set_subject(const char* value, size_t size) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.QuotaFailure.Violation.subject)
}
::std::string* QuotaFailure_Violation::mutable_subject() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.QuotaFailure.Violation.subject)
  return subject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuotaFailure_Violation::release_subject() {
  // @@protoc_insertion_point(field_release:google.rpc.QuotaFailure.Violation.subject)
  
  return subject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuotaFailure_Violation::set_allocated_subject(::std::string* subject) {
  if (subject != NULL) {
    
  } else {
    
  }
  subject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.QuotaFailure.Violation.subject)
}

// string description = 2;
void QuotaFailure_Violation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuotaFailure_Violation::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.QuotaFailure.Violation.description)
  return description_.GetNoArena();
}
void QuotaFailure_Violation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.QuotaFailure.Violation.description)
}
void QuotaFailure_Violation::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.QuotaFailure.Violation.description)
}
void QuotaFailure_Violation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.QuotaFailure.Violation.description)
}
::std::string* QuotaFailure_Violation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.QuotaFailure.Violation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuotaFailure_Violation::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.QuotaFailure.Violation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuotaFailure_Violation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.QuotaFailure.Violation.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaFailure::kViolationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaFailure::QuotaFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.QuotaFailure)
}
QuotaFailure::QuotaFailure(const QuotaFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      violations_(from.violations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.rpc.QuotaFailure)
}

void QuotaFailure::SharedCtor() {
  _cached_size_ = 0;
}

QuotaFailure::~QuotaFailure() {
  // @@protoc_insertion_point(destructor:google.rpc.QuotaFailure)
  SharedDtor();
}

void QuotaFailure::SharedDtor() {
}

void QuotaFailure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaFailure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3].descriptor;
}

const QuotaFailure& QuotaFailure::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

QuotaFailure* QuotaFailure::New(::google::protobuf::Arena* arena) const {
  QuotaFailure* n = new QuotaFailure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.QuotaFailure)
  violations_.Clear();
}

bool QuotaFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.QuotaFailure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.rpc.QuotaFailure.Violation violations = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_violations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.QuotaFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.QuotaFailure)
  return false;
#undef DO_
}

void QuotaFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.QuotaFailure)
  // repeated .google.rpc.QuotaFailure.Violation violations = 1;
  for (unsigned int i = 0, n = this->violations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->violations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.QuotaFailure)
}

::google::protobuf::uint8* QuotaFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.QuotaFailure)
  // repeated .google.rpc.QuotaFailure.Violation violations = 1;
  for (unsigned int i = 0, n = this->violations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->violations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.QuotaFailure)
  return target;
}

size_t QuotaFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.QuotaFailure)
  size_t total_size = 0;

  // repeated .google.rpc.QuotaFailure.Violation violations = 1;
  {
    unsigned int count = this->violations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->violations(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.QuotaFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.QuotaFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.QuotaFailure)
    MergeFrom(*source);
  }
}

void QuotaFailure::MergeFrom(const QuotaFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.QuotaFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  violations_.MergeFrom(from.violations_);
}

void QuotaFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.QuotaFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaFailure::CopyFrom(const QuotaFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.QuotaFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaFailure::IsInitialized() const {
  return true;
}

void QuotaFailure::Swap(QuotaFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaFailure::InternalSwap(QuotaFailure* other) {
  violations_.UnsafeArenaSwap(&other->violations_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaFailure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuotaFailure

// repeated .google.rpc.QuotaFailure.Violation violations = 1;
int QuotaFailure::violations_size() const {
  return violations_.size();
}
void QuotaFailure::clear_violations() {
  violations_.Clear();
}
const ::google::rpc::QuotaFailure_Violation& QuotaFailure::violations(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.QuotaFailure.violations)
  return violations_.Get(index);
}
::google::rpc::QuotaFailure_Violation* QuotaFailure::mutable_violations(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.QuotaFailure.violations)
  return violations_.Mutable(index);
}
::google::rpc::QuotaFailure_Violation* QuotaFailure::add_violations() {
  // @@protoc_insertion_point(field_add:google.rpc.QuotaFailure.violations)
  return violations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::rpc::QuotaFailure_Violation >*
QuotaFailure::mutable_violations() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.QuotaFailure.violations)
  return &violations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::rpc::QuotaFailure_Violation >&
QuotaFailure::violations() const {
  // @@protoc_insertion_point(field_list:google.rpc.QuotaFailure.violations)
  return violations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BadRequest_FieldViolation::kFieldFieldNumber;
const int BadRequest_FieldViolation::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BadRequest_FieldViolation::BadRequest_FieldViolation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.BadRequest.FieldViolation)
}
BadRequest_FieldViolation::BadRequest_FieldViolation(const BadRequest_FieldViolation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field().size() > 0) {
    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.BadRequest.FieldViolation)
}

void BadRequest_FieldViolation::SharedCtor() {
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BadRequest_FieldViolation::~BadRequest_FieldViolation() {
  // @@protoc_insertion_point(destructor:google.rpc.BadRequest.FieldViolation)
  SharedDtor();
}

void BadRequest_FieldViolation::SharedDtor() {
  field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BadRequest_FieldViolation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BadRequest_FieldViolation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4].descriptor;
}

const BadRequest_FieldViolation& BadRequest_FieldViolation::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

BadRequest_FieldViolation* BadRequest_FieldViolation::New(::google::protobuf::Arena* arena) const {
  BadRequest_FieldViolation* n = new BadRequest_FieldViolation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BadRequest_FieldViolation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.BadRequest.FieldViolation)
  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BadRequest_FieldViolation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.BadRequest.FieldViolation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field().data(), this->field().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.BadRequest.FieldViolation.field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.BadRequest.FieldViolation.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.BadRequest.FieldViolation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.BadRequest.FieldViolation)
  return false;
#undef DO_
}

void BadRequest_FieldViolation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.BadRequest.FieldViolation)
  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.BadRequest.FieldViolation.field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.BadRequest.FieldViolation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.BadRequest.FieldViolation)
}

::google::protobuf::uint8* BadRequest_FieldViolation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.BadRequest.FieldViolation)
  // string field = 1;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.BadRequest.FieldViolation.field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.BadRequest.FieldViolation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.BadRequest.FieldViolation)
  return target;
}

size_t BadRequest_FieldViolation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.BadRequest.FieldViolation)
  size_t total_size = 0;

  // string field = 1;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BadRequest_FieldViolation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.BadRequest.FieldViolation)
  GOOGLE_DCHECK_NE(&from, this);
  const BadRequest_FieldViolation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BadRequest_FieldViolation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.BadRequest.FieldViolation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.BadRequest.FieldViolation)
    MergeFrom(*source);
  }
}

void BadRequest_FieldViolation::MergeFrom(const BadRequest_FieldViolation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.BadRequest.FieldViolation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.field().size() > 0) {

    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void BadRequest_FieldViolation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.BadRequest.FieldViolation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BadRequest_FieldViolation::CopyFrom(const BadRequest_FieldViolation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.BadRequest.FieldViolation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadRequest_FieldViolation::IsInitialized() const {
  return true;
}

void BadRequest_FieldViolation::Swap(BadRequest_FieldViolation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BadRequest_FieldViolation::InternalSwap(BadRequest_FieldViolation* other) {
  field_.Swap(&other->field_);
  description_.Swap(&other->description_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BadRequest_FieldViolation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BadRequest_FieldViolation

// string field = 1;
void BadRequest_FieldViolation::clear_field() {
  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BadRequest_FieldViolation::field() const {
  // @@protoc_insertion_point(field_get:google.rpc.BadRequest.FieldViolation.field)
  return field_.GetNoArena();
}
void BadRequest_FieldViolation::set_field(const ::std::string& value) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.BadRequest.FieldViolation.field)
}
void BadRequest_FieldViolation::set_field(const char* value) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.BadRequest.FieldViolation.field)
}
void BadRequest_FieldViolation::set_field(const char* value, size_t size) {
  
  field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.BadRequest.FieldViolation.field)
}
::std::string* BadRequest_FieldViolation::mutable_field() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.BadRequest.FieldViolation.field)
  return field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BadRequest_FieldViolation::release_field() {
  // @@protoc_insertion_point(field_release:google.rpc.BadRequest.FieldViolation.field)
  
  return field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BadRequest_FieldViolation::set_allocated_field(::std::string* field) {
  if (field != NULL) {
    
  } else {
    
  }
  field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.BadRequest.FieldViolation.field)
}

// string description = 2;
void BadRequest_FieldViolation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BadRequest_FieldViolation::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.BadRequest.FieldViolation.description)
  return description_.GetNoArena();
}
void BadRequest_FieldViolation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.BadRequest.FieldViolation.description)
}
void BadRequest_FieldViolation::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.BadRequest.FieldViolation.description)
}
void BadRequest_FieldViolation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.BadRequest.FieldViolation.description)
}
::std::string* BadRequest_FieldViolation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.BadRequest.FieldViolation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BadRequest_FieldViolation::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.BadRequest.FieldViolation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BadRequest_FieldViolation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.BadRequest.FieldViolation.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BadRequest::kFieldViolationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BadRequest::BadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.BadRequest)
}
BadRequest::BadRequest(const BadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_violations_(from.field_violations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.rpc.BadRequest)
}

void BadRequest::SharedCtor() {
  _cached_size_ = 0;
}

BadRequest::~BadRequest() {
  // @@protoc_insertion_point(destructor:google.rpc.BadRequest)
  SharedDtor();
}

void BadRequest::SharedDtor() {
}

void BadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5].descriptor;
}

const BadRequest& BadRequest::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

BadRequest* BadRequest::New(::google::protobuf::Arena* arena) const {
  BadRequest* n = new BadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.BadRequest)
  field_violations_.Clear();
}

bool BadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.BadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field_violations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.BadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.BadRequest)
  return false;
#undef DO_
}

void BadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.BadRequest)
  // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1;
  for (unsigned int i = 0, n = this->field_violations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field_violations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.BadRequest)
}

::google::protobuf::uint8* BadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.BadRequest)
  // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1;
  for (unsigned int i = 0, n = this->field_violations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->field_violations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.BadRequest)
  return target;
}

size_t BadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.BadRequest)
  size_t total_size = 0;

  // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1;
  {
    unsigned int count = this->field_violations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field_violations(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.BadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.BadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.BadRequest)
    MergeFrom(*source);
  }
}

void BadRequest::MergeFrom(const BadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.BadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_violations_.MergeFrom(from.field_violations_);
}

void BadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.BadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BadRequest::CopyFrom(const BadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.BadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadRequest::IsInitialized() const {
  return true;
}

void BadRequest::Swap(BadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BadRequest::InternalSwap(BadRequest* other) {
  field_violations_.UnsafeArenaSwap(&other->field_violations_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BadRequest

// repeated .google.rpc.BadRequest.FieldViolation field_violations = 1;
int BadRequest::field_violations_size() const {
  return field_violations_.size();
}
void BadRequest::clear_field_violations() {
  field_violations_.Clear();
}
const ::google::rpc::BadRequest_FieldViolation& BadRequest::field_violations(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.BadRequest.field_violations)
  return field_violations_.Get(index);
}
::google::rpc::BadRequest_FieldViolation* BadRequest::mutable_field_violations(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.BadRequest.field_violations)
  return field_violations_.Mutable(index);
}
::google::rpc::BadRequest_FieldViolation* BadRequest::add_field_violations() {
  // @@protoc_insertion_point(field_add:google.rpc.BadRequest.field_violations)
  return field_violations_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::rpc::BadRequest_FieldViolation >*
BadRequest::mutable_field_violations() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.BadRequest.field_violations)
  return &field_violations_;
}
const ::google::protobuf::RepeatedPtrField< ::google::rpc::BadRequest_FieldViolation >&
BadRequest::field_violations() const {
  // @@protoc_insertion_point(field_list:google.rpc.BadRequest.field_violations)
  return field_violations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestInfo::kRequestIdFieldNumber;
const int RequestInfo::kServingDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestInfo::RequestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.RequestInfo)
}
RequestInfo::RequestInfo(const RequestInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  serving_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serving_data().size() > 0) {
    serving_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serving_data_);
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.RequestInfo)
}

void RequestInfo::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serving_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RequestInfo::~RequestInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.RequestInfo)
  SharedDtor();
}

void RequestInfo::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serving_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6].descriptor;
}

const RequestInfo& RequestInfo::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

RequestInfo* RequestInfo::New(::google::protobuf::Arena* arena) const {
  RequestInfo* n = new RequestInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.RequestInfo)
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serving_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RequestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.RequestInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.RequestInfo.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serving_data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serving_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serving_data().data(), this->serving_data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.RequestInfo.serving_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.RequestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.RequestInfo)
  return false;
#undef DO_
}

void RequestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.RequestInfo)
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.RequestInfo.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string serving_data = 2;
  if (this->serving_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serving_data().data(), this->serving_data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.RequestInfo.serving_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serving_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.RequestInfo)
}

::google::protobuf::uint8* RequestInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.RequestInfo)
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.RequestInfo.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string serving_data = 2;
  if (this->serving_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serving_data().data(), this->serving_data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.RequestInfo.serving_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serving_data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.RequestInfo)
  return target;
}

size_t RequestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.RequestInfo)
  size_t total_size = 0;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string serving_data = 2;
  if (this->serving_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serving_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.RequestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.RequestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.RequestInfo)
    MergeFrom(*source);
  }
}

void RequestInfo::MergeFrom(const RequestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.RequestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.serving_data().size() > 0) {

    serving_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serving_data_);
  }
}

void RequestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.RequestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestInfo::CopyFrom(const RequestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.RequestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestInfo::IsInitialized() const {
  return true;
}

void RequestInfo::Swap(RequestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestInfo::InternalSwap(RequestInfo* other) {
  request_id_.Swap(&other->request_id_);
  serving_data_.Swap(&other->serving_data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestInfo

// string request_id = 1;
void RequestInfo::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestInfo::request_id() const {
  // @@protoc_insertion_point(field_get:google.rpc.RequestInfo.request_id)
  return request_id_.GetNoArena();
}
void RequestInfo::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.RequestInfo.request_id)
}
void RequestInfo::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.RequestInfo.request_id)
}
void RequestInfo::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.RequestInfo.request_id)
}
::std::string* RequestInfo::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.RequestInfo.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestInfo::release_request_id() {
  // @@protoc_insertion_point(field_release:google.rpc.RequestInfo.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestInfo::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.RequestInfo.request_id)
}

// string serving_data = 2;
void RequestInfo::clear_serving_data() {
  serving_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestInfo::serving_data() const {
  // @@protoc_insertion_point(field_get:google.rpc.RequestInfo.serving_data)
  return serving_data_.GetNoArena();
}
void RequestInfo::set_serving_data(const ::std::string& value) {
  
  serving_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.RequestInfo.serving_data)
}
void RequestInfo::set_serving_data(const char* value) {
  
  serving_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.RequestInfo.serving_data)
}
void RequestInfo::set_serving_data(const char* value, size_t size) {
  
  serving_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.RequestInfo.serving_data)
}
::std::string* RequestInfo::mutable_serving_data() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.RequestInfo.serving_data)
  return serving_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestInfo::release_serving_data() {
  // @@protoc_insertion_point(field_release:google.rpc.RequestInfo.serving_data)
  
  return serving_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestInfo::set_allocated_serving_data(::std::string* serving_data) {
  if (serving_data != NULL) {
    
  } else {
    
  }
  serving_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serving_data);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.RequestInfo.serving_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceInfo::kResourceTypeFieldNumber;
const int ResourceInfo::kResourceNameFieldNumber;
const int ResourceInfo::kOwnerFieldNumber;
const int ResourceInfo::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceInfo::ResourceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.ResourceInfo)
}
ResourceInfo::ResourceInfo(const ResourceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_type().size() > 0) {
    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_name().size() > 0) {
    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner().size() > 0) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.ResourceInfo)
}

void ResourceInfo::SharedCtor() {
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ResourceInfo::~ResourceInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.ResourceInfo)
  SharedDtor();
}

void ResourceInfo::SharedDtor() {
  resource_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7].descriptor;
}

const ResourceInfo& ResourceInfo::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

ResourceInfo* ResourceInfo::New(::google::protobuf::Arena* arena) const {
  ResourceInfo* n = new ResourceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.ResourceInfo)
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ResourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.ResourceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_type = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_type().data(), this->resource_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.ResourceInfo.resource_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), this->resource_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.ResourceInfo.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner().data(), this->owner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.ResourceInfo.owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.ResourceInfo.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.ResourceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.ResourceInfo)
  return false;
#undef DO_
}

void ResourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.ResourceInfo)
  // string resource_type = 1;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.resource_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_type(), output);
  }

  // string resource_name = 2;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resource_name(), output);
  }

  // string owner = 3;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->owner(), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.ResourceInfo)
}

::google::protobuf::uint8* ResourceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.ResourceInfo)
  // string resource_type = 1;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.resource_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_type(), target);
  }

  // string resource_name = 2;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resource_name(), target);
  }

  // string owner = 3;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->owner(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.ResourceInfo)
  return target;
}

size_t ResourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.ResourceInfo)
  size_t total_size = 0;

  // string resource_type = 1;
  if (this->resource_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_type());
  }

  // string resource_name = 2;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // string owner = 3;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.ResourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.ResourceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.ResourceInfo)
    MergeFrom(*source);
  }
}

void ResourceInfo::MergeFrom(const ResourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.ResourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.resource_type().size() > 0) {

    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.owner().size() > 0) {

    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void ResourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.ResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceInfo::CopyFrom(const ResourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.ResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceInfo::IsInitialized() const {
  return true;
}

void ResourceInfo::Swap(ResourceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceInfo::InternalSwap(ResourceInfo* other) {
  resource_type_.Swap(&other->resource_type_);
  resource_name_.Swap(&other->resource_name_);
  owner_.Swap(&other->owner_);
  description_.Swap(&other->description_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceInfo

// string resource_type = 1;
void ResourceInfo::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResourceInfo::resource_type() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.resource_type)
  return resource_type_.GetNoArena();
}
void ResourceInfo::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.resource_type)
}
void ResourceInfo::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.resource_type)
}
void ResourceInfo::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.resource_type)
}
::std::string* ResourceInfo::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResourceInfo::release_resource_type() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceInfo::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.resource_type)
}

// string resource_name = 2;
void ResourceInfo::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResourceInfo::resource_name() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.resource_name)
  return resource_name_.GetNoArena();
}
void ResourceInfo::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.resource_name)
}
void ResourceInfo::set_resource_name(const char* value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.resource_name)
}
void ResourceInfo::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.resource_name)
}
::std::string* ResourceInfo::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResourceInfo::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceInfo::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.resource_name)
}

// string owner = 3;
void ResourceInfo::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResourceInfo::owner() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.owner)
  return owner_.GetNoArena();
}
void ResourceInfo::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.owner)
}
void ResourceInfo::set_owner(const char* value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.owner)
}
void ResourceInfo::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.owner)
}
::std::string* ResourceInfo::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResourceInfo::release_owner() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceInfo::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.owner)
}

// string description = 4;
void ResourceInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResourceInfo::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.ResourceInfo.description)
  return description_.GetNoArena();
}
void ResourceInfo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.ResourceInfo.description)
}
void ResourceInfo::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.ResourceInfo.description)
}
void ResourceInfo::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.ResourceInfo.description)
}
::std::string* ResourceInfo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.ResourceInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResourceInfo::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.ResourceInfo.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResourceInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.ResourceInfo.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Help_Link::kDescriptionFieldNumber;
const int Help_Link::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Help_Link::Help_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.Help.Link)
}
Help_Link::Help_Link(const Help_Link& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.Help.Link)
}

void Help_Link::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Help_Link::~Help_Link() {
  // @@protoc_insertion_point(destructor:google.rpc.Help.Link)
  SharedDtor();
}

void Help_Link::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Help_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Help_Link::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[8].descriptor;
}

const Help_Link& Help_Link::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

Help_Link* Help_Link::New(::google::protobuf::Arena* arena) const {
  Help_Link* n = new Help_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Help_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.Help.Link)
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Help_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.Help.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.Help.Link.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.Help.Link.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.Help.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.Help.Link)
  return false;
#undef DO_
}

void Help_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.Help.Link)
  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.Help.Link.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.Help.Link.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.Help.Link)
}

::google::protobuf::uint8* Help_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.Help.Link)
  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.Help.Link.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.Help.Link.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.Help.Link)
  return target;
}

size_t Help_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.Help.Link)
  size_t total_size = 0;

  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Help_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.Help.Link)
  GOOGLE_DCHECK_NE(&from, this);
  const Help_Link* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Help_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.Help.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.Help.Link)
    MergeFrom(*source);
  }
}

void Help_Link::MergeFrom(const Help_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.Help.Link)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void Help_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.Help.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Help_Link::CopyFrom(const Help_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.Help.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Help_Link::IsInitialized() const {
  return true;
}

void Help_Link::Swap(Help_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Help_Link::InternalSwap(Help_Link* other) {
  description_.Swap(&other->description_);
  url_.Swap(&other->url_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Help_Link::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Help_Link

// string description = 1;
void Help_Link::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Help_Link::description() const {
  // @@protoc_insertion_point(field_get:google.rpc.Help.Link.description)
  return description_.GetNoArena();
}
void Help_Link::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.Help.Link.description)
}
void Help_Link::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.Help.Link.description)
}
void Help_Link::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.Help.Link.description)
}
::std::string* Help_Link::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.Help.Link.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Help_Link::release_description() {
  // @@protoc_insertion_point(field_release:google.rpc.Help.Link.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Help_Link::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.Help.Link.description)
}

// string url = 2;
void Help_Link::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Help_Link::url() const {
  // @@protoc_insertion_point(field_get:google.rpc.Help.Link.url)
  return url_.GetNoArena();
}
void Help_Link::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.Help.Link.url)
}
void Help_Link::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.Help.Link.url)
}
void Help_Link::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.Help.Link.url)
}
::std::string* Help_Link::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.Help.Link.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Help_Link::release_url() {
  // @@protoc_insertion_point(field_release:google.rpc.Help.Link.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Help_Link::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.Help.Link.url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Help::kLinksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Help::Help()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.Help)
}
Help::Help(const Help& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      links_(from.links_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.rpc.Help)
}

void Help::SharedCtor() {
  _cached_size_ = 0;
}

Help::~Help() {
  // @@protoc_insertion_point(destructor:google.rpc.Help)
  SharedDtor();
}

void Help::SharedDtor() {
}

void Help::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Help::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[9].descriptor;
}

const Help& Help::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

Help* Help::New(::google::protobuf::Arena* arena) const {
  Help* n = new Help;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Help::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.Help)
  links_.Clear();
}

bool Help::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.Help)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.rpc.Help.Link links = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_links()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.Help)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.Help)
  return false;
#undef DO_
}

void Help::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.Help)
  // repeated .google.rpc.Help.Link links = 1;
  for (unsigned int i = 0, n = this->links_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->links(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.Help)
}

::google::protobuf::uint8* Help::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.Help)
  // repeated .google.rpc.Help.Link links = 1;
  for (unsigned int i = 0, n = this->links_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->links(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.Help)
  return target;
}

size_t Help::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.Help)
  size_t total_size = 0;

  // repeated .google.rpc.Help.Link links = 1;
  {
    unsigned int count = this->links_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->links(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Help::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.Help)
  GOOGLE_DCHECK_NE(&from, this);
  const Help* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Help>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.Help)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.Help)
    MergeFrom(*source);
  }
}

void Help::MergeFrom(const Help& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.Help)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  links_.MergeFrom(from.links_);
}

void Help::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.Help)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Help::CopyFrom(const Help& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.Help)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Help::IsInitialized() const {
  return true;
}

void Help::Swap(Help* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Help::InternalSwap(Help* other) {
  links_.UnsafeArenaSwap(&other->links_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Help::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Help

// repeated .google.rpc.Help.Link links = 1;
int Help::links_size() const {
  return links_.size();
}
void Help::clear_links() {
  links_.Clear();
}
const ::google::rpc::Help_Link& Help::links(int index) const {
  // @@protoc_insertion_point(field_get:google.rpc.Help.links)
  return links_.Get(index);
}
::google::rpc::Help_Link* Help::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:google.rpc.Help.links)
  return links_.Mutable(index);
}
::google::rpc::Help_Link* Help::add_links() {
  // @@protoc_insertion_point(field_add:google.rpc.Help.links)
  return links_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::rpc::Help_Link >*
Help::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:google.rpc.Help.links)
  return &links_;
}
const ::google::protobuf::RepeatedPtrField< ::google::rpc::Help_Link >&
Help::links() const {
  // @@protoc_insertion_point(field_list:google.rpc.Help.links)
  return links_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalizedMessage::kLocaleFieldNumber;
const int LocalizedMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalizedMessage::LocalizedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.rpc.LocalizedMessage)
}
LocalizedMessage::LocalizedMessage(const LocalizedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locale().size() > 0) {
    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.LocalizedMessage)
}

void LocalizedMessage::SharedCtor() {
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LocalizedMessage::~LocalizedMessage() {
  // @@protoc_insertion_point(destructor:google.rpc.LocalizedMessage)
  SharedDtor();
}

void LocalizedMessage::SharedDtor() {
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LocalizedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalizedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[10].descriptor;
}

const LocalizedMessage& LocalizedMessage::default_instance() {
  protobuf_InitDefaults_google_2frpc_2ferror_5fdetails_2eproto();
  return *internal_default_instance();
}

LocalizedMessage* LocalizedMessage::New(::google::protobuf::Arena* arena) const {
  LocalizedMessage* n = new LocalizedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalizedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.LocalizedMessage)
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LocalizedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.rpc.LocalizedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string locale = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), this->locale().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.LocalizedMessage.locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.rpc.LocalizedMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.rpc.LocalizedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.rpc.LocalizedMessage)
  return false;
#undef DO_
}

void LocalizedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.rpc.LocalizedMessage)
  // string locale = 1;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.LocalizedMessage.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->locale(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.LocalizedMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.rpc.LocalizedMessage)
}

::google::protobuf::uint8* LocalizedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.LocalizedMessage)
  // string locale = 1;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.LocalizedMessage.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->locale(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.rpc.LocalizedMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.LocalizedMessage)
  return target;
}

size_t LocalizedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.LocalizedMessage)
  size_t total_size = 0;

  // string locale = 1;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalizedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.rpc.LocalizedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalizedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalizedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.rpc.LocalizedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.rpc.LocalizedMessage)
    MergeFrom(*source);
  }
}

void LocalizedMessage::MergeFrom(const LocalizedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.LocalizedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.locale().size() > 0) {

    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void LocalizedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.rpc.LocalizedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalizedMessage::CopyFrom(const LocalizedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.LocalizedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalizedMessage::IsInitialized() const {
  return true;
}

void LocalizedMessage::Swap(LocalizedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalizedMessage::InternalSwap(LocalizedMessage* other) {
  locale_.Swap(&other->locale_);
  message_.Swap(&other->message_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalizedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalizedMessage

// string locale = 1;
void LocalizedMessage::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LocalizedMessage::locale() const {
  // @@protoc_insertion_point(field_get:google.rpc.LocalizedMessage.locale)
  return locale_.GetNoArena();
}
void LocalizedMessage::set_locale(const ::std::string& value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.LocalizedMessage.locale)
}
void LocalizedMessage::set_locale(const char* value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.LocalizedMessage.locale)
}
void LocalizedMessage::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.LocalizedMessage.locale)
}
::std::string* LocalizedMessage::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.LocalizedMessage.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LocalizedMessage::release_locale() {
  // @@protoc_insertion_point(field_release:google.rpc.LocalizedMessage.locale)
  
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LocalizedMessage::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.LocalizedMessage.locale)
}

// string message = 2;
void LocalizedMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LocalizedMessage::message() const {
  // @@protoc_insertion_point(field_get:google.rpc.LocalizedMessage.message)
  return message_.GetNoArena();
}
void LocalizedMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.rpc.LocalizedMessage.message)
}
void LocalizedMessage::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.rpc.LocalizedMessage.message)
}
void LocalizedMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.rpc.LocalizedMessage.message)
}
::std::string* LocalizedMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.rpc.LocalizedMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LocalizedMessage::release_message() {
  // @@protoc_insertion_point(field_release:google.rpc.LocalizedMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LocalizedMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:google.rpc.LocalizedMessage.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc
}  // namespace google

// @@protoc_insertion_point(global_scope)
