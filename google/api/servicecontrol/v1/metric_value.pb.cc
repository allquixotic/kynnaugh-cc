// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/metric_value.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/servicecontrol/v1/metric_value.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* MetricValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MetricValue_reflection_ = NULL;
struct MetricValueOneofInstance {
  bool bool_value_;
  ::google::protobuf::int64 int64_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  const ::google::api::servicecontrol::v1::Distribution* distribution_value_;
}* MetricValue_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* MetricValue_LabelsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MetricValueSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MetricValueSet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
  protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/servicecontrol/v1/metric_value.proto");
  GOOGLE_CHECK(file != NULL);
  MetricValue_descriptor_ = file->message_type(0);
  static const int MetricValue_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValue, labels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValue, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValue, end_time_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(MetricValue_default_oneof_instance_, bool_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(MetricValue_default_oneof_instance_, int64_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(MetricValue_default_oneof_instance_, double_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(MetricValue_default_oneof_instance_, string_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(MetricValue_default_oneof_instance_, distribution_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValue, value_),
  };
  MetricValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MetricValue_descriptor_,
      MetricValue::internal_default_instance(),
      MetricValue_offsets_,
      -1,
      -1,
      -1,
      MetricValue_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValue, _oneof_case_[0]),
      sizeof(MetricValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValue, _internal_metadata_));
  MetricValue_LabelsEntry_descriptor_ = MetricValue_descriptor_->nested_type(0);
  MetricValueSet_descriptor_ = file->message_type(1);
  static const int MetricValueSet_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValueSet, metric_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValueSet, metric_values_),
  };
  MetricValueSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MetricValueSet_descriptor_,
      MetricValueSet::internal_default_instance(),
      MetricValueSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(MetricValueSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricValueSet, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MetricValue_descriptor_, MetricValue::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        MetricValue_LabelsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                MetricValue_LabelsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MetricValueSet_descriptor_, MetricValueSet::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
  MetricValue_default_instance_.Shutdown();
  delete MetricValue_default_oneof_instance_;
  delete MetricValue_reflection_;
  MetricValueSet_default_instance_.Shutdown();
  delete MetricValueSet_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::api::servicecontrol::v1::protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::type::protobuf_InitDefaults_google_2ftype_2fmoney_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  MetricValue_default_instance_.DefaultConstruct();
  MetricValue_default_oneof_instance_ = new MetricValueOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  ::google::protobuf::internal::GetEmptyString();
  MetricValueSet_default_instance_.DefaultConstruct();
  MetricValue_default_instance_.get_mutable()->InitAsDefaultInstance();
  MetricValueSet_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/google/api/servicecontrol/v1/metric_va"
    "lue.proto\022\034google.api.servicecontrol.v1\032"
    "\034google/api/annotations.proto\032/google/ap"
    "i/servicecontrol/v1/distribution.proto\032\037"
    "google/protobuf/timestamp.proto\032\027google/"
    "type/money.proto\"\221\003\n\013MetricValue\022E\n\006labe"
    "ls\030\001 \003(\01325.google.api.servicecontrol.v1."
    "MetricValue.LabelsEntry\022.\n\nstart_time\030\002 "
    "\001(\0132\032.google.protobuf.Timestamp\022,\n\010end_t"
    "ime\030\003 \001(\0132\032.google.protobuf.Timestamp\022\024\n"
    "\nbool_value\030\004 \001(\010H\000\022\025\n\013int64_value\030\005 \001(\003"
    "H\000\022\026\n\014double_value\030\006 \001(\001H\000\022\026\n\014string_val"
    "ue\030\007 \001(\tH\000\022H\n\022distribution_value\030\010 \001(\0132*"
    ".google.api.servicecontrol.v1.Distributi"
    "onH\000\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001B\007\n\005value\"g\n\016MetricValueSet\022\023"
    "\n\013metric_name\030\001 \001(\t\022@\n\rmetric_values\030\002 \003"
    "(\0132).google.api.servicecontrol.v1.Metric"
    "ValueB\210\001\n com.google.api.servicecontrol."
    "v1B\023MetricValueSetProtoP\001ZJgoogle.golang"
    ".org/genproto/googleapis/api/servicecont"
    "rol/v1;servicecontrol\370\001\001b\006proto3", 872);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicecontrol/v1/metric_value.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::api::servicecontrol::v1::protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::type::protobuf_AddDesc_google_2ftype_2fmoney_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
    protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

void MetricValue::_slow_mutable_start_time() {
  start_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* MetricValue::_slow_release_start_time() {
  if (start_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*start_time_);
    start_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* MetricValue::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValue.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void MetricValue::_slow_set_allocated_start_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** start_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*start_time) == NULL) {
      message_arena->Own(*start_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*start_time)) {
      ::google::protobuf::Timestamp* new_start_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_start_time->CopyFrom(**start_time);
      *start_time = new_start_time;
    }
}
void MetricValue::unsafe_arena_set_allocated_start_time(
    ::google::protobuf::Timestamp* start_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.start_time)
}
void MetricValue::_slow_mutable_end_time() {
  end_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* MetricValue::_slow_release_end_time() {
  if (end_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*end_time_);
    end_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* MetricValue::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValue.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void MetricValue::_slow_set_allocated_end_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** end_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*end_time) == NULL) {
      message_arena->Own(*end_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*end_time)) {
      ::google::protobuf::Timestamp* new_end_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_end_time->CopyFrom(**end_time);
      *end_time = new_end_time;
    }
}
void MetricValue::unsafe_arena_set_allocated_end_time(
    ::google::protobuf::Timestamp* end_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete end_time_;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.end_time)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricValue::kLabelsFieldNumber;
const int MetricValue::kStartTimeFieldNumber;
const int MetricValue::kEndTimeFieldNumber;
const int MetricValue::kBoolValueFieldNumber;
const int MetricValue::kInt64ValueFieldNumber;
const int MetricValue::kDoubleValueFieldNumber;
const int MetricValue::kStringValueFieldNumber;
const int MetricValue::kDistributionValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricValue::MetricValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.MetricValue)
}
MetricValue::MetricValue(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.MetricValue)
}

void MetricValue::InitAsDefaultInstance() {
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  MetricValue_default_oneof_instance_->bool_value_ = false;
  MetricValue_default_oneof_instance_->int64_value_ = GOOGLE_LONGLONG(0);
  MetricValue_default_oneof_instance_->double_value_ = 0;
  MetricValue_default_oneof_instance_->string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  MetricValue_default_oneof_instance_->distribution_value_ = const_cast< ::google::api::servicecontrol::v1::Distribution*>(
      ::google::api::servicecontrol::v1::Distribution::internal_default_instance());
}

MetricValue::MetricValue(const MetricValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.MetricValue)
}

void MetricValue::SharedCtor() {
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &::google::api::servicecontrol::v1::MetricValue_LabelsEntry_descriptor_);
  start_time_ = NULL;
  end_time_ = NULL;
  clear_has_value();
  _cached_size_ = 0;
}

MetricValue::~MetricValue() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.MetricValue)
  SharedDtor();
}

void MetricValue::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (has_value()) {
    clear_value();
  }
  if (this != &MetricValue_default_instance_.get()) {
    delete start_time_;
    delete end_time_;
  }
}

void MetricValue::ArenaDtor(void* object) {
  MetricValue* _this = reinterpret_cast< MetricValue* >(object);
  (void)_this;
}
void MetricValue::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MetricValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetricValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MetricValue_descriptor_;
}

const MetricValue& MetricValue::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MetricValue> MetricValue_default_instance_;

MetricValue* MetricValue::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MetricValue>(arena);
}

void MetricValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicecontrol.v1.MetricValue)
  switch (value_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kDistributionValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.distribution_value_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void MetricValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.MetricValue)
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
  labels_.Clear();
  clear_value();
}

bool MetricValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.MetricValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> labels = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_labels:
          MetricValue_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.MetricValue.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.MetricValue.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_labels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (tag == 18) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 3;
      case 3: {
        if (tag == 26) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bool_value;
        break;
      }

      // optional bool bool_value = 4;
      case 4: {
        if (tag == 32) {
         parse_bool_value:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        goto after_distribution_value;
        break;
      }

      // optional int64 int64_value = 5;
      case 5: {
        if (tag == 40) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        goto after_distribution_value;
        break;
      }

      // optional double double_value = 6;
      case 6: {
        if (tag == 49) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        goto after_distribution_value;
        break;
      }

      // optional string string_value = 7;
      case 7: {
        if (tag == 58) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.MetricValue.string_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_distribution_value;
        break;
      }

      // optional .google.api.servicecontrol.v1.Distribution distribution_value = 8;
      case 8: {
        if (tag == 66) {
         parse_distribution_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_distribution_value()));
        } else {
          goto handle_unusual;
        }
       after_distribution_value:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.MetricValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.MetricValue)
  return false;
#undef DO_
}

void MetricValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.MetricValue)
  // map<string, string> labels = 1;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.MetricValue.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.MetricValue.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MetricValue_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MetricValue_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->end_time_, output);
  }

  // optional bool bool_value = 4;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bool_value(), output);
  }

  // optional int64 int64_value = 5;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->int64_value(), output);
  }

  // optional double double_value = 6;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->double_value(), output);
  }

  // optional string string_value = 7;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.MetricValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->string_value(), output);
  }

  // optional .google.api.servicecontrol.v1.Distribution distribution_value = 8;
  if (has_distribution_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *value_.distribution_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.MetricValue)
}

::google::protobuf::uint8* MetricValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.MetricValue)
  // map<string, string> labels = 1;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.MetricValue.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.MetricValue.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MetricValue_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MetricValue_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->end_time_, false, target);
  }

  // optional bool bool_value = 4;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bool_value(), target);
  }

  // optional int64 int64_value = 5;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->int64_value(), target);
  }

  // optional double double_value = 6;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->double_value(), target);
  }

  // optional string string_value = 7;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.MetricValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->string_value(), target);
  }

  // optional .google.api.servicecontrol.v1.Distribution distribution_value = 8;
  if (has_distribution_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *value_.distribution_value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.MetricValue)
  return target;
}

size_t MetricValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.MetricValue)
  size_t total_size = 0;

  // optional .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  // map<string, string> labels = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<MetricValue_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  switch (value_case()) {
    // optional bool bool_value = 4;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // optional int64 int64_value = 5;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // optional double double_value = 6;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // optional string string_value = 7;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // optional .google.api.servicecontrol.v1.Distribution distribution_value = 8;
    case kDistributionValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.distribution_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetricValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.MetricValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MetricValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.MetricValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.MetricValue)
    UnsafeMergeFrom(*source);
  }
}

void MetricValue::MergeFrom(const MetricValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.MetricValue)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MetricValue::UnsafeMergeFrom(const MetricValue& from) {
  GOOGLE_DCHECK(&from != this);
  labels_.MergeFrom(from.labels_);
  switch (from.value_case()) {
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kDistributionValue: {
      mutable_distribution_value()->::google::api::servicecontrol::v1::Distribution::MergeFrom(from.distribution_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void MetricValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.MetricValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricValue::CopyFrom(const MetricValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.MetricValue)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MetricValue::IsInitialized() const {

  return true;
}

void MetricValue::Swap(MetricValue* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MetricValue temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void MetricValue::UnsafeArenaSwap(MetricValue* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MetricValue::InternalSwap(MetricValue* other) {
  labels_.Swap(&other->labels_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetricValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MetricValue_descriptor_;
  metadata.reflection = MetricValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetricValue

// map<string, string> labels = 1;
int MetricValue::labels_size() const {
  return labels_.size();
}
void MetricValue::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
MetricValue::labels() const {
  // @@protoc_insertion_point(field_map:google.api.servicecontrol.v1.MetricValue.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
MetricValue::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.api.servicecontrol.v1.MetricValue.labels)
  return labels_.MutableMap();
}

// optional .google.protobuf.Timestamp start_time = 2;
bool MetricValue::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void MetricValue::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& MetricValue::start_time() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* MetricValue::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* MetricValue::release_start_time() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.start_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time();
  } else {
    ::google::protobuf::Timestamp* temp = start_time_;
    start_time_ = NULL;
    return temp;
  }
}
 void MetricValue::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_;
  }
  if (start_time != NULL) {
    _slow_set_allocated_start_time(message_arena, &start_time);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.start_time)
}

// optional .google.protobuf.Timestamp end_time = 3;
bool MetricValue::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void MetricValue::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& MetricValue::end_time() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* MetricValue::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* MetricValue::release_end_time() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.end_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_end_time();
  } else {
    ::google::protobuf::Timestamp* temp = end_time_;
    end_time_ = NULL;
    return temp;
  }
}
 void MetricValue::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_time_;
  }
  if (end_time != NULL) {
    _slow_set_allocated_end_time(message_arena, &end_time);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.end_time)
}

// optional bool bool_value = 4;
bool MetricValue::has_bool_value() const {
  return value_case() == kBoolValue;
}
void MetricValue::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
void MetricValue::clear_bool_value() {
  if (has_bool_value()) {
    value_.bool_value_ = false;
    clear_has_value();
  }
}
bool MetricValue::bool_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.bool_value)
  if (has_bool_value()) {
    return value_.bool_value_;
  }
  return false;
}
void MetricValue::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_value();
    set_has_bool_value();
  }
  value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.bool_value)
}

// optional int64 int64_value = 5;
bool MetricValue::has_int64_value() const {
  return value_case() == kInt64Value;
}
void MetricValue::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
void MetricValue::clear_int64_value() {
  if (has_int64_value()) {
    value_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 MetricValue::int64_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.int64_value)
  if (has_int64_value()) {
    return value_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
void MetricValue::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_value();
    set_has_int64_value();
  }
  value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.int64_value)
}

// optional double double_value = 6;
bool MetricValue::has_double_value() const {
  return value_case() == kDoubleValue;
}
void MetricValue::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
void MetricValue::clear_double_value() {
  if (has_double_value()) {
    value_.double_value_ = 0;
    clear_has_value();
  }
}
double MetricValue::double_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.double_value)
  if (has_double_value()) {
    return value_.double_value_;
  }
  return 0;
}
void MetricValue::set_double_value(double value) {
  if (!has_double_value()) {
    clear_value();
    set_has_double_value();
  }
  value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.double_value)
}

// optional string string_value = 7;
bool MetricValue::has_string_value() const {
  return value_case() == kStringValue;
}
void MetricValue::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
void MetricValue::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_value();
  }
}
const ::std::string& MetricValue::string_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.string_value)
  if (has_string_value()) {
    return value_.string_value_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void MetricValue::set_string_value(const ::std::string& value) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.string_value)
}
void MetricValue::set_string_value(const char* value) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.MetricValue.string_value)
}
void MetricValue::set_string_value(const char* value,
                             size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.MetricValue.string_value)
}
::std::string* MetricValue::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return value_.string_value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.string_value)
}
::std::string* MetricValue::release_string_value() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
::std::string* MetricValue::unsafe_arena_release_string_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValue.string_value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
void MetricValue::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.string_value)
}
void MetricValue::unsafe_arena_set_allocated_string_value(::std::string* string_value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value) {
    set_has_string_value();
    value_.string_value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.string_value)
}

// optional .google.api.servicecontrol.v1.Distribution distribution_value = 8;
bool MetricValue::has_distribution_value() const {
  return value_case() == kDistributionValue;
}
void MetricValue::set_has_distribution_value() {
  _oneof_case_[0] = kDistributionValue;
}
void MetricValue::clear_distribution_value() {
  if (has_distribution_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_.distribution_value_;
    }
    clear_has_value();
  }
}
 const ::google::api::servicecontrol::v1::Distribution& MetricValue::distribution_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.distribution_value)
  return has_distribution_value()
      ? *value_.distribution_value_
      : ::google::api::servicecontrol::v1::Distribution::default_instance();
}
::google::api::servicecontrol::v1::Distribution* MetricValue::mutable_distribution_value() {
  if (!has_distribution_value()) {
    clear_value();
    set_has_distribution_value();
    value_.distribution_value_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.distribution_value)
  return value_.distribution_value_;
}
::google::api::servicecontrol::v1::Distribution* MetricValue::release_distribution_value() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.distribution_value)
  if (has_distribution_value()) {
    clear_has_value();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution* temp = new ::google::api::servicecontrol::v1::Distribution(*value_.distribution_value_);
      value_.distribution_value_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution* temp = value_.distribution_value_;
      value_.distribution_value_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
void MetricValue::set_allocated_distribution_value(::google::api::servicecontrol::v1::Distribution* distribution_value) {
  clear_value();
  if (distribution_value) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(distribution_value) == NULL) {
      GetArenaNoVirtual()->Own(distribution_value);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(distribution_value)) {
      ::google::api::servicecontrol::v1::Distribution* new_distribution_value = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution >(
          GetArenaNoVirtual());
      new_distribution_value->CopyFrom(*distribution_value);
      distribution_value = new_distribution_value;
    }
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.distribution_value)
}
 ::google::api::servicecontrol::v1::Distribution* MetricValue::unsafe_arena_release_distribution_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValue.distribution_value)
  if (has_distribution_value()) {
    clear_has_value();
    ::google::api::servicecontrol::v1::Distribution* temp = value_.distribution_value_;
    value_.distribution_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
 void MetricValue::unsafe_arena_set_allocated_distribution_value(::google::api::servicecontrol::v1::Distribution* distribution_value) {
  clear_value();
  if (distribution_value) {
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.distribution_value)
}

bool MetricValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void MetricValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
MetricValue::ValueCase MetricValue::value_case() const {
  return MetricValue::ValueCase(_oneof_case_[0]);
}
inline const MetricValue* MetricValue::internal_default_instance() {
  return &MetricValue_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricValueSet::kMetricNameFieldNumber;
const int MetricValueSet::kMetricValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricValueSet::MetricValueSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.MetricValueSet)
}
MetricValueSet::MetricValueSet(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metric_values_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.MetricValueSet)
}

void MetricValueSet::InitAsDefaultInstance() {
}

MetricValueSet::MetricValueSet(const MetricValueSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.MetricValueSet)
}

void MetricValueSet::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MetricValueSet::~MetricValueSet() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.MetricValueSet)
  SharedDtor();
}

void MetricValueSet::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  metric_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void MetricValueSet::ArenaDtor(void* object) {
  MetricValueSet* _this = reinterpret_cast< MetricValueSet* >(object);
  (void)_this;
}
void MetricValueSet::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MetricValueSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetricValueSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MetricValueSet_descriptor_;
}

const MetricValueSet& MetricValueSet::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MetricValueSet> MetricValueSet_default_instance_;

MetricValueSet* MetricValueSet::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MetricValueSet>(arena);
}

void MetricValueSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.MetricValueSet)
  metric_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  metric_values_.Clear();
}

bool MetricValueSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.MetricValueSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string metric_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), this->metric_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.MetricValueSet.metric_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_metric_values;
        break;
      }

      // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
      case 2: {
        if (tag == 18) {
         parse_metric_values:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metric_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metric_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_metric_values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.MetricValueSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.MetricValueSet)
  return false;
#undef DO_
}

void MetricValueSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.MetricValueSet)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.MetricValueSet.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
  for (unsigned int i = 0, n = this->metric_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->metric_values(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.MetricValueSet)
}

::google::protobuf::uint8* MetricValueSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.MetricValueSet)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.MetricValueSet.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
  for (unsigned int i = 0, n = this->metric_values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->metric_values(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.MetricValueSet)
  return target;
}

size_t MetricValueSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.MetricValueSet)
  size_t total_size = 0;

  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
  {
    unsigned int count = this->metric_values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metric_values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetricValueSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.MetricValueSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MetricValueSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricValueSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.MetricValueSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.MetricValueSet)
    UnsafeMergeFrom(*source);
  }
}

void MetricValueSet::MergeFrom(const MetricValueSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.MetricValueSet)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MetricValueSet::UnsafeMergeFrom(const MetricValueSet& from) {
  GOOGLE_DCHECK(&from != this);
  metric_values_.MergeFrom(from.metric_values_);
  if (from.metric_name().size() > 0) {
    set_metric_name(from.metric_name());
  }
}

void MetricValueSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.MetricValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricValueSet::CopyFrom(const MetricValueSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.MetricValueSet)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MetricValueSet::IsInitialized() const {

  return true;
}

void MetricValueSet::Swap(MetricValueSet* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MetricValueSet temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void MetricValueSet::UnsafeArenaSwap(MetricValueSet* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MetricValueSet::InternalSwap(MetricValueSet* other) {
  metric_name_.Swap(&other->metric_name_);
  metric_values_.UnsafeArenaSwap(&other->metric_values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetricValueSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MetricValueSet_descriptor_;
  metadata.reflection = MetricValueSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetricValueSet

// optional string metric_name = 1;
void MetricValueSet::clear_metric_name() {
  metric_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& MetricValueSet::metric_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  return metric_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MetricValueSet::set_metric_name(const ::std::string& value) {
  
  metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
void MetricValueSet::set_metric_name(const char* value) {
  
  metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
void MetricValueSet::set_metric_name(const char* value,
    size_t size) {
  
  metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
::std::string* MetricValueSet::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  return metric_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MetricValueSet::release_metric_name() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  
  return metric_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* MetricValueSet::unsafe_arena_release_metric_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return metric_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void MetricValueSet::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
void MetricValueSet::unsafe_arena_set_allocated_metric_name(
    ::std::string* metric_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      metric_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}

// repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
int MetricValueSet::metric_values_size() const {
  return metric_values_.size();
}
void MetricValueSet::clear_metric_values() {
  metric_values_.Clear();
}
const ::google::api::servicecontrol::v1::MetricValue& MetricValueSet::metric_values(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_.Get(index);
}
::google::api::servicecontrol::v1::MetricValue* MetricValueSet::mutable_metric_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_.Mutable(index);
}
::google::api::servicecontrol::v1::MetricValue* MetricValueSet::add_metric_values() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValue >*
MetricValueSet::mutable_metric_values() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return &metric_values_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValue >&
MetricValueSet::metric_values() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_;
}

inline const MetricValueSet* MetricValueSet::internal_default_instance() {
  return &MetricValueSet_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
