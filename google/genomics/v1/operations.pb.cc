// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/operations.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/genomics/v1/operations.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace genomics {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* OperationMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperationMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperationEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperationEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fgenomics_2fv1_2foperations_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fgenomics_2fv1_2foperations_2eproto() {
  protobuf_AddDesc_google_2fgenomics_2fv1_2foperations_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/genomics/v1/operations.proto");
  GOOGLE_CHECK(file != NULL);
  OperationMetadata_descriptor_ = file->message_type(0);
  static const int OperationMetadata_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, events_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, runtime_metadata_),
  };
  OperationMetadata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OperationMetadata_descriptor_,
      OperationMetadata::internal_default_instance(),
      OperationMetadata_offsets_,
      -1,
      -1,
      -1,
      sizeof(OperationMetadata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationMetadata, _internal_metadata_));
  OperationEvent_descriptor_ = file->message_type(1);
  static const int OperationEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationEvent, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationEvent, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationEvent, description_),
  };
  OperationEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OperationEvent_descriptor_,
      OperationEvent::internal_default_instance(),
      OperationEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(OperationEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationEvent, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fgenomics_2fv1_2foperations_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OperationMetadata_descriptor_, OperationMetadata::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OperationEvent_descriptor_, OperationEvent::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fgenomics_2fv1_2foperations_2eproto() {
  OperationMetadata_default_instance_.Shutdown();
  delete OperationMetadata_reflection_;
  OperationEvent_default_instance_.Shutdown();
  delete OperationEvent_reflection_;
}

void protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  OperationMetadata_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OperationEvent_default_instance_.DefaultConstruct();
  OperationMetadata_default_instance_.get_mutable()->InitAsDefaultInstance();
  OperationEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto_once_);
void protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto_once_,
                 &protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto_impl);
}
void protobuf_AddDesc_google_2fgenomics_2fv1_2foperations_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#google/genomics/v1/operations.proto\022\022g"
    "oogle.genomics.v1\032\034google/api/annotation"
    "s.proto\032\031google/protobuf/any.proto\032\037goog"
    "le/protobuf/timestamp.proto\"\324\002\n\021Operatio"
    "nMetadata\022\022\n\nproject_id\030\001 \001(\t\022/\n\013create_"
    "time\030\002 \001(\0132\032.google.protobuf.Timestamp\022."
    "\n\nstart_time\030\003 \001(\0132\032.google.protobuf.Tim"
    "estamp\022,\n\010end_time\030\004 \001(\0132\032.google.protob"
    "uf.Timestamp\022%\n\007request\030\005 \001(\0132\024.google.p"
    "rotobuf.Any\0222\n\006events\030\006 \003(\0132\".google.gen"
    "omics.v1.OperationEvent\022\021\n\tclient_id\030\007 \001"
    "(\t\022.\n\020runtime_metadata\030\010 \001(\0132\024.google.pr"
    "otobuf.Any\"\203\001\n\016OperationEvent\022.\n\nstart_t"
    "ime\030\001 \001(\0132\032.google.protobuf.Timestamp\022,\n"
    "\010end_time\030\002 \001(\0132\032.google.protobuf.Timest"
    "amp\022\023\n\013description\030\003 \001(\tBj\n\026com.google.g"
    "enomics.v1B\017OperationsProtoP\001Z:google.go"
    "lang.org/genproto/googleapis/genomics/v1"
    ";genomics\370\001\001b\006proto3", 740);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/genomics/v1/operations.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fgenomics_2fv1_2foperations_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fgenomics_2fv1_2foperations_2eproto_once_);
void protobuf_AddDesc_google_2fgenomics_2fv1_2foperations_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fgenomics_2fv1_2foperations_2eproto_once_,
                 &protobuf_AddDesc_google_2fgenomics_2fv1_2foperations_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fgenomics_2fv1_2foperations_2eproto {
  StaticDescriptorInitializer_google_2fgenomics_2fv1_2foperations_2eproto() {
    protobuf_AddDesc_google_2fgenomics_2fv1_2foperations_2eproto();
  }
} static_descriptor_initializer_google_2fgenomics_2fv1_2foperations_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

void OperationMetadata::_slow_mutable_create_time() {
  create_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* OperationMetadata::_slow_release_create_time() {
  if (create_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*create_time_);
    create_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* OperationMetadata::unsafe_arena_release_create_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void OperationMetadata::_slow_set_allocated_create_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** create_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*create_time) == NULL) {
      message_arena->Own(*create_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*create_time)) {
      ::google::protobuf::Timestamp* new_create_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_create_time->CopyFrom(**create_time);
      *create_time = new_create_time;
    }
}
void OperationMetadata::unsafe_arena_set_allocated_create_time(
    ::google::protobuf::Timestamp* create_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.create_time)
}
void OperationMetadata::_slow_mutable_start_time() {
  start_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* OperationMetadata::_slow_release_start_time() {
  if (start_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*start_time_);
    start_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* OperationMetadata::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void OperationMetadata::_slow_set_allocated_start_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** start_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*start_time) == NULL) {
      message_arena->Own(*start_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*start_time)) {
      ::google::protobuf::Timestamp* new_start_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_start_time->CopyFrom(**start_time);
      *start_time = new_start_time;
    }
}
void OperationMetadata::unsafe_arena_set_allocated_start_time(
    ::google::protobuf::Timestamp* start_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.start_time)
}
void OperationMetadata::_slow_mutable_end_time() {
  end_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* OperationMetadata::_slow_release_end_time() {
  if (end_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*end_time_);
    end_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* OperationMetadata::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void OperationMetadata::_slow_set_allocated_end_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** end_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*end_time) == NULL) {
      message_arena->Own(*end_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*end_time)) {
      ::google::protobuf::Timestamp* new_end_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_end_time->CopyFrom(**end_time);
      *end_time = new_end_time;
    }
}
void OperationMetadata::unsafe_arena_set_allocated_end_time(
    ::google::protobuf::Timestamp* end_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete end_time_;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.end_time)
}
void OperationMetadata::_slow_mutable_request() {
  request_ = ::google::protobuf::Arena::Create< ::google::protobuf::Any >(
      GetArenaNoVirtual());
}
::google::protobuf::Any* OperationMetadata::_slow_release_request() {
  if (request_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Any* temp = new ::google::protobuf::Any(*request_);
    request_ = NULL;
    return temp;
  }
}
::google::protobuf::Any* OperationMetadata::unsafe_arena_release_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.request)
  
  ::google::protobuf::Any* temp = request_;
  request_ = NULL;
  return temp;
}
void OperationMetadata::unsafe_arena_set_allocated_request(
    ::google::protobuf::Any* request) {
  if (GetArenaNoVirtual() == NULL) {
    delete request_;
  }
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.request)
}
void OperationMetadata::_slow_mutable_runtime_metadata() {
  runtime_metadata_ = ::google::protobuf::Arena::Create< ::google::protobuf::Any >(
      GetArenaNoVirtual());
}
::google::protobuf::Any* OperationMetadata::_slow_release_runtime_metadata() {
  if (runtime_metadata_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Any* temp = new ::google::protobuf::Any(*runtime_metadata_);
    runtime_metadata_ = NULL;
    return temp;
  }
}
::google::protobuf::Any* OperationMetadata::unsafe_arena_release_runtime_metadata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.runtime_metadata)
  
  ::google::protobuf::Any* temp = runtime_metadata_;
  runtime_metadata_ = NULL;
  return temp;
}
void OperationMetadata::unsafe_arena_set_allocated_runtime_metadata(
    ::google::protobuf::Any* runtime_metadata) {
  if (GetArenaNoVirtual() == NULL) {
    delete runtime_metadata_;
  }
  runtime_metadata_ = runtime_metadata;
  if (runtime_metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.runtime_metadata)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationMetadata::kProjectIdFieldNumber;
const int OperationMetadata::kCreateTimeFieldNumber;
const int OperationMetadata::kStartTimeFieldNumber;
const int OperationMetadata::kEndTimeFieldNumber;
const int OperationMetadata::kRequestFieldNumber;
const int OperationMetadata::kEventsFieldNumber;
const int OperationMetadata::kClientIdFieldNumber;
const int OperationMetadata::kRuntimeMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationMetadata::OperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.OperationMetadata)
}
OperationMetadata::OperationMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  events_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.OperationMetadata)
}

void OperationMetadata::InitAsDefaultInstance() {
  create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  request_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  runtime_metadata_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

OperationMetadata::OperationMetadata(const OperationMetadata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.OperationMetadata)
}

void OperationMetadata::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_ = NULL;
  start_time_ = NULL;
  end_time_ = NULL;
  request_ = NULL;
  runtime_metadata_ = NULL;
  _cached_size_ = 0;
}

OperationMetadata::~OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.OperationMetadata)
  SharedDtor();
}

void OperationMetadata::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  project_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  client_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &OperationMetadata_default_instance_.get()) {
    delete create_time_;
    delete start_time_;
    delete end_time_;
    delete request_;
    delete runtime_metadata_;
  }
}

void OperationMetadata::ArenaDtor(void* object) {
  OperationMetadata* _this = reinterpret_cast< OperationMetadata* >(object);
  (void)_this;
}
void OperationMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OperationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperationMetadata_descriptor_;
}

const OperationMetadata& OperationMetadata::default_instance() {
  protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OperationMetadata> OperationMetadata_default_instance_;

OperationMetadata* OperationMetadata::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<OperationMetadata>(arena);
}

void OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.OperationMetadata)
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
  client_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && runtime_metadata_ != NULL) delete runtime_metadata_;
  runtime_metadata_ = NULL;
  events_.Clear();
}

bool OperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.OperationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.OperationMetadata.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_create_time;
        break;
      }

      // optional .google.protobuf.Timestamp create_time = 2;
      case 2: {
        if (tag == 18) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 3;
      case 3: {
        if (tag == 26) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 4;
      case 4: {
        if (tag == 34) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_request;
        break;
      }

      // optional .google.protobuf.Any request = 5;
      case 5: {
        if (tag == 42) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_events;
        break;
      }

      // repeated .google.genomics.v1.OperationEvent events = 6;
      case 6: {
        if (tag == 50) {
         parse_events:
          DO_(input->IncrementRecursionDepth());
         parse_loop_events:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_events;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(58)) goto parse_client_id;
        break;
      }

      // optional string client_id = 7;
      case 7: {
        if (tag == 58) {
         parse_client_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), this->client_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.OperationMetadata.client_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_runtime_metadata;
        break;
      }

      // optional .google.protobuf.Any runtime_metadata = 8;
      case 8: {
        if (tag == 66) {
         parse_runtime_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_runtime_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.OperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.OperationMetadata)
  return false;
#undef DO_
}

void OperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.OperationMetadata)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.OperationMetadata.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional .google.protobuf.Timestamp create_time = 2;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->create_time_, output);
  }

  // optional .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->end_time_, output);
  }

  // optional .google.protobuf.Any request = 5;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->request_, output);
  }

  // repeated .google.genomics.v1.OperationEvent events = 6;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->events(i), output);
  }

  // optional string client_id = 7;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), this->client_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.OperationMetadata.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->client_id(), output);
  }

  // optional .google.protobuf.Any runtime_metadata = 8;
  if (this->has_runtime_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->runtime_metadata_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.genomics.v1.OperationMetadata)
}

::google::protobuf::uint8* OperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.OperationMetadata)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.OperationMetadata.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional .google.protobuf.Timestamp create_time = 2;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->create_time_, false, target);
  }

  // optional .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->end_time_, false, target);
  }

  // optional .google.protobuf.Any request = 5;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->request_, false, target);
  }

  // repeated .google.genomics.v1.OperationEvent events = 6;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->events(i), false, target);
  }

  // optional string client_id = 7;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), this->client_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.OperationMetadata.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->client_id(), target);
  }

  // optional .google.protobuf.Any runtime_metadata = 8;
  if (this->has_runtime_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->runtime_metadata_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.OperationMetadata)
  return target;
}

size_t OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.OperationMetadata)
  size_t total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional .google.protobuf.Timestamp create_time = 2;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  // optional .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp end_time = 4;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  // optional .google.protobuf.Any request = 5;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  // optional string client_id = 7;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // optional .google.protobuf.Any runtime_metadata = 8;
  if (this->has_runtime_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->runtime_metadata_);
  }

  // repeated .google.genomics.v1.OperationEvent events = 6;
  {
    unsigned int count = this->events_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->events(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.OperationMetadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.OperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.OperationMetadata)
    UnsafeMergeFrom(*source);
  }
}

void OperationMetadata::MergeFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.OperationMetadata)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OperationMetadata::UnsafeMergeFrom(const OperationMetadata& from) {
  GOOGLE_DCHECK(&from != this);
  events_.MergeFrom(from.events_);
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.has_request()) {
    mutable_request()->::google::protobuf::Any::MergeFrom(from.request());
  }
  if (from.client_id().size() > 0) {
    set_client_id(from.client_id());
  }
  if (from.has_runtime_metadata()) {
    mutable_runtime_metadata()->::google::protobuf::Any::MergeFrom(from.runtime_metadata());
  }
}

void OperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationMetadata::CopyFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OperationMetadata::IsInitialized() const {

  return true;
}

void OperationMetadata::Swap(OperationMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OperationMetadata temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void OperationMetadata::UnsafeArenaSwap(OperationMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OperationMetadata::InternalSwap(OperationMetadata* other) {
  project_id_.Swap(&other->project_id_);
  std::swap(create_time_, other->create_time_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(request_, other->request_);
  events_.UnsafeArenaSwap(&other->events_);
  client_id_.Swap(&other->client_id_);
  std::swap(runtime_metadata_, other->runtime_metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperationMetadata_descriptor_;
  metadata.reflection = OperationMetadata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperationMetadata

// optional string project_id = 1;
void OperationMetadata::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& OperationMetadata::project_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperationMetadata::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.OperationMetadata.project_id)
}
void OperationMetadata::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.OperationMetadata.project_id)
}
void OperationMetadata::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.OperationMetadata.project_id)
}
::std::string* OperationMetadata::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OperationMetadata::release_project_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OperationMetadata::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void OperationMetadata::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.project_id)
}
void OperationMetadata::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.project_id)
}

// optional .google.protobuf.Timestamp create_time = 2;
bool OperationMetadata::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
void OperationMetadata::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& OperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* OperationMetadata::mutable_create_time() {
  
  if (create_time_ == NULL) {
    _slow_mutable_create_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* OperationMetadata::release_create_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.create_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_create_time();
  } else {
    ::google::protobuf::Timestamp* temp = create_time_;
    create_time_ = NULL;
    return temp;
  }
}
 void OperationMetadata::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete create_time_;
  }
  if (create_time != NULL) {
    _slow_set_allocated_create_time(message_arena, &create_time);
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.create_time)
}

// optional .google.protobuf.Timestamp start_time = 3;
bool OperationMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void OperationMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& OperationMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* OperationMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* OperationMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.start_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time();
  } else {
    ::google::protobuf::Timestamp* temp = start_time_;
    start_time_ = NULL;
    return temp;
  }
}
 void OperationMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_;
  }
  if (start_time != NULL) {
    _slow_set_allocated_start_time(message_arena, &start_time);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.start_time)
}

// optional .google.protobuf.Timestamp end_time = 4;
bool OperationMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void OperationMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& OperationMetadata::end_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* OperationMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* OperationMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.end_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_end_time();
  } else {
    ::google::protobuf::Timestamp* temp = end_time_;
    end_time_ = NULL;
    return temp;
  }
}
 void OperationMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_time_;
  }
  if (end_time != NULL) {
    _slow_set_allocated_end_time(message_arena, &end_time);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.end_time)
}

// optional .google.protobuf.Any request = 5;
bool OperationMetadata::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
void OperationMetadata::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
const ::google::protobuf::Any& OperationMetadata::request() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.request)
  return request_ != NULL ? *request_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* OperationMetadata::mutable_request() {
  
  if (request_ == NULL) {
    _slow_mutable_request();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.request)
  return request_;
}
::google::protobuf::Any* OperationMetadata::release_request() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.request)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_request();
  } else {
    ::google::protobuf::Any* temp = request_;
    request_ = NULL;
    return temp;
  }
}
 void OperationMetadata::set_allocated_request(::google::protobuf::Any* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(request);
    }
  }
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.request)
}

// repeated .google.genomics.v1.OperationEvent events = 6;
int OperationMetadata::events_size() const {
  return events_.size();
}
void OperationMetadata::clear_events() {
  events_.Clear();
}
const ::google::genomics::v1::OperationEvent& OperationMetadata::events(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.events)
  return events_.Get(index);
}
::google::genomics::v1::OperationEvent* OperationMetadata::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.events)
  return events_.Mutable(index);
}
::google::genomics::v1::OperationEvent* OperationMetadata::add_events() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.OperationMetadata.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::genomics::v1::OperationEvent >*
OperationMetadata::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.OperationMetadata.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::OperationEvent >&
OperationMetadata::events() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.OperationMetadata.events)
  return events_;
}

// optional string client_id = 7;
void OperationMetadata::clear_client_id() {
  client_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& OperationMetadata::client_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.client_id)
  return client_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperationMetadata::set_client_id(const ::std::string& value) {
  
  client_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.OperationMetadata.client_id)
}
void OperationMetadata::set_client_id(const char* value) {
  
  client_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.OperationMetadata.client_id)
}
void OperationMetadata::set_client_id(const char* value,
    size_t size) {
  
  client_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.OperationMetadata.client_id)
}
::std::string* OperationMetadata::mutable_client_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.client_id)
  return client_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OperationMetadata::release_client_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.client_id)
  
  return client_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OperationMetadata::unsafe_arena_release_client_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.client_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return client_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void OperationMetadata::set_allocated_client_id(::std::string* client_id) {
  if (client_id != NULL) {
    
  } else {
    
  }
  client_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.client_id)
}
void OperationMetadata::unsafe_arena_set_allocated_client_id(
    ::std::string* client_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (client_id != NULL) {
    
  } else {
    
  }
  client_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      client_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.client_id)
}

// optional .google.protobuf.Any runtime_metadata = 8;
bool OperationMetadata::has_runtime_metadata() const {
  return this != internal_default_instance() && runtime_metadata_ != NULL;
}
void OperationMetadata::clear_runtime_metadata() {
  if (GetArenaNoVirtual() == NULL && runtime_metadata_ != NULL) delete runtime_metadata_;
  runtime_metadata_ = NULL;
}
const ::google::protobuf::Any& OperationMetadata::runtime_metadata() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.runtime_metadata)
  return runtime_metadata_ != NULL ? *runtime_metadata_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* OperationMetadata::mutable_runtime_metadata() {
  
  if (runtime_metadata_ == NULL) {
    _slow_mutable_runtime_metadata();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.runtime_metadata)
  return runtime_metadata_;
}
::google::protobuf::Any* OperationMetadata::release_runtime_metadata() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.runtime_metadata)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_runtime_metadata();
  } else {
    ::google::protobuf::Any* temp = runtime_metadata_;
    runtime_metadata_ = NULL;
    return temp;
  }
}
 void OperationMetadata::set_allocated_runtime_metadata(::google::protobuf::Any* runtime_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete runtime_metadata_;
  }
  if (runtime_metadata != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(runtime_metadata);
    }
  }
  runtime_metadata_ = runtime_metadata;
  if (runtime_metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.runtime_metadata)
}

inline const OperationMetadata* OperationMetadata::internal_default_instance() {
  return &OperationMetadata_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void OperationEvent::_slow_mutable_start_time() {
  start_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* OperationEvent::_slow_release_start_time() {
  if (start_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*start_time_);
    start_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* OperationEvent::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationEvent.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void OperationEvent::_slow_set_allocated_start_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** start_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*start_time) == NULL) {
      message_arena->Own(*start_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*start_time)) {
      ::google::protobuf::Timestamp* new_start_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_start_time->CopyFrom(**start_time);
      *start_time = new_start_time;
    }
}
void OperationEvent::unsafe_arena_set_allocated_start_time(
    ::google::protobuf::Timestamp* start_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationEvent.start_time)
}
void OperationEvent::_slow_mutable_end_time() {
  end_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
::google::protobuf::Timestamp* OperationEvent::_slow_release_end_time() {
  if (end_time_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::Timestamp* temp = new ::google::protobuf::Timestamp(*end_time_);
    end_time_ = NULL;
    return temp;
  }
}
::google::protobuf::Timestamp* OperationEvent::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationEvent.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void OperationEvent::_slow_set_allocated_end_time(
    ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** end_time) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*end_time) == NULL) {
      message_arena->Own(*end_time);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*end_time)) {
      ::google::protobuf::Timestamp* new_end_time = 
            ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
            message_arena);
      new_end_time->CopyFrom(**end_time);
      *end_time = new_end_time;
    }
}
void OperationEvent::unsafe_arena_set_allocated_end_time(
    ::google::protobuf::Timestamp* end_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete end_time_;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationEvent.end_time)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationEvent::kStartTimeFieldNumber;
const int OperationEvent::kEndTimeFieldNumber;
const int OperationEvent::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationEvent::OperationEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.OperationEvent)
}
OperationEvent::OperationEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.OperationEvent)
}

void OperationEvent::InitAsDefaultInstance() {
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

OperationEvent::OperationEvent(const OperationEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.OperationEvent)
}

void OperationEvent::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_ = NULL;
  end_time_ = NULL;
  _cached_size_ = 0;
}

OperationEvent::~OperationEvent() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.OperationEvent)
  SharedDtor();
}

void OperationEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  description_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &OperationEvent_default_instance_.get()) {
    delete start_time_;
    delete end_time_;
  }
}

void OperationEvent::ArenaDtor(void* object) {
  OperationEvent* _this = reinterpret_cast< OperationEvent* >(object);
  (void)_this;
}
void OperationEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OperationEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperationEvent_descriptor_;
}

const OperationEvent& OperationEvent::default_instance() {
  protobuf_InitDefaults_google_2fgenomics_2fv1_2foperations_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OperationEvent> OperationEvent_default_instance_;

OperationEvent* OperationEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<OperationEvent>(arena);
}

void OperationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.OperationEvent)
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool OperationEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.OperationEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Timestamp start_time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 2;
      case 2: {
        if (tag == 18) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.OperationEvent.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.OperationEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.OperationEvent)
  return false;
#undef DO_
}

void OperationEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.OperationEvent)
  // optional .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->end_time_, output);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.OperationEvent.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.genomics.v1.OperationEvent)
}

::google::protobuf::uint8* OperationEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.OperationEvent)
  // optional .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->end_time_, false, target);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.OperationEvent.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.OperationEvent)
  return target;
}

size_t OperationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.OperationEvent)
  size_t total_size = 0;

  // optional .google.protobuf.Timestamp start_time = 1;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp end_time = 2;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.OperationEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OperationEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.OperationEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.OperationEvent)
    UnsafeMergeFrom(*source);
  }
}

void OperationEvent::MergeFrom(const OperationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.OperationEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OperationEvent::UnsafeMergeFrom(const OperationEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
}

void OperationEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.OperationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationEvent::CopyFrom(const OperationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.OperationEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OperationEvent::IsInitialized() const {

  return true;
}

void OperationEvent::Swap(OperationEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OperationEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void OperationEvent::UnsafeArenaSwap(OperationEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OperationEvent::InternalSwap(OperationEvent* other) {
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperationEvent_descriptor_;
  metadata.reflection = OperationEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperationEvent

// optional .google.protobuf.Timestamp start_time = 1;
bool OperationEvent::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void OperationEvent::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& OperationEvent::start_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationEvent.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* OperationEvent::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationEvent.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* OperationEvent::release_start_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationEvent.start_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time();
  } else {
    ::google::protobuf::Timestamp* temp = start_time_;
    start_time_ = NULL;
    return temp;
  }
}
 void OperationEvent::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_;
  }
  if (start_time != NULL) {
    _slow_set_allocated_start_time(message_arena, &start_time);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationEvent.start_time)
}

// optional .google.protobuf.Timestamp end_time = 2;
bool OperationEvent::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void OperationEvent::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& OperationEvent::end_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationEvent.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* OperationEvent::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationEvent.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* OperationEvent::release_end_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationEvent.end_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_end_time();
  } else {
    ::google::protobuf::Timestamp* temp = end_time_;
    end_time_ = NULL;
    return temp;
  }
}
 void OperationEvent::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_time_;
  }
  if (end_time != NULL) {
    _slow_set_allocated_end_time(message_arena, &end_time);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationEvent.end_time)
}

// optional string description = 3;
void OperationEvent::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& OperationEvent::description() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationEvent.description)
  return description_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperationEvent::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.OperationEvent.description)
}
void OperationEvent::set_description(const char* value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.OperationEvent.description)
}
void OperationEvent::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.OperationEvent.description)
}
::std::string* OperationEvent::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationEvent.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OperationEvent::release_description() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationEvent.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* OperationEvent::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationEvent.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void OperationEvent::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationEvent.description)
}
void OperationEvent::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationEvent.description)
}

inline const OperationEvent* OperationEvent::internal_default_instance() {
  return &OperationEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace genomics
}  // namespace google

// @@protoc_insertion_point(global_scope)
