// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/clouderrorreporting/v1beta1/error_stats_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

namespace {

const ::google::protobuf::Descriptor* ListGroupStatsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListGroupStatsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListGroupStatsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListGroupStatsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorGroupStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorGroupStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* TimedCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimedCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListEventsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListEventsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListEventsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListEventsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryTimeRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryTimeRange_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* QueryTimeRange_Period_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ServiceContextFilter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceContextFilter_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteEventsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteEventsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteEventsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteEventsResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TimedCountAlignment_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorGroupOrder_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto() {
  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto");
  GOOGLE_CHECK(file != NULL);
  ListGroupStatsRequest_descriptor_ = file->message_type(0);
  static const int ListGroupStatsRequest_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, project_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, service_filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, time_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, timed_count_duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, alignment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, alignment_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, page_token_),
  };
  ListGroupStatsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListGroupStatsRequest_descriptor_,
      ListGroupStatsRequest::internal_default_instance(),
      ListGroupStatsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListGroupStatsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsRequest, _internal_metadata_));
  ListGroupStatsResponse_descriptor_ = file->message_type(1);
  static const int ListGroupStatsResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsResponse, error_group_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsResponse, next_page_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsResponse, time_range_begin_),
  };
  ListGroupStatsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListGroupStatsResponse_descriptor_,
      ListGroupStatsResponse::internal_default_instance(),
      ListGroupStatsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListGroupStatsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupStatsResponse, _internal_metadata_));
  ErrorGroupStats_descriptor_ = file->message_type(2);
  static const int ErrorGroupStats_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, affected_users_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, timed_counts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, first_seen_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, last_seen_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, affected_services_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, num_affected_services_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, representative_),
  };
  ErrorGroupStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorGroupStats_descriptor_,
      ErrorGroupStats::internal_default_instance(),
      ErrorGroupStats_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorGroupStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorGroupStats, _internal_metadata_));
  TimedCount_descriptor_ = file->message_type(3);
  static const int TimedCount_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedCount, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedCount, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedCount, end_time_),
  };
  TimedCount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimedCount_descriptor_,
      TimedCount::internal_default_instance(),
      TimedCount_offsets_,
      -1,
      -1,
      -1,
      sizeof(TimedCount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimedCount, _internal_metadata_));
  ListEventsRequest_descriptor_ = file->message_type(4);
  static const int ListEventsRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsRequest, project_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsRequest, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsRequest, service_filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsRequest, time_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsRequest, page_token_),
  };
  ListEventsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListEventsRequest_descriptor_,
      ListEventsRequest::internal_default_instance(),
      ListEventsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListEventsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsRequest, _internal_metadata_));
  ListEventsResponse_descriptor_ = file->message_type(5);
  static const int ListEventsResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsResponse, error_events_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsResponse, next_page_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsResponse, time_range_begin_),
  };
  ListEventsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListEventsResponse_descriptor_,
      ListEventsResponse::internal_default_instance(),
      ListEventsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListEventsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEventsResponse, _internal_metadata_));
  QueryTimeRange_descriptor_ = file->message_type(6);
  static const int QueryTimeRange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeRange, period_),
  };
  QueryTimeRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryTimeRange_descriptor_,
      QueryTimeRange::internal_default_instance(),
      QueryTimeRange_offsets_,
      -1,
      -1,
      -1,
      sizeof(QueryTimeRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryTimeRange, _internal_metadata_));
  QueryTimeRange_Period_descriptor_ = QueryTimeRange_descriptor_->enum_type(0);
  ServiceContextFilter_descriptor_ = file->message_type(7);
  static const int ServiceContextFilter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContextFilter, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContextFilter, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContextFilter, resource_type_),
  };
  ServiceContextFilter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceContextFilter_descriptor_,
      ServiceContextFilter::internal_default_instance(),
      ServiceContextFilter_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceContextFilter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceContextFilter, _internal_metadata_));
  DeleteEventsRequest_descriptor_ = file->message_type(8);
  static const int DeleteEventsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteEventsRequest, project_name_),
  };
  DeleteEventsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteEventsRequest_descriptor_,
      DeleteEventsRequest::internal_default_instance(),
      DeleteEventsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteEventsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteEventsRequest, _internal_metadata_));
  DeleteEventsResponse_descriptor_ = file->message_type(9);
  static const int DeleteEventsResponse_offsets_[1] = {
  };
  DeleteEventsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteEventsResponse_descriptor_,
      DeleteEventsResponse::internal_default_instance(),
      DeleteEventsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteEventsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteEventsResponse, _internal_metadata_));
  TimedCountAlignment_descriptor_ = file->enum_type(0);
  ErrorGroupOrder_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListGroupStatsRequest_descriptor_, ListGroupStatsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListGroupStatsResponse_descriptor_, ListGroupStatsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorGroupStats_descriptor_, ErrorGroupStats::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimedCount_descriptor_, TimedCount::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListEventsRequest_descriptor_, ListEventsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListEventsResponse_descriptor_, ListEventsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryTimeRange_descriptor_, QueryTimeRange::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceContextFilter_descriptor_, ServiceContextFilter::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteEventsRequest_descriptor_, DeleteEventsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteEventsResponse_descriptor_, DeleteEventsResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto() {
  ListGroupStatsRequest_default_instance_.Shutdown();
  delete ListGroupStatsRequest_reflection_;
  ListGroupStatsResponse_default_instance_.Shutdown();
  delete ListGroupStatsResponse_reflection_;
  ErrorGroupStats_default_instance_.Shutdown();
  delete ErrorGroupStats_reflection_;
  TimedCount_default_instance_.Shutdown();
  delete TimedCount_reflection_;
  ListEventsRequest_default_instance_.Shutdown();
  delete ListEventsRequest_reflection_;
  ListEventsResponse_default_instance_.Shutdown();
  delete ListEventsResponse_reflection_;
  QueryTimeRange_default_instance_.Shutdown();
  delete QueryTimeRange_reflection_;
  ServiceContextFilter_default_instance_.Shutdown();
  delete ServiceContextFilter_reflection_;
  DeleteEventsRequest_default_instance_.Shutdown();
  delete DeleteEventsRequest_reflection_;
  DeleteEventsResponse_default_instance_.Shutdown();
  delete DeleteEventsResponse_reflection_;
}

void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::devtools::clouderrorreporting::v1beta1::protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ListGroupStatsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListGroupStatsResponse_default_instance_.DefaultConstruct();
  ErrorGroupStats_default_instance_.DefaultConstruct();
  TimedCount_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListEventsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListEventsResponse_default_instance_.DefaultConstruct();
  QueryTimeRange_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ServiceContextFilter_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeleteEventsRequest_default_instance_.DefaultConstruct();
  DeleteEventsResponse_default_instance_.DefaultConstruct();
  ListGroupStatsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListGroupStatsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorGroupStats_default_instance_.get_mutable()->InitAsDefaultInstance();
  TimedCount_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListEventsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListEventsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryTimeRange_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServiceContextFilter_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteEventsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteEventsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_once_);
void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_once_,
                 &protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl);
}
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nEgoogle/devtools/clouderrorreporting/v1"
    "beta1/error_stats_service.proto\022+google."
    "devtools.clouderrorreporting.v1beta1\032\034go"
    "ogle/api/annotations.proto\0328google/devto"
    "ols/clouderrorreporting/v1beta1/common.p"
    "roto\032\036google/protobuf/duration.proto\032\037go"
    "ogle/protobuf/timestamp.proto\"\241\004\n\025ListGr"
    "oupStatsRequest\022\024\n\014project_name\030\001 \001(\t\022\020\n"
    "\010group_id\030\002 \003(\t\022Y\n\016service_filter\030\003 \001(\0132"
    "A.google.devtools.clouderrorreporting.v1"
    "beta1.ServiceContextFilter\022O\n\ntime_range"
    "\030\005 \001(\0132;.google.devtools.clouderrorrepor"
    "ting.v1beta1.QueryTimeRange\0227\n\024timed_cou"
    "nt_duration\030\006 \001(\0132\031.google.protobuf.Dura"
    "tion\022S\n\talignment\030\007 \001(\0162@.google.devtool"
    "s.clouderrorreporting.v1beta1.TimedCount"
    "Alignment\0222\n\016alignment_time\030\010 \001(\0132\032.goog"
    "le.protobuf.Timestamp\022K\n\005order\030\t \001(\0162<.g"
    "oogle.devtools.clouderrorreporting.v1bet"
    "a1.ErrorGroupOrder\022\021\n\tpage_size\030\013 \001(\005\022\022\n"
    "\npage_token\030\014 \001(\t\"\300\001\n\026ListGroupStatsResp"
    "onse\022W\n\021error_group_stats\030\001 \003(\0132<.google"
    ".devtools.clouderrorreporting.v1beta1.Er"
    "rorGroupStats\022\027\n\017next_page_token\030\002 \001(\t\0224"
    "\n\020time_range_begin\030\004 \001(\0132\032.google.protob"
    "uf.Timestamp\"\206\004\n\017ErrorGroupStats\022F\n\005grou"
    "p\030\001 \001(\01327.google.devtools.clouderrorrepo"
    "rting.v1beta1.ErrorGroup\022\r\n\005count\030\002 \001(\003\022"
    "\034\n\024affected_users_count\030\003 \001(\003\022M\n\014timed_c"
    "ounts\030\004 \003(\01327.google.devtools.clouderror"
    "reporting.v1beta1.TimedCount\0223\n\017first_se"
    "en_time\030\005 \001(\0132\032.google.protobuf.Timestam"
    "p\0222\n\016last_seen_time\030\006 \001(\0132\032.google.proto"
    "buf.Timestamp\022V\n\021affected_services\030\007 \003(\013"
    "2;.google.devtools.clouderrorreporting.v"
    "1beta1.ServiceContext\022\035\n\025num_affected_se"
    "rvices\030\010 \001(\005\022O\n\016representative\030\t \001(\01327.g"
    "oogle.devtools.clouderrorreporting.v1bet"
    "a1.ErrorEvent\"y\n\nTimedCount\022\r\n\005count\030\001 \001"
    "(\003\022.\n\nstart_time\030\002 \001(\0132\032.google.protobuf"
    ".Timestamp\022,\n\010end_time\030\003 \001(\0132\032.google.pr"
    "otobuf.Timestamp\"\216\002\n\021ListEventsRequest\022\024"
    "\n\014project_name\030\001 \001(\t\022\020\n\010group_id\030\002 \001(\t\022Y"
    "\n\016service_filter\030\003 \001(\0132A.google.devtools"
    ".clouderrorreporting.v1beta1.ServiceCont"
    "extFilter\022O\n\ntime_range\030\004 \001(\0132;.google.d"
    "evtools.clouderrorreporting.v1beta1.Quer"
    "yTimeRange\022\021\n\tpage_size\030\006 \001(\005\022\022\n\npage_to"
    "ken\030\007 \001(\t\"\262\001\n\022ListEventsResponse\022M\n\014erro"
    "r_events\030\001 \003(\01327.google.devtools.clouder"
    "rorreporting.v1beta1.ErrorEvent\022\027\n\017next_"
    "page_token\030\002 \001(\t\0224\n\020time_range_begin\030\004 \001"
    "(\0132\032.google.protobuf.Timestamp\"\347\001\n\016Query"
    "TimeRange\022R\n\006period\030\001 \001(\0162B.google.devto"
    "ols.clouderrorreporting.v1beta1.QueryTim"
    "eRange.Period\"\200\001\n\006Period\022\026\n\022PERIOD_UNSPE"
    "CIFIED\020\000\022\021\n\rPERIOD_1_HOUR\020\001\022\022\n\016PERIOD_6_"
    "HOURS\020\002\022\020\n\014PERIOD_1_DAY\020\003\022\021\n\rPERIOD_1_WE"
    "EK\020\004\022\022\n\016PERIOD_30_DAYS\020\005\"O\n\024ServiceConte"
    "xtFilter\022\017\n\007service\030\002 \001(\t\022\017\n\007version\030\003 \001"
    "(\t\022\025\n\rresource_type\030\004 \001(\t\"+\n\023DeleteEvent"
    "sRequest\022\024\n\014project_name\030\001 \001(\t\"\026\n\024Delete"
    "EventsResponse*u\n\023TimedCountAlignment\022%\n"
    "!ERROR_COUNT_ALIGNMENT_UNSPECIFIED\020\000\022\033\n\027"
    "ALIGNMENT_EQUAL_ROUNDED\020\001\022\032\n\026ALIGNMENT_E"
    "QUAL_AT_END\020\002*}\n\017ErrorGroupOrder\022\033\n\027GROU"
    "P_ORDER_UNSPECIFIED\020\000\022\016\n\nCOUNT_DESC\020\001\022\022\n"
    "\016LAST_SEEN_DESC\020\002\022\020\n\014CREATED_DESC\020\003\022\027\n\023A"
    "FFECTED_USERS_DESC\020\0042\362\004\n\021ErrorStatsServi"
    "ce\022\320\001\n\016ListGroupStats\022B.google.devtools."
    "clouderrorreporting.v1beta1.ListGroupSta"
    "tsRequest\032C.google.devtools.clouderrorre"
    "porting.v1beta1.ListGroupStatsResponse\"5"
    "\202\323\344\223\002/\022-/v1beta1/{project_name=projects/"
    "*}/groupStats\022\300\001\n\nListEvents\022>.google.de"
    "vtools.clouderrorreporting.v1beta1.ListE"
    "ventsRequest\032\?.google.devtools.clouderro"
    "rreporting.v1beta1.ListEventsResponse\"1\202"
    "\323\344\223\002+\022)/v1beta1/{project_name=projects/*"
    "}/events\022\306\001\n\014DeleteEvents\022@.google.devto"
    "ols.clouderrorreporting.v1beta1.DeleteEv"
    "entsRequest\032A.google.devtools.clouderror"
    "reporting.v1beta1.DeleteEventsResponse\"1"
    "\202\323\344\223\002+*)/v1beta1/{project_name=projects/"
    "*}/eventsB\321\001\n/com.google.devtools.cloude"
    "rrorreporting.v1beta1B\026ErrorStatsService"
    "ProtoP\001Z^google.golang.org/genproto/goog"
    "leapis/devtools/clouderrorreporting/v1be"
    "ta1;clouderrorreporting\252\002#Google.Cloud.E"
    "rrorReporting.V1Beta1b\006proto3", 3589);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::devtools::clouderrorreporting::v1beta1::protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_once_);
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_once_,
                 &protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto {
  StaticDescriptorInitializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto() {
    protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  }
} static_descriptor_initializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_;
const ::google::protobuf::EnumDescriptor* TimedCountAlignment_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimedCountAlignment_descriptor_;
}
bool TimedCountAlignment_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ErrorGroupOrder_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorGroupOrder_descriptor_;
}
bool ErrorGroupOrder_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupStatsRequest::kProjectNameFieldNumber;
const int ListGroupStatsRequest::kGroupIdFieldNumber;
const int ListGroupStatsRequest::kServiceFilterFieldNumber;
const int ListGroupStatsRequest::kTimeRangeFieldNumber;
const int ListGroupStatsRequest::kTimedCountDurationFieldNumber;
const int ListGroupStatsRequest::kAlignmentFieldNumber;
const int ListGroupStatsRequest::kAlignmentTimeFieldNumber;
const int ListGroupStatsRequest::kOrderFieldNumber;
const int ListGroupStatsRequest::kPageSizeFieldNumber;
const int ListGroupStatsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupStatsRequest::ListGroupStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
}

void ListGroupStatsRequest::InitAsDefaultInstance() {
  service_filter_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter*>(
      ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance());
  time_range_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange*>(
      ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance());
  timed_count_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  alignment_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

ListGroupStatsRequest::ListGroupStatsRequest(const ListGroupStatsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
}

void ListGroupStatsRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_filter_ = NULL;
  time_range_ = NULL;
  timed_count_duration_ = NULL;
  alignment_time_ = NULL;
  ::memset(&alignment_, 0, reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&alignment_) + sizeof(page_size_));
  _cached_size_ = 0;
}

ListGroupStatsRequest::~ListGroupStatsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  SharedDtor();
}

void ListGroupStatsRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ListGroupStatsRequest_default_instance_.get()) {
    delete service_filter_;
    delete time_range_;
    delete timed_count_duration_;
    delete alignment_time_;
  }
}

void ListGroupStatsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupStatsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListGroupStatsRequest_descriptor_;
}

const ListGroupStatsRequest& ListGroupStatsRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListGroupStatsRequest> ListGroupStatsRequest_default_instance_;

ListGroupStatsRequest* ListGroupStatsRequest::New(::google::protobuf::Arena* arena) const {
  ListGroupStatsRequest* n = new ListGroupStatsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ListGroupStatsRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ListGroupStatsRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(alignment_, order_);
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) delete service_filter_;
  service_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) delete time_range_;
  time_range_ = NULL;
  if (GetArenaNoVirtual() == NULL && timed_count_duration_ != NULL) delete timed_count_duration_;
  timed_count_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && alignment_time_ != NULL) delete alignment_time_;
  alignment_time_ = NULL;
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  group_id_.Clear();
}

bool ListGroupStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), this->project_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // repeated string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id(this->group_id_size() - 1).data(),
            this->group_id(this->group_id_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        if (input->ExpectTag(26)) goto parse_service_filter;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
      case 3: {
        if (tag == 26) {
         parse_service_filter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_service_filter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_time_range;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
      case 5: {
        if (tag == 42) {
         parse_time_range:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_timed_count_duration;
        break;
      }

      // optional .google.protobuf.Duration timed_count_duration = 6;
      case 6: {
        if (tag == 50) {
         parse_timed_count_duration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timed_count_duration()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_alignment;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
      case 7: {
        if (tag == 56) {
         parse_alignment:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_alignment(static_cast< ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_alignment_time;
        break;
      }

      // optional .google.protobuf.Timestamp alignment_time = 8;
      case 8: {
        if (tag == 66) {
         parse_alignment_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alignment_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_order;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
      case 9: {
        if (tag == 72) {
         parse_order:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_order(static_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 11;
      case 11: {
        if (tag == 88) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_page_token;
        break;
      }

      // optional string page_token = 12;
      case 12: {
        if (tag == 98) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  return false;
#undef DO_
}

void ListGroupStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  // repeated string group_id = 2;
  for (int i = 0; i < this->group_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id(i).data(), this->group_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->group_id(i), output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->service_filter_, output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
  if (this->has_time_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->time_range_, output);
  }

  // optional .google.protobuf.Duration timed_count_duration = 6;
  if (this->has_timed_count_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->timed_count_duration_, output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
  if (this->alignment() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->alignment(), output);
  }

  // optional .google.protobuf.Timestamp alignment_time = 8;
  if (this->has_alignment_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->alignment_time_, output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
  if (this->order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->order(), output);
  }

  // optional int32 page_size = 11;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->page_size(), output);
  }

  // optional string page_token = 12;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
}

::google::protobuf::uint8* ListGroupStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  // repeated string group_id = 2;
  for (int i = 0; i < this->group_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id(i).data(), this->group_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->group_id(i), target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->service_filter_, false, target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
  if (this->has_time_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->time_range_, false, target);
  }

  // optional .google.protobuf.Duration timed_count_duration = 6;
  if (this->has_timed_count_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->timed_count_duration_, false, target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
  if (this->alignment() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->alignment(), target);
  }

  // optional .google.protobuf.Timestamp alignment_time = 8;
  if (this->has_alignment_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->alignment_time_, false, target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
  if (this->order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->order(), target);
  }

  // optional int32 page_size = 11;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->page_size(), target);
  }

  // optional string page_token = 12;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  return target;
}

size_t ListGroupStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  size_t total_size = 0;

  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->service_filter_);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
  if (this->has_time_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_range_);
  }

  // optional .google.protobuf.Duration timed_count_duration = 6;
  if (this->has_timed_count_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timed_count_duration_);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
  if (this->alignment() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->alignment());
  }

  // optional .google.protobuf.Timestamp alignment_time = 8;
  if (this->has_alignment_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->alignment_time_);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
  if (this->order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->order());
  }

  // optional int32 page_size = 11;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 12;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // repeated string group_id = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_id_size());
  for (int i = 0; i < this->group_id_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_id(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListGroupStatsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListGroupStatsRequest::MergeFrom(const ListGroupStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListGroupStatsRequest::UnsafeMergeFrom(const ListGroupStatsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  group_id_.UnsafeMergeFrom(from.group_id_);
  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.has_service_filter()) {
    mutable_service_filter()->::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::MergeFrom(from.service_filter());
  }
  if (from.has_time_range()) {
    mutable_time_range()->::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::MergeFrom(from.time_range());
  }
  if (from.has_timed_count_duration()) {
    mutable_timed_count_duration()->::google::protobuf::Duration::MergeFrom(from.timed_count_duration());
  }
  if (from.alignment() != 0) {
    set_alignment(from.alignment());
  }
  if (from.has_alignment_time()) {
    mutable_alignment_time()->::google::protobuf::Timestamp::MergeFrom(from.alignment_time());
  }
  if (from.order() != 0) {
    set_order(from.order());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListGroupStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupStatsRequest::CopyFrom(const ListGroupStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListGroupStatsRequest::IsInitialized() const {

  return true;
}

void ListGroupStatsRequest::Swap(ListGroupStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupStatsRequest::InternalSwap(ListGroupStatsRequest* other) {
  project_name_.Swap(&other->project_name_);
  group_id_.UnsafeArenaSwap(&other->group_id_);
  std::swap(service_filter_, other->service_filter_);
  std::swap(time_range_, other->time_range_);
  std::swap(timed_count_duration_, other->timed_count_duration_);
  std::swap(alignment_, other->alignment_);
  std::swap(alignment_time_, other->alignment_time_);
  std::swap(order_, other->order_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupStatsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListGroupStatsRequest_descriptor_;
  metadata.reflection = ListGroupStatsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGroupStatsRequest

// optional string project_name = 1;
void ListGroupStatsRequest::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupStatsRequest::project_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
  return project_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupStatsRequest::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}
void ListGroupStatsRequest::set_project_name(const char* value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}
void ListGroupStatsRequest::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}
::std::string* ListGroupStatsRequest::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupStatsRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupStatsRequest::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}

// repeated string group_id = 2;
int ListGroupStatsRequest::group_id_size() const {
  return group_id_.size();
}
void ListGroupStatsRequest::clear_group_id() {
  group_id_.Clear();
}
const ::std::string& ListGroupStatsRequest::group_id(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_.Get(index);
}
::std::string* ListGroupStatsRequest::mutable_group_id(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_.Mutable(index);
}
void ListGroupStatsRequest::set_group_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  group_id_.Mutable(index)->assign(value);
}
void ListGroupStatsRequest::set_group_id(int index, const char* value) {
  group_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
void ListGroupStatsRequest::set_group_id(int index, const char* value, size_t size) {
  group_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
::std::string* ListGroupStatsRequest::add_group_id() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_.Add();
}
void ListGroupStatsRequest::add_group_id(const ::std::string& value) {
  group_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
void ListGroupStatsRequest::add_group_id(const char* value) {
  group_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
void ListGroupStatsRequest::add_group_id(const char* value, size_t size) {
  group_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListGroupStatsRequest::group_id() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListGroupStatsRequest::mutable_group_id() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return &group_id_;
}

// optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
bool ListGroupStatsRequest::has_service_filter() const {
  return this != internal_default_instance() && service_filter_ != NULL;
}
void ListGroupStatsRequest::clear_service_filter() {
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) delete service_filter_;
  service_filter_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter& ListGroupStatsRequest::service_filter() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
  return service_filter_ != NULL ? *service_filter_
                         : *::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListGroupStatsRequest::mutable_service_filter() {
  
  if (service_filter_ == NULL) {
    service_filter_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
  return service_filter_;
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListGroupStatsRequest::release_service_filter() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
  
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* temp = service_filter_;
  service_filter_ = NULL;
  return temp;
}
void ListGroupStatsRequest::set_allocated_service_filter(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter) {
  delete service_filter_;
  service_filter_ = service_filter;
  if (service_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
}

// optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
bool ListGroupStatsRequest::has_time_range() const {
  return this != internal_default_instance() && time_range_ != NULL;
}
void ListGroupStatsRequest::clear_time_range() {
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) delete time_range_;
  time_range_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange& ListGroupStatsRequest::time_range() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
  return time_range_ != NULL ? *time_range_
                         : *::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListGroupStatsRequest::mutable_time_range() {
  
  if (time_range_ == NULL) {
    time_range_ = new ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
  return time_range_;
}
::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListGroupStatsRequest::release_time_range() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
  
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* temp = time_range_;
  time_range_ = NULL;
  return temp;
}
void ListGroupStatsRequest::set_allocated_time_range(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range) {
  delete time_range_;
  time_range_ = time_range;
  if (time_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
}

// optional .google.protobuf.Duration timed_count_duration = 6;
bool ListGroupStatsRequest::has_timed_count_duration() const {
  return this != internal_default_instance() && timed_count_duration_ != NULL;
}
void ListGroupStatsRequest::clear_timed_count_duration() {
  if (GetArenaNoVirtual() == NULL && timed_count_duration_ != NULL) delete timed_count_duration_;
  timed_count_duration_ = NULL;
}
const ::google::protobuf::Duration& ListGroupStatsRequest::timed_count_duration() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
  return timed_count_duration_ != NULL ? *timed_count_duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* ListGroupStatsRequest::mutable_timed_count_duration() {
  
  if (timed_count_duration_ == NULL) {
    timed_count_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
  return timed_count_duration_;
}
::google::protobuf::Duration* ListGroupStatsRequest::release_timed_count_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
  
  ::google::protobuf::Duration* temp = timed_count_duration_;
  timed_count_duration_ = NULL;
  return temp;
}
void ListGroupStatsRequest::set_allocated_timed_count_duration(::google::protobuf::Duration* timed_count_duration) {
  delete timed_count_duration_;
  if (timed_count_duration != NULL && timed_count_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_timed_count_duration = new ::google::protobuf::Duration;
    new_timed_count_duration->CopyFrom(*timed_count_duration);
    timed_count_duration = new_timed_count_duration;
  }
  timed_count_duration_ = timed_count_duration;
  if (timed_count_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
}

// optional .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
void ListGroupStatsRequest::clear_alignment() {
  alignment_ = 0;
}
::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment ListGroupStatsRequest::alignment() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment)
  return static_cast< ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment >(alignment_);
}
void ListGroupStatsRequest::set_alignment(::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment value) {
  
  alignment_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment)
}

// optional .google.protobuf.Timestamp alignment_time = 8;
bool ListGroupStatsRequest::has_alignment_time() const {
  return this != internal_default_instance() && alignment_time_ != NULL;
}
void ListGroupStatsRequest::clear_alignment_time() {
  if (GetArenaNoVirtual() == NULL && alignment_time_ != NULL) delete alignment_time_;
  alignment_time_ = NULL;
}
const ::google::protobuf::Timestamp& ListGroupStatsRequest::alignment_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
  return alignment_time_ != NULL ? *alignment_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ListGroupStatsRequest::mutable_alignment_time() {
  
  if (alignment_time_ == NULL) {
    alignment_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
  return alignment_time_;
}
::google::protobuf::Timestamp* ListGroupStatsRequest::release_alignment_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
  
  ::google::protobuf::Timestamp* temp = alignment_time_;
  alignment_time_ = NULL;
  return temp;
}
void ListGroupStatsRequest::set_allocated_alignment_time(::google::protobuf::Timestamp* alignment_time) {
  delete alignment_time_;
  if (alignment_time != NULL && alignment_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_alignment_time = new ::google::protobuf::Timestamp;
    new_alignment_time->CopyFrom(*alignment_time);
    alignment_time = new_alignment_time;
  }
  alignment_time_ = alignment_time;
  if (alignment_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
void ListGroupStatsRequest::clear_order() {
  order_ = 0;
}
::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder ListGroupStatsRequest::order() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.order)
  return static_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder >(order_);
}
void ListGroupStatsRequest::set_order(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder value) {
  
  order_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.order)
}

// optional int32 page_size = 11;
void ListGroupStatsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListGroupStatsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_size)
  return page_size_;
}
void ListGroupStatsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_size)
}

// optional string page_token = 12;
void ListGroupStatsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupStatsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupStatsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}
void ListGroupStatsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}
void ListGroupStatsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}
::std::string* ListGroupStatsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupStatsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupStatsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}

inline const ListGroupStatsRequest* ListGroupStatsRequest::internal_default_instance() {
  return &ListGroupStatsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupStatsResponse::kErrorGroupStatsFieldNumber;
const int ListGroupStatsResponse::kNextPageTokenFieldNumber;
const int ListGroupStatsResponse::kTimeRangeBeginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupStatsResponse::ListGroupStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
}

void ListGroupStatsResponse::InitAsDefaultInstance() {
  time_range_begin_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

ListGroupStatsResponse::ListGroupStatsResponse(const ListGroupStatsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
}

void ListGroupStatsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_range_begin_ = NULL;
  _cached_size_ = 0;
}

ListGroupStatsResponse::~ListGroupStatsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  SharedDtor();
}

void ListGroupStatsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ListGroupStatsResponse_default_instance_.get()) {
    delete time_range_begin_;
  }
}

void ListGroupStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupStatsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListGroupStatsResponse_descriptor_;
}

const ListGroupStatsResponse& ListGroupStatsResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListGroupStatsResponse> ListGroupStatsResponse_default_instance_;

ListGroupStatsResponse* ListGroupStatsResponse::New(::google::protobuf::Arena* arena) const {
  ListGroupStatsResponse* n = new ListGroupStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) delete time_range_begin_;
  time_range_begin_ = NULL;
  error_group_stats_.Clear();
}

bool ListGroupStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_error_group_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_error_group_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_error_group_stats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_time_range_begin;
        break;
      }

      // optional .google.protobuf.Timestamp time_range_begin = 4;
      case 4: {
        if (tag == 34) {
         parse_time_range_begin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time_range_begin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  return false;
#undef DO_
}

void ListGroupStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
  for (unsigned int i = 0, n = this->error_group_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->error_group_stats(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->time_range_begin_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
}

::google::protobuf::uint8* ListGroupStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
  for (unsigned int i = 0, n = this->error_group_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->error_group_stats(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->time_range_begin_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  return target;
}

size_t ListGroupStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_range_begin_);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
  {
    unsigned int count = this->error_group_stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error_group_stats(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListGroupStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListGroupStatsResponse::MergeFrom(const ListGroupStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListGroupStatsResponse::UnsafeMergeFrom(const ListGroupStatsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  error_group_stats_.MergeFrom(from.error_group_stats_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.has_time_range_begin()) {
    mutable_time_range_begin()->::google::protobuf::Timestamp::MergeFrom(from.time_range_begin());
  }
}

void ListGroupStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupStatsResponse::CopyFrom(const ListGroupStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListGroupStatsResponse::IsInitialized() const {

  return true;
}

void ListGroupStatsResponse::Swap(ListGroupStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupStatsResponse::InternalSwap(ListGroupStatsResponse* other) {
  error_group_stats_.UnsafeArenaSwap(&other->error_group_stats_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(time_range_begin_, other->time_range_begin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupStatsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListGroupStatsResponse_descriptor_;
  metadata.reflection = ListGroupStatsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGroupStatsResponse

// repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
int ListGroupStatsResponse::error_group_stats_size() const {
  return error_group_stats_.size();
}
void ListGroupStatsResponse::clear_error_group_stats() {
  error_group_stats_.Clear();
}
const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats& ListGroupStatsResponse::error_group_stats(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_.Get(index);
}
::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats* ListGroupStatsResponse::mutable_error_group_stats(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_.Mutable(index);
}
::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats* ListGroupStatsResponse::add_error_group_stats() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats >*
ListGroupStatsResponse::mutable_error_group_stats() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return &error_group_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats >&
ListGroupStatsResponse::error_group_stats() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_;
}

// optional string next_page_token = 2;
void ListGroupStatsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupStatsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupStatsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}
void ListGroupStatsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}
void ListGroupStatsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}
::std::string* ListGroupStatsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupStatsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupStatsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}

// optional .google.protobuf.Timestamp time_range_begin = 4;
bool ListGroupStatsResponse::has_time_range_begin() const {
  return this != internal_default_instance() && time_range_begin_ != NULL;
}
void ListGroupStatsResponse::clear_time_range_begin() {
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) delete time_range_begin_;
  time_range_begin_ = NULL;
}
const ::google::protobuf::Timestamp& ListGroupStatsResponse::time_range_begin() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
  return time_range_begin_ != NULL ? *time_range_begin_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ListGroupStatsResponse::mutable_time_range_begin() {
  
  if (time_range_begin_ == NULL) {
    time_range_begin_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
  return time_range_begin_;
}
::google::protobuf::Timestamp* ListGroupStatsResponse::release_time_range_begin() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
  
  ::google::protobuf::Timestamp* temp = time_range_begin_;
  time_range_begin_ = NULL;
  return temp;
}
void ListGroupStatsResponse::set_allocated_time_range_begin(::google::protobuf::Timestamp* time_range_begin) {
  delete time_range_begin_;
  if (time_range_begin != NULL && time_range_begin->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time_range_begin = new ::google::protobuf::Timestamp;
    new_time_range_begin->CopyFrom(*time_range_begin);
    time_range_begin = new_time_range_begin;
  }
  time_range_begin_ = time_range_begin;
  if (time_range_begin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
}

inline const ListGroupStatsResponse* ListGroupStatsResponse::internal_default_instance() {
  return &ListGroupStatsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorGroupStats::kGroupFieldNumber;
const int ErrorGroupStats::kCountFieldNumber;
const int ErrorGroupStats::kAffectedUsersCountFieldNumber;
const int ErrorGroupStats::kTimedCountsFieldNumber;
const int ErrorGroupStats::kFirstSeenTimeFieldNumber;
const int ErrorGroupStats::kLastSeenTimeFieldNumber;
const int ErrorGroupStats::kAffectedServicesFieldNumber;
const int ErrorGroupStats::kNumAffectedServicesFieldNumber;
const int ErrorGroupStats::kRepresentativeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorGroupStats::ErrorGroupStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
}

void ErrorGroupStats::InitAsDefaultInstance() {
  group_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup*>(
      ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup::internal_default_instance());
  first_seen_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  last_seen_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  representative_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent*>(
      ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent::internal_default_instance());
}

ErrorGroupStats::ErrorGroupStats(const ErrorGroupStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
}

void ErrorGroupStats::SharedCtor() {
  group_ = NULL;
  first_seen_time_ = NULL;
  last_seen_time_ = NULL;
  representative_ = NULL;
  ::memset(&count_, 0, reinterpret_cast<char*>(&num_affected_services_) -
    reinterpret_cast<char*>(&count_) + sizeof(num_affected_services_));
  _cached_size_ = 0;
}

ErrorGroupStats::~ErrorGroupStats() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  SharedDtor();
}

void ErrorGroupStats::SharedDtor() {
  if (this != &ErrorGroupStats_default_instance_.get()) {
    delete group_;
    delete first_seen_time_;
    delete last_seen_time_;
    delete representative_;
  }
}

void ErrorGroupStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorGroupStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorGroupStats_descriptor_;
}

const ErrorGroupStats& ErrorGroupStats::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorGroupStats> ErrorGroupStats_default_instance_;

ErrorGroupStats* ErrorGroupStats::New(::google::protobuf::Arena* arena) const {
  ErrorGroupStats* n = new ErrorGroupStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorGroupStats::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ErrorGroupStats, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ErrorGroupStats*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(count_, num_affected_services_);
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
  if (GetArenaNoVirtual() == NULL && first_seen_time_ != NULL) delete first_seen_time_;
  first_seen_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_seen_time_ != NULL) delete last_seen_time_;
  last_seen_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && representative_ != NULL) delete representative_;
  representative_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  timed_counts_.Clear();
  affected_services_.Clear();
}

bool ErrorGroupStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int64 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_affected_users_count;
        break;
      }

      // optional int64 affected_users_count = 3;
      case 3: {
        if (tag == 24) {
         parse_affected_users_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &affected_users_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_timed_counts;
        break;
      }

      // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
      case 4: {
        if (tag == 34) {
         parse_timed_counts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_timed_counts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_timed_counts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_timed_counts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_first_seen_time;
        break;
      }

      // optional .google.protobuf.Timestamp first_seen_time = 5;
      case 5: {
        if (tag == 42) {
         parse_first_seen_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_seen_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_last_seen_time;
        break;
      }

      // optional .google.protobuf.Timestamp last_seen_time = 6;
      case 6: {
        if (tag == 50) {
         parse_last_seen_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last_seen_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_affected_services;
        break;
      }

      // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
      case 7: {
        if (tag == 58) {
         parse_affected_services:
          DO_(input->IncrementRecursionDepth());
         parse_loop_affected_services:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_affected_services()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_affected_services;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(64)) goto parse_num_affected_services;
        break;
      }

      // optional int32 num_affected_services = 8;
      case 8: {
        if (tag == 64) {
         parse_num_affected_services:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_affected_services_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_representative;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
      case 9: {
        if (tag == 74) {
         parse_representative:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_representative()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  return false;
#undef DO_
}

void ErrorGroupStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  if (this->has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->group_, output);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  // optional int64 affected_users_count = 3;
  if (this->affected_users_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->affected_users_count(), output);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
  for (unsigned int i = 0, n = this->timed_counts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->timed_counts(i), output);
  }

  // optional .google.protobuf.Timestamp first_seen_time = 5;
  if (this->has_first_seen_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->first_seen_time_, output);
  }

  // optional .google.protobuf.Timestamp last_seen_time = 6;
  if (this->has_last_seen_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->last_seen_time_, output);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
  for (unsigned int i = 0, n = this->affected_services_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->affected_services(i), output);
  }

  // optional int32 num_affected_services = 8;
  if (this->num_affected_services() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_affected_services(), output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
  if (this->has_representative()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->representative_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
}

::google::protobuf::uint8* ErrorGroupStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  if (this->has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->group_, false, target);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  // optional int64 affected_users_count = 3;
  if (this->affected_users_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->affected_users_count(), target);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
  for (unsigned int i = 0, n = this->timed_counts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->timed_counts(i), false, target);
  }

  // optional .google.protobuf.Timestamp first_seen_time = 5;
  if (this->has_first_seen_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->first_seen_time_, false, target);
  }

  // optional .google.protobuf.Timestamp last_seen_time = 6;
  if (this->has_last_seen_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->last_seen_time_, false, target);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
  for (unsigned int i = 0, n = this->affected_services_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->affected_services(i), false, target);
  }

  // optional int32 num_affected_services = 8;
  if (this->num_affected_services() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->num_affected_services(), target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
  if (this->has_representative()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->representative_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  return target;
}

size_t ErrorGroupStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  size_t total_size = 0;

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  if (this->has_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->group_);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // optional int64 affected_users_count = 3;
  if (this->affected_users_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->affected_users_count());
  }

  // optional .google.protobuf.Timestamp first_seen_time = 5;
  if (this->has_first_seen_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->first_seen_time_);
  }

  // optional .google.protobuf.Timestamp last_seen_time = 6;
  if (this->has_last_seen_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->last_seen_time_);
  }

  // optional int32 num_affected_services = 8;
  if (this->num_affected_services() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_affected_services());
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
  if (this->has_representative()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->representative_);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
  {
    unsigned int count = this->timed_counts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->timed_counts(i));
    }
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
  {
    unsigned int count = this->affected_services_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->affected_services(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorGroupStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorGroupStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorGroupStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
    UnsafeMergeFrom(*source);
  }
}

void ErrorGroupStats::MergeFrom(const ErrorGroupStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorGroupStats::UnsafeMergeFrom(const ErrorGroupStats& from) {
  GOOGLE_DCHECK(&from != this);
  timed_counts_.MergeFrom(from.timed_counts_);
  affected_services_.MergeFrom(from.affected_services_);
  if (from.has_group()) {
    mutable_group()->::google::devtools::clouderrorreporting::v1beta1::ErrorGroup::MergeFrom(from.group());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.affected_users_count() != 0) {
    set_affected_users_count(from.affected_users_count());
  }
  if (from.has_first_seen_time()) {
    mutable_first_seen_time()->::google::protobuf::Timestamp::MergeFrom(from.first_seen_time());
  }
  if (from.has_last_seen_time()) {
    mutable_last_seen_time()->::google::protobuf::Timestamp::MergeFrom(from.last_seen_time());
  }
  if (from.num_affected_services() != 0) {
    set_num_affected_services(from.num_affected_services());
  }
  if (from.has_representative()) {
    mutable_representative()->::google::devtools::clouderrorreporting::v1beta1::ErrorEvent::MergeFrom(from.representative());
  }
}

void ErrorGroupStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorGroupStats::CopyFrom(const ErrorGroupStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorGroupStats::IsInitialized() const {

  return true;
}

void ErrorGroupStats::Swap(ErrorGroupStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorGroupStats::InternalSwap(ErrorGroupStats* other) {
  std::swap(group_, other->group_);
  std::swap(count_, other->count_);
  std::swap(affected_users_count_, other->affected_users_count_);
  timed_counts_.UnsafeArenaSwap(&other->timed_counts_);
  std::swap(first_seen_time_, other->first_seen_time_);
  std::swap(last_seen_time_, other->last_seen_time_);
  affected_services_.UnsafeArenaSwap(&other->affected_services_);
  std::swap(num_affected_services_, other->num_affected_services_);
  std::swap(representative_, other->representative_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorGroupStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorGroupStats_descriptor_;
  metadata.reflection = ErrorGroupStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorGroupStats

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
bool ErrorGroupStats::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
void ErrorGroupStats::clear_group() {
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup& ErrorGroupStats::group() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
  return group_ != NULL ? *group_
                         : *::google::devtools::clouderrorreporting::v1beta1::ErrorGroup::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* ErrorGroupStats::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
  return group_;
}
::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* ErrorGroupStats::release_group() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* temp = group_;
  group_ = NULL;
  return temp;
}
void ErrorGroupStats::set_allocated_group(::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* group) {
  delete group_;
  group_ = group;
  if (group) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
}

// optional int64 count = 2;
void ErrorGroupStats::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ErrorGroupStats::count() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.count)
  return count_;
}
void ErrorGroupStats::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.count)
}

// optional int64 affected_users_count = 3;
void ErrorGroupStats::clear_affected_users_count() {
  affected_users_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ErrorGroupStats::affected_users_count() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_users_count)
  return affected_users_count_;
}
void ErrorGroupStats::set_affected_users_count(::google::protobuf::int64 value) {
  
  affected_users_count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_users_count)
}

// repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
int ErrorGroupStats::timed_counts_size() const {
  return timed_counts_.size();
}
void ErrorGroupStats::clear_timed_counts() {
  timed_counts_.Clear();
}
const ::google::devtools::clouderrorreporting::v1beta1::TimedCount& ErrorGroupStats::timed_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_.Get(index);
}
::google::devtools::clouderrorreporting::v1beta1::TimedCount* ErrorGroupStats::mutable_timed_counts(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_.Mutable(index);
}
::google::devtools::clouderrorreporting::v1beta1::TimedCount* ErrorGroupStats::add_timed_counts() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TimedCount >*
ErrorGroupStats::mutable_timed_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return &timed_counts_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TimedCount >&
ErrorGroupStats::timed_counts() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_;
}

// optional .google.protobuf.Timestamp first_seen_time = 5;
bool ErrorGroupStats::has_first_seen_time() const {
  return this != internal_default_instance() && first_seen_time_ != NULL;
}
void ErrorGroupStats::clear_first_seen_time() {
  if (GetArenaNoVirtual() == NULL && first_seen_time_ != NULL) delete first_seen_time_;
  first_seen_time_ = NULL;
}
const ::google::protobuf::Timestamp& ErrorGroupStats::first_seen_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
  return first_seen_time_ != NULL ? *first_seen_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ErrorGroupStats::mutable_first_seen_time() {
  
  if (first_seen_time_ == NULL) {
    first_seen_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
  return first_seen_time_;
}
::google::protobuf::Timestamp* ErrorGroupStats::release_first_seen_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
  
  ::google::protobuf::Timestamp* temp = first_seen_time_;
  first_seen_time_ = NULL;
  return temp;
}
void ErrorGroupStats::set_allocated_first_seen_time(::google::protobuf::Timestamp* first_seen_time) {
  delete first_seen_time_;
  if (first_seen_time != NULL && first_seen_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_first_seen_time = new ::google::protobuf::Timestamp;
    new_first_seen_time->CopyFrom(*first_seen_time);
    first_seen_time = new_first_seen_time;
  }
  first_seen_time_ = first_seen_time;
  if (first_seen_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
}

// optional .google.protobuf.Timestamp last_seen_time = 6;
bool ErrorGroupStats::has_last_seen_time() const {
  return this != internal_default_instance() && last_seen_time_ != NULL;
}
void ErrorGroupStats::clear_last_seen_time() {
  if (GetArenaNoVirtual() == NULL && last_seen_time_ != NULL) delete last_seen_time_;
  last_seen_time_ = NULL;
}
const ::google::protobuf::Timestamp& ErrorGroupStats::last_seen_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
  return last_seen_time_ != NULL ? *last_seen_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ErrorGroupStats::mutable_last_seen_time() {
  
  if (last_seen_time_ == NULL) {
    last_seen_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
  return last_seen_time_;
}
::google::protobuf::Timestamp* ErrorGroupStats::release_last_seen_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
  
  ::google::protobuf::Timestamp* temp = last_seen_time_;
  last_seen_time_ = NULL;
  return temp;
}
void ErrorGroupStats::set_allocated_last_seen_time(::google::protobuf::Timestamp* last_seen_time) {
  delete last_seen_time_;
  if (last_seen_time != NULL && last_seen_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_last_seen_time = new ::google::protobuf::Timestamp;
    new_last_seen_time->CopyFrom(*last_seen_time);
    last_seen_time = new_last_seen_time;
  }
  last_seen_time_ = last_seen_time;
  if (last_seen_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
}

// repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
int ErrorGroupStats::affected_services_size() const {
  return affected_services_.size();
}
void ErrorGroupStats::clear_affected_services() {
  affected_services_.Clear();
}
const ::google::devtools::clouderrorreporting::v1beta1::ServiceContext& ErrorGroupStats::affected_services(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_.Get(index);
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorGroupStats::mutable_affected_services(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_.Mutable(index);
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorGroupStats::add_affected_services() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext >*
ErrorGroupStats::mutable_affected_services() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return &affected_services_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext >&
ErrorGroupStats::affected_services() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_;
}

// optional int32 num_affected_services = 8;
void ErrorGroupStats::clear_num_affected_services() {
  num_affected_services_ = 0;
}
::google::protobuf::int32 ErrorGroupStats::num_affected_services() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.num_affected_services)
  return num_affected_services_;
}
void ErrorGroupStats::set_num_affected_services(::google::protobuf::int32 value) {
  
  num_affected_services_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.num_affected_services)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
bool ErrorGroupStats::has_representative() const {
  return this != internal_default_instance() && representative_ != NULL;
}
void ErrorGroupStats::clear_representative() {
  if (GetArenaNoVirtual() == NULL && representative_ != NULL) delete representative_;
  representative_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent& ErrorGroupStats::representative() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
  return representative_ != NULL ? *representative_
                         : *::google::devtools::clouderrorreporting::v1beta1::ErrorEvent::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ErrorGroupStats::mutable_representative() {
  
  if (representative_ == NULL) {
    representative_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
  return representative_;
}
::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ErrorGroupStats::release_representative() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* temp = representative_;
  representative_ = NULL;
  return temp;
}
void ErrorGroupStats::set_allocated_representative(::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* representative) {
  delete representative_;
  representative_ = representative;
  if (representative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
}

inline const ErrorGroupStats* ErrorGroupStats::internal_default_instance() {
  return &ErrorGroupStats_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimedCount::kCountFieldNumber;
const int TimedCount::kStartTimeFieldNumber;
const int TimedCount::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimedCount::TimedCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.TimedCount)
}

void TimedCount::InitAsDefaultInstance() {
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

TimedCount::TimedCount(const TimedCount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.TimedCount)
}

void TimedCount::SharedCtor() {
  start_time_ = NULL;
  end_time_ = NULL;
  count_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TimedCount::~TimedCount() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  SharedDtor();
}

void TimedCount::SharedDtor() {
  if (this != &TimedCount_default_instance_.get()) {
    delete start_time_;
    delete end_time_;
  }
}

void TimedCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimedCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimedCount_descriptor_;
}

const TimedCount& TimedCount::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TimedCount> TimedCount_default_instance_;

TimedCount* TimedCount::New(::google::protobuf::Arena* arena) const {
  TimedCount* n = new TimedCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimedCount::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  count_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}

bool TimedCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 count = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (tag == 18) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 3;
      case 3: {
        if (tag == 26) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  return false;
#undef DO_
}

void TimedCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  // optional int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // optional .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->end_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.TimedCount)
}

::google::protobuf::uint8* TimedCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  // optional int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // optional .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->end_time_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  return target;
}

size_t TimedCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  size_t total_size = 0;

  // optional int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // optional .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimedCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TimedCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimedCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.TimedCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.TimedCount)
    UnsafeMergeFrom(*source);
  }
}

void TimedCount::MergeFrom(const TimedCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TimedCount::UnsafeMergeFrom(const TimedCount& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void TimedCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimedCount::CopyFrom(const TimedCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.TimedCount)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TimedCount::IsInitialized() const {

  return true;
}

void TimedCount::Swap(TimedCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimedCount::InternalSwap(TimedCount* other) {
  std::swap(count_, other->count_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimedCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimedCount_descriptor_;
  metadata.reflection = TimedCount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimedCount

// optional int64 count = 1;
void TimedCount::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TimedCount::count() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TimedCount.count)
  return count_;
}
void TimedCount::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.TimedCount.count)
}

// optional .google.protobuf.Timestamp start_time = 2;
bool TimedCount::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void TimedCount::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& TimedCount::start_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TimedCount::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* TimedCount::release_start_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void TimedCount::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
}

// optional .google.protobuf.Timestamp end_time = 3;
bool TimedCount::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void TimedCount::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& TimedCount::end_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* TimedCount::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* TimedCount::release_end_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void TimedCount::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
}

inline const TimedCount* TimedCount::internal_default_instance() {
  return &TimedCount_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListEventsRequest::kProjectNameFieldNumber;
const int ListEventsRequest::kGroupIdFieldNumber;
const int ListEventsRequest::kServiceFilterFieldNumber;
const int ListEventsRequest::kTimeRangeFieldNumber;
const int ListEventsRequest::kPageSizeFieldNumber;
const int ListEventsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListEventsRequest::ListEventsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
}

void ListEventsRequest::InitAsDefaultInstance() {
  service_filter_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter*>(
      ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance());
  time_range_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange*>(
      ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance());
}

ListEventsRequest::ListEventsRequest(const ListEventsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
}

void ListEventsRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_filter_ = NULL;
  time_range_ = NULL;
  page_size_ = 0;
  _cached_size_ = 0;
}

ListEventsRequest::~ListEventsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  SharedDtor();
}

void ListEventsRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ListEventsRequest_default_instance_.get()) {
    delete service_filter_;
    delete time_range_;
  }
}

void ListEventsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListEventsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListEventsRequest_descriptor_;
}

const ListEventsRequest& ListEventsRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListEventsRequest> ListEventsRequest_default_instance_;

ListEventsRequest* ListEventsRequest::New(::google::protobuf::Arena* arena) const {
  ListEventsRequest* n = new ListEventsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListEventsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) delete service_filter_;
  service_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) delete time_range_;
  time_range_ = NULL;
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListEventsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), this->project_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // optional string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_service_filter;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
      case 3: {
        if (tag == 26) {
         parse_service_filter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_service_filter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_time_range;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
      case 4: {
        if (tag == 34) {
         parse_time_range:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 6;
      case 6: {
        if (tag == 48) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_page_token;
        break;
      }

      // optional string page_token = 7;
      case 7: {
        if (tag == 58) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  return false;
#undef DO_
}

void ListEventsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  // optional string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->service_filter_, output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
  if (this->has_time_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->time_range_, output);
  }

  // optional int32 page_size = 6;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->page_size(), output);
  }

  // optional string page_token = 7;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
}

::google::protobuf::uint8* ListEventsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  // optional string group_id = 2;
  if (this->group_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->service_filter_, false, target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
  if (this->has_time_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->time_range_, false, target);
  }

  // optional int32 page_size = 6;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->page_size(), target);
  }

  // optional string page_token = 7;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  return target;
}

size_t ListEventsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  size_t total_size = 0;

  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // optional string group_id = 2;
  if (this->group_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  if (this->has_service_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->service_filter_);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
  if (this->has_time_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_range_);
  }

  // optional int32 page_size = 6;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 7;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListEventsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListEventsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListEventsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListEventsRequest::MergeFrom(const ListEventsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListEventsRequest::UnsafeMergeFrom(const ListEventsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.group_id().size() > 0) {

    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  if (from.has_service_filter()) {
    mutable_service_filter()->::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::MergeFrom(from.service_filter());
  }
  if (from.has_time_range()) {
    mutable_time_range()->::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::MergeFrom(from.time_range());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListEventsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListEventsRequest::CopyFrom(const ListEventsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListEventsRequest::IsInitialized() const {

  return true;
}

void ListEventsRequest::Swap(ListEventsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListEventsRequest::InternalSwap(ListEventsRequest* other) {
  project_name_.Swap(&other->project_name_);
  group_id_.Swap(&other->group_id_);
  std::swap(service_filter_, other->service_filter_);
  std::swap(time_range_, other->time_range_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListEventsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListEventsRequest_descriptor_;
  metadata.reflection = ListEventsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListEventsRequest

// optional string project_name = 1;
void ListEventsRequest::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEventsRequest::project_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
  return project_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsRequest::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}
void ListEventsRequest::set_project_name(const char* value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}
void ListEventsRequest::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}
::std::string* ListEventsRequest::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEventsRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsRequest::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}

// optional string group_id = 2;
void ListEventsRequest::clear_group_id() {
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEventsRequest::group_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
  return group_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsRequest::set_group_id(const ::std::string& value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}
void ListEventsRequest::set_group_id(const char* value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}
void ListEventsRequest::set_group_id(const char* value, size_t size) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}
::std::string* ListEventsRequest::mutable_group_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
  return group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEventsRequest::release_group_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
  
  return group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsRequest::set_allocated_group_id(::std::string* group_id) {
  if (group_id != NULL) {
    
  } else {
    
  }
  group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
bool ListEventsRequest::has_service_filter() const {
  return this != internal_default_instance() && service_filter_ != NULL;
}
void ListEventsRequest::clear_service_filter() {
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) delete service_filter_;
  service_filter_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter& ListEventsRequest::service_filter() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
  return service_filter_ != NULL ? *service_filter_
                         : *::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListEventsRequest::mutable_service_filter() {
  
  if (service_filter_ == NULL) {
    service_filter_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
  return service_filter_;
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListEventsRequest::release_service_filter() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
  
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* temp = service_filter_;
  service_filter_ = NULL;
  return temp;
}
void ListEventsRequest::set_allocated_service_filter(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter) {
  delete service_filter_;
  service_filter_ = service_filter;
  if (service_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
}

// optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
bool ListEventsRequest::has_time_range() const {
  return this != internal_default_instance() && time_range_ != NULL;
}
void ListEventsRequest::clear_time_range() {
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) delete time_range_;
  time_range_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange& ListEventsRequest::time_range() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
  return time_range_ != NULL ? *time_range_
                         : *::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListEventsRequest::mutable_time_range() {
  
  if (time_range_ == NULL) {
    time_range_ = new ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
  return time_range_;
}
::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListEventsRequest::release_time_range() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
  
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* temp = time_range_;
  time_range_ = NULL;
  return temp;
}
void ListEventsRequest::set_allocated_time_range(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range) {
  delete time_range_;
  time_range_ = time_range;
  if (time_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
}

// optional int32 page_size = 6;
void ListEventsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListEventsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_size)
  return page_size_;
}
void ListEventsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_size)
}

// optional string page_token = 7;
void ListEventsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEventsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}
void ListEventsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}
void ListEventsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}
::std::string* ListEventsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEventsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}

inline const ListEventsRequest* ListEventsRequest::internal_default_instance() {
  return &ListEventsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListEventsResponse::kErrorEventsFieldNumber;
const int ListEventsResponse::kNextPageTokenFieldNumber;
const int ListEventsResponse::kTimeRangeBeginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListEventsResponse::ListEventsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
}

void ListEventsResponse::InitAsDefaultInstance() {
  time_range_begin_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

ListEventsResponse::ListEventsResponse(const ListEventsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
}

void ListEventsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_range_begin_ = NULL;
  _cached_size_ = 0;
}

ListEventsResponse::~ListEventsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  SharedDtor();
}

void ListEventsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ListEventsResponse_default_instance_.get()) {
    delete time_range_begin_;
  }
}

void ListEventsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListEventsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListEventsResponse_descriptor_;
}

const ListEventsResponse& ListEventsResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListEventsResponse> ListEventsResponse_default_instance_;

ListEventsResponse* ListEventsResponse::New(::google::protobuf::Arena* arena) const {
  ListEventsResponse* n = new ListEventsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListEventsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) delete time_range_begin_;
  time_range_begin_ = NULL;
  error_events_.Clear();
}

bool ListEventsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_error_events:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_error_events()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_error_events;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_time_range_begin;
        break;
      }

      // optional .google.protobuf.Timestamp time_range_begin = 4;
      case 4: {
        if (tag == 34) {
         parse_time_range_begin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time_range_begin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  return false;
#undef DO_
}

void ListEventsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
  for (unsigned int i = 0, n = this->error_events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->error_events(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->time_range_begin_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
}

::google::protobuf::uint8* ListEventsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
  for (unsigned int i = 0, n = this->error_events_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->error_events(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->time_range_begin_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  return target;
}

size_t ListEventsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  if (this->has_time_range_begin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_range_begin_);
  }

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
  {
    unsigned int count = this->error_events_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error_events(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListEventsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListEventsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListEventsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListEventsResponse::MergeFrom(const ListEventsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListEventsResponse::UnsafeMergeFrom(const ListEventsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  error_events_.MergeFrom(from.error_events_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.has_time_range_begin()) {
    mutable_time_range_begin()->::google::protobuf::Timestamp::MergeFrom(from.time_range_begin());
  }
}

void ListEventsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListEventsResponse::CopyFrom(const ListEventsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListEventsResponse::IsInitialized() const {

  return true;
}

void ListEventsResponse::Swap(ListEventsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListEventsResponse::InternalSwap(ListEventsResponse* other) {
  error_events_.UnsafeArenaSwap(&other->error_events_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(time_range_begin_, other->time_range_begin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListEventsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListEventsResponse_descriptor_;
  metadata.reflection = ListEventsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListEventsResponse

// repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
int ListEventsResponse::error_events_size() const {
  return error_events_.size();
}
void ListEventsResponse::clear_error_events() {
  error_events_.Clear();
}
const ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent& ListEventsResponse::error_events(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_.Get(index);
}
::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ListEventsResponse::mutable_error_events(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_.Mutable(index);
}
::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ListEventsResponse::add_error_events() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent >*
ListEventsResponse::mutable_error_events() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return &error_events_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent >&
ListEventsResponse::error_events() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_;
}

// optional string next_page_token = 2;
void ListEventsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEventsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}
void ListEventsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}
void ListEventsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}
::std::string* ListEventsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEventsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEventsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}

// optional .google.protobuf.Timestamp time_range_begin = 4;
bool ListEventsResponse::has_time_range_begin() const {
  return this != internal_default_instance() && time_range_begin_ != NULL;
}
void ListEventsResponse::clear_time_range_begin() {
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) delete time_range_begin_;
  time_range_begin_ = NULL;
}
const ::google::protobuf::Timestamp& ListEventsResponse::time_range_begin() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
  return time_range_begin_ != NULL ? *time_range_begin_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ListEventsResponse::mutable_time_range_begin() {
  
  if (time_range_begin_ == NULL) {
    time_range_begin_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
  return time_range_begin_;
}
::google::protobuf::Timestamp* ListEventsResponse::release_time_range_begin() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
  
  ::google::protobuf::Timestamp* temp = time_range_begin_;
  time_range_begin_ = NULL;
  return temp;
}
void ListEventsResponse::set_allocated_time_range_begin(::google::protobuf::Timestamp* time_range_begin) {
  delete time_range_begin_;
  if (time_range_begin != NULL && time_range_begin->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time_range_begin = new ::google::protobuf::Timestamp;
    new_time_range_begin->CopyFrom(*time_range_begin);
    time_range_begin = new_time_range_begin;
  }
  time_range_begin_ = time_range_begin;
  if (time_range_begin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
}

inline const ListEventsResponse* ListEventsResponse::internal_default_instance() {
  return &ListEventsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* QueryTimeRange_Period_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryTimeRange_Period_descriptor_;
}
bool QueryTimeRange_Period_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QueryTimeRange_Period QueryTimeRange::PERIOD_UNSPECIFIED;
const QueryTimeRange_Period QueryTimeRange::PERIOD_1_HOUR;
const QueryTimeRange_Period QueryTimeRange::PERIOD_6_HOURS;
const QueryTimeRange_Period QueryTimeRange::PERIOD_1_DAY;
const QueryTimeRange_Period QueryTimeRange::PERIOD_1_WEEK;
const QueryTimeRange_Period QueryTimeRange::PERIOD_30_DAYS;
const QueryTimeRange_Period QueryTimeRange::Period_MIN;
const QueryTimeRange_Period QueryTimeRange::Period_MAX;
const int QueryTimeRange::Period_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryTimeRange::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryTimeRange::QueryTimeRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
}

void QueryTimeRange::InitAsDefaultInstance() {
}

QueryTimeRange::QueryTimeRange(const QueryTimeRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
}

void QueryTimeRange::SharedCtor() {
  period_ = 0;
  _cached_size_ = 0;
}

QueryTimeRange::~QueryTimeRange() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  SharedDtor();
}

void QueryTimeRange::SharedDtor() {
}

void QueryTimeRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryTimeRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryTimeRange_descriptor_;
}

const QueryTimeRange& QueryTimeRange::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryTimeRange> QueryTimeRange_default_instance_;

QueryTimeRange* QueryTimeRange::New(::google::protobuf::Arena* arena) const {
  QueryTimeRange* n = new QueryTimeRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryTimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  period_ = 0;
}

bool QueryTimeRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_period(static_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  return false;
#undef DO_
}

void QueryTimeRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
  if (this->period() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->period(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
}

::google::protobuf::uint8* QueryTimeRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
  if (this->period() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->period(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  return target;
}

size_t QueryTimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  size_t total_size = 0;

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
  if (this->period() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->period());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryTimeRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryTimeRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryTimeRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
    UnsafeMergeFrom(*source);
  }
}

void QueryTimeRange::MergeFrom(const QueryTimeRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryTimeRange::UnsafeMergeFrom(const QueryTimeRange& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.period() != 0) {
    set_period(from.period());
  }
}

void QueryTimeRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryTimeRange::CopyFrom(const QueryTimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryTimeRange::IsInitialized() const {

  return true;
}

void QueryTimeRange::Swap(QueryTimeRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryTimeRange::InternalSwap(QueryTimeRange* other) {
  std::swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryTimeRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryTimeRange_descriptor_;
  metadata.reflection = QueryTimeRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryTimeRange

// optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
void QueryTimeRange::clear_period() {
  period_ = 0;
}
::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period QueryTimeRange::period() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.period)
  return static_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period >(period_);
}
void QueryTimeRange::set_period(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period value) {
  
  period_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.period)
}

inline const QueryTimeRange* QueryTimeRange::internal_default_instance() {
  return &QueryTimeRange_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceContextFilter::kServiceFieldNumber;
const int ServiceContextFilter::kVersionFieldNumber;
const int ServiceContextFilter::kResourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceContextFilter::ServiceContextFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
}

void ServiceContextFilter::InitAsDefaultInstance() {
}

ServiceContextFilter::ServiceContextFilter(const ServiceContextFilter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
}

void ServiceContextFilter::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ServiceContextFilter::~ServiceContextFilter() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  SharedDtor();
}

void ServiceContextFilter::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceContextFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceContextFilter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceContextFilter_descriptor_;
}

const ServiceContextFilter& ServiceContextFilter::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServiceContextFilter> ServiceContextFilter_default_instance_;

ServiceContextFilter* ServiceContextFilter::New(::google::protobuf::Arena* arena) const {
  ServiceContextFilter* n = new ServiceContextFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceContextFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ServiceContextFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_version;
        break;
      }

      // optional string version = 3;
      case 3: {
        if (tag == 26) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_resource_type;
        break;
      }

      // optional string resource_type = 4;
      case 4: {
        if (tag == 34) {
         parse_resource_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_type().data(), this->resource_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  return false;
#undef DO_
}

void ServiceContextFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  // optional string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // optional string resource_type = 4;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->resource_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
}

::google::protobuf::uint8* ServiceContextFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  // optional string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional string resource_type = 4;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->resource_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  return target;
}

size_t ServiceContextFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  size_t total_size = 0;

  // optional string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional string resource_type = 4;
  if (this->resource_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceContextFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceContextFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceContextFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
    UnsafeMergeFrom(*source);
  }
}

void ServiceContextFilter::MergeFrom(const ServiceContextFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServiceContextFilter::UnsafeMergeFrom(const ServiceContextFilter& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.resource_type().size() > 0) {

    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
}

void ServiceContextFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceContextFilter::CopyFrom(const ServiceContextFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServiceContextFilter::IsInitialized() const {

  return true;
}

void ServiceContextFilter::Swap(ServiceContextFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceContextFilter::InternalSwap(ServiceContextFilter* other) {
  service_.Swap(&other->service_);
  version_.Swap(&other->version_);
  resource_type_.Swap(&other->resource_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceContextFilter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceContextFilter_descriptor_;
  metadata.reflection = ServiceContextFilter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceContextFilter

// optional string service = 2;
void ServiceContextFilter::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceContextFilter::service() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
  return service_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContextFilter::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}
void ServiceContextFilter::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}
void ServiceContextFilter::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}
::std::string* ServiceContextFilter::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceContextFilter::release_service() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContextFilter::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}

// optional string version = 3;
void ServiceContextFilter::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceContextFilter::version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContextFilter::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}
void ServiceContextFilter::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}
void ServiceContextFilter::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}
::std::string* ServiceContextFilter::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceContextFilter::release_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContextFilter::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}

// optional string resource_type = 4;
void ServiceContextFilter::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceContextFilter::resource_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
  return resource_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContextFilter::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}
void ServiceContextFilter::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}
void ServiceContextFilter::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}
::std::string* ServiceContextFilter::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceContextFilter::release_resource_type() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceContextFilter::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}

inline const ServiceContextFilter* ServiceContextFilter::internal_default_instance() {
  return &ServiceContextFilter_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteEventsRequest::kProjectNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteEventsRequest::DeleteEventsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
}

void DeleteEventsRequest::InitAsDefaultInstance() {
}

DeleteEventsRequest::DeleteEventsRequest(const DeleteEventsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
}

void DeleteEventsRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteEventsRequest::~DeleteEventsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  SharedDtor();
}

void DeleteEventsRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteEventsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteEventsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteEventsRequest_descriptor_;
}

const DeleteEventsRequest& DeleteEventsRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteEventsRequest> DeleteEventsRequest_default_instance_;

DeleteEventsRequest* DeleteEventsRequest::New(::google::protobuf::Arena* arena) const {
  DeleteEventsRequest* n = new DeleteEventsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteEventsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteEventsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), this->project_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  return false;
#undef DO_
}

void DeleteEventsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
}

::google::protobuf::uint8* DeleteEventsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  return target;
}

size_t DeleteEventsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  size_t total_size = 0;

  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteEventsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteEventsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteEventsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
    UnsafeMergeFrom(*source);
  }
}

void DeleteEventsRequest::MergeFrom(const DeleteEventsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteEventsRequest::UnsafeMergeFrom(const DeleteEventsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
}

void DeleteEventsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteEventsRequest::CopyFrom(const DeleteEventsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteEventsRequest::IsInitialized() const {

  return true;
}

void DeleteEventsRequest::Swap(DeleteEventsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteEventsRequest::InternalSwap(DeleteEventsRequest* other) {
  project_name_.Swap(&other->project_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteEventsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteEventsRequest_descriptor_;
  metadata.reflection = DeleteEventsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteEventsRequest

// optional string project_name = 1;
void DeleteEventsRequest::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteEventsRequest::project_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
  return project_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteEventsRequest::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}
void DeleteEventsRequest::set_project_name(const char* value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}
void DeleteEventsRequest::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}
::std::string* DeleteEventsRequest::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteEventsRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteEventsRequest::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}

inline const DeleteEventsRequest* DeleteEventsRequest::internal_default_instance() {
  return &DeleteEventsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteEventsResponse::DeleteEventsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
}

void DeleteEventsResponse::InitAsDefaultInstance() {
}

DeleteEventsResponse::DeleteEventsResponse(const DeleteEventsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
}

void DeleteEventsResponse::SharedCtor() {
  _cached_size_ = 0;
}

DeleteEventsResponse::~DeleteEventsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  SharedDtor();
}

void DeleteEventsResponse::SharedDtor() {
}

void DeleteEventsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteEventsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteEventsResponse_descriptor_;
}

const DeleteEventsResponse& DeleteEventsResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteEventsResponse> DeleteEventsResponse_default_instance_;

DeleteEventsResponse* DeleteEventsResponse::New(::google::protobuf::Arena* arena) const {
  DeleteEventsResponse* n = new DeleteEventsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteEventsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
}

bool DeleteEventsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  return false;
#undef DO_
}

void DeleteEventsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
}

::google::protobuf::uint8* DeleteEventsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  return target;
}

size_t DeleteEventsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteEventsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteEventsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteEventsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
    UnsafeMergeFrom(*source);
  }
}

void DeleteEventsResponse::MergeFrom(const DeleteEventsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteEventsResponse::UnsafeMergeFrom(const DeleteEventsResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void DeleteEventsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteEventsResponse::CopyFrom(const DeleteEventsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteEventsResponse::IsInitialized() const {

  return true;
}

void DeleteEventsResponse::Swap(DeleteEventsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteEventsResponse::InternalSwap(DeleteEventsResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteEventsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteEventsResponse_descriptor_;
  metadata.reflection = DeleteEventsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteEventsResponse

inline const DeleteEventsResponse* DeleteEventsResponse::internal_default_instance() {
  return &DeleteEventsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
