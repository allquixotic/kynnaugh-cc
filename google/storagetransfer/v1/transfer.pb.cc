// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storagetransfer/v1/transfer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/storagetransfer/v1/transfer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace storagetransfer {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* GetGoogleServiceAccountRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGoogleServiceAccountRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTransferJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTransferJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateTransferJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateTransferJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTransferJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTransferJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTransferJobsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTransferJobsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTransferJobsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTransferJobsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PauseTransferOperationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PauseTransferOperationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResumeTransferOperationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResumeTransferOperationRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto() {
  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/storagetransfer/v1/transfer.proto");
  GOOGLE_CHECK(file != NULL);
  GetGoogleServiceAccountRequest_descriptor_ = file->message_type(0);
  static const int GetGoogleServiceAccountRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGoogleServiceAccountRequest, project_id_),
  };
  GetGoogleServiceAccountRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetGoogleServiceAccountRequest_descriptor_,
      GetGoogleServiceAccountRequest::internal_default_instance(),
      GetGoogleServiceAccountRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetGoogleServiceAccountRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGoogleServiceAccountRequest, _internal_metadata_));
  CreateTransferJobRequest_descriptor_ = file->message_type(1);
  static const int CreateTransferJobRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTransferJobRequest, transfer_job_),
  };
  CreateTransferJobRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateTransferJobRequest_descriptor_,
      CreateTransferJobRequest::internal_default_instance(),
      CreateTransferJobRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateTransferJobRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTransferJobRequest, _internal_metadata_));
  UpdateTransferJobRequest_descriptor_ = file->message_type(2);
  static const int UpdateTransferJobRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTransferJobRequest, job_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTransferJobRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTransferJobRequest, transfer_job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTransferJobRequest, update_transfer_job_field_mask_),
  };
  UpdateTransferJobRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateTransferJobRequest_descriptor_,
      UpdateTransferJobRequest::internal_default_instance(),
      UpdateTransferJobRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateTransferJobRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTransferJobRequest, _internal_metadata_));
  GetTransferJobRequest_descriptor_ = file->message_type(3);
  static const int GetTransferJobRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTransferJobRequest, job_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTransferJobRequest, project_id_),
  };
  GetTransferJobRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetTransferJobRequest_descriptor_,
      GetTransferJobRequest::internal_default_instance(),
      GetTransferJobRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetTransferJobRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTransferJobRequest, _internal_metadata_));
  ListTransferJobsRequest_descriptor_ = file->message_type(4);
  static const int ListTransferJobsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTransferJobsRequest, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTransferJobsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTransferJobsRequest, page_token_),
  };
  ListTransferJobsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTransferJobsRequest_descriptor_,
      ListTransferJobsRequest::internal_default_instance(),
      ListTransferJobsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTransferJobsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTransferJobsRequest, _internal_metadata_));
  ListTransferJobsResponse_descriptor_ = file->message_type(5);
  static const int ListTransferJobsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTransferJobsResponse, transfer_jobs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTransferJobsResponse, next_page_token_),
  };
  ListTransferJobsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTransferJobsResponse_descriptor_,
      ListTransferJobsResponse::internal_default_instance(),
      ListTransferJobsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTransferJobsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTransferJobsResponse, _internal_metadata_));
  PauseTransferOperationRequest_descriptor_ = file->message_type(6);
  static const int PauseTransferOperationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PauseTransferOperationRequest, name_),
  };
  PauseTransferOperationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PauseTransferOperationRequest_descriptor_,
      PauseTransferOperationRequest::internal_default_instance(),
      PauseTransferOperationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PauseTransferOperationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PauseTransferOperationRequest, _internal_metadata_));
  ResumeTransferOperationRequest_descriptor_ = file->message_type(7);
  static const int ResumeTransferOperationRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResumeTransferOperationRequest, name_),
  };
  ResumeTransferOperationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResumeTransferOperationRequest_descriptor_,
      ResumeTransferOperationRequest::internal_default_instance(),
      ResumeTransferOperationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResumeTransferOperationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResumeTransferOperationRequest, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetGoogleServiceAccountRequest_descriptor_, GetGoogleServiceAccountRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateTransferJobRequest_descriptor_, CreateTransferJobRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateTransferJobRequest_descriptor_, UpdateTransferJobRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetTransferJobRequest_descriptor_, GetTransferJobRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTransferJobsRequest_descriptor_, ListTransferJobsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTransferJobsResponse_descriptor_, ListTransferJobsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PauseTransferOperationRequest_descriptor_, PauseTransferOperationRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResumeTransferOperationRequest_descriptor_, ResumeTransferOperationRequest::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto() {
  GetGoogleServiceAccountRequest_default_instance_.Shutdown();
  delete GetGoogleServiceAccountRequest_reflection_;
  CreateTransferJobRequest_default_instance_.Shutdown();
  delete CreateTransferJobRequest_reflection_;
  UpdateTransferJobRequest_default_instance_.Shutdown();
  delete UpdateTransferJobRequest_reflection_;
  GetTransferJobRequest_default_instance_.Shutdown();
  delete GetTransferJobRequest_reflection_;
  ListTransferJobsRequest_default_instance_.Shutdown();
  delete ListTransferJobsRequest_reflection_;
  ListTransferJobsResponse_default_instance_.Shutdown();
  delete ListTransferJobsResponse_reflection_;
  PauseTransferOperationRequest_default_instance_.Shutdown();
  delete PauseTransferOperationRequest_reflection_;
  ResumeTransferOperationRequest_default_instance_.Shutdown();
  delete ResumeTransferOperationRequest_reflection_;
}

void protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ffield_5fmask_2eproto();
  ::google::storagetransfer::v1::protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  GetGoogleServiceAccountRequest_default_instance_.DefaultConstruct();
  CreateTransferJobRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UpdateTransferJobRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetTransferJobRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListTransferJobsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListTransferJobsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PauseTransferOperationRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ResumeTransferOperationRequest_default_instance_.DefaultConstruct();
  GetGoogleServiceAccountRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateTransferJobRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateTransferJobRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetTransferJobRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListTransferJobsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListTransferJobsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PauseTransferOperationRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResumeTransferOperationRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_once_);
void protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_once_,
                 &protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl);
}
void protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(google/storagetransfer/v1/transfer.pro"
    "to\022\031google.storagetransfer.v1\032\034google/ap"
    "i/annotations.proto\032\033google/protobuf/emp"
    "ty.proto\032 google/protobuf/field_mask.pro"
    "to\032.google/storagetransfer/v1/transfer_t"
    "ypes.proto\"4\n\036GetGoogleServiceAccountReq"
    "uest\022\022\n\nproject_id\030\001 \001(\t\"X\n\030CreateTransf"
    "erJobRequest\022<\n\014transfer_job\030\001 \001(\0132&.goo"
    "gle.storagetransfer.v1.TransferJob\"\302\001\n\030U"
    "pdateTransferJobRequest\022\020\n\010job_name\030\001 \001("
    "\t\022\022\n\nproject_id\030\002 \001(\t\022<\n\014transfer_job\030\003 "
    "\001(\0132&.google.storagetransfer.v1.Transfer"
    "Job\022B\n\036update_transfer_job_field_mask\030\004 "
    "\001(\0132\032.google.protobuf.FieldMask\"=\n\025GetTr"
    "ansferJobRequest\022\020\n\010job_name\030\001 \001(\t\022\022\n\npr"
    "oject_id\030\002 \001(\t\"P\n\027ListTransferJobsReques"
    "t\022\016\n\006filter\030\001 \001(\t\022\021\n\tpage_size\030\004 \001(\005\022\022\n\n"
    "page_token\030\005 \001(\t\"r\n\030ListTransferJobsResp"
    "onse\022=\n\rtransfer_jobs\030\001 \003(\0132&.google.sto"
    "ragetransfer.v1.TransferJob\022\027\n\017next_page"
    "_token\030\002 \001(\t\"-\n\035PauseTransferOperationRe"
    "quest\022\014\n\004name\030\001 \001(\t\".\n\036ResumeTransferOpe"
    "rationRequest\022\014\n\004name\030\001 \001(\t2\371\010\n\026StorageT"
    "ransferService\022\265\001\n\027GetGoogleServiceAccou"
    "nt\0229.google.storagetransfer.v1.GetGoogle"
    "ServiceAccountRequest\032/.google.storagetr"
    "ansfer.v1.GoogleServiceAccount\".\202\323\344\223\002(\022&"
    "/v1/googleServiceAccounts/{project_id}\022\230"
    "\001\n\021CreateTransferJob\0223.google.storagetra"
    "nsfer.v1.CreateTransferJobRequest\032&.goog"
    "le.storagetransfer.v1.TransferJob\"&\202\323\344\223\002"
    " \"\020/v1/transferJobs:\014transfer_job\022\233\001\n\021Up"
    "dateTransferJob\0223.google.storagetransfer"
    ".v1.UpdateTransferJobRequest\032&.google.st"
    "oragetransfer.v1.TransferJob\")\202\323\344\223\002#2\036/v"
    "1/{job_name=transferJobs/**}:\001*\022\222\001\n\016GetT"
    "ransferJob\0220.google.storagetransfer.v1.G"
    "etTransferJobRequest\032&.google.storagetra"
    "nsfer.v1.TransferJob\"&\202\323\344\223\002 \022\036/v1/{job_n"
    "ame=transferJobs/**}\022\225\001\n\020ListTransferJob"
    "s\0222.google.storagetransfer.v1.ListTransf"
    "erJobsRequest\0323.google.storagetransfer.v"
    "1.ListTransferJobsResponse\"\030\202\323\344\223\002\022\022\020/v1/"
    "transferJobs\022\235\001\n\026PauseTransferOperation\022"
    "8.google.storagetransfer.v1.PauseTransfe"
    "rOperationRequest\032\026.google.protobuf.Empt"
    "y\"1\202\323\344\223\002+\"&/v1/{name=transferOperations/"
    "**}:pause:\001*\022\240\001\n\027ResumeTransferOperation"
    "\0229.google.storagetransfer.v1.ResumeTrans"
    "ferOperationRequest\032\026.google.protobuf.Em"
    "pty\"2\202\323\344\223\002,\"\'/v1/{name=transferOperation"
    "s/**}:resume:\001*B\201\001\n#com.google.storagetr"
    "ansfer.v1.protoB\rTransferProtoZHgoogle.g"
    "olang.org/genproto/googleapis/storagetra"
    "nsfer/v1;storagetransfer\370\001\001b\006proto3", 2195);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/storagetransfer/v1/transfer.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ffield_5fmask_2eproto();
  ::google::storagetransfer::v1::protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_once_);
void protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_once_,
                 &protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fstoragetransfer_2fv1_2ftransfer_2eproto {
  StaticDescriptorInitializer_google_2fstoragetransfer_2fv1_2ftransfer_2eproto() {
    protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  }
} static_descriptor_initializer_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGoogleServiceAccountRequest::kProjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGoogleServiceAccountRequest::GetGoogleServiceAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
}
GetGoogleServiceAccountRequest::GetGoogleServiceAccountRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
}

void GetGoogleServiceAccountRequest::InitAsDefaultInstance() {
}

GetGoogleServiceAccountRequest::GetGoogleServiceAccountRequest(const GetGoogleServiceAccountRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
}

void GetGoogleServiceAccountRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetGoogleServiceAccountRequest::~GetGoogleServiceAccountRequest() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  SharedDtor();
}

void GetGoogleServiceAccountRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  project_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void GetGoogleServiceAccountRequest::ArenaDtor(void* object) {
  GetGoogleServiceAccountRequest* _this = reinterpret_cast< GetGoogleServiceAccountRequest* >(object);
  (void)_this;
}
void GetGoogleServiceAccountRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetGoogleServiceAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGoogleServiceAccountRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGoogleServiceAccountRequest_descriptor_;
}

const GetGoogleServiceAccountRequest& GetGoogleServiceAccountRequest::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetGoogleServiceAccountRequest> GetGoogleServiceAccountRequest_default_instance_;

GetGoogleServiceAccountRequest* GetGoogleServiceAccountRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetGoogleServiceAccountRequest>(arena);
}

void GetGoogleServiceAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool GetGoogleServiceAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  return false;
#undef DO_
}

void GetGoogleServiceAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
}

::google::protobuf::uint8* GetGoogleServiceAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  return target;
}

size_t GetGoogleServiceAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  size_t total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGoogleServiceAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetGoogleServiceAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGoogleServiceAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetGoogleServiceAccountRequest::MergeFrom(const GetGoogleServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetGoogleServiceAccountRequest::UnsafeMergeFrom(const GetGoogleServiceAccountRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
}

void GetGoogleServiceAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGoogleServiceAccountRequest::CopyFrom(const GetGoogleServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetGoogleServiceAccountRequest::IsInitialized() const {

  return true;
}

void GetGoogleServiceAccountRequest::Swap(GetGoogleServiceAccountRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetGoogleServiceAccountRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void GetGoogleServiceAccountRequest::UnsafeArenaSwap(GetGoogleServiceAccountRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetGoogleServiceAccountRequest::InternalSwap(GetGoogleServiceAccountRequest* other) {
  project_id_.Swap(&other->project_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGoogleServiceAccountRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGoogleServiceAccountRequest_descriptor_;
  metadata.reflection = GetGoogleServiceAccountRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGoogleServiceAccountRequest

// optional string project_id = 1;
void GetGoogleServiceAccountRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& GetGoogleServiceAccountRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetGoogleServiceAccountRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
void GetGoogleServiceAccountRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
void GetGoogleServiceAccountRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
::std::string* GetGoogleServiceAccountRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GetGoogleServiceAccountRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GetGoogleServiceAccountRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void GetGoogleServiceAccountRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
void GetGoogleServiceAccountRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}

inline const GetGoogleServiceAccountRequest* GetGoogleServiceAccountRequest::internal_default_instance() {
  return &GetGoogleServiceAccountRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void CreateTransferJobRequest::_slow_mutable_transfer_job() {
  transfer_job_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferJob >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::TransferJob* CreateTransferJobRequest::_slow_release_transfer_job() {
  if (transfer_job_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::TransferJob* temp = new ::google::storagetransfer::v1::TransferJob(*transfer_job_);
    transfer_job_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::TransferJob* CreateTransferJobRequest::unsafe_arena_release_transfer_job() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
  
  ::google::storagetransfer::v1::TransferJob* temp = transfer_job_;
  transfer_job_ = NULL;
  return temp;
}
void CreateTransferJobRequest::_slow_set_allocated_transfer_job(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferJob** transfer_job) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*transfer_job) == NULL) {
      message_arena->Own(*transfer_job);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*transfer_job)) {
      ::google::storagetransfer::v1::TransferJob* new_transfer_job = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferJob >(
            message_arena);
      new_transfer_job->CopyFrom(**transfer_job);
      *transfer_job = new_transfer_job;
    }
}
void CreateTransferJobRequest::unsafe_arena_set_allocated_transfer_job(
    ::google::storagetransfer::v1::TransferJob* transfer_job) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_job_;
  }
  transfer_job_ = transfer_job;
  if (transfer_job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTransferJobRequest::kTransferJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTransferJobRequest::CreateTransferJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.CreateTransferJobRequest)
}
CreateTransferJobRequest::CreateTransferJobRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.CreateTransferJobRequest)
}

void CreateTransferJobRequest::InitAsDefaultInstance() {
  transfer_job_ = const_cast< ::google::storagetransfer::v1::TransferJob*>(
      ::google::storagetransfer::v1::TransferJob::internal_default_instance());
}

CreateTransferJobRequest::CreateTransferJobRequest(const CreateTransferJobRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.CreateTransferJobRequest)
}

void CreateTransferJobRequest::SharedCtor() {
  transfer_job_ = NULL;
  _cached_size_ = 0;
}

CreateTransferJobRequest::~CreateTransferJobRequest() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.CreateTransferJobRequest)
  SharedDtor();
}

void CreateTransferJobRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &CreateTransferJobRequest_default_instance_.get()) {
    delete transfer_job_;
  }
}

void CreateTransferJobRequest::ArenaDtor(void* object) {
  CreateTransferJobRequest* _this = reinterpret_cast< CreateTransferJobRequest* >(object);
  (void)_this;
}
void CreateTransferJobRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CreateTransferJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTransferJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTransferJobRequest_descriptor_;
}

const CreateTransferJobRequest& CreateTransferJobRequest::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateTransferJobRequest> CreateTransferJobRequest_default_instance_;

CreateTransferJobRequest* CreateTransferJobRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CreateTransferJobRequest>(arena);
}

void CreateTransferJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.CreateTransferJobRequest)
  if (GetArenaNoVirtual() == NULL && transfer_job_ != NULL) delete transfer_job_;
  transfer_job_ = NULL;
}

bool CreateTransferJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.CreateTransferJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.storagetransfer.v1.TransferJob transfer_job = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_job()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.CreateTransferJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.CreateTransferJobRequest)
  return false;
#undef DO_
}

void CreateTransferJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.CreateTransferJobRequest)
  // optional .google.storagetransfer.v1.TransferJob transfer_job = 1;
  if (this->has_transfer_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->transfer_job_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.CreateTransferJobRequest)
}

::google::protobuf::uint8* CreateTransferJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.CreateTransferJobRequest)
  // optional .google.storagetransfer.v1.TransferJob transfer_job = 1;
  if (this->has_transfer_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->transfer_job_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.CreateTransferJobRequest)
  return target;
}

size_t CreateTransferJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.CreateTransferJobRequest)
  size_t total_size = 0;

  // optional .google.storagetransfer.v1.TransferJob transfer_job = 1;
  if (this->has_transfer_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transfer_job_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTransferJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.CreateTransferJobRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateTransferJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTransferJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.CreateTransferJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.CreateTransferJobRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateTransferJobRequest::MergeFrom(const CreateTransferJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.CreateTransferJobRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateTransferJobRequest::UnsafeMergeFrom(const CreateTransferJobRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_transfer_job()) {
    mutable_transfer_job()->::google::storagetransfer::v1::TransferJob::MergeFrom(from.transfer_job());
  }
}

void CreateTransferJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.CreateTransferJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTransferJobRequest::CopyFrom(const CreateTransferJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.CreateTransferJobRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateTransferJobRequest::IsInitialized() const {

  return true;
}

void CreateTransferJobRequest::Swap(CreateTransferJobRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateTransferJobRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void CreateTransferJobRequest::UnsafeArenaSwap(CreateTransferJobRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateTransferJobRequest::InternalSwap(CreateTransferJobRequest* other) {
  std::swap(transfer_job_, other->transfer_job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTransferJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTransferJobRequest_descriptor_;
  metadata.reflection = CreateTransferJobRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateTransferJobRequest

// optional .google.storagetransfer.v1.TransferJob transfer_job = 1;
bool CreateTransferJobRequest::has_transfer_job() const {
  return this != internal_default_instance() && transfer_job_ != NULL;
}
void CreateTransferJobRequest::clear_transfer_job() {
  if (GetArenaNoVirtual() == NULL && transfer_job_ != NULL) delete transfer_job_;
  transfer_job_ = NULL;
}
const ::google::storagetransfer::v1::TransferJob& CreateTransferJobRequest::transfer_job() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
  return transfer_job_ != NULL ? *transfer_job_
                         : *::google::storagetransfer::v1::TransferJob::internal_default_instance();
}
::google::storagetransfer::v1::TransferJob* CreateTransferJobRequest::mutable_transfer_job() {
  
  if (transfer_job_ == NULL) {
    _slow_mutable_transfer_job();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
  return transfer_job_;
}
::google::storagetransfer::v1::TransferJob* CreateTransferJobRequest::release_transfer_job() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_transfer_job();
  } else {
    ::google::storagetransfer::v1::TransferJob* temp = transfer_job_;
    transfer_job_ = NULL;
    return temp;
  }
}
 void CreateTransferJobRequest::set_allocated_transfer_job(::google::storagetransfer::v1::TransferJob* transfer_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_job_;
  }
  if (transfer_job != NULL) {
    _slow_set_allocated_transfer_job(message_arena, &transfer_job);
  }
  transfer_job_ = transfer_job;
  if (transfer_job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
}

inline const CreateTransferJobRequest* CreateTransferJobRequest::internal_default_instance() {
  return &CreateTransferJobRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void UpdateTransferJobRequest::_slow_mutable_transfer_job() {
  transfer_job_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferJob >(
      GetArenaNoVirtual());
}
::google::storagetransfer::v1::TransferJob* UpdateTransferJobRequest::_slow_release_transfer_job() {
  if (transfer_job_ == NULL) {
    return NULL;
  } else {
    ::google::storagetransfer::v1::TransferJob* temp = new ::google::storagetransfer::v1::TransferJob(*transfer_job_);
    transfer_job_ = NULL;
    return temp;
  }
}
::google::storagetransfer::v1::TransferJob* UpdateTransferJobRequest::unsafe_arena_release_transfer_job() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
  
  ::google::storagetransfer::v1::TransferJob* temp = transfer_job_;
  transfer_job_ = NULL;
  return temp;
}
void UpdateTransferJobRequest::_slow_set_allocated_transfer_job(
    ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferJob** transfer_job) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*transfer_job) == NULL) {
      message_arena->Own(*transfer_job);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*transfer_job)) {
      ::google::storagetransfer::v1::TransferJob* new_transfer_job = 
            ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferJob >(
            message_arena);
      new_transfer_job->CopyFrom(**transfer_job);
      *transfer_job = new_transfer_job;
    }
}
void UpdateTransferJobRequest::unsafe_arena_set_allocated_transfer_job(
    ::google::storagetransfer::v1::TransferJob* transfer_job) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_job_;
  }
  transfer_job_ = transfer_job;
  if (transfer_job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
}
void UpdateTransferJobRequest::_slow_mutable_update_transfer_job_field_mask() {
  update_transfer_job_field_mask_ = ::google::protobuf::Arena::Create< ::google::protobuf::FieldMask >(
      GetArenaNoVirtual());
}
::google::protobuf::FieldMask* UpdateTransferJobRequest::_slow_release_update_transfer_job_field_mask() {
  if (update_transfer_job_field_mask_ == NULL) {
    return NULL;
  } else {
    ::google::protobuf::FieldMask* temp = new ::google::protobuf::FieldMask(*update_transfer_job_field_mask_);
    update_transfer_job_field_mask_ = NULL;
    return temp;
  }
}
::google::protobuf::FieldMask* UpdateTransferJobRequest::unsafe_arena_release_update_transfer_job_field_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
  
  ::google::protobuf::FieldMask* temp = update_transfer_job_field_mask_;
  update_transfer_job_field_mask_ = NULL;
  return temp;
}
void UpdateTransferJobRequest::unsafe_arena_set_allocated_update_transfer_job_field_mask(
    ::google::protobuf::FieldMask* update_transfer_job_field_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_transfer_job_field_mask_;
  }
  update_transfer_job_field_mask_ = update_transfer_job_field_mask;
  if (update_transfer_job_field_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTransferJobRequest::kJobNameFieldNumber;
const int UpdateTransferJobRequest::kProjectIdFieldNumber;
const int UpdateTransferJobRequest::kTransferJobFieldNumber;
const int UpdateTransferJobRequest::kUpdateTransferJobFieldMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTransferJobRequest::UpdateTransferJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.UpdateTransferJobRequest)
}
UpdateTransferJobRequest::UpdateTransferJobRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.UpdateTransferJobRequest)
}

void UpdateTransferJobRequest::InitAsDefaultInstance() {
  transfer_job_ = const_cast< ::google::storagetransfer::v1::TransferJob*>(
      ::google::storagetransfer::v1::TransferJob::internal_default_instance());
  update_transfer_job_field_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}

UpdateTransferJobRequest::UpdateTransferJobRequest(const UpdateTransferJobRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.UpdateTransferJobRequest)
}

void UpdateTransferJobRequest::SharedCtor() {
  job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_job_ = NULL;
  update_transfer_job_field_mask_ = NULL;
  _cached_size_ = 0;
}

UpdateTransferJobRequest::~UpdateTransferJobRequest() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.UpdateTransferJobRequest)
  SharedDtor();
}

void UpdateTransferJobRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  job_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  project_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &UpdateTransferJobRequest_default_instance_.get()) {
    delete transfer_job_;
    delete update_transfer_job_field_mask_;
  }
}

void UpdateTransferJobRequest::ArenaDtor(void* object) {
  UpdateTransferJobRequest* _this = reinterpret_cast< UpdateTransferJobRequest* >(object);
  (void)_this;
}
void UpdateTransferJobRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UpdateTransferJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateTransferJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateTransferJobRequest_descriptor_;
}

const UpdateTransferJobRequest& UpdateTransferJobRequest::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateTransferJobRequest> UpdateTransferJobRequest_default_instance_;

UpdateTransferJobRequest* UpdateTransferJobRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UpdateTransferJobRequest>(arena);
}

void UpdateTransferJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && transfer_job_ != NULL) delete transfer_job_;
  transfer_job_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_transfer_job_field_mask_ != NULL) delete update_transfer_job_field_mask_;
  update_transfer_job_field_mask_ = NULL;
}

bool UpdateTransferJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string job_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_name().data(), this->job_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.UpdateTransferJobRequest.job_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_project_id;
        break;
      }

      // optional string project_id = 2;
      case 2: {
        if (tag == 18) {
         parse_project_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.UpdateTransferJobRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_transfer_job;
        break;
      }

      // optional .google.storagetransfer.v1.TransferJob transfer_job = 3;
      case 3: {
        if (tag == 26) {
         parse_transfer_job:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_job()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_update_transfer_job_field_mask;
        break;
      }

      // optional .google.protobuf.FieldMask update_transfer_job_field_mask = 4;
      case 4: {
        if (tag == 34) {
         parse_update_transfer_job_field_mask:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_update_transfer_job_field_mask()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.UpdateTransferJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.UpdateTransferJobRequest)
  return false;
#undef DO_
}

void UpdateTransferJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  // optional string job_name = 1;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.UpdateTransferJobRequest.job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->job_name(), output);
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.UpdateTransferJobRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_id(), output);
  }

  // optional .google.storagetransfer.v1.TransferJob transfer_job = 3;
  if (this->has_transfer_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->transfer_job_, output);
  }

  // optional .google.protobuf.FieldMask update_transfer_job_field_mask = 4;
  if (this->has_update_transfer_job_field_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->update_transfer_job_field_mask_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.UpdateTransferJobRequest)
}

::google::protobuf::uint8* UpdateTransferJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  // optional string job_name = 1;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.UpdateTransferJobRequest.job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->job_name(), target);
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.UpdateTransferJobRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_id(), target);
  }

  // optional .google.storagetransfer.v1.TransferJob transfer_job = 3;
  if (this->has_transfer_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->transfer_job_, false, target);
  }

  // optional .google.protobuf.FieldMask update_transfer_job_field_mask = 4;
  if (this->has_update_transfer_job_field_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->update_transfer_job_field_mask_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.UpdateTransferJobRequest)
  return target;
}

size_t UpdateTransferJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  size_t total_size = 0;

  // optional string job_name = 1;
  if (this->job_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_name());
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional .google.storagetransfer.v1.TransferJob transfer_job = 3;
  if (this->has_transfer_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transfer_job_);
  }

  // optional .google.protobuf.FieldMask update_transfer_job_field_mask = 4;
  if (this->has_update_transfer_job_field_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->update_transfer_job_field_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateTransferJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateTransferJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTransferJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.UpdateTransferJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.UpdateTransferJobRequest)
    UnsafeMergeFrom(*source);
  }
}

void UpdateTransferJobRequest::MergeFrom(const UpdateTransferJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateTransferJobRequest::UnsafeMergeFrom(const UpdateTransferJobRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.job_name().size() > 0) {
    set_job_name(from.job_name());
  }
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.has_transfer_job()) {
    mutable_transfer_job()->::google::storagetransfer::v1::TransferJob::MergeFrom(from.transfer_job());
  }
  if (from.has_update_transfer_job_field_mask()) {
    mutable_update_transfer_job_field_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_transfer_job_field_mask());
  }
}

void UpdateTransferJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTransferJobRequest::CopyFrom(const UpdateTransferJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.UpdateTransferJobRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateTransferJobRequest::IsInitialized() const {

  return true;
}

void UpdateTransferJobRequest::Swap(UpdateTransferJobRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateTransferJobRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void UpdateTransferJobRequest::UnsafeArenaSwap(UpdateTransferJobRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateTransferJobRequest::InternalSwap(UpdateTransferJobRequest* other) {
  job_name_.Swap(&other->job_name_);
  project_id_.Swap(&other->project_id_);
  std::swap(transfer_job_, other->transfer_job_);
  std::swap(update_transfer_job_field_mask_, other->update_transfer_job_field_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateTransferJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateTransferJobRequest_descriptor_;
  metadata.reflection = UpdateTransferJobRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateTransferJobRequest

// optional string job_name = 1;
void UpdateTransferJobRequest::clear_job_name() {
  job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& UpdateTransferJobRequest::job_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  return job_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateTransferJobRequest::set_job_name(const ::std::string& value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
void UpdateTransferJobRequest::set_job_name(const char* value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
void UpdateTransferJobRequest::set_job_name(const char* value,
    size_t size) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
::std::string* UpdateTransferJobRequest::mutable_job_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  return job_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* UpdateTransferJobRequest::release_job_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  
  return job_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* UpdateTransferJobRequest::unsafe_arena_release_job_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return job_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void UpdateTransferJobRequest::set_allocated_job_name(::std::string* job_name) {
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
void UpdateTransferJobRequest::unsafe_arena_set_allocated_job_name(
    ::std::string* job_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      job_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}

// optional string project_id = 2;
void UpdateTransferJobRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& UpdateTransferJobRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateTransferJobRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
void UpdateTransferJobRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
void UpdateTransferJobRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
::std::string* UpdateTransferJobRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* UpdateTransferJobRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* UpdateTransferJobRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void UpdateTransferJobRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
void UpdateTransferJobRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}

// optional .google.storagetransfer.v1.TransferJob transfer_job = 3;
bool UpdateTransferJobRequest::has_transfer_job() const {
  return this != internal_default_instance() && transfer_job_ != NULL;
}
void UpdateTransferJobRequest::clear_transfer_job() {
  if (GetArenaNoVirtual() == NULL && transfer_job_ != NULL) delete transfer_job_;
  transfer_job_ = NULL;
}
const ::google::storagetransfer::v1::TransferJob& UpdateTransferJobRequest::transfer_job() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
  return transfer_job_ != NULL ? *transfer_job_
                         : *::google::storagetransfer::v1::TransferJob::internal_default_instance();
}
::google::storagetransfer::v1::TransferJob* UpdateTransferJobRequest::mutable_transfer_job() {
  
  if (transfer_job_ == NULL) {
    _slow_mutable_transfer_job();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
  return transfer_job_;
}
::google::storagetransfer::v1::TransferJob* UpdateTransferJobRequest::release_transfer_job() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_transfer_job();
  } else {
    ::google::storagetransfer::v1::TransferJob* temp = transfer_job_;
    transfer_job_ = NULL;
    return temp;
  }
}
 void UpdateTransferJobRequest::set_allocated_transfer_job(::google::storagetransfer::v1::TransferJob* transfer_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_job_;
  }
  if (transfer_job != NULL) {
    _slow_set_allocated_transfer_job(message_arena, &transfer_job);
  }
  transfer_job_ = transfer_job;
  if (transfer_job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
}

// optional .google.protobuf.FieldMask update_transfer_job_field_mask = 4;
bool UpdateTransferJobRequest::has_update_transfer_job_field_mask() const {
  return this != internal_default_instance() && update_transfer_job_field_mask_ != NULL;
}
void UpdateTransferJobRequest::clear_update_transfer_job_field_mask() {
  if (GetArenaNoVirtual() == NULL && update_transfer_job_field_mask_ != NULL) delete update_transfer_job_field_mask_;
  update_transfer_job_field_mask_ = NULL;
}
const ::google::protobuf::FieldMask& UpdateTransferJobRequest::update_transfer_job_field_mask() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
  return update_transfer_job_field_mask_ != NULL ? *update_transfer_job_field_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
::google::protobuf::FieldMask* UpdateTransferJobRequest::mutable_update_transfer_job_field_mask() {
  
  if (update_transfer_job_field_mask_ == NULL) {
    _slow_mutable_update_transfer_job_field_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
  return update_transfer_job_field_mask_;
}
::google::protobuf::FieldMask* UpdateTransferJobRequest::release_update_transfer_job_field_mask() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_transfer_job_field_mask();
  } else {
    ::google::protobuf::FieldMask* temp = update_transfer_job_field_mask_;
    update_transfer_job_field_mask_ = NULL;
    return temp;
  }
}
 void UpdateTransferJobRequest::set_allocated_update_transfer_job_field_mask(::google::protobuf::FieldMask* update_transfer_job_field_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_transfer_job_field_mask_;
  }
  if (update_transfer_job_field_mask != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(update_transfer_job_field_mask);
    }
  }
  update_transfer_job_field_mask_ = update_transfer_job_field_mask;
  if (update_transfer_job_field_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
}

inline const UpdateTransferJobRequest* UpdateTransferJobRequest::internal_default_instance() {
  return &UpdateTransferJobRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTransferJobRequest::kJobNameFieldNumber;
const int GetTransferJobRequest::kProjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTransferJobRequest::GetTransferJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.GetTransferJobRequest)
}
GetTransferJobRequest::GetTransferJobRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.GetTransferJobRequest)
}

void GetTransferJobRequest::InitAsDefaultInstance() {
}

GetTransferJobRequest::GetTransferJobRequest(const GetTransferJobRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.GetTransferJobRequest)
}

void GetTransferJobRequest::SharedCtor() {
  job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetTransferJobRequest::~GetTransferJobRequest() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.GetTransferJobRequest)
  SharedDtor();
}

void GetTransferJobRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  job_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  project_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void GetTransferJobRequest::ArenaDtor(void* object) {
  GetTransferJobRequest* _this = reinterpret_cast< GetTransferJobRequest* >(object);
  (void)_this;
}
void GetTransferJobRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetTransferJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTransferJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTransferJobRequest_descriptor_;
}

const GetTransferJobRequest& GetTransferJobRequest::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetTransferJobRequest> GetTransferJobRequest_default_instance_;

GetTransferJobRequest* GetTransferJobRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetTransferJobRequest>(arena);
}

void GetTransferJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.GetTransferJobRequest)
  job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool GetTransferJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.GetTransferJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string job_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_name().data(), this->job_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.GetTransferJobRequest.job_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_project_id;
        break;
      }

      // optional string project_id = 2;
      case 2: {
        if (tag == 18) {
         parse_project_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.GetTransferJobRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.GetTransferJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.GetTransferJobRequest)
  return false;
#undef DO_
}

void GetTransferJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.GetTransferJobRequest)
  // optional string job_name = 1;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GetTransferJobRequest.job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->job_name(), output);
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GetTransferJobRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.GetTransferJobRequest)
}

::google::protobuf::uint8* GetTransferJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.GetTransferJobRequest)
  // optional string job_name = 1;
  if (this->job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GetTransferJobRequest.job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->job_name(), target);
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GetTransferJobRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.GetTransferJobRequest)
  return target;
}

size_t GetTransferJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.GetTransferJobRequest)
  size_t total_size = 0;

  // optional string job_name = 1;
  if (this->job_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_name());
  }

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTransferJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.GetTransferJobRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetTransferJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTransferJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.GetTransferJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.GetTransferJobRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetTransferJobRequest::MergeFrom(const GetTransferJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.GetTransferJobRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetTransferJobRequest::UnsafeMergeFrom(const GetTransferJobRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.job_name().size() > 0) {
    set_job_name(from.job_name());
  }
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
}

void GetTransferJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.GetTransferJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransferJobRequest::CopyFrom(const GetTransferJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.GetTransferJobRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetTransferJobRequest::IsInitialized() const {

  return true;
}

void GetTransferJobRequest::Swap(GetTransferJobRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetTransferJobRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void GetTransferJobRequest::UnsafeArenaSwap(GetTransferJobRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetTransferJobRequest::InternalSwap(GetTransferJobRequest* other) {
  job_name_.Swap(&other->job_name_);
  project_id_.Swap(&other->project_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTransferJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTransferJobRequest_descriptor_;
  metadata.reflection = GetTransferJobRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTransferJobRequest

// optional string job_name = 1;
void GetTransferJobRequest::clear_job_name() {
  job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& GetTransferJobRequest::job_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  return job_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetTransferJobRequest::set_job_name(const ::std::string& value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
void GetTransferJobRequest::set_job_name(const char* value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
void GetTransferJobRequest::set_job_name(const char* value,
    size_t size) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
::std::string* GetTransferJobRequest::mutable_job_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  return job_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GetTransferJobRequest::release_job_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  
  return job_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GetTransferJobRequest::unsafe_arena_release_job_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return job_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void GetTransferJobRequest::set_allocated_job_name(::std::string* job_name) {
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
void GetTransferJobRequest::unsafe_arena_set_allocated_job_name(
    ::std::string* job_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      job_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}

// optional string project_id = 2;
void GetTransferJobRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& GetTransferJobRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetTransferJobRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
void GetTransferJobRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
void GetTransferJobRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
::std::string* GetTransferJobRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GetTransferJobRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* GetTransferJobRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void GetTransferJobRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
void GetTransferJobRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}

inline const GetTransferJobRequest* GetTransferJobRequest::internal_default_instance() {
  return &GetTransferJobRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferJobsRequest::kFilterFieldNumber;
const int ListTransferJobsRequest::kPageSizeFieldNumber;
const int ListTransferJobsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferJobsRequest::ListTransferJobsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ListTransferJobsRequest)
}
ListTransferJobsRequest::ListTransferJobsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ListTransferJobsRequest)
}

void ListTransferJobsRequest::InitAsDefaultInstance() {
}

ListTransferJobsRequest::ListTransferJobsRequest(const ListTransferJobsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ListTransferJobsRequest)
}

void ListTransferJobsRequest::SharedCtor() {
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListTransferJobsRequest::~ListTransferJobsRequest() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ListTransferJobsRequest)
  SharedDtor();
}

void ListTransferJobsRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  filter_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  page_token_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ListTransferJobsRequest::ArenaDtor(void* object) {
  ListTransferJobsRequest* _this = reinterpret_cast< ListTransferJobsRequest* >(object);
  (void)_this;
}
void ListTransferJobsRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListTransferJobsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTransferJobsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTransferJobsRequest_descriptor_;
}

const ListTransferJobsRequest& ListTransferJobsRequest::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListTransferJobsRequest> ListTransferJobsRequest_default_instance_;

ListTransferJobsRequest* ListTransferJobsRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListTransferJobsRequest>(arena);
}

void ListTransferJobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ListTransferJobsRequest)
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ListTransferJobsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ListTransferJobsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filter = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ListTransferJobsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 4;
      case 4: {
        if (tag == 32) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_page_token;
        break;
      }

      // optional string page_token = 5;
      case 5: {
        if (tag == 42) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ListTransferJobsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ListTransferJobsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ListTransferJobsRequest)
  return false;
#undef DO_
}

void ListTransferJobsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ListTransferJobsRequest)
  // optional string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ListTransferJobsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter(), output);
  }

  // optional int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  // optional string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ListTransferJobsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ListTransferJobsRequest)
}

::google::protobuf::uint8* ListTransferJobsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ListTransferJobsRequest)
  // optional string filter = 1;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ListTransferJobsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter(), target);
  }

  // optional int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  // optional string page_token = 5;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ListTransferJobsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ListTransferJobsRequest)
  return target;
}

size_t ListTransferJobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ListTransferJobsRequest)
  size_t total_size = 0;

  // optional string filter = 1;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // optional int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 5;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTransferJobsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ListTransferJobsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListTransferJobsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferJobsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ListTransferJobsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ListTransferJobsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListTransferJobsRequest::MergeFrom(const ListTransferJobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ListTransferJobsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListTransferJobsRequest::UnsafeMergeFrom(const ListTransferJobsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.filter().size() > 0) {
    set_filter(from.filter());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
}

void ListTransferJobsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ListTransferJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferJobsRequest::CopyFrom(const ListTransferJobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ListTransferJobsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListTransferJobsRequest::IsInitialized() const {

  return true;
}

void ListTransferJobsRequest::Swap(ListTransferJobsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListTransferJobsRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ListTransferJobsRequest::UnsafeArenaSwap(ListTransferJobsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListTransferJobsRequest::InternalSwap(ListTransferJobsRequest* other) {
  filter_.Swap(&other->filter_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTransferJobsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTransferJobsRequest_descriptor_;
  metadata.reflection = ListTransferJobsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTransferJobsRequest

// optional string filter = 1;
void ListTransferJobsRequest::clear_filter() {
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListTransferJobsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  return filter_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTransferJobsRequest::set_filter(const ::std::string& value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
void ListTransferJobsRequest::set_filter(const char* value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
void ListTransferJobsRequest::set_filter(const char* value,
    size_t size) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
::std::string* ListTransferJobsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  return filter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListTransferJobsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  
  return filter_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListTransferJobsRequest::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return filter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListTransferJobsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
void ListTransferJobsRequest::unsafe_arena_set_allocated_filter(
    ::std::string* filter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      filter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}

// optional int32 page_size = 4;
void ListTransferJobsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListTransferJobsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsRequest.page_size)
  return page_size_;
}
void ListTransferJobsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsRequest.page_size)
}

// optional string page_token = 5;
void ListTransferJobsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListTransferJobsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  return page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTransferJobsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
void ListTransferJobsRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
void ListTransferJobsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
::std::string* ListTransferJobsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListTransferJobsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListTransferJobsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListTransferJobsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
void ListTransferJobsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}

inline const ListTransferJobsRequest* ListTransferJobsRequest::internal_default_instance() {
  return &ListTransferJobsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferJobsResponse::kTransferJobsFieldNumber;
const int ListTransferJobsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferJobsResponse::ListTransferJobsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ListTransferJobsResponse)
}
ListTransferJobsResponse::ListTransferJobsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  transfer_jobs_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ListTransferJobsResponse)
}

void ListTransferJobsResponse::InitAsDefaultInstance() {
}

ListTransferJobsResponse::ListTransferJobsResponse(const ListTransferJobsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ListTransferJobsResponse)
}

void ListTransferJobsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTransferJobsResponse::~ListTransferJobsResponse() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ListTransferJobsResponse)
  SharedDtor();
}

void ListTransferJobsResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  next_page_token_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ListTransferJobsResponse::ArenaDtor(void* object) {
  ListTransferJobsResponse* _this = reinterpret_cast< ListTransferJobsResponse* >(object);
  (void)_this;
}
void ListTransferJobsResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ListTransferJobsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTransferJobsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTransferJobsResponse_descriptor_;
}

const ListTransferJobsResponse& ListTransferJobsResponse::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListTransferJobsResponse> ListTransferJobsResponse_default_instance_;

ListTransferJobsResponse* ListTransferJobsResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ListTransferJobsResponse>(arena);
}

void ListTransferJobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ListTransferJobsResponse)
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  transfer_jobs_.Clear();
}

bool ListTransferJobsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ListTransferJobsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.storagetransfer.v1.TransferJob transfer_jobs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_transfer_jobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_transfer_jobs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_transfer_jobs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ListTransferJobsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ListTransferJobsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ListTransferJobsResponse)
  return false;
#undef DO_
}

void ListTransferJobsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ListTransferJobsResponse)
  // repeated .google.storagetransfer.v1.TransferJob transfer_jobs = 1;
  for (unsigned int i = 0, n = this->transfer_jobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transfer_jobs(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ListTransferJobsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ListTransferJobsResponse)
}

::google::protobuf::uint8* ListTransferJobsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ListTransferJobsResponse)
  // repeated .google.storagetransfer.v1.TransferJob transfer_jobs = 1;
  for (unsigned int i = 0, n = this->transfer_jobs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->transfer_jobs(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ListTransferJobsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ListTransferJobsResponse)
  return target;
}

size_t ListTransferJobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ListTransferJobsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.storagetransfer.v1.TransferJob transfer_jobs = 1;
  {
    unsigned int count = this->transfer_jobs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transfer_jobs(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTransferJobsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ListTransferJobsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListTransferJobsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferJobsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ListTransferJobsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ListTransferJobsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListTransferJobsResponse::MergeFrom(const ListTransferJobsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ListTransferJobsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListTransferJobsResponse::UnsafeMergeFrom(const ListTransferJobsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  transfer_jobs_.MergeFrom(from.transfer_jobs_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
}

void ListTransferJobsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ListTransferJobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferJobsResponse::CopyFrom(const ListTransferJobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ListTransferJobsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListTransferJobsResponse::IsInitialized() const {

  return true;
}

void ListTransferJobsResponse::Swap(ListTransferJobsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListTransferJobsResponse temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ListTransferJobsResponse::UnsafeArenaSwap(ListTransferJobsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListTransferJobsResponse::InternalSwap(ListTransferJobsResponse* other) {
  transfer_jobs_.UnsafeArenaSwap(&other->transfer_jobs_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTransferJobsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTransferJobsResponse_descriptor_;
  metadata.reflection = ListTransferJobsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTransferJobsResponse

// repeated .google.storagetransfer.v1.TransferJob transfer_jobs = 1;
int ListTransferJobsResponse::transfer_jobs_size() const {
  return transfer_jobs_.size();
}
void ListTransferJobsResponse::clear_transfer_jobs() {
  transfer_jobs_.Clear();
}
const ::google::storagetransfer::v1::TransferJob& ListTransferJobsResponse::transfer_jobs(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_.Get(index);
}
::google::storagetransfer::v1::TransferJob* ListTransferJobsResponse::mutable_transfer_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_.Mutable(index);
}
::google::storagetransfer::v1::TransferJob* ListTransferJobsResponse::add_transfer_jobs() {
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::TransferJob >*
ListTransferJobsResponse::mutable_transfer_jobs() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return &transfer_jobs_;
}
const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::TransferJob >&
ListTransferJobsResponse::transfer_jobs() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_;
}

// optional string next_page_token = 2;
void ListTransferJobsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ListTransferJobsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  return next_page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTransferJobsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
void ListTransferJobsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
void ListTransferJobsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
::std::string* ListTransferJobsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListTransferJobsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ListTransferJobsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ListTransferJobsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
void ListTransferJobsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}

inline const ListTransferJobsResponse* ListTransferJobsResponse::internal_default_instance() {
  return &ListTransferJobsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PauseTransferOperationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PauseTransferOperationRequest::PauseTransferOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.PauseTransferOperationRequest)
}
PauseTransferOperationRequest::PauseTransferOperationRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.PauseTransferOperationRequest)
}

void PauseTransferOperationRequest::InitAsDefaultInstance() {
}

PauseTransferOperationRequest::PauseTransferOperationRequest(const PauseTransferOperationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.PauseTransferOperationRequest)
}

void PauseTransferOperationRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PauseTransferOperationRequest::~PauseTransferOperationRequest() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.PauseTransferOperationRequest)
  SharedDtor();
}

void PauseTransferOperationRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void PauseTransferOperationRequest::ArenaDtor(void* object) {
  PauseTransferOperationRequest* _this = reinterpret_cast< PauseTransferOperationRequest* >(object);
  (void)_this;
}
void PauseTransferOperationRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PauseTransferOperationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PauseTransferOperationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PauseTransferOperationRequest_descriptor_;
}

const PauseTransferOperationRequest& PauseTransferOperationRequest::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PauseTransferOperationRequest> PauseTransferOperationRequest_default_instance_;

PauseTransferOperationRequest* PauseTransferOperationRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<PauseTransferOperationRequest>(arena);
}

void PauseTransferOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool PauseTransferOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.PauseTransferOperationRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.PauseTransferOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.PauseTransferOperationRequest)
  return false;
#undef DO_
}

void PauseTransferOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.PauseTransferOperationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.PauseTransferOperationRequest)
}

::google::protobuf::uint8* PauseTransferOperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.PauseTransferOperationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.PauseTransferOperationRequest)
  return target;
}

size_t PauseTransferOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PauseTransferOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PauseTransferOperationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PauseTransferOperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.PauseTransferOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.PauseTransferOperationRequest)
    UnsafeMergeFrom(*source);
  }
}

void PauseTransferOperationRequest::MergeFrom(const PauseTransferOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PauseTransferOperationRequest::UnsafeMergeFrom(const PauseTransferOperationRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void PauseTransferOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseTransferOperationRequest::CopyFrom(const PauseTransferOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.PauseTransferOperationRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PauseTransferOperationRequest::IsInitialized() const {

  return true;
}

void PauseTransferOperationRequest::Swap(PauseTransferOperationRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PauseTransferOperationRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void PauseTransferOperationRequest::UnsafeArenaSwap(PauseTransferOperationRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PauseTransferOperationRequest::InternalSwap(PauseTransferOperationRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PauseTransferOperationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PauseTransferOperationRequest_descriptor_;
  metadata.reflection = PauseTransferOperationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PauseTransferOperationRequest

// optional string name = 1;
void PauseTransferOperationRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& PauseTransferOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PauseTransferOperationRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
void PauseTransferOperationRequest::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
void PauseTransferOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
::std::string* PauseTransferOperationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* PauseTransferOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* PauseTransferOperationRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void PauseTransferOperationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
void PauseTransferOperationRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}

inline const PauseTransferOperationRequest* PauseTransferOperationRequest::internal_default_instance() {
  return &PauseTransferOperationRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResumeTransferOperationRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeTransferOperationRequest::ResumeTransferOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ResumeTransferOperationRequest)
}
ResumeTransferOperationRequest::ResumeTransferOperationRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ResumeTransferOperationRequest)
}

void ResumeTransferOperationRequest::InitAsDefaultInstance() {
}

ResumeTransferOperationRequest::ResumeTransferOperationRequest(const ResumeTransferOperationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ResumeTransferOperationRequest)
}

void ResumeTransferOperationRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ResumeTransferOperationRequest::~ResumeTransferOperationRequest() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ResumeTransferOperationRequest)
  SharedDtor();
}

void ResumeTransferOperationRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ResumeTransferOperationRequest::ArenaDtor(void* object) {
  ResumeTransferOperationRequest* _this = reinterpret_cast< ResumeTransferOperationRequest* >(object);
  (void)_this;
}
void ResumeTransferOperationRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ResumeTransferOperationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResumeTransferOperationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResumeTransferOperationRequest_descriptor_;
}

const ResumeTransferOperationRequest& ResumeTransferOperationRequest::default_instance() {
  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResumeTransferOperationRequest> ResumeTransferOperationRequest_default_instance_;

ResumeTransferOperationRequest* ResumeTransferOperationRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ResumeTransferOperationRequest>(arena);
}

void ResumeTransferOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ResumeTransferOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ResumeTransferOperationRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ResumeTransferOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ResumeTransferOperationRequest)
  return false;
#undef DO_
}

void ResumeTransferOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ResumeTransferOperationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ResumeTransferOperationRequest)
}

::google::protobuf::uint8* ResumeTransferOperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ResumeTransferOperationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ResumeTransferOperationRequest)
  return target;
}

size_t ResumeTransferOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResumeTransferOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResumeTransferOperationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResumeTransferOperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ResumeTransferOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ResumeTransferOperationRequest)
    UnsafeMergeFrom(*source);
  }
}

void ResumeTransferOperationRequest::MergeFrom(const ResumeTransferOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResumeTransferOperationRequest::UnsafeMergeFrom(const ResumeTransferOperationRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void ResumeTransferOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeTransferOperationRequest::CopyFrom(const ResumeTransferOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ResumeTransferOperationRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResumeTransferOperationRequest::IsInitialized() const {

  return true;
}

void ResumeTransferOperationRequest::Swap(ResumeTransferOperationRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ResumeTransferOperationRequest temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ResumeTransferOperationRequest::UnsafeArenaSwap(ResumeTransferOperationRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ResumeTransferOperationRequest::InternalSwap(ResumeTransferOperationRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResumeTransferOperationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResumeTransferOperationRequest_descriptor_;
  metadata.reflection = ResumeTransferOperationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResumeTransferOperationRequest

// optional string name = 1;
void ResumeTransferOperationRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ResumeTransferOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResumeTransferOperationRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
void ResumeTransferOperationRequest::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
void ResumeTransferOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
::std::string* ResumeTransferOperationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResumeTransferOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ResumeTransferOperationRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ResumeTransferOperationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
void ResumeTransferOperationRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}

inline const ResumeTransferOperationRequest* ResumeTransferOperationRequest::internal_default_instance() {
  return &ResumeTransferOperationRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace storagetransfer
}  // namespace google

// @@protoc_insertion_point(global_scope)
