// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/clouderrorreporting/v1beta1/report_errors_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

namespace {

const ::google::protobuf::Descriptor* ReportErrorEventRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportErrorEventRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportErrorEventResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportErrorEventResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportedErrorEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportedErrorEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto() {
  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto");
  GOOGLE_CHECK(file != NULL);
  ReportErrorEventRequest_descriptor_ = file->message_type(0);
  static const int ReportErrorEventRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorEventRequest, project_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorEventRequest, event_),
  };
  ReportErrorEventRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportErrorEventRequest_descriptor_,
      ReportErrorEventRequest::internal_default_instance(),
      ReportErrorEventRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportErrorEventRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorEventRequest, _internal_metadata_));
  ReportErrorEventResponse_descriptor_ = file->message_type(1);
  static const int ReportErrorEventResponse_offsets_[1] = {
  };
  ReportErrorEventResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportErrorEventResponse_descriptor_,
      ReportErrorEventResponse::internal_default_instance(),
      ReportErrorEventResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportErrorEventResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorEventResponse, _internal_metadata_));
  ReportedErrorEvent_descriptor_ = file->message_type(2);
  static const int ReportedErrorEvent_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportedErrorEvent, event_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportedErrorEvent, service_context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportedErrorEvent, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportedErrorEvent, context_),
  };
  ReportedErrorEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportedErrorEvent_descriptor_,
      ReportedErrorEvent::internal_default_instance(),
      ReportedErrorEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportedErrorEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportedErrorEvent, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportErrorEventRequest_descriptor_, ReportErrorEventRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportErrorEventResponse_descriptor_, ReportErrorEventResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportedErrorEvent_descriptor_, ReportedErrorEvent::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto() {
  ReportErrorEventRequest_default_instance_.Shutdown();
  delete ReportErrorEventRequest_reflection_;
  ReportErrorEventResponse_default_instance_.Shutdown();
  delete ReportErrorEventResponse_reflection_;
  ReportedErrorEvent_default_instance_.Shutdown();
  delete ReportedErrorEvent_reflection_;
}

void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::devtools::clouderrorreporting::v1beta1::protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ReportErrorEventRequest_default_instance_.DefaultConstruct();
  ReportErrorEventResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReportedErrorEvent_default_instance_.DefaultConstruct();
  ReportErrorEventRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportErrorEventResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportedErrorEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_once_);
void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_once_,
                 &protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_impl);
}
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nGgoogle/devtools/clouderrorreporting/v1"
    "beta1/report_errors_service.proto\022+googl"
    "e.devtools.clouderrorreporting.v1beta1\032\034"
    "google/api/annotations.proto\0328google/dev"
    "tools/clouderrorreporting/v1beta1/common"
    ".proto\032\037google/protobuf/timestamp.proto\""
    "\177\n\027ReportErrorEventRequest\022\024\n\014project_na"
    "me\030\001 \001(\t\022N\n\005event\030\002 \001(\0132\?.google.devtool"
    "s.clouderrorreporting.v1beta1.ReportedEr"
    "rorEvent\"\032\n\030ReportErrorEventResponse\"\367\001\n"
    "\022ReportedErrorEvent\022.\n\nevent_time\030\001 \001(\0132"
    "\032.google.protobuf.Timestamp\022T\n\017service_c"
    "ontext\030\002 \001(\0132;.google.devtools.clouderro"
    "rreporting.v1beta1.ServiceContext\022\017\n\007mes"
    "sage\030\003 \001(\t\022J\n\007context\030\004 \001(\01329.google.dev"
    "tools.clouderrorreporting.v1beta1.ErrorC"
    "ontext2\370\001\n\023ReportErrorsService\022\340\001\n\020Repor"
    "tErrorEvent\022D.google.devtools.clouderror"
    "reporting.v1beta1.ReportErrorEventReques"
    "t\032E.google.devtools.clouderrorreporting."
    "v1beta1.ReportErrorEventResponse\"\?\202\323\344\223\0029"
    "\"0/v1beta1/{project_name=projects/*}/eve"
    "nts:report:\005eventB\323\001\n/com.google.devtool"
    "s.clouderrorreporting.v1beta1B\030ReportErr"
    "orsServiceProtoP\001Z^google.golang.org/gen"
    "proto/googleapis/devtools/clouderrorrepo"
    "rting/v1beta1;clouderrorreporting\252\002#Goog"
    "le.Cloud.ErrorReporting.V1Beta1b\006proto3", 1119);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::devtools::clouderrorreporting::v1beta1::protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2fcommon_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_once_);
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_once_,
                 &protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto {
  StaticDescriptorInitializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto() {
    protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  }
} static_descriptor_initializer_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportErrorEventRequest::kProjectNameFieldNumber;
const int ReportErrorEventRequest::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorEventRequest::ReportErrorEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
}

void ReportErrorEventRequest::InitAsDefaultInstance() {
  event_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent*>(
      ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent::internal_default_instance());
}

ReportErrorEventRequest::ReportErrorEventRequest(const ReportErrorEventRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
}

void ReportErrorEventRequest::SharedCtor() {
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_ = NULL;
  _cached_size_ = 0;
}

ReportErrorEventRequest::~ReportErrorEventRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  SharedDtor();
}

void ReportErrorEventRequest::SharedDtor() {
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ReportErrorEventRequest_default_instance_.get()) {
    delete event_;
  }
}

void ReportErrorEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportErrorEventRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportErrorEventRequest_descriptor_;
}

const ReportErrorEventRequest& ReportErrorEventRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportErrorEventRequest> ReportErrorEventRequest_default_instance_;

ReportErrorEventRequest* ReportErrorEventRequest::New(::google::protobuf::Arena* arena) const {
  ReportErrorEventRequest* n = new ReportErrorEventRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportErrorEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}

bool ReportErrorEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), this->project_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_event;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
      case 2: {
        if (tag == 18) {
         parse_event:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  return false;
#undef DO_
}

void ReportErrorEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_name(), output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->event_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
}

::google::protobuf::uint8* ReportErrorEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_name(), target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->event_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  return target;
}

size_t ReportErrorEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  size_t total_size = 0;

  // optional string project_name = 1;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportErrorEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportErrorEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
    UnsafeMergeFrom(*source);
  }
}

void ReportErrorEventRequest::MergeFrom(const ReportErrorEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportErrorEventRequest::UnsafeMergeFrom(const ReportErrorEventRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.has_event()) {
    mutable_event()->::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent::MergeFrom(from.event());
  }
}

void ReportErrorEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorEventRequest::CopyFrom(const ReportErrorEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportErrorEventRequest::IsInitialized() const {

  return true;
}

void ReportErrorEventRequest::Swap(ReportErrorEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorEventRequest::InternalSwap(ReportErrorEventRequest* other) {
  project_name_.Swap(&other->project_name_);
  std::swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportErrorEventRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportErrorEventRequest_descriptor_;
  metadata.reflection = ReportErrorEventRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportErrorEventRequest

// optional string project_name = 1;
void ReportErrorEventRequest::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReportErrorEventRequest::project_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name)
  return project_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportErrorEventRequest::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name)
}
void ReportErrorEventRequest::set_project_name(const char* value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name)
}
void ReportErrorEventRequest::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name)
}
::std::string* ReportErrorEventRequest::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReportErrorEventRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportErrorEventRequest::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.project_name)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent event = 2;
bool ReportErrorEventRequest::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
void ReportErrorEventRequest::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent& ReportErrorEventRequest::event() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.event)
  return event_ != NULL ? *event_
                         : *::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent* ReportErrorEventRequest::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.event)
  return event_;
}
::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent* ReportErrorEventRequest::release_event() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.event)
  
  ::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent* temp = event_;
  event_ = NULL;
  return temp;
}
void ReportErrorEventRequest::set_allocated_event(::google::devtools::clouderrorreporting::v1beta1::ReportedErrorEvent* event) {
  delete event_;
  event_ = event;
  if (event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest.event)
}

inline const ReportErrorEventRequest* ReportErrorEventRequest::internal_default_instance() {
  return &ReportErrorEventRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportErrorEventResponse::ReportErrorEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
}

void ReportErrorEventResponse::InitAsDefaultInstance() {
}

ReportErrorEventResponse::ReportErrorEventResponse(const ReportErrorEventResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
}

void ReportErrorEventResponse::SharedCtor() {
  _cached_size_ = 0;
}

ReportErrorEventResponse::~ReportErrorEventResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  SharedDtor();
}

void ReportErrorEventResponse::SharedDtor() {
}

void ReportErrorEventResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportErrorEventResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportErrorEventResponse_descriptor_;
}

const ReportErrorEventResponse& ReportErrorEventResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportErrorEventResponse> ReportErrorEventResponse_default_instance_;

ReportErrorEventResponse* ReportErrorEventResponse::New(::google::protobuf::Arena* arena) const {
  ReportErrorEventResponse* n = new ReportErrorEventResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportErrorEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
}

bool ReportErrorEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  return false;
#undef DO_
}

void ReportErrorEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
}

::google::protobuf::uint8* ReportErrorEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  return target;
}

size_t ReportErrorEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportErrorEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportErrorEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportErrorEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
    UnsafeMergeFrom(*source);
  }
}

void ReportErrorEventResponse::MergeFrom(const ReportErrorEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportErrorEventResponse::UnsafeMergeFrom(const ReportErrorEventResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void ReportErrorEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorEventResponse::CopyFrom(const ReportErrorEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportErrorEventResponse::IsInitialized() const {

  return true;
}

void ReportErrorEventResponse::Swap(ReportErrorEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportErrorEventResponse::InternalSwap(ReportErrorEventResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportErrorEventResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportErrorEventResponse_descriptor_;
  metadata.reflection = ReportErrorEventResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportErrorEventResponse

inline const ReportErrorEventResponse* ReportErrorEventResponse::internal_default_instance() {
  return &ReportErrorEventResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedErrorEvent::kEventTimeFieldNumber;
const int ReportedErrorEvent::kServiceContextFieldNumber;
const int ReportedErrorEvent::kMessageFieldNumber;
const int ReportedErrorEvent::kContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedErrorEvent::ReportedErrorEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
}

void ReportedErrorEvent::InitAsDefaultInstance() {
  event_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  service_context_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext*>(
      ::google::devtools::clouderrorreporting::v1beta1::ServiceContext::internal_default_instance());
  context_ = const_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorContext*>(
      ::google::devtools::clouderrorreporting::v1beta1::ErrorContext::internal_default_instance());
}

ReportedErrorEvent::ReportedErrorEvent(const ReportedErrorEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
}

void ReportedErrorEvent::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_time_ = NULL;
  service_context_ = NULL;
  context_ = NULL;
  _cached_size_ = 0;
}

ReportedErrorEvent::~ReportedErrorEvent() {
  // @@protoc_insertion_point(destructor:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  SharedDtor();
}

void ReportedErrorEvent::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ReportedErrorEvent_default_instance_.get()) {
    delete event_time_;
    delete service_context_;
    delete context_;
  }
}

void ReportedErrorEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportedErrorEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportedErrorEvent_descriptor_;
}

const ReportedErrorEvent& ReportedErrorEvent::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2freport_5ferrors_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportedErrorEvent> ReportedErrorEvent_default_instance_;

ReportedErrorEvent* ReportedErrorEvent::New(::google::protobuf::Arena* arena) const {
  ReportedErrorEvent* n = new ReportedErrorEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportedErrorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) delete event_time_;
  event_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && service_context_ != NULL) delete service_context_;
  service_context_ = NULL;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}

bool ReportedErrorEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Timestamp event_time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_service_context;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
      case 2: {
        if (tag == 18) {
         parse_service_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_service_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional string message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_context;
        break;
      }

      // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
      case 4: {
        if (tag == 34) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  return false;
#undef DO_
}

void ReportedErrorEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  // optional .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->event_time_, output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->service_context_, output);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->context_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
}

::google::protobuf::uint8* ReportedErrorEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  // optional .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->event_time_, false, target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->service_context_, false, target);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->context_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  return target;
}

size_t ReportedErrorEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  size_t total_size = 0;

  // optional .google.protobuf.Timestamp event_time = 1;
  if (this->has_event_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->event_time_);
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
  if (this->has_service_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->service_context_);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportedErrorEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportedErrorEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedErrorEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
    UnsafeMergeFrom(*source);
  }
}

void ReportedErrorEvent::MergeFrom(const ReportedErrorEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportedErrorEvent::UnsafeMergeFrom(const ReportedErrorEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_event_time()) {
    mutable_event_time()->::google::protobuf::Timestamp::MergeFrom(from.event_time());
  }
  if (from.has_service_context()) {
    mutable_service_context()->::google::devtools::clouderrorreporting::v1beta1::ServiceContext::MergeFrom(from.service_context());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_context()) {
    mutable_context()->::google::devtools::clouderrorreporting::v1beta1::ErrorContext::MergeFrom(from.context());
  }
}

void ReportedErrorEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedErrorEvent::CopyFrom(const ReportedErrorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportedErrorEvent::IsInitialized() const {

  return true;
}

void ReportedErrorEvent::Swap(ReportedErrorEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedErrorEvent::InternalSwap(ReportedErrorEvent* other) {
  std::swap(event_time_, other->event_time_);
  std::swap(service_context_, other->service_context_);
  message_.Swap(&other->message_);
  std::swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportedErrorEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportedErrorEvent_descriptor_;
  metadata.reflection = ReportedErrorEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportedErrorEvent

// optional .google.protobuf.Timestamp event_time = 1;
bool ReportedErrorEvent::has_event_time() const {
  return this != internal_default_instance() && event_time_ != NULL;
}
void ReportedErrorEvent::clear_event_time() {
  if (GetArenaNoVirtual() == NULL && event_time_ != NULL) delete event_time_;
  event_time_ = NULL;
}
const ::google::protobuf::Timestamp& ReportedErrorEvent::event_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.event_time)
  return event_time_ != NULL ? *event_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ReportedErrorEvent::mutable_event_time() {
  
  if (event_time_ == NULL) {
    event_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.event_time)
  return event_time_;
}
::google::protobuf::Timestamp* ReportedErrorEvent::release_event_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.event_time)
  
  ::google::protobuf::Timestamp* temp = event_time_;
  event_time_ = NULL;
  return temp;
}
void ReportedErrorEvent::set_allocated_event_time(::google::protobuf::Timestamp* event_time) {
  delete event_time_;
  if (event_time != NULL && event_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_event_time = new ::google::protobuf::Timestamp;
    new_event_time->CopyFrom(*event_time);
    event_time = new_event_time;
  }
  event_time_ = event_time;
  if (event_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.event_time)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ServiceContext service_context = 2;
bool ReportedErrorEvent::has_service_context() const {
  return this != internal_default_instance() && service_context_ != NULL;
}
void ReportedErrorEvent::clear_service_context() {
  if (GetArenaNoVirtual() == NULL && service_context_ != NULL) delete service_context_;
  service_context_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ServiceContext& ReportedErrorEvent::service_context() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.service_context)
  return service_context_ != NULL ? *service_context_
                         : *::google::devtools::clouderrorreporting::v1beta1::ServiceContext::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ReportedErrorEvent::mutable_service_context() {
  
  if (service_context_ == NULL) {
    service_context_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.service_context)
  return service_context_;
}
::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ReportedErrorEvent::release_service_context() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.service_context)
  
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* temp = service_context_;
  service_context_ = NULL;
  return temp;
}
void ReportedErrorEvent::set_allocated_service_context(::google::devtools::clouderrorreporting::v1beta1::ServiceContext* service_context) {
  delete service_context_;
  service_context_ = service_context;
  if (service_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.service_context)
}

// optional string message = 3;
void ReportedErrorEvent::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReportedErrorEvent::message() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportedErrorEvent::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message)
}
void ReportedErrorEvent::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message)
}
void ReportedErrorEvent::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message)
}
::std::string* ReportedErrorEvent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReportedErrorEvent::release_message() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReportedErrorEvent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.message)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorContext context = 4;
bool ReportedErrorEvent::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
void ReportedErrorEvent::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
const ::google::devtools::clouderrorreporting::v1beta1::ErrorContext& ReportedErrorEvent::context() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.context)
  return context_ != NULL ? *context_
                         : *::google::devtools::clouderrorreporting::v1beta1::ErrorContext::internal_default_instance();
}
::google::devtools::clouderrorreporting::v1beta1::ErrorContext* ReportedErrorEvent::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorContext;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.context)
  return context_;
}
::google::devtools::clouderrorreporting::v1beta1::ErrorContext* ReportedErrorEvent::release_context() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.context)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorContext* temp = context_;
  context_ = NULL;
  return temp;
}
void ReportedErrorEvent::set_allocated_context(::google::devtools::clouderrorreporting::v1beta1::ErrorContext* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.context)
}

inline const ReportedErrorEvent* ReportedErrorEvent::internal_default_instance() {
  return &ReportedErrorEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
