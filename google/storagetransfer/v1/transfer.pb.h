// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storagetransfer/v1/transfer.proto

#ifndef PROTOBUF_google_2fstoragetransfer_2fv1_2ftransfer_2eproto__INCLUDED
#define PROTOBUF_google_2fstoragetransfer_2fv1_2ftransfer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include "google/storagetransfer/v1/transfer_types.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace storagetransfer {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
void protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

class CreateTransferJobRequest;
class GetGoogleServiceAccountRequest;
class GetTransferJobRequest;
class ListTransferJobsRequest;
class ListTransferJobsResponse;
class PauseTransferOperationRequest;
class ResumeTransferOperationRequest;
class UpdateTransferJobRequest;

// ===================================================================

class GetGoogleServiceAccountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.GetGoogleServiceAccountRequest) */ {
 public:
  GetGoogleServiceAccountRequest();
  virtual ~GetGoogleServiceAccountRequest();

  GetGoogleServiceAccountRequest(const GetGoogleServiceAccountRequest& from);

  inline GetGoogleServiceAccountRequest& operator=(const GetGoogleServiceAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGoogleServiceAccountRequest& default_instance();

  static const GetGoogleServiceAccountRequest* internal_default_instance();

  void UnsafeArenaSwap(GetGoogleServiceAccountRequest* other);
  void Swap(GetGoogleServiceAccountRequest* other);

  // implements Message ----------------------------------------------

  inline GetGoogleServiceAccountRequest* New() const { return New(NULL); }

  GetGoogleServiceAccountRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGoogleServiceAccountRequest& from);
  void MergeFrom(const GetGoogleServiceAccountRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetGoogleServiceAccountRequest* other);
  void UnsafeMergeFrom(const GetGoogleServiceAccountRequest& from);
  protected:
  explicit GetGoogleServiceAccountRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.GetGoogleServiceAccountRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetGoogleServiceAccountRequest> GetGoogleServiceAccountRequest_default_instance_;

// -------------------------------------------------------------------

class CreateTransferJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.CreateTransferJobRequest) */ {
 public:
  CreateTransferJobRequest();
  virtual ~CreateTransferJobRequest();

  CreateTransferJobRequest(const CreateTransferJobRequest& from);

  inline CreateTransferJobRequest& operator=(const CreateTransferJobRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTransferJobRequest& default_instance();

  static const CreateTransferJobRequest* internal_default_instance();

  void UnsafeArenaSwap(CreateTransferJobRequest* other);
  void Swap(CreateTransferJobRequest* other);

  // implements Message ----------------------------------------------

  inline CreateTransferJobRequest* New() const { return New(NULL); }

  CreateTransferJobRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTransferJobRequest& from);
  void MergeFrom(const CreateTransferJobRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateTransferJobRequest* other);
  void UnsafeMergeFrom(const CreateTransferJobRequest& from);
  protected:
  explicit CreateTransferJobRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.storagetransfer.v1.TransferJob transfer_job = 1;
  bool has_transfer_job() const;
  void clear_transfer_job();
  static const int kTransferJobFieldNumber = 1;
  private:
  void _slow_mutable_transfer_job();
  void _slow_set_allocated_transfer_job(
      ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferJob** transfer_job);
  ::google::storagetransfer::v1::TransferJob* _slow_release_transfer_job();
  public:
  const ::google::storagetransfer::v1::TransferJob& transfer_job() const;
  ::google::storagetransfer::v1::TransferJob* mutable_transfer_job();
  ::google::storagetransfer::v1::TransferJob* release_transfer_job();
  void set_allocated_transfer_job(::google::storagetransfer::v1::TransferJob* transfer_job);
  ::google::storagetransfer::v1::TransferJob* unsafe_arena_release_transfer_job();
  void unsafe_arena_set_allocated_transfer_job(
      ::google::storagetransfer::v1::TransferJob* transfer_job);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.CreateTransferJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::storagetransfer::v1::TransferJob* transfer_job_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateTransferJobRequest> CreateTransferJobRequest_default_instance_;

// -------------------------------------------------------------------

class UpdateTransferJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.UpdateTransferJobRequest) */ {
 public:
  UpdateTransferJobRequest();
  virtual ~UpdateTransferJobRequest();

  UpdateTransferJobRequest(const UpdateTransferJobRequest& from);

  inline UpdateTransferJobRequest& operator=(const UpdateTransferJobRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateTransferJobRequest& default_instance();

  static const UpdateTransferJobRequest* internal_default_instance();

  void UnsafeArenaSwap(UpdateTransferJobRequest* other);
  void Swap(UpdateTransferJobRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateTransferJobRequest* New() const { return New(NULL); }

  UpdateTransferJobRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateTransferJobRequest& from);
  void MergeFrom(const UpdateTransferJobRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateTransferJobRequest* other);
  void UnsafeMergeFrom(const UpdateTransferJobRequest& from);
  protected:
  explicit UpdateTransferJobRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string job_name = 1;
  void clear_job_name();
  static const int kJobNameFieldNumber = 1;
  const ::std::string& job_name() const;
  void set_job_name(const ::std::string& value);
  void set_job_name(const char* value);
  void set_job_name(const char* value, size_t size);
  ::std::string* mutable_job_name();
  ::std::string* release_job_name();
  void set_allocated_job_name(::std::string* job_name);
  ::std::string* unsafe_arena_release_job_name();
  void unsafe_arena_set_allocated_job_name(
      ::std::string* job_name);

  // optional string project_id = 2;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 2;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // optional .google.storagetransfer.v1.TransferJob transfer_job = 3;
  bool has_transfer_job() const;
  void clear_transfer_job();
  static const int kTransferJobFieldNumber = 3;
  private:
  void _slow_mutable_transfer_job();
  void _slow_set_allocated_transfer_job(
      ::google::protobuf::Arena* message_arena, ::google::storagetransfer::v1::TransferJob** transfer_job);
  ::google::storagetransfer::v1::TransferJob* _slow_release_transfer_job();
  public:
  const ::google::storagetransfer::v1::TransferJob& transfer_job() const;
  ::google::storagetransfer::v1::TransferJob* mutable_transfer_job();
  ::google::storagetransfer::v1::TransferJob* release_transfer_job();
  void set_allocated_transfer_job(::google::storagetransfer::v1::TransferJob* transfer_job);
  ::google::storagetransfer::v1::TransferJob* unsafe_arena_release_transfer_job();
  void unsafe_arena_set_allocated_transfer_job(
      ::google::storagetransfer::v1::TransferJob* transfer_job);

  // optional .google.protobuf.FieldMask update_transfer_job_field_mask = 4;
  bool has_update_transfer_job_field_mask() const;
  void clear_update_transfer_job_field_mask();
  static const int kUpdateTransferJobFieldMaskFieldNumber = 4;
  private:
  void _slow_mutable_update_transfer_job_field_mask();
  ::google::protobuf::FieldMask* _slow_release_update_transfer_job_field_mask();
  public:
  const ::google::protobuf::FieldMask& update_transfer_job_field_mask() const;
  ::google::protobuf::FieldMask* mutable_update_transfer_job_field_mask();
  ::google::protobuf::FieldMask* release_update_transfer_job_field_mask();
  void set_allocated_update_transfer_job_field_mask(::google::protobuf::FieldMask* update_transfer_job_field_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_transfer_job_field_mask();
  void unsafe_arena_set_allocated_update_transfer_job_field_mask(
      ::google::protobuf::FieldMask* update_transfer_job_field_mask);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.UpdateTransferJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr job_name_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::storagetransfer::v1::TransferJob* transfer_job_;
  ::google::protobuf::FieldMask* update_transfer_job_field_mask_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateTransferJobRequest> UpdateTransferJobRequest_default_instance_;

// -------------------------------------------------------------------

class GetTransferJobRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.GetTransferJobRequest) */ {
 public:
  GetTransferJobRequest();
  virtual ~GetTransferJobRequest();

  GetTransferJobRequest(const GetTransferJobRequest& from);

  inline GetTransferJobRequest& operator=(const GetTransferJobRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTransferJobRequest& default_instance();

  static const GetTransferJobRequest* internal_default_instance();

  void UnsafeArenaSwap(GetTransferJobRequest* other);
  void Swap(GetTransferJobRequest* other);

  // implements Message ----------------------------------------------

  inline GetTransferJobRequest* New() const { return New(NULL); }

  GetTransferJobRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTransferJobRequest& from);
  void MergeFrom(const GetTransferJobRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTransferJobRequest* other);
  void UnsafeMergeFrom(const GetTransferJobRequest& from);
  protected:
  explicit GetTransferJobRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string job_name = 1;
  void clear_job_name();
  static const int kJobNameFieldNumber = 1;
  const ::std::string& job_name() const;
  void set_job_name(const ::std::string& value);
  void set_job_name(const char* value);
  void set_job_name(const char* value, size_t size);
  ::std::string* mutable_job_name();
  ::std::string* release_job_name();
  void set_allocated_job_name(::std::string* job_name);
  ::std::string* unsafe_arena_release_job_name();
  void unsafe_arena_set_allocated_job_name(
      ::std::string* job_name);

  // optional string project_id = 2;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 2;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.GetTransferJobRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr job_name_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetTransferJobRequest> GetTransferJobRequest_default_instance_;

// -------------------------------------------------------------------

class ListTransferJobsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.ListTransferJobsRequest) */ {
 public:
  ListTransferJobsRequest();
  virtual ~ListTransferJobsRequest();

  ListTransferJobsRequest(const ListTransferJobsRequest& from);

  inline ListTransferJobsRequest& operator=(const ListTransferJobsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTransferJobsRequest& default_instance();

  static const ListTransferJobsRequest* internal_default_instance();

  void UnsafeArenaSwap(ListTransferJobsRequest* other);
  void Swap(ListTransferJobsRequest* other);

  // implements Message ----------------------------------------------

  inline ListTransferJobsRequest* New() const { return New(NULL); }

  ListTransferJobsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTransferJobsRequest& from);
  void MergeFrom(const ListTransferJobsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListTransferJobsRequest* other);
  void UnsafeMergeFrom(const ListTransferJobsRequest& from);
  protected:
  explicit ListTransferJobsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filter = 1;
  void clear_filter();
  static const int kFilterFieldNumber = 1;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);
  ::std::string* unsafe_arena_release_filter();
  void unsafe_arena_set_allocated_filter(
      ::std::string* filter);

  // optional int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // optional string page_token = 5;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 5;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.ListTransferJobsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListTransferJobsRequest> ListTransferJobsRequest_default_instance_;

// -------------------------------------------------------------------

class ListTransferJobsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.ListTransferJobsResponse) */ {
 public:
  ListTransferJobsResponse();
  virtual ~ListTransferJobsResponse();

  ListTransferJobsResponse(const ListTransferJobsResponse& from);

  inline ListTransferJobsResponse& operator=(const ListTransferJobsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTransferJobsResponse& default_instance();

  static const ListTransferJobsResponse* internal_default_instance();

  void UnsafeArenaSwap(ListTransferJobsResponse* other);
  void Swap(ListTransferJobsResponse* other);

  // implements Message ----------------------------------------------

  inline ListTransferJobsResponse* New() const { return New(NULL); }

  ListTransferJobsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTransferJobsResponse& from);
  void MergeFrom(const ListTransferJobsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListTransferJobsResponse* other);
  void UnsafeMergeFrom(const ListTransferJobsResponse& from);
  protected:
  explicit ListTransferJobsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.storagetransfer.v1.TransferJob transfer_jobs = 1;
  int transfer_jobs_size() const;
  void clear_transfer_jobs();
  static const int kTransferJobsFieldNumber = 1;
  const ::google::storagetransfer::v1::TransferJob& transfer_jobs(int index) const;
  ::google::storagetransfer::v1::TransferJob* mutable_transfer_jobs(int index);
  ::google::storagetransfer::v1::TransferJob* add_transfer_jobs();
  ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::TransferJob >*
      mutable_transfer_jobs();
  const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::TransferJob >&
      transfer_jobs() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.ListTransferJobsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::TransferJob > transfer_jobs_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListTransferJobsResponse> ListTransferJobsResponse_default_instance_;

// -------------------------------------------------------------------

class PauseTransferOperationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.PauseTransferOperationRequest) */ {
 public:
  PauseTransferOperationRequest();
  virtual ~PauseTransferOperationRequest();

  PauseTransferOperationRequest(const PauseTransferOperationRequest& from);

  inline PauseTransferOperationRequest& operator=(const PauseTransferOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PauseTransferOperationRequest& default_instance();

  static const PauseTransferOperationRequest* internal_default_instance();

  void UnsafeArenaSwap(PauseTransferOperationRequest* other);
  void Swap(PauseTransferOperationRequest* other);

  // implements Message ----------------------------------------------

  inline PauseTransferOperationRequest* New() const { return New(NULL); }

  PauseTransferOperationRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PauseTransferOperationRequest& from);
  void MergeFrom(const PauseTransferOperationRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PauseTransferOperationRequest* other);
  void UnsafeMergeFrom(const PauseTransferOperationRequest& from);
  protected:
  explicit PauseTransferOperationRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.PauseTransferOperationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PauseTransferOperationRequest> PauseTransferOperationRequest_default_instance_;

// -------------------------------------------------------------------

class ResumeTransferOperationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.storagetransfer.v1.ResumeTransferOperationRequest) */ {
 public:
  ResumeTransferOperationRequest();
  virtual ~ResumeTransferOperationRequest();

  ResumeTransferOperationRequest(const ResumeTransferOperationRequest& from);

  inline ResumeTransferOperationRequest& operator=(const ResumeTransferOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResumeTransferOperationRequest& default_instance();

  static const ResumeTransferOperationRequest* internal_default_instance();

  void UnsafeArenaSwap(ResumeTransferOperationRequest* other);
  void Swap(ResumeTransferOperationRequest* other);

  // implements Message ----------------------------------------------

  inline ResumeTransferOperationRequest* New() const { return New(NULL); }

  ResumeTransferOperationRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResumeTransferOperationRequest& from);
  void MergeFrom(const ResumeTransferOperationRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResumeTransferOperationRequest* other);
  void UnsafeMergeFrom(const ResumeTransferOperationRequest& from);
  protected:
  explicit ResumeTransferOperationRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.storagetransfer.v1.ResumeTransferOperationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();
  friend void protobuf_ShutdownFile_google_2fstoragetransfer_2fv1_2ftransfer_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResumeTransferOperationRequest> ResumeTransferOperationRequest_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGoogleServiceAccountRequest

// optional string project_id = 1;
inline void GetGoogleServiceAccountRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetGoogleServiceAccountRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGoogleServiceAccountRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
inline void GetGoogleServiceAccountRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
inline void GetGoogleServiceAccountRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
inline ::std::string* GetGoogleServiceAccountRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetGoogleServiceAccountRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetGoogleServiceAccountRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetGoogleServiceAccountRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}
inline void GetGoogleServiceAccountRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GetGoogleServiceAccountRequest.project_id)
}

inline const GetGoogleServiceAccountRequest* GetGoogleServiceAccountRequest::internal_default_instance() {
  return &GetGoogleServiceAccountRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateTransferJobRequest

// optional .google.storagetransfer.v1.TransferJob transfer_job = 1;
inline bool CreateTransferJobRequest::has_transfer_job() const {
  return this != internal_default_instance() && transfer_job_ != NULL;
}
inline void CreateTransferJobRequest::clear_transfer_job() {
  if (GetArenaNoVirtual() == NULL && transfer_job_ != NULL) delete transfer_job_;
  transfer_job_ = NULL;
}
inline const ::google::storagetransfer::v1::TransferJob& CreateTransferJobRequest::transfer_job() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
  return transfer_job_ != NULL ? *transfer_job_
                         : *::google::storagetransfer::v1::TransferJob::internal_default_instance();
}
inline ::google::storagetransfer::v1::TransferJob* CreateTransferJobRequest::mutable_transfer_job() {
  
  if (transfer_job_ == NULL) {
    _slow_mutable_transfer_job();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
  return transfer_job_;
}
inline ::google::storagetransfer::v1::TransferJob* CreateTransferJobRequest::release_transfer_job() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_transfer_job();
  } else {
    ::google::storagetransfer::v1::TransferJob* temp = transfer_job_;
    transfer_job_ = NULL;
    return temp;
  }
}
inline  void CreateTransferJobRequest::set_allocated_transfer_job(::google::storagetransfer::v1::TransferJob* transfer_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_job_;
  }
  if (transfer_job != NULL) {
    _slow_set_allocated_transfer_job(message_arena, &transfer_job);
  }
  transfer_job_ = transfer_job;
  if (transfer_job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.CreateTransferJobRequest.transfer_job)
}

inline const CreateTransferJobRequest* CreateTransferJobRequest::internal_default_instance() {
  return &CreateTransferJobRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateTransferJobRequest

// optional string job_name = 1;
inline void UpdateTransferJobRequest::clear_job_name() {
  job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateTransferJobRequest::job_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  return job_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateTransferJobRequest::set_job_name(const ::std::string& value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
inline void UpdateTransferJobRequest::set_job_name(const char* value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
inline void UpdateTransferJobRequest::set_job_name(const char* value,
    size_t size) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
inline ::std::string* UpdateTransferJobRequest::mutable_job_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  return job_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateTransferJobRequest::release_job_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  
  return job_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateTransferJobRequest::unsafe_arena_release_job_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return job_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateTransferJobRequest::set_allocated_job_name(::std::string* job_name) {
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}
inline void UpdateTransferJobRequest::unsafe_arena_set_allocated_job_name(
    ::std::string* job_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      job_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.job_name)
}

// optional string project_id = 2;
inline void UpdateTransferJobRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateTransferJobRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateTransferJobRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
inline void UpdateTransferJobRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
inline void UpdateTransferJobRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
inline ::std::string* UpdateTransferJobRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateTransferJobRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateTransferJobRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateTransferJobRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}
inline void UpdateTransferJobRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.project_id)
}

// optional .google.storagetransfer.v1.TransferJob transfer_job = 3;
inline bool UpdateTransferJobRequest::has_transfer_job() const {
  return this != internal_default_instance() && transfer_job_ != NULL;
}
inline void UpdateTransferJobRequest::clear_transfer_job() {
  if (GetArenaNoVirtual() == NULL && transfer_job_ != NULL) delete transfer_job_;
  transfer_job_ = NULL;
}
inline const ::google::storagetransfer::v1::TransferJob& UpdateTransferJobRequest::transfer_job() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
  return transfer_job_ != NULL ? *transfer_job_
                         : *::google::storagetransfer::v1::TransferJob::internal_default_instance();
}
inline ::google::storagetransfer::v1::TransferJob* UpdateTransferJobRequest::mutable_transfer_job() {
  
  if (transfer_job_ == NULL) {
    _slow_mutable_transfer_job();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
  return transfer_job_;
}
inline ::google::storagetransfer::v1::TransferJob* UpdateTransferJobRequest::release_transfer_job() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_transfer_job();
  } else {
    ::google::storagetransfer::v1::TransferJob* temp = transfer_job_;
    transfer_job_ = NULL;
    return temp;
  }
}
inline  void UpdateTransferJobRequest::set_allocated_transfer_job(::google::storagetransfer::v1::TransferJob* transfer_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transfer_job_;
  }
  if (transfer_job != NULL) {
    _slow_set_allocated_transfer_job(message_arena, &transfer_job);
  }
  transfer_job_ = transfer_job;
  if (transfer_job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.transfer_job)
}

// optional .google.protobuf.FieldMask update_transfer_job_field_mask = 4;
inline bool UpdateTransferJobRequest::has_update_transfer_job_field_mask() const {
  return this != internal_default_instance() && update_transfer_job_field_mask_ != NULL;
}
inline void UpdateTransferJobRequest::clear_update_transfer_job_field_mask() {
  if (GetArenaNoVirtual() == NULL && update_transfer_job_field_mask_ != NULL) delete update_transfer_job_field_mask_;
  update_transfer_job_field_mask_ = NULL;
}
inline const ::google::protobuf::FieldMask& UpdateTransferJobRequest::update_transfer_job_field_mask() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
  return update_transfer_job_field_mask_ != NULL ? *update_transfer_job_field_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
inline ::google::protobuf::FieldMask* UpdateTransferJobRequest::mutable_update_transfer_job_field_mask() {
  
  if (update_transfer_job_field_mask_ == NULL) {
    _slow_mutable_update_transfer_job_field_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
  return update_transfer_job_field_mask_;
}
inline ::google::protobuf::FieldMask* UpdateTransferJobRequest::release_update_transfer_job_field_mask() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_transfer_job_field_mask();
  } else {
    ::google::protobuf::FieldMask* temp = update_transfer_job_field_mask_;
    update_transfer_job_field_mask_ = NULL;
    return temp;
  }
}
inline  void UpdateTransferJobRequest::set_allocated_update_transfer_job_field_mask(::google::protobuf::FieldMask* update_transfer_job_field_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_transfer_job_field_mask_;
  }
  if (update_transfer_job_field_mask != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(update_transfer_job_field_mask);
    }
  }
  update_transfer_job_field_mask_ = update_transfer_job_field_mask;
  if (update_transfer_job_field_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.UpdateTransferJobRequest.update_transfer_job_field_mask)
}

inline const UpdateTransferJobRequest* UpdateTransferJobRequest::internal_default_instance() {
  return &UpdateTransferJobRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetTransferJobRequest

// optional string job_name = 1;
inline void GetTransferJobRequest::clear_job_name() {
  job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetTransferJobRequest::job_name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  return job_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTransferJobRequest::set_job_name(const ::std::string& value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
inline void GetTransferJobRequest::set_job_name(const char* value) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
inline void GetTransferJobRequest::set_job_name(const char* value,
    size_t size) {
  
  job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
inline ::std::string* GetTransferJobRequest::mutable_job_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  return job_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetTransferJobRequest::release_job_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  
  return job_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetTransferJobRequest::unsafe_arena_release_job_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GetTransferJobRequest.job_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return job_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetTransferJobRequest::set_allocated_job_name(::std::string* job_name) {
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}
inline void GetTransferJobRequest::unsafe_arena_set_allocated_job_name(
    ::std::string* job_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (job_name != NULL) {
    
  } else {
    
  }
  job_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      job_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.job_name)
}

// optional string project_id = 2;
inline void GetTransferJobRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetTransferJobRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTransferJobRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
inline void GetTransferJobRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
inline void GetTransferJobRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
inline ::std::string* GetTransferJobRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetTransferJobRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetTransferJobRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.GetTransferJobRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetTransferJobRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}
inline void GetTransferJobRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.GetTransferJobRequest.project_id)
}

inline const GetTransferJobRequest* GetTransferJobRequest::internal_default_instance() {
  return &GetTransferJobRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListTransferJobsRequest

// optional string filter = 1;
inline void ListTransferJobsRequest::clear_filter() {
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListTransferJobsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  return filter_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTransferJobsRequest::set_filter(const ::std::string& value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
inline void ListTransferJobsRequest::set_filter(const char* value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
inline void ListTransferJobsRequest::set_filter(const char* value,
    size_t size) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
inline ::std::string* ListTransferJobsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  return filter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListTransferJobsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  
  return filter_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListTransferJobsRequest::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ListTransferJobsRequest.filter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return filter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListTransferJobsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}
inline void ListTransferJobsRequest::unsafe_arena_set_allocated_filter(
    ::std::string* filter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      filter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.filter)
}

// optional int32 page_size = 4;
inline void ListTransferJobsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListTransferJobsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsRequest.page_size)
  return page_size_;
}
inline void ListTransferJobsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsRequest.page_size)
}

// optional string page_token = 5;
inline void ListTransferJobsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListTransferJobsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  return page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTransferJobsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
inline void ListTransferJobsRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
inline void ListTransferJobsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
inline ::std::string* ListTransferJobsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListTransferJobsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListTransferJobsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListTransferJobsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}
inline void ListTransferJobsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ListTransferJobsRequest.page_token)
}

inline const ListTransferJobsRequest* ListTransferJobsRequest::internal_default_instance() {
  return &ListTransferJobsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListTransferJobsResponse

// repeated .google.storagetransfer.v1.TransferJob transfer_jobs = 1;
inline int ListTransferJobsResponse::transfer_jobs_size() const {
  return transfer_jobs_.size();
}
inline void ListTransferJobsResponse::clear_transfer_jobs() {
  transfer_jobs_.Clear();
}
inline const ::google::storagetransfer::v1::TransferJob& ListTransferJobsResponse::transfer_jobs(int index) const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_.Get(index);
}
inline ::google::storagetransfer::v1::TransferJob* ListTransferJobsResponse::mutable_transfer_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_.Mutable(index);
}
inline ::google::storagetransfer::v1::TransferJob* ListTransferJobsResponse::add_transfer_jobs() {
  // @@protoc_insertion_point(field_add:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::TransferJob >*
ListTransferJobsResponse::mutable_transfer_jobs() {
  // @@protoc_insertion_point(field_mutable_list:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return &transfer_jobs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::storagetransfer::v1::TransferJob >&
ListTransferJobsResponse::transfer_jobs() const {
  // @@protoc_insertion_point(field_list:google.storagetransfer.v1.ListTransferJobsResponse.transfer_jobs)
  return transfer_jobs_;
}

// optional string next_page_token = 2;
inline void ListTransferJobsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListTransferJobsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  return next_page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTransferJobsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
inline void ListTransferJobsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
inline void ListTransferJobsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
inline ::std::string* ListTransferJobsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListTransferJobsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListTransferJobsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListTransferJobsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}
inline void ListTransferJobsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ListTransferJobsResponse.next_page_token)
}

inline const ListTransferJobsResponse* ListTransferJobsResponse::internal_default_instance() {
  return &ListTransferJobsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PauseTransferOperationRequest

// optional string name = 1;
inline void PauseTransferOperationRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& PauseTransferOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PauseTransferOperationRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
inline void PauseTransferOperationRequest::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
inline void PauseTransferOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
inline ::std::string* PauseTransferOperationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PauseTransferOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PauseTransferOperationRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.PauseTransferOperationRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PauseTransferOperationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}
inline void PauseTransferOperationRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.PauseTransferOperationRequest.name)
}

inline const PauseTransferOperationRequest* PauseTransferOperationRequest::internal_default_instance() {
  return &PauseTransferOperationRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ResumeTransferOperationRequest

// optional string name = 1;
inline void ResumeTransferOperationRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ResumeTransferOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeTransferOperationRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
inline void ResumeTransferOperationRequest::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
inline void ResumeTransferOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
inline ::std::string* ResumeTransferOperationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResumeTransferOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ResumeTransferOperationRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ResumeTransferOperationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}
inline void ResumeTransferOperationRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ResumeTransferOperationRequest.name)
}

inline const ResumeTransferOperationRequest* ResumeTransferOperationRequest::internal_default_instance() {
  return &ResumeTransferOperationRequest_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace storagetransfer
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fstoragetransfer_2fv1_2ftransfer_2eproto__INCLUDED
