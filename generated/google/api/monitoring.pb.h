// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/monitoring.proto

#ifndef PROTOBUF_google_2fapi_2fmonitoring_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fmonitoring_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
class Monitoring;
class MonitoringDefaultTypeInternal;
extern MonitoringDefaultTypeInternal _Monitoring_default_instance_;
class Monitoring_MonitoringDestination;
class Monitoring_MonitoringDestinationDefaultTypeInternal;
extern Monitoring_MonitoringDestinationDefaultTypeInternal _Monitoring_MonitoringDestination_default_instance_;
}  // namespace api
}  // namespace google

namespace google {
namespace api {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fmonitoring_2eproto();
void protobuf_InitDefaults_google_2fapi_2fmonitoring_2eproto();

// ===================================================================

class Monitoring_MonitoringDestination : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Monitoring.MonitoringDestination) */ {
 public:
  Monitoring_MonitoringDestination();
  virtual ~Monitoring_MonitoringDestination();

  Monitoring_MonitoringDestination(const Monitoring_MonitoringDestination& from);

  inline Monitoring_MonitoringDestination& operator=(const Monitoring_MonitoringDestination& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Monitoring_MonitoringDestination& default_instance();

  static inline const Monitoring_MonitoringDestination* internal_default_instance() {
    return reinterpret_cast<const Monitoring_MonitoringDestination*>(
               &_Monitoring_MonitoringDestination_default_instance_);
  }

  void Swap(Monitoring_MonitoringDestination* other);

  // implements Message ----------------------------------------------

  inline Monitoring_MonitoringDestination* New() const PROTOBUF_FINAL { return New(NULL); }

  Monitoring_MonitoringDestination* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Monitoring_MonitoringDestination& from);
  void MergeFrom(const Monitoring_MonitoringDestination& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Monitoring_MonitoringDestination* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string monitored_resource = 1;
  void clear_monitored_resource();
  static const int kMonitoredResourceFieldNumber = 1;
  const ::std::string& monitored_resource() const;
  void set_monitored_resource(const ::std::string& value);
  void set_monitored_resource(const char* value);
  void set_monitored_resource(const char* value, size_t size);
  ::std::string* mutable_monitored_resource();
  ::std::string* release_monitored_resource();
  void set_allocated_monitored_resource(::std::string* monitored_resource);

  // repeated string metrics = 2;
  int metrics_size() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 2;
  const ::std::string& metrics(int index) const;
  ::std::string* mutable_metrics(int index);
  void set_metrics(int index, const ::std::string& value);
  void set_metrics(int index, const char* value);
  void set_metrics(int index, const char* value, size_t size);
  ::std::string* add_metrics();
  void add_metrics(const ::std::string& value);
  void add_metrics(const char* value);
  void add_metrics(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& metrics() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_metrics();

  // @@protoc_insertion_point(class_scope:google.api.Monitoring.MonitoringDestination)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> metrics_;
  ::google::protobuf::internal::ArenaStringPtr monitored_resource_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fmonitoring_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fmonitoring_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fmonitoring_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fmonitoring_2eproto();

};
// -------------------------------------------------------------------

class Monitoring : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Monitoring) */ {
 public:
  Monitoring();
  virtual ~Monitoring();

  Monitoring(const Monitoring& from);

  inline Monitoring& operator=(const Monitoring& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Monitoring& default_instance();

  static inline const Monitoring* internal_default_instance() {
    return reinterpret_cast<const Monitoring*>(
               &_Monitoring_default_instance_);
  }

  void Swap(Monitoring* other);

  // implements Message ----------------------------------------------

  inline Monitoring* New() const PROTOBUF_FINAL { return New(NULL); }

  Monitoring* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Monitoring& from);
  void MergeFrom(const Monitoring& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Monitoring* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Monitoring_MonitoringDestination MonitoringDestination;

  // accessors -------------------------------------------------------

  // repeated .google.api.Monitoring.MonitoringDestination producer_destinations = 1;
  int producer_destinations_size() const;
  void clear_producer_destinations();
  static const int kProducerDestinationsFieldNumber = 1;
  const ::google::api::Monitoring_MonitoringDestination& producer_destinations(int index) const;
  ::google::api::Monitoring_MonitoringDestination* mutable_producer_destinations(int index);
  ::google::api::Monitoring_MonitoringDestination* add_producer_destinations();
  ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >*
      mutable_producer_destinations();
  const ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >&
      producer_destinations() const;

  // repeated .google.api.Monitoring.MonitoringDestination consumer_destinations = 2;
  int consumer_destinations_size() const;
  void clear_consumer_destinations();
  static const int kConsumerDestinationsFieldNumber = 2;
  const ::google::api::Monitoring_MonitoringDestination& consumer_destinations(int index) const;
  ::google::api::Monitoring_MonitoringDestination* mutable_consumer_destinations(int index);
  ::google::api::Monitoring_MonitoringDestination* add_consumer_destinations();
  ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >*
      mutable_consumer_destinations();
  const ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >&
      consumer_destinations() const;

  // @@protoc_insertion_point(class_scope:google.api.Monitoring)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination > producer_destinations_;
  ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination > consumer_destinations_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fmonitoring_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fmonitoring_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fmonitoring_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fmonitoring_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Monitoring_MonitoringDestination

// string monitored_resource = 1;
inline void Monitoring_MonitoringDestination::clear_monitored_resource() {
  monitored_resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Monitoring_MonitoringDestination::monitored_resource() const {
  // @@protoc_insertion_point(field_get:google.api.Monitoring.MonitoringDestination.monitored_resource)
  return monitored_resource_.GetNoArena();
}
inline void Monitoring_MonitoringDestination::set_monitored_resource(const ::std::string& value) {
  
  monitored_resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Monitoring.MonitoringDestination.monitored_resource)
}
inline void Monitoring_MonitoringDestination::set_monitored_resource(const char* value) {
  
  monitored_resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Monitoring.MonitoringDestination.monitored_resource)
}
inline void Monitoring_MonitoringDestination::set_monitored_resource(const char* value, size_t size) {
  
  monitored_resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Monitoring.MonitoringDestination.monitored_resource)
}
inline ::std::string* Monitoring_MonitoringDestination::mutable_monitored_resource() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Monitoring.MonitoringDestination.monitored_resource)
  return monitored_resource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Monitoring_MonitoringDestination::release_monitored_resource() {
  // @@protoc_insertion_point(field_release:google.api.Monitoring.MonitoringDestination.monitored_resource)
  
  return monitored_resource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Monitoring_MonitoringDestination::set_allocated_monitored_resource(::std::string* monitored_resource) {
  if (monitored_resource != NULL) {
    
  } else {
    
  }
  monitored_resource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), monitored_resource);
  // @@protoc_insertion_point(field_set_allocated:google.api.Monitoring.MonitoringDestination.monitored_resource)
}

// repeated string metrics = 2;
inline int Monitoring_MonitoringDestination::metrics_size() const {
  return metrics_.size();
}
inline void Monitoring_MonitoringDestination::clear_metrics() {
  metrics_.Clear();
}
inline const ::std::string& Monitoring_MonitoringDestination::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Monitoring.MonitoringDestination.metrics)
  return metrics_.Get(index);
}
inline ::std::string* Monitoring_MonitoringDestination::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Monitoring.MonitoringDestination.metrics)
  return metrics_.Mutable(index);
}
inline void Monitoring_MonitoringDestination::set_metrics(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.Monitoring.MonitoringDestination.metrics)
  metrics_.Mutable(index)->assign(value);
}
inline void Monitoring_MonitoringDestination::set_metrics(int index, const char* value) {
  metrics_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.Monitoring.MonitoringDestination.metrics)
}
inline void Monitoring_MonitoringDestination::set_metrics(int index, const char* value, size_t size) {
  metrics_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.Monitoring.MonitoringDestination.metrics)
}
inline ::std::string* Monitoring_MonitoringDestination::add_metrics() {
  // @@protoc_insertion_point(field_add_mutable:google.api.Monitoring.MonitoringDestination.metrics)
  return metrics_.Add();
}
inline void Monitoring_MonitoringDestination::add_metrics(const ::std::string& value) {
  metrics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.Monitoring.MonitoringDestination.metrics)
}
inline void Monitoring_MonitoringDestination::add_metrics(const char* value) {
  metrics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.Monitoring.MonitoringDestination.metrics)
}
inline void Monitoring_MonitoringDestination::add_metrics(const char* value, size_t size) {
  metrics_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.Monitoring.MonitoringDestination.metrics)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Monitoring_MonitoringDestination::metrics() const {
  // @@protoc_insertion_point(field_list:google.api.Monitoring.MonitoringDestination.metrics)
  return metrics_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Monitoring_MonitoringDestination::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Monitoring.MonitoringDestination.metrics)
  return &metrics_;
}

// -------------------------------------------------------------------

// Monitoring

// repeated .google.api.Monitoring.MonitoringDestination producer_destinations = 1;
inline int Monitoring::producer_destinations_size() const {
  return producer_destinations_.size();
}
inline void Monitoring::clear_producer_destinations() {
  producer_destinations_.Clear();
}
inline const ::google::api::Monitoring_MonitoringDestination& Monitoring::producer_destinations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Monitoring.producer_destinations)
  return producer_destinations_.Get(index);
}
inline ::google::api::Monitoring_MonitoringDestination* Monitoring::mutable_producer_destinations(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Monitoring.producer_destinations)
  return producer_destinations_.Mutable(index);
}
inline ::google::api::Monitoring_MonitoringDestination* Monitoring::add_producer_destinations() {
  // @@protoc_insertion_point(field_add:google.api.Monitoring.producer_destinations)
  return producer_destinations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >*
Monitoring::mutable_producer_destinations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Monitoring.producer_destinations)
  return &producer_destinations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >&
Monitoring::producer_destinations() const {
  // @@protoc_insertion_point(field_list:google.api.Monitoring.producer_destinations)
  return producer_destinations_;
}

// repeated .google.api.Monitoring.MonitoringDestination consumer_destinations = 2;
inline int Monitoring::consumer_destinations_size() const {
  return consumer_destinations_.size();
}
inline void Monitoring::clear_consumer_destinations() {
  consumer_destinations_.Clear();
}
inline const ::google::api::Monitoring_MonitoringDestination& Monitoring::consumer_destinations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Monitoring.consumer_destinations)
  return consumer_destinations_.Get(index);
}
inline ::google::api::Monitoring_MonitoringDestination* Monitoring::mutable_consumer_destinations(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Monitoring.consumer_destinations)
  return consumer_destinations_.Mutable(index);
}
inline ::google::api::Monitoring_MonitoringDestination* Monitoring::add_consumer_destinations() {
  // @@protoc_insertion_point(field_add:google.api.Monitoring.consumer_destinations)
  return consumer_destinations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >*
Monitoring::mutable_consumer_destinations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Monitoring.consumer_destinations)
  return &consumer_destinations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::Monitoring_MonitoringDestination >&
Monitoring::consumer_destinations() const {
  // @@protoc_insertion_point(field_list:google.api.Monitoring.consumer_destinations)
  return consumer_destinations_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fmonitoring_2eproto__INCLUDED
