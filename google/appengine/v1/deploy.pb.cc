// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/deploy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/appengine/v1/deploy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace appengine {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* Deployment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deployment_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deployment_FilesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* FileInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContainerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContainerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZipInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZipInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto() {
  protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/appengine/v1/deploy.proto");
  GOOGLE_CHECK(file != NULL);
  Deployment_descriptor_ = file->message_type(0);
  static const int Deployment_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, files_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, container_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, zip_),
  };
  Deployment_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Deployment_descriptor_,
      Deployment::internal_default_instance(),
      Deployment_offsets_,
      -1,
      -1,
      -1,
      sizeof(Deployment),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deployment, _internal_metadata_));
  Deployment_FilesEntry_descriptor_ = Deployment_descriptor_->nested_type(0);
  FileInfo_descriptor_ = file->message_type(1);
  static const int FileInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, source_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, sha1_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, mime_type_),
  };
  FileInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileInfo_descriptor_,
      FileInfo::internal_default_instance(),
      FileInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(FileInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, _internal_metadata_));
  ContainerInfo_descriptor_ = file->message_type(2);
  static const int ContainerInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContainerInfo, image_),
  };
  ContainerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContainerInfo_descriptor_,
      ContainerInfo::internal_default_instance(),
      ContainerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ContainerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContainerInfo, _internal_metadata_));
  ZipInfo_descriptor_ = file->message_type(3);
  static const int ZipInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZipInfo, source_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZipInfo, files_count_),
  };
  ZipInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZipInfo_descriptor_,
      ZipInfo::internal_default_instance(),
      ZipInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZipInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZipInfo, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Deployment_descriptor_, Deployment::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Deployment_FilesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::appengine::v1::FileInfo,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                Deployment_FilesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileInfo_descriptor_, FileInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContainerInfo_descriptor_, ContainerInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZipInfo_descriptor_, ZipInfo::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fappengine_2fv1_2fdeploy_2eproto() {
  Deployment_default_instance_.Shutdown();
  delete Deployment_reflection_;
  FileInfo_default_instance_.Shutdown();
  delete FileInfo_reflection_;
  ContainerInfo_default_instance_.Shutdown();
  delete ContainerInfo_reflection_;
  ZipInfo_default_instance_.Shutdown();
  delete ZipInfo_reflection_;
}

void protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  Deployment_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FileInfo_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ContainerInfo_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ZipInfo_default_instance_.DefaultConstruct();
  Deployment_default_instance_.get_mutable()->InitAsDefaultInstance();
  FileInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  ContainerInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  ZipInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_once_);
void protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_once_,
                 &protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_impl);
}
void protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n google/appengine/v1/deploy.proto\022\023goog"
    "le.appengine.v1\032\034google/api/annotations."
    "proto\"\366\001\n\nDeployment\0229\n\005files\030\001 \003(\0132*.go"
    "ogle.appengine.v1.Deployment.FilesEntry\022"
    "5\n\tcontainer\030\002 \001(\0132\".google.appengine.v1"
    ".ContainerInfo\022)\n\003zip\030\003 \001(\0132\034.google.app"
    "engine.v1.ZipInfo\032K\n\nFilesEntry\022\013\n\003key\030\001"
    " \001(\t\022,\n\005value\030\002 \001(\0132\035.google.appengine.v"
    "1.FileInfo:\0028\001\"C\n\010FileInfo\022\022\n\nsource_url"
    "\030\001 \001(\t\022\020\n\010sha1_sum\030\002 \001(\t\022\021\n\tmime_type\030\003 "
    "\001(\t\"\036\n\rContainerInfo\022\r\n\005image\030\001 \001(\t\"2\n\007Z"
    "ipInfo\022\022\n\nsource_url\030\003 \001(\t\022\023\n\013files_coun"
    "t\030\004 \001(\005Bf\n\027com.google.appengine.v1B\013Depl"
    "oyProtoP\001Z<google.golang.org/genproto/go"
    "ogleapis/appengine/v1;appengineb\006proto3", 599);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/v1/deploy.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fappengine_2fv1_2fdeploy_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_once_);
void protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_once_,
                 &protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fappengine_2fv1_2fdeploy_2eproto {
  StaticDescriptorInitializer_google_2fappengine_2fv1_2fdeploy_2eproto() {
    protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
  }
} static_descriptor_initializer_google_2fappengine_2fv1_2fdeploy_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Deployment::kFilesFieldNumber;
const int Deployment::kContainerFieldNumber;
const int Deployment::kZipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Deployment::Deployment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Deployment)
}

void Deployment::InitAsDefaultInstance() {
  container_ = const_cast< ::google::appengine::v1::ContainerInfo*>(
      ::google::appengine::v1::ContainerInfo::internal_default_instance());
  zip_ = const_cast< ::google::appengine::v1::ZipInfo*>(
      ::google::appengine::v1::ZipInfo::internal_default_instance());
}

Deployment::Deployment(const Deployment& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Deployment)
}

void Deployment::SharedCtor() {
  files_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  files_.SetEntryDescriptor(
      &::google::appengine::v1::Deployment_FilesEntry_descriptor_);
  container_ = NULL;
  zip_ = NULL;
  _cached_size_ = 0;
}

Deployment::~Deployment() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Deployment)
  SharedDtor();
}

void Deployment::SharedDtor() {
  if (this != &Deployment_default_instance_.get()) {
    delete container_;
    delete zip_;
  }
}

void Deployment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deployment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deployment_descriptor_;
}

const Deployment& Deployment::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Deployment> Deployment_default_instance_;

Deployment* Deployment::New(::google::protobuf::Arena* arena) const {
  Deployment* n = new Deployment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Deployment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Deployment)
  if (GetArenaNoVirtual() == NULL && container_ != NULL) delete container_;
  container_ = NULL;
  if (GetArenaNoVirtual() == NULL && zip_ != NULL) delete zip_;
  zip_ = NULL;
  files_.Clear();
}

bool Deployment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Deployment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .google.appengine.v1.FileInfo> files = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_files:
          Deployment_FilesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::appengine::v1::FileInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo > > parser(&files_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Deployment.FilesEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_files;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_container;
        break;
      }

      // optional .google.appengine.v1.ContainerInfo container = 2;
      case 2: {
        if (tag == 18) {
         parse_container:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_container()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_zip;
        break;
      }

      // optional .google.appengine.v1.ZipInfo zip = 3;
      case 3: {
        if (tag == 26) {
         parse_zip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_zip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Deployment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Deployment)
  return false;
#undef DO_
}

void Deployment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Deployment)
  // map<string, .google.appengine.v1.FileInfo> files = 1;
  if (!this->files().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Deployment.FilesEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->files().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->files().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::const_iterator
          it = this->files().begin();
          it != this->files().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Deployment_FilesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(files_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Deployment_FilesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::const_iterator
          it = this->files().begin();
          it != this->files().end(); ++it) {
        entry.reset(files_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.appengine.v1.ContainerInfo container = 2;
  if (this->has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->container_, output);
  }

  // optional .google.appengine.v1.ZipInfo zip = 3;
  if (this->has_zip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->zip_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Deployment)
}

::google::protobuf::uint8* Deployment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Deployment)
  // map<string, .google.appengine.v1.FileInfo> files = 1;
  if (!this->files().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.Deployment.FilesEntry.key");
      }
    };

    if (deterministic &&
        this->files().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->files().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::const_iterator
          it = this->files().begin();
          it != this->files().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Deployment_FilesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(files_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Deployment_FilesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::const_iterator
          it = this->files().begin();
          it != this->files().end(); ++it) {
        entry.reset(files_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.appengine.v1.ContainerInfo container = 2;
  if (this->has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->container_, false, target);
  }

  // optional .google.appengine.v1.ZipInfo zip = 3;
  if (this->has_zip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->zip_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Deployment)
  return target;
}

size_t Deployment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Deployment)
  size_t total_size = 0;

  // optional .google.appengine.v1.ContainerInfo container = 2;
  if (this->has_container()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->container_);
  }

  // optional .google.appengine.v1.ZipInfo zip = 3;
  if (this->has_zip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->zip_);
  }

  // map<string, .google.appengine.v1.FileInfo> files = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->files_size());
  {
    ::google::protobuf::scoped_ptr<Deployment_FilesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >::const_iterator
        it = this->files().begin();
        it != this->files().end(); ++it) {
      entry.reset(files_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deployment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Deployment)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Deployment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Deployment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Deployment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Deployment)
    UnsafeMergeFrom(*source);
  }
}

void Deployment::MergeFrom(const Deployment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Deployment)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Deployment::UnsafeMergeFrom(const Deployment& from) {
  GOOGLE_DCHECK(&from != this);
  files_.MergeFrom(from.files_);
  if (from.has_container()) {
    mutable_container()->::google::appengine::v1::ContainerInfo::MergeFrom(from.container());
  }
  if (from.has_zip()) {
    mutable_zip()->::google::appengine::v1::ZipInfo::MergeFrom(from.zip());
  }
}

void Deployment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Deployment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deployment::CopyFrom(const Deployment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Deployment)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Deployment::IsInitialized() const {

  return true;
}

void Deployment::Swap(Deployment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Deployment::InternalSwap(Deployment* other) {
  files_.Swap(&other->files_);
  std::swap(container_, other->container_);
  std::swap(zip_, other->zip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Deployment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deployment_descriptor_;
  metadata.reflection = Deployment_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Deployment

// map<string, .google.appengine.v1.FileInfo> files = 1;
int Deployment::files_size() const {
  return files_.size();
}
void Deployment::clear_files() {
  files_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >&
Deployment::files() const {
  // @@protoc_insertion_point(field_map:google.appengine.v1.Deployment.files)
  return files_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >*
Deployment::mutable_files() {
  // @@protoc_insertion_point(field_mutable_map:google.appengine.v1.Deployment.files)
  return files_.MutableMap();
}

// optional .google.appengine.v1.ContainerInfo container = 2;
bool Deployment::has_container() const {
  return this != internal_default_instance() && container_ != NULL;
}
void Deployment::clear_container() {
  if (GetArenaNoVirtual() == NULL && container_ != NULL) delete container_;
  container_ = NULL;
}
const ::google::appengine::v1::ContainerInfo& Deployment::container() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Deployment.container)
  return container_ != NULL ? *container_
                         : *::google::appengine::v1::ContainerInfo::internal_default_instance();
}
::google::appengine::v1::ContainerInfo* Deployment::mutable_container() {
  
  if (container_ == NULL) {
    container_ = new ::google::appengine::v1::ContainerInfo;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Deployment.container)
  return container_;
}
::google::appengine::v1::ContainerInfo* Deployment::release_container() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Deployment.container)
  
  ::google::appengine::v1::ContainerInfo* temp = container_;
  container_ = NULL;
  return temp;
}
void Deployment::set_allocated_container(::google::appengine::v1::ContainerInfo* container) {
  delete container_;
  container_ = container;
  if (container) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Deployment.container)
}

// optional .google.appengine.v1.ZipInfo zip = 3;
bool Deployment::has_zip() const {
  return this != internal_default_instance() && zip_ != NULL;
}
void Deployment::clear_zip() {
  if (GetArenaNoVirtual() == NULL && zip_ != NULL) delete zip_;
  zip_ = NULL;
}
const ::google::appengine::v1::ZipInfo& Deployment::zip() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Deployment.zip)
  return zip_ != NULL ? *zip_
                         : *::google::appengine::v1::ZipInfo::internal_default_instance();
}
::google::appengine::v1::ZipInfo* Deployment::mutable_zip() {
  
  if (zip_ == NULL) {
    zip_ = new ::google::appengine::v1::ZipInfo;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Deployment.zip)
  return zip_;
}
::google::appengine::v1::ZipInfo* Deployment::release_zip() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Deployment.zip)
  
  ::google::appengine::v1::ZipInfo* temp = zip_;
  zip_ = NULL;
  return temp;
}
void Deployment::set_allocated_zip(::google::appengine::v1::ZipInfo* zip) {
  delete zip_;
  zip_ = zip;
  if (zip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Deployment.zip)
}

inline const Deployment* Deployment::internal_default_instance() {
  return &Deployment_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfo::kSourceUrlFieldNumber;
const int FileInfo::kSha1SumFieldNumber;
const int FileInfo::kMimeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfo::FileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.FileInfo)
}

void FileInfo::InitAsDefaultInstance() {
}

FileInfo::FileInfo(const FileInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.FileInfo)
}

void FileInfo::SharedCtor() {
  source_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha1_sum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.FileInfo)
  SharedDtor();
}

void FileInfo::SharedDtor() {
  source_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha1_sum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileInfo_descriptor_;
}

const FileInfo& FileInfo::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FileInfo> FileInfo_default_instance_;

FileInfo* FileInfo::New(::google::protobuf::Arena* arena) const {
  FileInfo* n = new FileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.FileInfo)
  source_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha1_sum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.FileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_url().data(), this->source_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.FileInfo.source_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sha1_sum;
        break;
      }

      // optional string sha1_sum = 2;
      case 2: {
        if (tag == 18) {
         parse_sha1_sum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sha1_sum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sha1_sum().data(), this->sha1_sum().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.FileInfo.sha1_sum"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mime_type;
        break;
      }

      // optional string mime_type = 3;
      case 3: {
        if (tag == 26) {
         parse_mime_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), this->mime_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.FileInfo.mime_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.FileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.FileInfo)
  return false;
#undef DO_
}

void FileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.FileInfo)
  // optional string source_url = 1;
  if (this->source_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_url().data(), this->source_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.FileInfo.source_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_url(), output);
  }

  // optional string sha1_sum = 2;
  if (this->sha1_sum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha1_sum().data(), this->sha1_sum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.FileInfo.sha1_sum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sha1_sum(), output);
  }

  // optional string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), this->mime_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.FileInfo.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mime_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.FileInfo)
}

::google::protobuf::uint8* FileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.FileInfo)
  // optional string source_url = 1;
  if (this->source_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_url().data(), this->source_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.FileInfo.source_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_url(), target);
  }

  // optional string sha1_sum = 2;
  if (this->sha1_sum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha1_sum().data(), this->sha1_sum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.FileInfo.sha1_sum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sha1_sum(), target);
  }

  // optional string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), this->mime_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.FileInfo.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mime_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.FileInfo)
  size_t total_size = 0;

  // optional string source_url = 1;
  if (this->source_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_url());
  }

  // optional string sha1_sum = 2;
  if (this->sha1_sum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sha1_sum());
  }

  // optional string mime_type = 3;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.FileInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.FileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.FileInfo)
    UnsafeMergeFrom(*source);
  }
}

void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.FileInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FileInfo::UnsafeMergeFrom(const FileInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.source_url().size() > 0) {

    source_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_url_);
  }
  if (from.sha1_sum().size() > 0) {

    sha1_sum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha1_sum_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
}

void FileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.FileInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FileInfo::IsInitialized() const {

  return true;
}

void FileInfo::Swap(FileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfo::InternalSwap(FileInfo* other) {
  source_url_.Swap(&other->source_url_);
  sha1_sum_.Swap(&other->sha1_sum_);
  mime_type_.Swap(&other->mime_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileInfo_descriptor_;
  metadata.reflection = FileInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileInfo

// optional string source_url = 1;
void FileInfo::clear_source_url() {
  source_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::source_url() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.FileInfo.source_url)
  return source_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_source_url(const ::std::string& value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.FileInfo.source_url)
}
void FileInfo::set_source_url(const char* value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.FileInfo.source_url)
}
void FileInfo::set_source_url(const char* value, size_t size) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.FileInfo.source_url)
}
::std::string* FileInfo::mutable_source_url() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.FileInfo.source_url)
  return source_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_source_url() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.FileInfo.source_url)
  
  return source_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_source_url(::std::string* source_url) {
  if (source_url != NULL) {
    
  } else {
    
  }
  source_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_url);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.FileInfo.source_url)
}

// optional string sha1_sum = 2;
void FileInfo::clear_sha1_sum() {
  sha1_sum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::sha1_sum() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.FileInfo.sha1_sum)
  return sha1_sum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_sha1_sum(const ::std::string& value) {
  
  sha1_sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.FileInfo.sha1_sum)
}
void FileInfo::set_sha1_sum(const char* value) {
  
  sha1_sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.FileInfo.sha1_sum)
}
void FileInfo::set_sha1_sum(const char* value, size_t size) {
  
  sha1_sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.FileInfo.sha1_sum)
}
::std::string* FileInfo::mutable_sha1_sum() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.FileInfo.sha1_sum)
  return sha1_sum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_sha1_sum() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.FileInfo.sha1_sum)
  
  return sha1_sum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_sha1_sum(::std::string* sha1_sum) {
  if (sha1_sum != NULL) {
    
  } else {
    
  }
  sha1_sum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha1_sum);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.FileInfo.sha1_sum)
}

// optional string mime_type = 3;
void FileInfo::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::mime_type() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.FileInfo.mime_type)
  return mime_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.FileInfo.mime_type)
}
void FileInfo::set_mime_type(const char* value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.FileInfo.mime_type)
}
void FileInfo::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.FileInfo.mime_type)
}
::std::string* FileInfo::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.FileInfo.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_mime_type() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.FileInfo.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.FileInfo.mime_type)
}

inline const FileInfo* FileInfo::internal_default_instance() {
  return &FileInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerInfo::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerInfo::ContainerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.ContainerInfo)
}

void ContainerInfo::InitAsDefaultInstance() {
}

ContainerInfo::ContainerInfo(const ContainerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.ContainerInfo)
}

void ContainerInfo::SharedCtor() {
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ContainerInfo::~ContainerInfo() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.ContainerInfo)
  SharedDtor();
}

void ContainerInfo::SharedDtor() {
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContainerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContainerInfo_descriptor_;
}

const ContainerInfo& ContainerInfo::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ContainerInfo> ContainerInfo_default_instance_;

ContainerInfo* ContainerInfo::New(::google::protobuf::Arena* arena) const {
  ContainerInfo* n = new ContainerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.ContainerInfo)
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ContainerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.ContainerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string image = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image().data(), this->image().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ContainerInfo.image"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.ContainerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.ContainerInfo)
  return false;
#undef DO_
}

void ContainerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.ContainerInfo)
  // optional string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), this->image().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ContainerInfo.image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.ContainerInfo)
}

::google::protobuf::uint8* ContainerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.ContainerInfo)
  // optional string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), this->image().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ContainerInfo.image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.ContainerInfo)
  return target;
}

size_t ContainerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.ContainerInfo)
  size_t total_size = 0;

  // optional string image = 1;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.ContainerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ContainerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.ContainerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.ContainerInfo)
    UnsafeMergeFrom(*source);
  }
}

void ContainerInfo::MergeFrom(const ContainerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.ContainerInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ContainerInfo::UnsafeMergeFrom(const ContainerInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
}

void ContainerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.ContainerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerInfo::CopyFrom(const ContainerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.ContainerInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ContainerInfo::IsInitialized() const {

  return true;
}

void ContainerInfo::Swap(ContainerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerInfo::InternalSwap(ContainerInfo* other) {
  image_.Swap(&other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContainerInfo_descriptor_;
  metadata.reflection = ContainerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContainerInfo

// optional string image = 1;
void ContainerInfo::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ContainerInfo::image() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ContainerInfo.image)
  return image_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContainerInfo::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ContainerInfo.image)
}
void ContainerInfo::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ContainerInfo.image)
}
void ContainerInfo::set_image(const char* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ContainerInfo.image)
}
::std::string* ContainerInfo::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ContainerInfo.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ContainerInfo::release_image() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ContainerInfo.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ContainerInfo::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ContainerInfo.image)
}

inline const ContainerInfo* ContainerInfo::internal_default_instance() {
  return &ContainerInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZipInfo::kSourceUrlFieldNumber;
const int ZipInfo::kFilesCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZipInfo::ZipInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.ZipInfo)
}

void ZipInfo::InitAsDefaultInstance() {
}

ZipInfo::ZipInfo(const ZipInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.ZipInfo)
}

void ZipInfo::SharedCtor() {
  source_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  files_count_ = 0;
  _cached_size_ = 0;
}

ZipInfo::~ZipInfo() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.ZipInfo)
  SharedDtor();
}

void ZipInfo::SharedDtor() {
  source_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZipInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZipInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZipInfo_descriptor_;
}

const ZipInfo& ZipInfo::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ZipInfo> ZipInfo_default_instance_;

ZipInfo* ZipInfo::New(::google::protobuf::Arena* arena) const {
  ZipInfo* n = new ZipInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.ZipInfo)
  source_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  files_count_ = 0;
}

bool ZipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.ZipInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_url = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_url().data(), this->source_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ZipInfo.source_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_files_count;
        break;
      }

      // optional int32 files_count = 4;
      case 4: {
        if (tag == 32) {
         parse_files_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &files_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.ZipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.ZipInfo)
  return false;
#undef DO_
}

void ZipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.ZipInfo)
  // optional string source_url = 3;
  if (this->source_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_url().data(), this->source_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ZipInfo.source_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source_url(), output);
  }

  // optional int32 files_count = 4;
  if (this->files_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->files_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.ZipInfo)
}

::google::protobuf::uint8* ZipInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.ZipInfo)
  // optional string source_url = 3;
  if (this->source_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_url().data(), this->source_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ZipInfo.source_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source_url(), target);
  }

  // optional int32 files_count = 4;
  if (this->files_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->files_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.ZipInfo)
  return target;
}

size_t ZipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.ZipInfo)
  size_t total_size = 0;

  // optional string source_url = 3;
  if (this->source_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_url());
  }

  // optional int32 files_count = 4;
  if (this->files_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->files_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZipInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.ZipInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ZipInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZipInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.ZipInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.ZipInfo)
    UnsafeMergeFrom(*source);
  }
}

void ZipInfo::MergeFrom(const ZipInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.ZipInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ZipInfo::UnsafeMergeFrom(const ZipInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.source_url().size() > 0) {

    source_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_url_);
  }
  if (from.files_count() != 0) {
    set_files_count(from.files_count());
  }
}

void ZipInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.ZipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZipInfo::CopyFrom(const ZipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.ZipInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ZipInfo::IsInitialized() const {

  return true;
}

void ZipInfo::Swap(ZipInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZipInfo::InternalSwap(ZipInfo* other) {
  source_url_.Swap(&other->source_url_);
  std::swap(files_count_, other->files_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZipInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZipInfo_descriptor_;
  metadata.reflection = ZipInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZipInfo

// optional string source_url = 3;
void ZipInfo::clear_source_url() {
  source_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZipInfo::source_url() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ZipInfo.source_url)
  return source_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZipInfo::set_source_url(const ::std::string& value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ZipInfo.source_url)
}
void ZipInfo::set_source_url(const char* value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ZipInfo.source_url)
}
void ZipInfo::set_source_url(const char* value, size_t size) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ZipInfo.source_url)
}
::std::string* ZipInfo::mutable_source_url() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ZipInfo.source_url)
  return source_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZipInfo::release_source_url() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ZipInfo.source_url)
  
  return source_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZipInfo::set_allocated_source_url(::std::string* source_url) {
  if (source_url != NULL) {
    
  } else {
    
  }
  source_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_url);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ZipInfo.source_url)
}

// optional int32 files_count = 4;
void ZipInfo::clear_files_count() {
  files_count_ = 0;
}
::google::protobuf::int32 ZipInfo::files_count() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ZipInfo.files_count)
  return files_count_;
}
void ZipInfo::set_files_count(::google::protobuf::int32 value) {
  
  files_count_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ZipInfo.files_count)
}

inline const ZipInfo* ZipInfo::internal_default_instance() {
  return &ZipInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
