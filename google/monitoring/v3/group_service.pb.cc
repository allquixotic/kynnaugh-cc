// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/group_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/monitoring/v3/group_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace monitoring {
namespace v3 {

namespace {

const ::google::protobuf::Descriptor* ListGroupsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListGroupsRequest_reflection_ = NULL;
struct ListGroupsRequestOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr children_of_group_;
  ::google::protobuf::internal::ArenaStringPtr ancestors_of_group_;
  ::google::protobuf::internal::ArenaStringPtr descendants_of_group_;
}* ListGroupsRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ListGroupsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListGroupsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGroupRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGroupRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateGroupRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateGroupRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateGroupRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateGroupRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteGroupRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteGroupRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListGroupMembersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListGroupMembersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListGroupMembersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListGroupMembersResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto() {
  protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/monitoring/v3/group_service.proto");
  GOOGLE_CHECK(file != NULL);
  ListGroupsRequest_descriptor_ = file->message_type(0);
  static const int ListGroupsRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsRequest, name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ListGroupsRequest_default_oneof_instance_, children_of_group_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ListGroupsRequest_default_oneof_instance_, ancestors_of_group_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ListGroupsRequest_default_oneof_instance_, descendants_of_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsRequest, page_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsRequest, filter_),
  };
  ListGroupsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListGroupsRequest_descriptor_,
      ListGroupsRequest::internal_default_instance(),
      ListGroupsRequest_offsets_,
      -1,
      -1,
      -1,
      ListGroupsRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsRequest, _oneof_case_[0]),
      sizeof(ListGroupsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsRequest, _internal_metadata_));
  ListGroupsResponse_descriptor_ = file->message_type(1);
  static const int ListGroupsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsResponse, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsResponse, next_page_token_),
  };
  ListGroupsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListGroupsResponse_descriptor_,
      ListGroupsResponse::internal_default_instance(),
      ListGroupsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListGroupsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupsResponse, _internal_metadata_));
  GetGroupRequest_descriptor_ = file->message_type(2);
  static const int GetGroupRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGroupRequest, name_),
  };
  GetGroupRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetGroupRequest_descriptor_,
      GetGroupRequest::internal_default_instance(),
      GetGroupRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetGroupRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGroupRequest, _internal_metadata_));
  CreateGroupRequest_descriptor_ = file->message_type(3);
  static const int CreateGroupRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRequest, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRequest, validate_only_),
  };
  CreateGroupRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateGroupRequest_descriptor_,
      CreateGroupRequest::internal_default_instance(),
      CreateGroupRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateGroupRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRequest, _internal_metadata_));
  UpdateGroupRequest_descriptor_ = file->message_type(4);
  static const int UpdateGroupRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateGroupRequest, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateGroupRequest, validate_only_),
  };
  UpdateGroupRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateGroupRequest_descriptor_,
      UpdateGroupRequest::internal_default_instance(),
      UpdateGroupRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateGroupRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateGroupRequest, _internal_metadata_));
  DeleteGroupRequest_descriptor_ = file->message_type(5);
  static const int DeleteGroupRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteGroupRequest, name_),
  };
  DeleteGroupRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteGroupRequest_descriptor_,
      DeleteGroupRequest::internal_default_instance(),
      DeleteGroupRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteGroupRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteGroupRequest, _internal_metadata_));
  ListGroupMembersRequest_descriptor_ = file->message_type(6);
  static const int ListGroupMembersRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersRequest, page_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersRequest, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersRequest, interval_),
  };
  ListGroupMembersRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListGroupMembersRequest_descriptor_,
      ListGroupMembersRequest::internal_default_instance(),
      ListGroupMembersRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListGroupMembersRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersRequest, _internal_metadata_));
  ListGroupMembersResponse_descriptor_ = file->message_type(7);
  static const int ListGroupMembersResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersResponse, members_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersResponse, next_page_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersResponse, total_size_),
  };
  ListGroupMembersResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListGroupMembersResponse_descriptor_,
      ListGroupMembersResponse::internal_default_instance(),
      ListGroupMembersResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListGroupMembersResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGroupMembersResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListGroupsRequest_descriptor_, ListGroupsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListGroupsResponse_descriptor_, ListGroupsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetGroupRequest_descriptor_, GetGroupRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateGroupRequest_descriptor_, CreateGroupRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateGroupRequest_descriptor_, UpdateGroupRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteGroupRequest_descriptor_, DeleteGroupRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListGroupMembersRequest_descriptor_, ListGroupMembersRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListGroupMembersResponse_descriptor_, ListGroupMembersResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto() {
  ListGroupsRequest_default_instance_.Shutdown();
  delete ListGroupsRequest_default_oneof_instance_;
  delete ListGroupsRequest_reflection_;
  ListGroupsResponse_default_instance_.Shutdown();
  delete ListGroupsResponse_reflection_;
  GetGroupRequest_default_instance_.Shutdown();
  delete GetGroupRequest_reflection_;
  CreateGroupRequest_default_instance_.Shutdown();
  delete CreateGroupRequest_reflection_;
  UpdateGroupRequest_default_instance_.Shutdown();
  delete UpdateGroupRequest_reflection_;
  DeleteGroupRequest_default_instance_.Shutdown();
  delete DeleteGroupRequest_reflection_;
  ListGroupMembersRequest_default_instance_.Shutdown();
  delete ListGroupMembersRequest_reflection_;
  ListGroupMembersResponse_default_instance_.Shutdown();
  delete ListGroupMembersResponse_reflection_;
}

void protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::monitoring::v3::protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  ::google::monitoring::v3::protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ListGroupsRequest_default_instance_.DefaultConstruct();
  ListGroupsRequest_default_oneof_instance_ = new ListGroupsRequestOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  ListGroupsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetGroupRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateGroupRequest_default_instance_.DefaultConstruct();
  UpdateGroupRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeleteGroupRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListGroupMembersRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListGroupMembersResponse_default_instance_.DefaultConstruct();
  ListGroupsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListGroupsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetGroupRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateGroupRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateGroupRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteGroupRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListGroupMembersRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListGroupMembersResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_once_);
void protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_once_,
                 &protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_impl);
}
void protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(google/monitoring/v3/group_service.pro"
    "to\022\024google.monitoring.v3\032\034google/api/ann"
    "otations.proto\032#google/api/monitored_res"
    "ource.proto\032!google/monitoring/v3/common"
    ".proto\032 google/monitoring/v3/group.proto"
    "\032\033google/protobuf/empty.proto\"\255\001\n\021ListGr"
    "oupsRequest\022\014\n\004name\030\007 \001(\t\022\033\n\021children_of"
    "_group\030\002 \001(\tH\000\022\034\n\022ancestors_of_group\030\003 \001"
    "(\tH\000\022\036\n\024descendants_of_group\030\004 \001(\tH\000\022\021\n\t"
    "page_size\030\005 \001(\005\022\022\n\npage_token\030\006 \001(\tB\010\n\006f"
    "ilter\"Y\n\022ListGroupsResponse\022*\n\005group\030\001 \003"
    "(\0132\033.google.monitoring.v3.Group\022\027\n\017next_"
    "page_token\030\002 \001(\t\"\037\n\017GetGroupRequest\022\014\n\004n"
    "ame\030\003 \001(\t\"e\n\022CreateGroupRequest\022\014\n\004name\030"
    "\004 \001(\t\022*\n\005group\030\002 \001(\0132\033.google.monitoring"
    ".v3.Group\022\025\n\rvalidate_only\030\003 \001(\010\"W\n\022Upda"
    "teGroupRequest\022*\n\005group\030\002 \001(\0132\033.google.m"
    "onitoring.v3.Group\022\025\n\rvalidate_only\030\003 \001("
    "\010\"\"\n\022DeleteGroupRequest\022\014\n\004name\030\003 \001(\t\"\224\001"
    "\n\027ListGroupMembersRequest\022\014\n\004name\030\007 \001(\t\022"
    "\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\022\016"
    "\n\006filter\030\005 \001(\t\0224\n\010interval\030\006 \001(\0132\".googl"
    "e.monitoring.v3.TimeInterval\"w\n\030ListGrou"
    "pMembersResponse\022.\n\007members\030\001 \003(\0132\035.goog"
    "le.api.MonitoredResource\022\027\n\017next_page_to"
    "ken\030\002 \001(\t\022\022\n\ntotal_size\030\003 \001(\0052\273\006\n\014GroupS"
    "ervice\022\205\001\n\nListGroups\022\'.google.monitorin"
    "g.v3.ListGroupsRequest\032(.google.monitori"
    "ng.v3.ListGroupsResponse\"$\202\323\344\223\002\036\022\034/v3/{n"
    "ame=projects/*}/groups\022v\n\010GetGroup\022%.goo"
    "gle.monitoring.v3.GetGroupRequest\032\033.goog"
    "le.monitoring.v3.Group\"&\202\323\344\223\002 \022\036/v3/{nam"
    "e=projects/*/groups/*}\022\201\001\n\013CreateGroup\022("
    ".google.monitoring.v3.CreateGroupRequest"
    "\032\033.google.monitoring.v3.Group\"+\202\323\344\223\002%\"\034/"
    "v3/{name=projects/*}/groups:\005group\022\211\001\n\013U"
    "pdateGroup\022(.google.monitoring.v3.Update"
    "GroupRequest\032\033.google.monitoring.v3.Grou"
    "p\"3\202\323\344\223\002-\032$/v3/{group.name=projects/*/gr"
    "oups/*}:\005group\022w\n\013DeleteGroup\022(.google.m"
    "onitoring.v3.DeleteGroupRequest\032\026.google"
    ".protobuf.Empty\"&\202\323\344\223\002 *\036/v3/{name=proje"
    "cts/*/groups/*}\022\241\001\n\020ListGroupMembers\022-.g"
    "oogle.monitoring.v3.ListGroupMembersRequ"
    "est\032..google.monitoring.v3.ListGroupMemb"
    "ersResponse\".\202\323\344\223\002(\022&/v3/{name=projects/"
    "*/groups/*}/membersB\214\001\n\030com.google.monit"
    "oring.v3B\021GroupServiceProtoP\001Z>google.go"
    "lang.org/genproto/googleapis/monitoring/"
    "v3;monitoring\252\002\032Google.Cloud.Monitoring."
    "V3b\006proto3", 2010);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/group_service.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::monitoring::v3::protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto();
  ::google::monitoring::v3::protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_once_);
void protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_once_,
                 &protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto {
  StaticDescriptorInitializer_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto() {
    protobuf_AddDesc_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  }
} static_descriptor_initializer_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupsRequest::kNameFieldNumber;
const int ListGroupsRequest::kChildrenOfGroupFieldNumber;
const int ListGroupsRequest::kAncestorsOfGroupFieldNumber;
const int ListGroupsRequest::kDescendantsOfGroupFieldNumber;
const int ListGroupsRequest::kPageSizeFieldNumber;
const int ListGroupsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupsRequest::ListGroupsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListGroupsRequest)
}

void ListGroupsRequest::InitAsDefaultInstance() {
  ListGroupsRequest_default_oneof_instance_->children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ListGroupsRequest_default_oneof_instance_->ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ListGroupsRequest_default_oneof_instance_->descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListGroupsRequest::ListGroupsRequest(const ListGroupsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListGroupsRequest)
}

void ListGroupsRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  clear_has_filter();
  _cached_size_ = 0;
}

ListGroupsRequest::~ListGroupsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListGroupsRequest)
  SharedDtor();
}

void ListGroupsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_filter()) {
    clear_filter();
  }
}

void ListGroupsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListGroupsRequest_descriptor_;
}

const ListGroupsRequest& ListGroupsRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListGroupsRequest> ListGroupsRequest_default_instance_;

ListGroupsRequest* ListGroupsRequest::New(::google::protobuf::Arena* arena) const {
  ListGroupsRequest* n = new ListGroupsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupsRequest::clear_filter() {
// @@protoc_insertion_point(one_of_clear_start:google.monitoring.v3.ListGroupsRequest)
  switch (filter_case()) {
    case kChildrenOfGroup: {
      filter_.children_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kAncestorsOfGroup: {
      filter_.ancestors_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDescendantsOfGroup: {
      filter_.descendants_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FILTER_NOT_SET;
}


void ListGroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListGroupsRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_filter();
}

bool ListGroupsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListGroupsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string children_of_group = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_children_of_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->children_of_group().data(), this->children_of_group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupsRequest.children_of_group"));
        } else {
          goto handle_unusual;
        }
        goto after_descendants_of_group;
        break;
      }

      // optional string ancestors_of_group = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ancestors_of_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ancestors_of_group().data(), this->ancestors_of_group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupsRequest.ancestors_of_group"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_descendants_of_group;
        break;
      }

      // optional string descendants_of_group = 4;
      case 4: {
        if (tag == 34) {
         parse_descendants_of_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_descendants_of_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->descendants_of_group().data(), this->descendants_of_group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupsRequest.descendants_of_group"));
        } else {
          goto handle_unusual;
        }
       after_descendants_of_group:
        if (input->ExpectTag(40)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 5;
      case 5: {
        if (tag == 40) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_page_token;
        break;
      }

      // optional string page_token = 6;
      case 6: {
        if (tag == 50) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_name;
        break;
      }

      // optional string name = 7;
      case 7: {
        if (tag == 58) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupsRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListGroupsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListGroupsRequest)
  return false;
#undef DO_
}

void ListGroupsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListGroupsRequest)
  // optional string children_of_group = 2;
  if (has_children_of_group()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->children_of_group().data(), this->children_of_group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.children_of_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->children_of_group(), output);
  }

  // optional string ancestors_of_group = 3;
  if (has_ancestors_of_group()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ancestors_of_group().data(), this->ancestors_of_group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.ancestors_of_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ancestors_of_group(), output);
  }

  // optional string descendants_of_group = 4;
  if (has_descendants_of_group()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->descendants_of_group().data(), this->descendants_of_group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.descendants_of_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->descendants_of_group(), output);
  }

  // optional int32 page_size = 5;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->page_size(), output);
  }

  // optional string page_token = 6;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->page_token(), output);
  }

  // optional string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListGroupsRequest)
}

::google::protobuf::uint8* ListGroupsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListGroupsRequest)
  // optional string children_of_group = 2;
  if (has_children_of_group()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->children_of_group().data(), this->children_of_group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.children_of_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->children_of_group(), target);
  }

  // optional string ancestors_of_group = 3;
  if (has_ancestors_of_group()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ancestors_of_group().data(), this->ancestors_of_group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.ancestors_of_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ancestors_of_group(), target);
  }

  // optional string descendants_of_group = 4;
  if (has_descendants_of_group()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->descendants_of_group().data(), this->descendants_of_group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.descendants_of_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->descendants_of_group(), target);
  }

  // optional int32 page_size = 5;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->page_size(), target);
  }

  // optional string page_token = 6;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->page_token(), target);
  }

  // optional string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListGroupsRequest)
  return target;
}

size_t ListGroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListGroupsRequest)
  size_t total_size = 0;

  // optional string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 page_size = 5;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 6;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  switch (filter_case()) {
    // optional string children_of_group = 2;
    case kChildrenOfGroup: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->children_of_group());
      break;
    }
    // optional string ancestors_of_group = 3;
    case kAncestorsOfGroup: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ancestors_of_group());
      break;
    }
    // optional string descendants_of_group = 4;
    case kDescendantsOfGroup: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->descendants_of_group());
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListGroupsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListGroupsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListGroupsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListGroupsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListGroupsRequest::MergeFrom(const ListGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListGroupsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListGroupsRequest::UnsafeMergeFrom(const ListGroupsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.filter_case()) {
    case kChildrenOfGroup: {
      set_children_of_group(from.children_of_group());
      break;
    }
    case kAncestorsOfGroup: {
      set_ancestors_of_group(from.ancestors_of_group());
      break;
    }
    case kDescendantsOfGroup: {
      set_descendants_of_group(from.descendants_of_group());
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListGroupsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupsRequest::CopyFrom(const ListGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListGroupsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListGroupsRequest::IsInitialized() const {

  return true;
}

void ListGroupsRequest::Swap(ListGroupsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupsRequest::InternalSwap(ListGroupsRequest* other) {
  name_.Swap(&other->name_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  std::swap(filter_, other->filter_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListGroupsRequest_descriptor_;
  metadata.reflection = ListGroupsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGroupsRequest

// optional string name = 7;
void ListGroupsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.name)
}
void ListGroupsRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.name)
}
void ListGroupsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.name)
}
::std::string* ListGroupsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.name)
}

// optional string children_of_group = 2;
bool ListGroupsRequest::has_children_of_group() const {
  return filter_case() == kChildrenOfGroup;
}
void ListGroupsRequest::set_has_children_of_group() {
  _oneof_case_[0] = kChildrenOfGroup;
}
void ListGroupsRequest::clear_children_of_group() {
  if (has_children_of_group()) {
    filter_.children_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_filter();
  }
}
const ::std::string& ListGroupsRequest::children_of_group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.children_of_group)
  if (has_children_of_group()) {
    return filter_.children_of_group_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void ListGroupsRequest::set_children_of_group(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.children_of_group)
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.children_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.children_of_group)
}
void ListGroupsRequest::set_children_of_group(const char* value) {
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.children_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.children_of_group)
}
void ListGroupsRequest::set_children_of_group(const char* value, size_t size) {
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.children_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.children_of_group)
}
::std::string* ListGroupsRequest::mutable_children_of_group() {
  if (!has_children_of_group()) {
    clear_filter();
    set_has_children_of_group();
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.children_of_group)
  return filter_.children_of_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupsRequest::release_children_of_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.children_of_group)
  if (has_children_of_group()) {
    clear_has_filter();
    return filter_.children_of_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void ListGroupsRequest::set_allocated_children_of_group(::std::string* children_of_group) {
  if (!has_children_of_group()) {
    filter_.children_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_filter();
  if (children_of_group != NULL) {
    set_has_children_of_group();
    filter_.children_of_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        children_of_group);
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.children_of_group)
}

// optional string ancestors_of_group = 3;
bool ListGroupsRequest::has_ancestors_of_group() const {
  return filter_case() == kAncestorsOfGroup;
}
void ListGroupsRequest::set_has_ancestors_of_group() {
  _oneof_case_[0] = kAncestorsOfGroup;
}
void ListGroupsRequest::clear_ancestors_of_group() {
  if (has_ancestors_of_group()) {
    filter_.ancestors_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_filter();
  }
}
const ::std::string& ListGroupsRequest::ancestors_of_group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  if (has_ancestors_of_group()) {
    return filter_.ancestors_of_group_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void ListGroupsRequest::set_ancestors_of_group(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.ancestors_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}
void ListGroupsRequest::set_ancestors_of_group(const char* value) {
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.ancestors_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}
void ListGroupsRequest::set_ancestors_of_group(const char* value, size_t size) {
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.ancestors_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}
::std::string* ListGroupsRequest::mutable_ancestors_of_group() {
  if (!has_ancestors_of_group()) {
    clear_filter();
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  return filter_.ancestors_of_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupsRequest::release_ancestors_of_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
  if (has_ancestors_of_group()) {
    clear_has_filter();
    return filter_.ancestors_of_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void ListGroupsRequest::set_allocated_ancestors_of_group(::std::string* ancestors_of_group) {
  if (!has_ancestors_of_group()) {
    filter_.ancestors_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_filter();
  if (ancestors_of_group != NULL) {
    set_has_ancestors_of_group();
    filter_.ancestors_of_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ancestors_of_group);
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.ancestors_of_group)
}

// optional string descendants_of_group = 4;
bool ListGroupsRequest::has_descendants_of_group() const {
  return filter_case() == kDescendantsOfGroup;
}
void ListGroupsRequest::set_has_descendants_of_group() {
  _oneof_case_[0] = kDescendantsOfGroup;
}
void ListGroupsRequest::clear_descendants_of_group() {
  if (has_descendants_of_group()) {
    filter_.descendants_of_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_filter();
  }
}
const ::std::string& ListGroupsRequest::descendants_of_group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  if (has_descendants_of_group()) {
    return filter_.descendants_of_group_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void ListGroupsRequest::set_descendants_of_group(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.descendants_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}
void ListGroupsRequest::set_descendants_of_group(const char* value) {
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.descendants_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}
void ListGroupsRequest::set_descendants_of_group(const char* value, size_t size) {
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  filter_.descendants_of_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}
::std::string* ListGroupsRequest::mutable_descendants_of_group() {
  if (!has_descendants_of_group()) {
    clear_filter();
    set_has_descendants_of_group();
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  return filter_.descendants_of_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupsRequest::release_descendants_of_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
  if (has_descendants_of_group()) {
    clear_has_filter();
    return filter_.descendants_of_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void ListGroupsRequest::set_allocated_descendants_of_group(::std::string* descendants_of_group) {
  if (!has_descendants_of_group()) {
    filter_.descendants_of_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_filter();
  if (descendants_of_group != NULL) {
    set_has_descendants_of_group();
    filter_.descendants_of_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        descendants_of_group);
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.descendants_of_group)
}

// optional int32 page_size = 5;
void ListGroupsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListGroupsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.page_size)
  return page_size_;
}
void ListGroupsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.page_size)
}

// optional string page_token = 6;
void ListGroupsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsRequest.page_token)
}
void ListGroupsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsRequest.page_token)
}
void ListGroupsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsRequest.page_token)
}
::std::string* ListGroupsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsRequest.page_token)
}

bool ListGroupsRequest::has_filter() const {
  return filter_case() != FILTER_NOT_SET;
}
void ListGroupsRequest::clear_has_filter() {
  _oneof_case_[0] = FILTER_NOT_SET;
}
ListGroupsRequest::FilterCase ListGroupsRequest::filter_case() const {
  return ListGroupsRequest::FilterCase(_oneof_case_[0]);
}
inline const ListGroupsRequest* ListGroupsRequest::internal_default_instance() {
  return &ListGroupsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupsResponse::kGroupFieldNumber;
const int ListGroupsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupsResponse::ListGroupsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListGroupsResponse)
}

void ListGroupsResponse::InitAsDefaultInstance() {
}

ListGroupsResponse::ListGroupsResponse(const ListGroupsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListGroupsResponse)
}

void ListGroupsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListGroupsResponse::~ListGroupsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListGroupsResponse)
  SharedDtor();
}

void ListGroupsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListGroupsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListGroupsResponse_descriptor_;
}

const ListGroupsResponse& ListGroupsResponse::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListGroupsResponse> ListGroupsResponse_default_instance_;

ListGroupsResponse* ListGroupsResponse::New(::google::protobuf::Arena* arena) const {
  ListGroupsResponse* n = new ListGroupsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListGroupsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.Clear();
}

bool ListGroupsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListGroupsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.Group group = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_group()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_group;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListGroupsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListGroupsResponse)
  return false;
#undef DO_
}

void ListGroupsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListGroupsResponse)
  // repeated .google.monitoring.v3.Group group = 1;
  for (unsigned int i = 0, n = this->group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->group(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListGroupsResponse)
}

::google::protobuf::uint8* ListGroupsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListGroupsResponse)
  // repeated .google.monitoring.v3.Group group = 1;
  for (unsigned int i = 0, n = this->group_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->group(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListGroupsResponse)
  return target;
}

size_t ListGroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListGroupsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.monitoring.v3.Group group = 1;
  {
    unsigned int count = this->group_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListGroupsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListGroupsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListGroupsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListGroupsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListGroupsResponse::MergeFrom(const ListGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListGroupsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListGroupsResponse::UnsafeMergeFrom(const ListGroupsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  group_.MergeFrom(from.group_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListGroupsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupsResponse::CopyFrom(const ListGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListGroupsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListGroupsResponse::IsInitialized() const {

  return true;
}

void ListGroupsResponse::Swap(ListGroupsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupsResponse::InternalSwap(ListGroupsResponse* other) {
  group_.UnsafeArenaSwap(&other->group_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListGroupsResponse_descriptor_;
  metadata.reflection = ListGroupsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGroupsResponse

// repeated .google.monitoring.v3.Group group = 1;
int ListGroupsResponse::group_size() const {
  return group_.size();
}
void ListGroupsResponse::clear_group() {
  group_.Clear();
}
const ::google::monitoring::v3::Group& ListGroupsResponse::group(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsResponse.group)
  return group_.Get(index);
}
::google::monitoring::v3::Group* ListGroupsResponse::mutable_group(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsResponse.group)
  return group_.Mutable(index);
}
::google::monitoring::v3::Group* ListGroupsResponse::add_group() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListGroupsResponse.group)
  return group_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::Group >*
ListGroupsResponse::mutable_group() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListGroupsResponse.group)
  return &group_;
}
const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::Group >&
ListGroupsResponse::group() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListGroupsResponse.group)
  return group_;
}

// optional string next_page_token = 2;
void ListGroupsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupsResponse.next_page_token)
}
void ListGroupsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupsResponse.next_page_token)
}
void ListGroupsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupsResponse.next_page_token)
}
::std::string* ListGroupsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupsResponse.next_page_token)
}

inline const ListGroupsResponse* ListGroupsResponse::internal_default_instance() {
  return &ListGroupsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupRequest::GetGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetGroupRequest)
}

void GetGroupRequest::InitAsDefaultInstance() {
}

GetGroupRequest::GetGroupRequest(const GetGroupRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetGroupRequest)
}

void GetGroupRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetGroupRequest::~GetGroupRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetGroupRequest)
  SharedDtor();
}

void GetGroupRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGroupRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGroupRequest_descriptor_;
}

const GetGroupRequest& GetGroupRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetGroupRequest> GetGroupRequest_default_instance_;

GetGroupRequest* GetGroupRequest::New(::google::protobuf::Arena* arena) const {
  GetGroupRequest* n = new GetGroupRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetGroupRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetGroupRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetGroupRequest)
  return false;
#undef DO_
}

void GetGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetGroupRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetGroupRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetGroupRequest)
}

::google::protobuf::uint8* GetGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetGroupRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetGroupRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetGroupRequest)
  return target;
}

size_t GetGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetGroupRequest)
  size_t total_size = 0;

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetGroupRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetGroupRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetGroupRequest::MergeFrom(const GetGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetGroupRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetGroupRequest::UnsafeMergeFrom(const GetGroupRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupRequest::CopyFrom(const GetGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetGroupRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetGroupRequest::IsInitialized() const {

  return true;
}

void GetGroupRequest::Swap(GetGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupRequest::InternalSwap(GetGroupRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGroupRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGroupRequest_descriptor_;
  metadata.reflection = GetGroupRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGroupRequest

// optional string name = 3;
void GetGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.GetGroupRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.GetGroupRequest.name)
}
void GetGroupRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.GetGroupRequest.name)
}
void GetGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.GetGroupRequest.name)
}
::std::string* GetGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.GetGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.GetGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.GetGroupRequest.name)
}

inline const GetGroupRequest* GetGroupRequest::internal_default_instance() {
  return &GetGroupRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateGroupRequest::kNameFieldNumber;
const int CreateGroupRequest::kGroupFieldNumber;
const int CreateGroupRequest::kValidateOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateGroupRequest::CreateGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateGroupRequest)
}

void CreateGroupRequest::InitAsDefaultInstance() {
  group_ = const_cast< ::google::monitoring::v3::Group*>(
      ::google::monitoring::v3::Group::internal_default_instance());
}

CreateGroupRequest::CreateGroupRequest(const CreateGroupRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateGroupRequest)
}

void CreateGroupRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_ = NULL;
  validate_only_ = false;
  _cached_size_ = 0;
}

CreateGroupRequest::~CreateGroupRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateGroupRequest)
  SharedDtor();
}

void CreateGroupRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CreateGroupRequest_default_instance_.get()) {
    delete group_;
  }
}

void CreateGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateGroupRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateGroupRequest_descriptor_;
}

const CreateGroupRequest& CreateGroupRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateGroupRequest> CreateGroupRequest_default_instance_;

CreateGroupRequest* CreateGroupRequest::New(::google::protobuf::Arena* arena) const {
  CreateGroupRequest* n = new CreateGroupRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateGroupRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
  validate_only_ = false;
}

bool CreateGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.monitoring.v3.Group group = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_validate_only;
        break;
      }

      // optional bool validate_only = 3;
      case 3: {
        if (tag == 24) {
         parse_validate_only:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &validate_only_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateGroupRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateGroupRequest)
  return false;
#undef DO_
}

void CreateGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateGroupRequest)
  // optional .google.monitoring.v3.Group group = 2;
  if (this->has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->group_, output);
  }

  // optional bool validate_only = 3;
  if (this->validate_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->validate_only(), output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateGroupRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateGroupRequest)
}

::google::protobuf::uint8* CreateGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateGroupRequest)
  // optional .google.monitoring.v3.Group group = 2;
  if (this->has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->group_, false, target);
  }

  // optional bool validate_only = 3;
  if (this->validate_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->validate_only(), target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateGroupRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateGroupRequest)
  return target;
}

size_t CreateGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateGroupRequest)
  size_t total_size = 0;

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.monitoring.v3.Group group = 2;
  if (this->has_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->group_);
  }

  // optional bool validate_only = 3;
  if (this->validate_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateGroupRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateGroupRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateGroupRequest::MergeFrom(const CreateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateGroupRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateGroupRequest::UnsafeMergeFrom(const CreateGroupRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_group()) {
    mutable_group()->::google::monitoring::v3::Group::MergeFrom(from.group());
  }
  if (from.validate_only() != 0) {
    set_validate_only(from.validate_only());
  }
}

void CreateGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRequest::CopyFrom(const CreateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateGroupRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateGroupRequest::IsInitialized() const {

  return true;
}

void CreateGroupRequest::Swap(CreateGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateGroupRequest::InternalSwap(CreateGroupRequest* other) {
  name_.Swap(&other->name_);
  std::swap(group_, other->group_);
  std::swap(validate_only_, other->validate_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateGroupRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateGroupRequest_descriptor_;
  metadata.reflection = CreateGroupRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateGroupRequest

// optional string name = 4;
void CreateGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateGroupRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateGroupRequest.name)
}
void CreateGroupRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.CreateGroupRequest.name)
}
void CreateGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.CreateGroupRequest.name)
}
::std::string* CreateGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateGroupRequest.name)
}

// optional .google.monitoring.v3.Group group = 2;
bool CreateGroupRequest::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
void CreateGroupRequest::clear_group() {
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
}
const ::google::monitoring::v3::Group& CreateGroupRequest::group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateGroupRequest.group)
  return group_ != NULL ? *group_
                         : *::google::monitoring::v3::Group::internal_default_instance();
}
::google::monitoring::v3::Group* CreateGroupRequest::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::google::monitoring::v3::Group;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateGroupRequest.group)
  return group_;
}
::google::monitoring::v3::Group* CreateGroupRequest::release_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateGroupRequest.group)
  
  ::google::monitoring::v3::Group* temp = group_;
  group_ = NULL;
  return temp;
}
void CreateGroupRequest::set_allocated_group(::google::monitoring::v3::Group* group) {
  delete group_;
  group_ = group;
  if (group) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateGroupRequest.group)
}

// optional bool validate_only = 3;
void CreateGroupRequest::clear_validate_only() {
  validate_only_ = false;
}
bool CreateGroupRequest::validate_only() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateGroupRequest.validate_only)
  return validate_only_;
}
void CreateGroupRequest::set_validate_only(bool value) {
  
  validate_only_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateGroupRequest.validate_only)
}

inline const CreateGroupRequest* CreateGroupRequest::internal_default_instance() {
  return &CreateGroupRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateGroupRequest::kGroupFieldNumber;
const int UpdateGroupRequest::kValidateOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateGroupRequest::UpdateGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.UpdateGroupRequest)
}

void UpdateGroupRequest::InitAsDefaultInstance() {
  group_ = const_cast< ::google::monitoring::v3::Group*>(
      ::google::monitoring::v3::Group::internal_default_instance());
}

UpdateGroupRequest::UpdateGroupRequest(const UpdateGroupRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.UpdateGroupRequest)
}

void UpdateGroupRequest::SharedCtor() {
  group_ = NULL;
  validate_only_ = false;
  _cached_size_ = 0;
}

UpdateGroupRequest::~UpdateGroupRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.UpdateGroupRequest)
  SharedDtor();
}

void UpdateGroupRequest::SharedDtor() {
  if (this != &UpdateGroupRequest_default_instance_.get()) {
    delete group_;
  }
}

void UpdateGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateGroupRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateGroupRequest_descriptor_;
}

const UpdateGroupRequest& UpdateGroupRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateGroupRequest> UpdateGroupRequest_default_instance_;

UpdateGroupRequest* UpdateGroupRequest::New(::google::protobuf::Arena* arena) const {
  UpdateGroupRequest* n = new UpdateGroupRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.UpdateGroupRequest)
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
  validate_only_ = false;
}

bool UpdateGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.UpdateGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.monitoring.v3.Group group = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_validate_only;
        break;
      }

      // optional bool validate_only = 3;
      case 3: {
        if (tag == 24) {
         parse_validate_only:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &validate_only_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.UpdateGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.UpdateGroupRequest)
  return false;
#undef DO_
}

void UpdateGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.UpdateGroupRequest)
  // optional .google.monitoring.v3.Group group = 2;
  if (this->has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->group_, output);
  }

  // optional bool validate_only = 3;
  if (this->validate_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->validate_only(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.UpdateGroupRequest)
}

::google::protobuf::uint8* UpdateGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.UpdateGroupRequest)
  // optional .google.monitoring.v3.Group group = 2;
  if (this->has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->group_, false, target);
  }

  // optional bool validate_only = 3;
  if (this->validate_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->validate_only(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.UpdateGroupRequest)
  return target;
}

size_t UpdateGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.UpdateGroupRequest)
  size_t total_size = 0;

  // optional .google.monitoring.v3.Group group = 2;
  if (this->has_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->group_);
  }

  // optional bool validate_only = 3;
  if (this->validate_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.UpdateGroupRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.UpdateGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.UpdateGroupRequest)
    UnsafeMergeFrom(*source);
  }
}

void UpdateGroupRequest::MergeFrom(const UpdateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.UpdateGroupRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateGroupRequest::UnsafeMergeFrom(const UpdateGroupRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_group()) {
    mutable_group()->::google::monitoring::v3::Group::MergeFrom(from.group());
  }
  if (from.validate_only() != 0) {
    set_validate_only(from.validate_only());
  }
}

void UpdateGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.UpdateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGroupRequest::CopyFrom(const UpdateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.UpdateGroupRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateGroupRequest::IsInitialized() const {

  return true;
}

void UpdateGroupRequest::Swap(UpdateGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateGroupRequest::InternalSwap(UpdateGroupRequest* other) {
  std::swap(group_, other->group_);
  std::swap(validate_only_, other->validate_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateGroupRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateGroupRequest_descriptor_;
  metadata.reflection = UpdateGroupRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateGroupRequest

// optional .google.monitoring.v3.Group group = 2;
bool UpdateGroupRequest::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
void UpdateGroupRequest::clear_group() {
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
}
const ::google::monitoring::v3::Group& UpdateGroupRequest::group() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.UpdateGroupRequest.group)
  return group_ != NULL ? *group_
                         : *::google::monitoring::v3::Group::internal_default_instance();
}
::google::monitoring::v3::Group* UpdateGroupRequest::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::google::monitoring::v3::Group;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.UpdateGroupRequest.group)
  return group_;
}
::google::monitoring::v3::Group* UpdateGroupRequest::release_group() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.UpdateGroupRequest.group)
  
  ::google::monitoring::v3::Group* temp = group_;
  group_ = NULL;
  return temp;
}
void UpdateGroupRequest::set_allocated_group(::google::monitoring::v3::Group* group) {
  delete group_;
  group_ = group;
  if (group) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.UpdateGroupRequest.group)
}

// optional bool validate_only = 3;
void UpdateGroupRequest::clear_validate_only() {
  validate_only_ = false;
}
bool UpdateGroupRequest::validate_only() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.UpdateGroupRequest.validate_only)
  return validate_only_;
}
void UpdateGroupRequest::set_validate_only(bool value) {
  
  validate_only_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.UpdateGroupRequest.validate_only)
}

inline const UpdateGroupRequest* UpdateGroupRequest::internal_default_instance() {
  return &UpdateGroupRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteGroupRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteGroupRequest::DeleteGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.DeleteGroupRequest)
}

void DeleteGroupRequest::InitAsDefaultInstance() {
}

DeleteGroupRequest::DeleteGroupRequest(const DeleteGroupRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.DeleteGroupRequest)
}

void DeleteGroupRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteGroupRequest::~DeleteGroupRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.DeleteGroupRequest)
  SharedDtor();
}

void DeleteGroupRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteGroupRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteGroupRequest_descriptor_;
}

const DeleteGroupRequest& DeleteGroupRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteGroupRequest> DeleteGroupRequest_default_instance_;

DeleteGroupRequest* DeleteGroupRequest::New(::google::protobuf::Arena* arena) const {
  DeleteGroupRequest* n = new DeleteGroupRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.DeleteGroupRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.DeleteGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.DeleteGroupRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.DeleteGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.DeleteGroupRequest)
  return false;
#undef DO_
}

void DeleteGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.DeleteGroupRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteGroupRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.DeleteGroupRequest)
}

::google::protobuf::uint8* DeleteGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.DeleteGroupRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteGroupRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.DeleteGroupRequest)
  return target;
}

size_t DeleteGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.DeleteGroupRequest)
  size_t total_size = 0;

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.DeleteGroupRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.DeleteGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.DeleteGroupRequest)
    UnsafeMergeFrom(*source);
  }
}

void DeleteGroupRequest::MergeFrom(const DeleteGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.DeleteGroupRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteGroupRequest::UnsafeMergeFrom(const DeleteGroupRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.DeleteGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRequest::CopyFrom(const DeleteGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.DeleteGroupRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteGroupRequest::IsInitialized() const {

  return true;
}

void DeleteGroupRequest::Swap(DeleteGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteGroupRequest::InternalSwap(DeleteGroupRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteGroupRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteGroupRequest_descriptor_;
  metadata.reflection = DeleteGroupRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteGroupRequest

// optional string name = 3;
void DeleteGroupRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteGroupRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.DeleteGroupRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteGroupRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.DeleteGroupRequest.name)
}
void DeleteGroupRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.DeleteGroupRequest.name)
}
void DeleteGroupRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.DeleteGroupRequest.name)
}
::std::string* DeleteGroupRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.DeleteGroupRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteGroupRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.DeleteGroupRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteGroupRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.DeleteGroupRequest.name)
}

inline const DeleteGroupRequest* DeleteGroupRequest::internal_default_instance() {
  return &DeleteGroupRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupMembersRequest::kNameFieldNumber;
const int ListGroupMembersRequest::kPageSizeFieldNumber;
const int ListGroupMembersRequest::kPageTokenFieldNumber;
const int ListGroupMembersRequest::kFilterFieldNumber;
const int ListGroupMembersRequest::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupMembersRequest::ListGroupMembersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListGroupMembersRequest)
}

void ListGroupMembersRequest::InitAsDefaultInstance() {
  interval_ = const_cast< ::google::monitoring::v3::TimeInterval*>(
      ::google::monitoring::v3::TimeInterval::internal_default_instance());
}

ListGroupMembersRequest::ListGroupMembersRequest(const ListGroupMembersRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListGroupMembersRequest)
}

void ListGroupMembersRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interval_ = NULL;
  page_size_ = 0;
  _cached_size_ = 0;
}

ListGroupMembersRequest::~ListGroupMembersRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListGroupMembersRequest)
  SharedDtor();
}

void ListGroupMembersRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ListGroupMembersRequest_default_instance_.get()) {
    delete interval_;
  }
}

void ListGroupMembersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupMembersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListGroupMembersRequest_descriptor_;
}

const ListGroupMembersRequest& ListGroupMembersRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListGroupMembersRequest> ListGroupMembersRequest_default_instance_;

ListGroupMembersRequest* ListGroupMembersRequest::New(::google::protobuf::Arena* arena) const {
  ListGroupMembersRequest* n = new ListGroupMembersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListGroupMembersRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}

bool ListGroupMembersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListGroupMembersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_page_token;
        break;
      }

      // optional string page_token = 4;
      case 4: {
        if (tag == 34) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupMembersRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_filter;
        break;
      }

      // optional string filter = 5;
      case 5: {
        if (tag == 42) {
         parse_filter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupMembersRequest.filter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_interval;
        break;
      }

      // optional .google.monitoring.v3.TimeInterval interval = 6;
      case 6: {
        if (tag == 50) {
         parse_interval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_name;
        break;
      }

      // optional string name = 7;
      case 7: {
        if (tag == 58) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupMembersRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListGroupMembersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListGroupMembersRequest)
  return false;
#undef DO_
}

void ListGroupMembersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListGroupMembersRequest)
  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // optional string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filter(), output);
  }

  // optional .google.monitoring.v3.TimeInterval interval = 6;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->interval_, output);
  }

  // optional string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListGroupMembersRequest)
}

::google::protobuf::uint8* ListGroupMembersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListGroupMembersRequest)
  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // optional string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filter(), target);
  }

  // optional .google.monitoring.v3.TimeInterval interval = 6;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->interval_, false, target);
  }

  // optional string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListGroupMembersRequest)
  return target;
}

size_t ListGroupMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListGroupMembersRequest)
  size_t total_size = 0;

  // optional string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // optional string filter = 5;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // optional .google.monitoring.v3.TimeInterval interval = 6;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->interval_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupMembersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListGroupMembersRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListGroupMembersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupMembersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListGroupMembersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListGroupMembersRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListGroupMembersRequest::MergeFrom(const ListGroupMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListGroupMembersRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListGroupMembersRequest::UnsafeMergeFrom(const ListGroupMembersRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::monitoring::v3::TimeInterval::MergeFrom(from.interval());
  }
}

void ListGroupMembersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListGroupMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupMembersRequest::CopyFrom(const ListGroupMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListGroupMembersRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListGroupMembersRequest::IsInitialized() const {

  return true;
}

void ListGroupMembersRequest::Swap(ListGroupMembersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupMembersRequest::InternalSwap(ListGroupMembersRequest* other) {
  name_.Swap(&other->name_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  filter_.Swap(&other->filter_);
  std::swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupMembersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListGroupMembersRequest_descriptor_;
  metadata.reflection = ListGroupMembersRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGroupMembersRequest

// optional string name = 7;
void ListGroupMembersRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupMembersRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.name)
}
void ListGroupMembersRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersRequest.name)
}
void ListGroupMembersRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersRequest.name)
}
::std::string* ListGroupMembersRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupMembersRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.name)
}

// optional int32 page_size = 3;
void ListGroupMembersRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListGroupMembersRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.page_size)
  return page_size_;
}
void ListGroupMembersRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.page_size)
}

// optional string page_token = 4;
void ListGroupMembersRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupMembersRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.page_token)
}
void ListGroupMembersRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersRequest.page_token)
}
void ListGroupMembersRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersRequest.page_token)
}
::std::string* ListGroupMembersRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupMembersRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.page_token)
}

// optional string filter = 5;
void ListGroupMembersRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupMembersRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.filter)
  return filter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersRequest.filter)
}
void ListGroupMembersRequest::set_filter(const char* value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersRequest.filter)
}
void ListGroupMembersRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersRequest.filter)
}
::std::string* ListGroupMembersRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupMembersRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.filter)
}

// optional .google.monitoring.v3.TimeInterval interval = 6;
bool ListGroupMembersRequest::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
void ListGroupMembersRequest::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}
const ::google::monitoring::v3::TimeInterval& ListGroupMembersRequest::interval() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersRequest.interval)
  return interval_ != NULL ? *interval_
                         : *::google::monitoring::v3::TimeInterval::internal_default_instance();
}
::google::monitoring::v3::TimeInterval* ListGroupMembersRequest::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::monitoring::v3::TimeInterval;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersRequest.interval)
  return interval_;
}
::google::monitoring::v3::TimeInterval* ListGroupMembersRequest::release_interval() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersRequest.interval)
  
  ::google::monitoring::v3::TimeInterval* temp = interval_;
  interval_ = NULL;
  return temp;
}
void ListGroupMembersRequest::set_allocated_interval(::google::monitoring::v3::TimeInterval* interval) {
  delete interval_;
  interval_ = interval;
  if (interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersRequest.interval)
}

inline const ListGroupMembersRequest* ListGroupMembersRequest::internal_default_instance() {
  return &ListGroupMembersRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGroupMembersResponse::kMembersFieldNumber;
const int ListGroupMembersResponse::kNextPageTokenFieldNumber;
const int ListGroupMembersResponse::kTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGroupMembersResponse::ListGroupMembersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListGroupMembersResponse)
}

void ListGroupMembersResponse::InitAsDefaultInstance() {
}

ListGroupMembersResponse::ListGroupMembersResponse(const ListGroupMembersResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListGroupMembersResponse)
}

void ListGroupMembersResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
  _cached_size_ = 0;
}

ListGroupMembersResponse::~ListGroupMembersResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListGroupMembersResponse)
  SharedDtor();
}

void ListGroupMembersResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListGroupMembersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGroupMembersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListGroupMembersResponse_descriptor_;
}

const ListGroupMembersResponse& ListGroupMembersResponse::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fgroup_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListGroupMembersResponse> ListGroupMembersResponse_default_instance_;

ListGroupMembersResponse* ListGroupMembersResponse::New(::google::protobuf::Arena* arena) const {
  ListGroupMembersResponse* n = new ListGroupMembersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGroupMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListGroupMembersResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
  members_.Clear();
}

bool ListGroupMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListGroupMembersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MonitoredResource members = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListGroupMembersResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_total_size;
        break;
      }

      // optional int32 total_size = 3;
      case 3: {
        if (tag == 24) {
         parse_total_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListGroupMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListGroupMembersResponse)
  return false;
#undef DO_
}

void ListGroupMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListGroupMembersResponse)
  // repeated .google.api.MonitoredResource members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // optional int32 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListGroupMembersResponse)
}

::google::protobuf::uint8* ListGroupMembersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListGroupMembersResponse)
  // repeated .google.api.MonitoredResource members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListGroupMembersResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // optional int32 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListGroupMembersResponse)
  return target;
}

size_t ListGroupMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListGroupMembersResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // optional int32 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_size());
  }

  // repeated .google.api.MonitoredResource members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGroupMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListGroupMembersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListGroupMembersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGroupMembersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListGroupMembersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListGroupMembersResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListGroupMembersResponse::MergeFrom(const ListGroupMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListGroupMembersResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListGroupMembersResponse::UnsafeMergeFrom(const ListGroupMembersResponse& from) {
  GOOGLE_DCHECK(&from != this);
  members_.MergeFrom(from.members_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void ListGroupMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListGroupMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGroupMembersResponse::CopyFrom(const ListGroupMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListGroupMembersResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListGroupMembersResponse::IsInitialized() const {

  return true;
}

void ListGroupMembersResponse::Swap(ListGroupMembersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGroupMembersResponse::InternalSwap(ListGroupMembersResponse* other) {
  members_.UnsafeArenaSwap(&other->members_);
  next_page_token_.Swap(&other->next_page_token_);
  std::swap(total_size_, other->total_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGroupMembersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListGroupMembersResponse_descriptor_;
  metadata.reflection = ListGroupMembersResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGroupMembersResponse

// repeated .google.api.MonitoredResource members = 1;
int ListGroupMembersResponse::members_size() const {
  return members_.size();
}
void ListGroupMembersResponse::clear_members() {
  members_.Clear();
}
const ::google::api::MonitoredResource& ListGroupMembersResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_.Get(index);
}
::google::api::MonitoredResource* ListGroupMembersResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_.Mutable(index);
}
::google::api::MonitoredResource* ListGroupMembersResponse::add_members() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResource >*
ListGroupMembersResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListGroupMembersResponse.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResource >&
ListGroupMembersResponse::members() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListGroupMembersResponse.members)
  return members_;
}

// optional string next_page_token = 2;
void ListGroupMembersResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGroupMembersResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}
void ListGroupMembersResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}
void ListGroupMembersResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}
::std::string* ListGroupMembersResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGroupMembersResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGroupMembersResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListGroupMembersResponse.next_page_token)
}

// optional int32 total_size = 3;
void ListGroupMembersResponse::clear_total_size() {
  total_size_ = 0;
}
::google::protobuf::int32 ListGroupMembersResponse::total_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListGroupMembersResponse.total_size)
  return total_size_;
}
void ListGroupMembersResponse::set_total_size(::google::protobuf::int32 value) {
  
  total_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListGroupMembersResponse.total_size)
}

inline const ListGroupMembersResponse* ListGroupMembersResponse::internal_default_instance() {
  return &ListGroupMembersResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v3
}  // namespace monitoring
}  // namespace google

// @@protoc_insertion_point(global_scope)
