// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/date.proto

#ifndef PROTOBUF_google_2ftype_2fdate_2eproto__INCLUDED
#define PROTOBUF_google_2ftype_2fdate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace type {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2ftype_2fdate_2eproto();
void protobuf_InitDefaults_google_2ftype_2fdate_2eproto();
void protobuf_AssignDesc_google_2ftype_2fdate_2eproto();
void protobuf_ShutdownFile_google_2ftype_2fdate_2eproto();

class Date;

// ===================================================================

class Date : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.type.Date) */ {
 public:
  Date();
  virtual ~Date();

  Date(const Date& from);

  inline Date& operator=(const Date& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Date& default_instance();

  static const Date* internal_default_instance();

  void UnsafeArenaSwap(Date* other);
  void Swap(Date* other);

  // implements Message ----------------------------------------------

  inline Date* New() const { return New(NULL); }

  Date* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Date& from);
  void MergeFrom(const Date& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Date* other);
  void UnsafeMergeFrom(const Date& from);
  protected:
  explicit Date(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 year = 1;
  void clear_year();
  static const int kYearFieldNumber = 1;
  ::google::protobuf::int32 year() const;
  void set_year(::google::protobuf::int32 value);

  // optional int32 month = 2;
  void clear_month();
  static const int kMonthFieldNumber = 2;
  ::google::protobuf::int32 month() const;
  void set_month(::google::protobuf::int32 value);

  // optional int32 day = 3;
  void clear_day();
  static const int kDayFieldNumber = 3;
  ::google::protobuf::int32 day() const;
  void set_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.type.Date)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int32 year_;
  ::google::protobuf::int32 month_;
  ::google::protobuf::int32 day_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2ftype_2fdate_2eproto_impl();
  friend void  protobuf_AddDesc_google_2ftype_2fdate_2eproto_impl();
  friend void protobuf_AssignDesc_google_2ftype_2fdate_2eproto();
  friend void protobuf_ShutdownFile_google_2ftype_2fdate_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Date> Date_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Date

// optional int32 year = 1;
inline void Date::clear_year() {
  year_ = 0;
}
inline ::google::protobuf::int32 Date::year() const {
  // @@protoc_insertion_point(field_get:google.type.Date.year)
  return year_;
}
inline void Date::set_year(::google::protobuf::int32 value) {
  
  year_ = value;
  // @@protoc_insertion_point(field_set:google.type.Date.year)
}

// optional int32 month = 2;
inline void Date::clear_month() {
  month_ = 0;
}
inline ::google::protobuf::int32 Date::month() const {
  // @@protoc_insertion_point(field_get:google.type.Date.month)
  return month_;
}
inline void Date::set_month(::google::protobuf::int32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:google.type.Date.month)
}

// optional int32 day = 3;
inline void Date::clear_day() {
  day_ = 0;
}
inline ::google::protobuf::int32 Date::day() const {
  // @@protoc_insertion_point(field_get:google.type.Date.day)
  return day_;
}
inline void Date::set_day(::google::protobuf::int32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:google.type.Date.day)
}

inline const Date* Date::internal_default_instance() {
  return &Date_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2ftype_2fdate_2eproto__INCLUDED
