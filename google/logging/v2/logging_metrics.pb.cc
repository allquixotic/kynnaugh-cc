// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging_metrics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/logging/v2/logging_metrics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace logging {
namespace v2 {

namespace {

const ::google::protobuf::Descriptor* LogMetric_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogMetric_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LogMetric_ApiVersion_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ListLogMetricsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListLogMetricsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListLogMetricsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListLogMetricsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLogMetricRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogMetricRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateLogMetricRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateLogMetricRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateLogMetricRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateLogMetricRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteLogMetricRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteLogMetricRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  protobuf_AddDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/logging/v2/logging_metrics.proto");
  GOOGLE_CHECK(file != NULL);
  LogMetric_descriptor_ = file->message_type(0);
  static const int LogMetric_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMetric, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMetric, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMetric, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMetric, version_),
  };
  LogMetric_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogMetric_descriptor_,
      LogMetric::internal_default_instance(),
      LogMetric_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogMetric),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMetric, _internal_metadata_));
  LogMetric_ApiVersion_descriptor_ = LogMetric_descriptor_->enum_type(0);
  ListLogMetricsRequest_descriptor_ = file->message_type(1);
  static const int ListLogMetricsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogMetricsRequest, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogMetricsRequest, page_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogMetricsRequest, page_size_),
  };
  ListLogMetricsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListLogMetricsRequest_descriptor_,
      ListLogMetricsRequest::internal_default_instance(),
      ListLogMetricsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListLogMetricsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogMetricsRequest, _internal_metadata_));
  ListLogMetricsResponse_descriptor_ = file->message_type(2);
  static const int ListLogMetricsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogMetricsResponse, metrics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogMetricsResponse, next_page_token_),
  };
  ListLogMetricsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListLogMetricsResponse_descriptor_,
      ListLogMetricsResponse::internal_default_instance(),
      ListLogMetricsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListLogMetricsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListLogMetricsResponse, _internal_metadata_));
  GetLogMetricRequest_descriptor_ = file->message_type(3);
  static const int GetLogMetricRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogMetricRequest, metric_name_),
  };
  GetLogMetricRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetLogMetricRequest_descriptor_,
      GetLogMetricRequest::internal_default_instance(),
      GetLogMetricRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetLogMetricRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogMetricRequest, _internal_metadata_));
  CreateLogMetricRequest_descriptor_ = file->message_type(4);
  static const int CreateLogMetricRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateLogMetricRequest, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateLogMetricRequest, metric_),
  };
  CreateLogMetricRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateLogMetricRequest_descriptor_,
      CreateLogMetricRequest::internal_default_instance(),
      CreateLogMetricRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateLogMetricRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateLogMetricRequest, _internal_metadata_));
  UpdateLogMetricRequest_descriptor_ = file->message_type(5);
  static const int UpdateLogMetricRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateLogMetricRequest, metric_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateLogMetricRequest, metric_),
  };
  UpdateLogMetricRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateLogMetricRequest_descriptor_,
      UpdateLogMetricRequest::internal_default_instance(),
      UpdateLogMetricRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateLogMetricRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateLogMetricRequest, _internal_metadata_));
  DeleteLogMetricRequest_descriptor_ = file->message_type(6);
  static const int DeleteLogMetricRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteLogMetricRequest, metric_name_),
  };
  DeleteLogMetricRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteLogMetricRequest_descriptor_,
      DeleteLogMetricRequest::internal_default_instance(),
      DeleteLogMetricRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteLogMetricRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteLogMetricRequest, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogMetric_descriptor_, LogMetric::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListLogMetricsRequest_descriptor_, ListLogMetricsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListLogMetricsResponse_descriptor_, ListLogMetricsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetLogMetricRequest_descriptor_, GetLogMetricRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateLogMetricRequest_descriptor_, CreateLogMetricRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateLogMetricRequest_descriptor_, UpdateLogMetricRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteLogMetricRequest_descriptor_, DeleteLogMetricRequest::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  LogMetric_default_instance_.Shutdown();
  delete LogMetric_reflection_;
  ListLogMetricsRequest_default_instance_.Shutdown();
  delete ListLogMetricsRequest_reflection_;
  ListLogMetricsResponse_default_instance_.Shutdown();
  delete ListLogMetricsResponse_reflection_;
  GetLogMetricRequest_default_instance_.Shutdown();
  delete GetLogMetricRequest_reflection_;
  CreateLogMetricRequest_default_instance_.Shutdown();
  delete CreateLogMetricRequest_reflection_;
  UpdateLogMetricRequest_default_instance_.Shutdown();
  delete UpdateLogMetricRequest_reflection_;
  DeleteLogMetricRequest_default_instance_.Shutdown();
  delete DeleteLogMetricRequest_reflection_;
}

void protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  LogMetric_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListLogMetricsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListLogMetricsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetLogMetricRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateLogMetricRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UpdateLogMetricRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeleteLogMetricRequest_default_instance_.DefaultConstruct();
  LogMetric_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListLogMetricsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListLogMetricsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetLogMetricRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateLogMetricRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateLogMetricRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteLogMetricRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_once_);
void protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_once_,
                 &protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_impl);
}
void protobuf_AddDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'google/logging/v2/logging_metrics.prot"
    "o\022\021google.logging.v2\032\034google/api/annotat"
    "ions.proto\032\033google/protobuf/empty.proto\""
    "\226\001\n\tLogMetric\022\014\n\004name\030\001 \001(\t\022\023\n\013descripti"
    "on\030\002 \001(\t\022\016\n\006filter\030\003 \001(\t\0228\n\007version\030\004 \001("
    "\0162\'.google.logging.v2.LogMetric.ApiVersi"
    "on\"\034\n\nApiVersion\022\006\n\002V2\020\000\022\006\n\002V1\020\001\"N\n\025List"
    "LogMetricsRequest\022\016\n\006parent\030\001 \001(\t\022\022\n\npag"
    "e_token\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\"`\n\026List"
    "LogMetricsResponse\022-\n\007metrics\030\001 \003(\0132\034.go"
    "ogle.logging.v2.LogMetric\022\027\n\017next_page_t"
    "oken\030\002 \001(\t\"*\n\023GetLogMetricRequest\022\023\n\013met"
    "ric_name\030\001 \001(\t\"V\n\026CreateLogMetricRequest"
    "\022\016\n\006parent\030\001 \001(\t\022,\n\006metric\030\002 \001(\0132\034.googl"
    "e.logging.v2.LogMetric\"[\n\026UpdateLogMetri"
    "cRequest\022\023\n\013metric_name\030\001 \001(\t\022,\n\006metric\030"
    "\002 \001(\0132\034.google.logging.v2.LogMetric\"-\n\026D"
    "eleteLogMetricRequest\022\023\n\013metric_name\030\001 \001"
    "(\t2\324\005\n\020MetricsServiceV2\022\216\001\n\016ListLogMetri"
    "cs\022(.google.logging.v2.ListLogMetricsReq"
    "uest\032).google.logging.v2.ListLogMetricsR"
    "esponse\"\'\202\323\344\223\002!\022\037/v2/{parent=projects/*}"
    "/metrics\022\204\001\n\014GetLogMetric\022&.google.loggi"
    "ng.v2.GetLogMetricRequest\032\034.google.loggi"
    "ng.v2.LogMetric\".\202\323\344\223\002(\022&/v2/{metric_nam"
    "e=projects/*/metrics/*}\022\213\001\n\017CreateLogMet"
    "ric\022).google.logging.v2.CreateLogMetricR"
    "equest\032\034.google.logging.v2.LogMetric\"/\202\323"
    "\344\223\002)\"\037/v2/{parent=projects/*}/metrics:\006m"
    "etric\022\222\001\n\017UpdateLogMetric\022).google.loggi"
    "ng.v2.UpdateLogMetricRequest\032\034.google.lo"
    "gging.v2.LogMetric\"6\202\323\344\223\0020\032&/v2/{metric_"
    "name=projects/*/metrics/*}:\006metric\022\204\001\n\017D"
    "eleteLogMetric\022).google.logging.v2.Delet"
    "eLogMetricRequest\032\026.google.protobuf.Empt"
    "y\".\202\323\344\223\002(*&/v2/{metric_name=projects/*/m"
    "etrics/*}B\202\001\n\025com.google.logging.v2B\023Log"
    "gingMetricsProtoP\001Z8google.golang.org/ge"
    "nproto/googleapis/logging/v2;logging\252\002\027G"
    "oogle.Cloud.Logging.V2b\006proto3", 1590);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/logging/v2/logging_metrics.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_5fmetrics_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_once_);
void protobuf_AddDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_once_,
                 &protobuf_AddDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2flogging_2fv2_2flogging_5fmetrics_2eproto {
  StaticDescriptorInitializer_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
    protobuf_AddDesc_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  }
} static_descriptor_initializer_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* LogMetric_ApiVersion_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogMetric_ApiVersion_descriptor_;
}
bool LogMetric_ApiVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogMetric_ApiVersion LogMetric::V2;
const LogMetric_ApiVersion LogMetric::V1;
const LogMetric_ApiVersion LogMetric::ApiVersion_MIN;
const LogMetric_ApiVersion LogMetric::ApiVersion_MAX;
const int LogMetric::ApiVersion_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogMetric::kNameFieldNumber;
const int LogMetric::kDescriptionFieldNumber;
const int LogMetric::kFilterFieldNumber;
const int LogMetric::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogMetric::LogMetric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogMetric)
}

void LogMetric::InitAsDefaultInstance() {
}

LogMetric::LogMetric(const LogMetric& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogMetric)
}

void LogMetric::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  _cached_size_ = 0;
}

LogMetric::~LogMetric() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogMetric)
  SharedDtor();
}

void LogMetric::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogMetric::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogMetric::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogMetric_descriptor_;
}

const LogMetric& LogMetric::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LogMetric> LogMetric_default_instance_;

LogMetric* LogMetric::New(::google::protobuf::Arena* arena) const {
  LogMetric* n = new LogMetric;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogMetric)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
}

bool LogMetric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.LogMetric)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }

      // optional string description = 2;
      case 2: {
        if (tag == 18) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_filter;
        break;
      }

      // optional string filter = 3;
      case 3: {
        if (tag == 26) {
         parse_filter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.LogMetric.filter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_version;
        break;
      }

      // optional .google.logging.v2.LogMetric.ApiVersion version = 4;
      case 4: {
        if (tag == 32) {
         parse_version:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_version(static_cast< ::google::logging::v2::LogMetric_ApiVersion >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.LogMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.LogMetric)
  return false;
#undef DO_
}

void LogMetric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.LogMetric)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // optional string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filter(), output);
  }

  // optional .google.logging.v2.LogMetric.ApiVersion version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.LogMetric)
}

::google::protobuf::uint8* LogMetric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogMetric)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // optional string filter = 3;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filter(), target);
  }

  // optional .google.logging.v2.LogMetric.ApiVersion version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogMetric)
  return target;
}

size_t LogMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogMetric)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional string filter = 3;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // optional .google.logging.v2.LogMetric.ApiVersion version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogMetric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogMetric)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LogMetric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogMetric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogMetric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogMetric)
    UnsafeMergeFrom(*source);
  }
}

void LogMetric::MergeFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogMetric)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LogMetric::UnsafeMergeFrom(const LogMetric& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void LogMetric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogMetric::CopyFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogMetric)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LogMetric::IsInitialized() const {

  return true;
}

void LogMetric::Swap(LogMetric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogMetric::InternalSwap(LogMetric* other) {
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  filter_.Swap(&other->filter_);
  std::swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogMetric::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogMetric_descriptor_;
  metadata.reflection = LogMetric_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogMetric

// optional string name = 1;
void LogMetric::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogMetric::name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.LogMetric.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogMetric::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.LogMetric.name)
}
void LogMetric::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.LogMetric.name)
}
void LogMetric::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.LogMetric.name)
}
::std::string* LogMetric::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.LogMetric.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogMetric::release_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.LogMetric.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogMetric::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.LogMetric.name)
}

// optional string description = 2;
void LogMetric::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogMetric::description() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.LogMetric.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogMetric::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.LogMetric.description)
}
void LogMetric::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.LogMetric.description)
}
void LogMetric::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.LogMetric.description)
}
::std::string* LogMetric::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.LogMetric.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogMetric::release_description() {
  // @@protoc_insertion_point(field_release:google.logging.v2.LogMetric.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogMetric::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.LogMetric.description)
}

// optional string filter = 3;
void LogMetric::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogMetric::filter() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.LogMetric.filter)
  return filter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogMetric::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.LogMetric.filter)
}
void LogMetric::set_filter(const char* value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.LogMetric.filter)
}
void LogMetric::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.LogMetric.filter)
}
::std::string* LogMetric::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.LogMetric.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogMetric::release_filter() {
  // @@protoc_insertion_point(field_release:google.logging.v2.LogMetric.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogMetric::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.LogMetric.filter)
}

// optional .google.logging.v2.LogMetric.ApiVersion version = 4;
void LogMetric::clear_version() {
  version_ = 0;
}
::google::logging::v2::LogMetric_ApiVersion LogMetric::version() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.LogMetric.version)
  return static_cast< ::google::logging::v2::LogMetric_ApiVersion >(version_);
}
void LogMetric::set_version(::google::logging::v2::LogMetric_ApiVersion value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.LogMetric.version)
}

inline const LogMetric* LogMetric::internal_default_instance() {
  return &LogMetric_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogMetricsRequest::kParentFieldNumber;
const int ListLogMetricsRequest::kPageTokenFieldNumber;
const int ListLogMetricsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogMetricsRequest::ListLogMetricsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogMetricsRequest)
}

void ListLogMetricsRequest::InitAsDefaultInstance() {
}

ListLogMetricsRequest::ListLogMetricsRequest(const ListLogMetricsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogMetricsRequest)
}

void ListLogMetricsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListLogMetricsRequest::~ListLogMetricsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogMetricsRequest)
  SharedDtor();
}

void ListLogMetricsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogMetricsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListLogMetricsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListLogMetricsRequest_descriptor_;
}

const ListLogMetricsRequest& ListLogMetricsRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListLogMetricsRequest> ListLogMetricsRequest_default_instance_;

ListLogMetricsRequest* ListLogMetricsRequest::New(::google::protobuf::Arena* arena) const {
  ListLogMetricsRequest* n = new ListLogMetricsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListLogMetricsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogMetricsRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

bool ListLogMetricsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogMetricsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string parent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogMetricsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_page_token;
        break;
      }

      // optional string page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogMetricsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogMetricsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogMetricsRequest)
  return false;
#undef DO_
}

void ListLogMetricsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogMetricsRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // optional string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogMetricsRequest)
}

::google::protobuf::uint8* ListLogMetricsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogMetricsRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // optional string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogMetricsRequest)
  return target;
}

size_t ListLogMetricsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogMetricsRequest)
  size_t total_size = 0;

  // optional string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // optional string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListLogMetricsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogMetricsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListLogMetricsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListLogMetricsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogMetricsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogMetricsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListLogMetricsRequest::MergeFrom(const ListLogMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogMetricsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListLogMetricsRequest::UnsafeMergeFrom(const ListLogMetricsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListLogMetricsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogMetricsRequest::CopyFrom(const ListLogMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogMetricsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListLogMetricsRequest::IsInitialized() const {

  return true;
}

void ListLogMetricsRequest::Swap(ListLogMetricsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListLogMetricsRequest::InternalSwap(ListLogMetricsRequest* other) {
  parent_.Swap(&other->parent_);
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListLogMetricsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListLogMetricsRequest_descriptor_;
  metadata.reflection = ListLogMetricsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListLogMetricsRequest

// optional string parent = 1;
void ListLogMetricsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListLogMetricsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogMetricsRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListLogMetricsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogMetricsRequest.parent)
}
void ListLogMetricsRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogMetricsRequest.parent)
}
void ListLogMetricsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogMetricsRequest.parent)
}
::std::string* ListLogMetricsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogMetricsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListLogMetricsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogMetricsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListLogMetricsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogMetricsRequest.parent)
}

// optional string page_token = 2;
void ListLogMetricsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListLogMetricsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogMetricsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListLogMetricsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogMetricsRequest.page_token)
}
void ListLogMetricsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogMetricsRequest.page_token)
}
void ListLogMetricsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogMetricsRequest.page_token)
}
::std::string* ListLogMetricsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogMetricsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListLogMetricsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogMetricsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListLogMetricsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogMetricsRequest.page_token)
}

// optional int32 page_size = 3;
void ListLogMetricsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListLogMetricsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogMetricsRequest.page_size)
  return page_size_;
}
void ListLogMetricsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogMetricsRequest.page_size)
}

inline const ListLogMetricsRequest* ListLogMetricsRequest::internal_default_instance() {
  return &ListLogMetricsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListLogMetricsResponse::kMetricsFieldNumber;
const int ListLogMetricsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListLogMetricsResponse::ListLogMetricsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogMetricsResponse)
}

void ListLogMetricsResponse::InitAsDefaultInstance() {
}

ListLogMetricsResponse::ListLogMetricsResponse(const ListLogMetricsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogMetricsResponse)
}

void ListLogMetricsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListLogMetricsResponse::~ListLogMetricsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogMetricsResponse)
  SharedDtor();
}

void ListLogMetricsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListLogMetricsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListLogMetricsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListLogMetricsResponse_descriptor_;
}

const ListLogMetricsResponse& ListLogMetricsResponse::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListLogMetricsResponse> ListLogMetricsResponse_default_instance_;

ListLogMetricsResponse* ListLogMetricsResponse::New(::google::protobuf::Arena* arena) const {
  ListLogMetricsResponse* n = new ListLogMetricsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListLogMetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogMetricsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metrics_.Clear();
}

bool ListLogMetricsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.ListLogMetricsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.logging.v2.LogMetric metrics = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_metrics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_metrics;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.ListLogMetricsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.ListLogMetricsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.ListLogMetricsResponse)
  return false;
#undef DO_
}

void ListLogMetricsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.ListLogMetricsResponse)
  // repeated .google.logging.v2.LogMetric metrics = 1;
  for (unsigned int i = 0, n = this->metrics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metrics(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.ListLogMetricsResponse)
}

::google::protobuf::uint8* ListLogMetricsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogMetricsResponse)
  // repeated .google.logging.v2.LogMetric metrics = 1;
  for (unsigned int i = 0, n = this->metrics_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->metrics(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogMetricsResponse)
  return target;
}

size_t ListLogMetricsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogMetricsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.logging.v2.LogMetric metrics = 1;
  {
    unsigned int count = this->metrics_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metrics(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListLogMetricsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogMetricsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListLogMetricsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListLogMetricsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogMetricsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogMetricsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListLogMetricsResponse::MergeFrom(const ListLogMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogMetricsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListLogMetricsResponse::UnsafeMergeFrom(const ListLogMetricsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  metrics_.MergeFrom(from.metrics_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListLogMetricsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogMetricsResponse::CopyFrom(const ListLogMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogMetricsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListLogMetricsResponse::IsInitialized() const {

  return true;
}

void ListLogMetricsResponse::Swap(ListLogMetricsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListLogMetricsResponse::InternalSwap(ListLogMetricsResponse* other) {
  metrics_.UnsafeArenaSwap(&other->metrics_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListLogMetricsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListLogMetricsResponse_descriptor_;
  metadata.reflection = ListLogMetricsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListLogMetricsResponse

// repeated .google.logging.v2.LogMetric metrics = 1;
int ListLogMetricsResponse::metrics_size() const {
  return metrics_.size();
}
void ListLogMetricsResponse::clear_metrics() {
  metrics_.Clear();
}
const ::google::logging::v2::LogMetric& ListLogMetricsResponse::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogMetricsResponse.metrics)
  return metrics_.Get(index);
}
::google::logging::v2::LogMetric* ListLogMetricsResponse::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogMetricsResponse.metrics)
  return metrics_.Mutable(index);
}
::google::logging::v2::LogMetric* ListLogMetricsResponse::add_metrics() {
  // @@protoc_insertion_point(field_add:google.logging.v2.ListLogMetricsResponse.metrics)
  return metrics_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogMetric >*
ListLogMetricsResponse::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListLogMetricsResponse.metrics)
  return &metrics_;
}
const ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogMetric >&
ListLogMetricsResponse::metrics() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListLogMetricsResponse.metrics)
  return metrics_;
}

// optional string next_page_token = 2;
void ListLogMetricsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListLogMetricsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogMetricsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListLogMetricsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogMetricsResponse.next_page_token)
}
void ListLogMetricsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogMetricsResponse.next_page_token)
}
void ListLogMetricsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogMetricsResponse.next_page_token)
}
::std::string* ListLogMetricsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogMetricsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListLogMetricsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogMetricsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListLogMetricsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogMetricsResponse.next_page_token)
}

inline const ListLogMetricsResponse* ListLogMetricsResponse::internal_default_instance() {
  return &ListLogMetricsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLogMetricRequest::kMetricNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLogMetricRequest::GetLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetLogMetricRequest)
}

void GetLogMetricRequest::InitAsDefaultInstance() {
}

GetLogMetricRequest::GetLogMetricRequest(const GetLogMetricRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetLogMetricRequest)
}

void GetLogMetricRequest::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetLogMetricRequest::~GetLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetLogMetricRequest)
  SharedDtor();
}

void GetLogMetricRequest::SharedDtor() {
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogMetricRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogMetricRequest_descriptor_;
}

const GetLogMetricRequest& GetLogMetricRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetLogMetricRequest> GetLogMetricRequest_default_instance_;

GetLogMetricRequest* GetLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  GetLogMetricRequest* n = new GetLogMetricRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetLogMetricRequest)
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.GetLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string metric_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), this->metric_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.GetLogMetricRequest.metric_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.GetLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.GetLogMetricRequest)
  return false;
#undef DO_
}

void GetLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.GetLogMetricRequest)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetLogMetricRequest.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.GetLogMetricRequest)
}

::google::protobuf::uint8* GetLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetLogMetricRequest)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetLogMetricRequest.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetLogMetricRequest)
  return target;
}

size_t GetLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetLogMetricRequest)
  size_t total_size = 0;

  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetLogMetricRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetLogMetricRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetLogMetricRequest::MergeFrom(const GetLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetLogMetricRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetLogMetricRequest::UnsafeMergeFrom(const GetLogMetricRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.metric_name().size() > 0) {

    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
}

void GetLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogMetricRequest::CopyFrom(const GetLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetLogMetricRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetLogMetricRequest::IsInitialized() const {

  return true;
}

void GetLogMetricRequest::Swap(GetLogMetricRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLogMetricRequest::InternalSwap(GetLogMetricRequest* other) {
  metric_name_.Swap(&other->metric_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLogMetricRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogMetricRequest_descriptor_;
  metadata.reflection = GetLogMetricRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLogMetricRequest

// optional string metric_name = 1;
void GetLogMetricRequest::clear_metric_name() {
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetLogMetricRequest::metric_name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.GetLogMetricRequest.metric_name)
  return metric_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLogMetricRequest::set_metric_name(const ::std::string& value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.GetLogMetricRequest.metric_name)
}
void GetLogMetricRequest::set_metric_name(const char* value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.GetLogMetricRequest.metric_name)
}
void GetLogMetricRequest::set_metric_name(const char* value, size_t size) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.GetLogMetricRequest.metric_name)
}
::std::string* GetLogMetricRequest::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.GetLogMetricRequest.metric_name)
  return metric_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLogMetricRequest::release_metric_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.GetLogMetricRequest.metric_name)
  
  return metric_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLogMetricRequest::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.GetLogMetricRequest.metric_name)
}

inline const GetLogMetricRequest* GetLogMetricRequest::internal_default_instance() {
  return &GetLogMetricRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateLogMetricRequest::kParentFieldNumber;
const int CreateLogMetricRequest::kMetricFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateLogMetricRequest::CreateLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateLogMetricRequest)
}

void CreateLogMetricRequest::InitAsDefaultInstance() {
  metric_ = const_cast< ::google::logging::v2::LogMetric*>(
      ::google::logging::v2::LogMetric::internal_default_instance());
}

CreateLogMetricRequest::CreateLogMetricRequest(const CreateLogMetricRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateLogMetricRequest)
}

void CreateLogMetricRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_ = NULL;
  _cached_size_ = 0;
}

CreateLogMetricRequest::~CreateLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateLogMetricRequest)
  SharedDtor();
}

void CreateLogMetricRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CreateLogMetricRequest_default_instance_.get()) {
    delete metric_;
  }
}

void CreateLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateLogMetricRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateLogMetricRequest_descriptor_;
}

const CreateLogMetricRequest& CreateLogMetricRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateLogMetricRequest> CreateLogMetricRequest_default_instance_;

CreateLogMetricRequest* CreateLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  CreateLogMetricRequest* n = new CreateLogMetricRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateLogMetricRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) delete metric_;
  metric_ = NULL;
}

bool CreateLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.CreateLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string parent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.CreateLogMetricRequest.parent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_metric;
        break;
      }

      // optional .google.logging.v2.LogMetric metric = 2;
      case 2: {
        if (tag == 18) {
         parse_metric:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.CreateLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.CreateLogMetricRequest)
  return false;
#undef DO_
}

void CreateLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.CreateLogMetricRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateLogMetricRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // optional .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metric_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.CreateLogMetricRequest)
}

::google::protobuf::uint8* CreateLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateLogMetricRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateLogMetricRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // optional .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->metric_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateLogMetricRequest)
  return target;
}

size_t CreateLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateLogMetricRequest)
  size_t total_size = 0;

  // optional string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // optional .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metric_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateLogMetricRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateLogMetricRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateLogMetricRequest::MergeFrom(const CreateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateLogMetricRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateLogMetricRequest::UnsafeMergeFrom(const CreateLogMetricRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_metric()) {
    mutable_metric()->::google::logging::v2::LogMetric::MergeFrom(from.metric());
  }
}

void CreateLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateLogMetricRequest::CopyFrom(const CreateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateLogMetricRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateLogMetricRequest::IsInitialized() const {

  return true;
}

void CreateLogMetricRequest::Swap(CreateLogMetricRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateLogMetricRequest::InternalSwap(CreateLogMetricRequest* other) {
  parent_.Swap(&other->parent_);
  std::swap(metric_, other->metric_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateLogMetricRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateLogMetricRequest_descriptor_;
  metadata.reflection = CreateLogMetricRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateLogMetricRequest

// optional string parent = 1;
void CreateLogMetricRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateLogMetricRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.CreateLogMetricRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateLogMetricRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.CreateLogMetricRequest.parent)
}
void CreateLogMetricRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.CreateLogMetricRequest.parent)
}
void CreateLogMetricRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.CreateLogMetricRequest.parent)
}
::std::string* CreateLogMetricRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.CreateLogMetricRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateLogMetricRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.logging.v2.CreateLogMetricRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateLogMetricRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.CreateLogMetricRequest.parent)
}

// optional .google.logging.v2.LogMetric metric = 2;
bool CreateLogMetricRequest::has_metric() const {
  return this != internal_default_instance() && metric_ != NULL;
}
void CreateLogMetricRequest::clear_metric() {
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) delete metric_;
  metric_ = NULL;
}
const ::google::logging::v2::LogMetric& CreateLogMetricRequest::metric() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.CreateLogMetricRequest.metric)
  return metric_ != NULL ? *metric_
                         : *::google::logging::v2::LogMetric::internal_default_instance();
}
::google::logging::v2::LogMetric* CreateLogMetricRequest::mutable_metric() {
  
  if (metric_ == NULL) {
    metric_ = new ::google::logging::v2::LogMetric;
  }
  // @@protoc_insertion_point(field_mutable:google.logging.v2.CreateLogMetricRequest.metric)
  return metric_;
}
::google::logging::v2::LogMetric* CreateLogMetricRequest::release_metric() {
  // @@protoc_insertion_point(field_release:google.logging.v2.CreateLogMetricRequest.metric)
  
  ::google::logging::v2::LogMetric* temp = metric_;
  metric_ = NULL;
  return temp;
}
void CreateLogMetricRequest::set_allocated_metric(::google::logging::v2::LogMetric* metric) {
  delete metric_;
  metric_ = metric;
  if (metric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.CreateLogMetricRequest.metric)
}

inline const CreateLogMetricRequest* CreateLogMetricRequest::internal_default_instance() {
  return &CreateLogMetricRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateLogMetricRequest::kMetricNameFieldNumber;
const int UpdateLogMetricRequest::kMetricFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateLogMetricRequest::UpdateLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateLogMetricRequest)
}

void UpdateLogMetricRequest::InitAsDefaultInstance() {
  metric_ = const_cast< ::google::logging::v2::LogMetric*>(
      ::google::logging::v2::LogMetric::internal_default_instance());
}

UpdateLogMetricRequest::UpdateLogMetricRequest(const UpdateLogMetricRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateLogMetricRequest)
}

void UpdateLogMetricRequest::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_ = NULL;
  _cached_size_ = 0;
}

UpdateLogMetricRequest::~UpdateLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateLogMetricRequest)
  SharedDtor();
}

void UpdateLogMetricRequest::SharedDtor() {
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &UpdateLogMetricRequest_default_instance_.get()) {
    delete metric_;
  }
}

void UpdateLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateLogMetricRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateLogMetricRequest_descriptor_;
}

const UpdateLogMetricRequest& UpdateLogMetricRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateLogMetricRequest> UpdateLogMetricRequest_default_instance_;

UpdateLogMetricRequest* UpdateLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  UpdateLogMetricRequest* n = new UpdateLogMetricRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateLogMetricRequest)
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) delete metric_;
  metric_ = NULL;
}

bool UpdateLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.UpdateLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string metric_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), this->metric_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.UpdateLogMetricRequest.metric_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_metric;
        break;
      }

      // optional .google.logging.v2.LogMetric metric = 2;
      case 2: {
        if (tag == 18) {
         parse_metric:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.UpdateLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.UpdateLogMetricRequest)
  return false;
#undef DO_
}

void UpdateLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.UpdateLogMetricRequest)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateLogMetricRequest.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  // optional .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metric_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.UpdateLogMetricRequest)
}

::google::protobuf::uint8* UpdateLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateLogMetricRequest)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateLogMetricRequest.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  // optional .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->metric_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateLogMetricRequest)
  return target;
}

size_t UpdateLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateLogMetricRequest)
  size_t total_size = 0;

  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  // optional .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metric_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateLogMetricRequest)
    UnsafeMergeFrom(*source);
  }
}

void UpdateLogMetricRequest::MergeFrom(const UpdateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateLogMetricRequest::UnsafeMergeFrom(const UpdateLogMetricRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.metric_name().size() > 0) {

    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
  if (from.has_metric()) {
    mutable_metric()->::google::logging::v2::LogMetric::MergeFrom(from.metric());
  }
}

void UpdateLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateLogMetricRequest::CopyFrom(const UpdateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateLogMetricRequest::IsInitialized() const {

  return true;
}

void UpdateLogMetricRequest::Swap(UpdateLogMetricRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateLogMetricRequest::InternalSwap(UpdateLogMetricRequest* other) {
  metric_name_.Swap(&other->metric_name_);
  std::swap(metric_, other->metric_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateLogMetricRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateLogMetricRequest_descriptor_;
  metadata.reflection = UpdateLogMetricRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateLogMetricRequest

// optional string metric_name = 1;
void UpdateLogMetricRequest::clear_metric_name() {
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateLogMetricRequest::metric_name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.UpdateLogMetricRequest.metric_name)
  return metric_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateLogMetricRequest::set_metric_name(const ::std::string& value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.UpdateLogMetricRequest.metric_name)
}
void UpdateLogMetricRequest::set_metric_name(const char* value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.UpdateLogMetricRequest.metric_name)
}
void UpdateLogMetricRequest::set_metric_name(const char* value, size_t size) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.UpdateLogMetricRequest.metric_name)
}
::std::string* UpdateLogMetricRequest::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.UpdateLogMetricRequest.metric_name)
  return metric_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateLogMetricRequest::release_metric_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.UpdateLogMetricRequest.metric_name)
  
  return metric_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateLogMetricRequest::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.UpdateLogMetricRequest.metric_name)
}

// optional .google.logging.v2.LogMetric metric = 2;
bool UpdateLogMetricRequest::has_metric() const {
  return this != internal_default_instance() && metric_ != NULL;
}
void UpdateLogMetricRequest::clear_metric() {
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) delete metric_;
  metric_ = NULL;
}
const ::google::logging::v2::LogMetric& UpdateLogMetricRequest::metric() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.UpdateLogMetricRequest.metric)
  return metric_ != NULL ? *metric_
                         : *::google::logging::v2::LogMetric::internal_default_instance();
}
::google::logging::v2::LogMetric* UpdateLogMetricRequest::mutable_metric() {
  
  if (metric_ == NULL) {
    metric_ = new ::google::logging::v2::LogMetric;
  }
  // @@protoc_insertion_point(field_mutable:google.logging.v2.UpdateLogMetricRequest.metric)
  return metric_;
}
::google::logging::v2::LogMetric* UpdateLogMetricRequest::release_metric() {
  // @@protoc_insertion_point(field_release:google.logging.v2.UpdateLogMetricRequest.metric)
  
  ::google::logging::v2::LogMetric* temp = metric_;
  metric_ = NULL;
  return temp;
}
void UpdateLogMetricRequest::set_allocated_metric(::google::logging::v2::LogMetric* metric) {
  delete metric_;
  metric_ = metric;
  if (metric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.UpdateLogMetricRequest.metric)
}

inline const UpdateLogMetricRequest* UpdateLogMetricRequest::internal_default_instance() {
  return &UpdateLogMetricRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteLogMetricRequest::kMetricNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteLogMetricRequest::DeleteLogMetricRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteLogMetricRequest)
}

void DeleteLogMetricRequest::InitAsDefaultInstance() {
}

DeleteLogMetricRequest::DeleteLogMetricRequest(const DeleteLogMetricRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteLogMetricRequest)
}

void DeleteLogMetricRequest::SharedCtor() {
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteLogMetricRequest::~DeleteLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteLogMetricRequest)
  SharedDtor();
}

void DeleteLogMetricRequest::SharedDtor() {
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteLogMetricRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteLogMetricRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteLogMetricRequest_descriptor_;
}

const DeleteLogMetricRequest& DeleteLogMetricRequest::default_instance() {
  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_5fmetrics_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteLogMetricRequest> DeleteLogMetricRequest_default_instance_;

DeleteLogMetricRequest* DeleteLogMetricRequest::New(::google::protobuf::Arena* arena) const {
  DeleteLogMetricRequest* n = new DeleteLogMetricRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteLogMetricRequest)
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteLogMetricRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.logging.v2.DeleteLogMetricRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string metric_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), this->metric_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.logging.v2.DeleteLogMetricRequest.metric_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.logging.v2.DeleteLogMetricRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.logging.v2.DeleteLogMetricRequest)
  return false;
#undef DO_
}

void DeleteLogMetricRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.logging.v2.DeleteLogMetricRequest)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogMetricRequest.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->metric_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.logging.v2.DeleteLogMetricRequest)
}

::google::protobuf::uint8* DeleteLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteLogMetricRequest)
  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), this->metric_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogMetricRequest.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->metric_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteLogMetricRequest)
  return target;
}

size_t DeleteLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteLogMetricRequest)
  size_t total_size = 0;

  // optional string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteLogMetricRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteLogMetricRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteLogMetricRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteLogMetricRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteLogMetricRequest)
    UnsafeMergeFrom(*source);
  }
}

void DeleteLogMetricRequest::MergeFrom(const DeleteLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteLogMetricRequest::UnsafeMergeFrom(const DeleteLogMetricRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.metric_name().size() > 0) {

    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
}

void DeleteLogMetricRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogMetricRequest::CopyFrom(const DeleteLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteLogMetricRequest::IsInitialized() const {

  return true;
}

void DeleteLogMetricRequest::Swap(DeleteLogMetricRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteLogMetricRequest::InternalSwap(DeleteLogMetricRequest* other) {
  metric_name_.Swap(&other->metric_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteLogMetricRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteLogMetricRequest_descriptor_;
  metadata.reflection = DeleteLogMetricRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteLogMetricRequest

// optional string metric_name = 1;
void DeleteLogMetricRequest::clear_metric_name() {
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteLogMetricRequest::metric_name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.DeleteLogMetricRequest.metric_name)
  return metric_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteLogMetricRequest::set_metric_name(const ::std::string& value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.logging.v2.DeleteLogMetricRequest.metric_name)
}
void DeleteLogMetricRequest::set_metric_name(const char* value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.logging.v2.DeleteLogMetricRequest.metric_name)
}
void DeleteLogMetricRequest::set_metric_name(const char* value, size_t size) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.DeleteLogMetricRequest.metric_name)
}
::std::string* DeleteLogMetricRequest::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.DeleteLogMetricRequest.metric_name)
  return metric_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteLogMetricRequest::release_metric_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.DeleteLogMetricRequest.metric_name)
  
  return metric_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteLogMetricRequest::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name);
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.DeleteLogMetricRequest.metric_name)
}

inline const DeleteLogMetricRequest* DeleteLogMetricRequest::internal_default_instance() {
  return &DeleteLogMetricRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace logging
}  // namespace google

// @@protoc_insertion_point(global_scope)
