// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/logging/v1/request_log.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/appengine/logging/v1/request_log.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace appengine {
namespace logging {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* LogLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* SourceLocation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SourceLocation_reflection_ = NULL;
const ::google::protobuf::Descriptor* SourceReference_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SourceReference_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestLog_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto() {
  protobuf_AddDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/appengine/logging/v1/request_log.proto");
  GOOGLE_CHECK(file != NULL);
  LogLine_descriptor_ = file->message_type(0);
  static const int LogLine_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogLine, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogLine, severity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogLine, log_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogLine, source_location_),
  };
  LogLine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogLine_descriptor_,
      LogLine::internal_default_instance(),
      LogLine_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogLine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogLine, _internal_metadata_));
  SourceLocation_descriptor_ = file->message_type(1);
  static const int SourceLocation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, function_name_),
  };
  SourceLocation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SourceLocation_descriptor_,
      SourceLocation::internal_default_instance(),
      SourceLocation_offsets_,
      -1,
      -1,
      -1,
      sizeof(SourceLocation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, _internal_metadata_));
  SourceReference_descriptor_ = file->message_type(2);
  static const int SourceReference_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceReference, repository_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceReference, revision_id_),
  };
  SourceReference_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SourceReference_descriptor_,
      SourceReference::internal_default_instance(),
      SourceReference_offsets_,
      -1,
      -1,
      -1,
      sizeof(SourceReference),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceReference, _internal_metadata_));
  RequestLog_descriptor_ = file->message_type(3);
  static const int RequestLog_offsets_[32] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, module_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, version_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, latency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, mega_cycles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, http_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, response_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, referrer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, user_agent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, url_map_entry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, task_queue_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, task_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, was_loading_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, pending_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, instance_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, finished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, first_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, instance_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, app_engine_release_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, trace_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, source_reference_),
  };
  RequestLog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestLog_descriptor_,
      RequestLog::internal_default_instance(),
      RequestLog_offsets_,
      -1,
      -1,
      -1,
      sizeof(RequestLog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestLog, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogLine_descriptor_, LogLine::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SourceLocation_descriptor_, SourceLocation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SourceReference_descriptor_, SourceReference::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestLog_descriptor_, RequestLog::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto() {
  LogLine_default_instance_.Shutdown();
  delete LogLine_reflection_;
  SourceLocation_default_instance_.Shutdown();
  delete SourceLocation_reflection_;
  SourceReference_default_instance_.Shutdown();
  delete SourceReference_reflection_;
  RequestLog_default_instance_.Shutdown();
  delete RequestLog_reflection_;
}

void protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::logging::type::protobuf_InitDefaults_google_2flogging_2ftype_2flog_5fseverity_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  LogLine_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SourceLocation_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SourceReference_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RequestLog_default_instance_.DefaultConstruct();
  LogLine_default_instance_.get_mutable()->InitAsDefaultInstance();
  SourceLocation_default_instance_.get_mutable()->InitAsDefaultInstance();
  SourceReference_default_instance_.get_mutable()->InitAsDefaultInstance();
  RequestLog_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_once_);
void protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_once_,
                 &protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_impl);
}
void protobuf_AddDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n-google/appengine/logging/v1/request_lo"
    "g.proto\022\033google.appengine.logging.v1\032&go"
    "ogle/logging/type/log_severity.proto\032\036go"
    "ogle/protobuf/duration.proto\032\037google/pro"
    "tobuf/timestamp.proto\"\302\001\n\007LogLine\022(\n\004tim"
    "e\030\001 \001(\0132\032.google.protobuf.Timestamp\0222\n\010s"
    "everity\030\002 \001(\0162 .google.logging.type.LogS"
    "everity\022\023\n\013log_message\030\003 \001(\t\022D\n\017source_l"
    "ocation\030\004 \001(\0132+.google.appengine.logging"
    ".v1.SourceLocation\"C\n\016SourceLocation\022\014\n\004"
    "file\030\001 \001(\t\022\014\n\004line\030\002 \001(\003\022\025\n\rfunction_nam"
    "e\030\003 \001(\t\":\n\017SourceReference\022\022\n\nrepository"
    "\030\001 \001(\t\022\023\n\013revision_id\030\002 \001(\t\"\276\006\n\nRequestL"
    "og\022\016\n\006app_id\030\001 \001(\t\022\021\n\tmodule_id\030% \001(\t\022\022\n"
    "\nversion_id\030\002 \001(\t\022\022\n\nrequest_id\030\003 \001(\t\022\n\n"
    "\002ip\030\004 \001(\t\022.\n\nstart_time\030\006 \001(\0132\032.google.p"
    "rotobuf.Timestamp\022,\n\010end_time\030\007 \001(\0132\032.go"
    "ogle.protobuf.Timestamp\022*\n\007latency\030\010 \001(\013"
    "2\031.google.protobuf.Duration\022\023\n\013mega_cycl"
    "es\030\t \001(\003\022\016\n\006method\030\n \001(\t\022\020\n\010resource\030\013 \001"
    "(\t\022\024\n\014http_version\030\014 \001(\t\022\016\n\006status\030\r \001(\005"
    "\022\025\n\rresponse_size\030\016 \001(\003\022\020\n\010referrer\030\017 \001("
    "\t\022\022\n\nuser_agent\030\020 \001(\t\022\020\n\010nickname\030( \001(\t\022"
    "\025\n\rurl_map_entry\030\021 \001(\t\022\014\n\004host\030\024 \001(\t\022\014\n\004"
    "cost\030\025 \001(\001\022\027\n\017task_queue_name\030\026 \001(\t\022\021\n\tt"
    "ask_name\030\027 \001(\t\022\033\n\023was_loading_request\030\030 "
    "\001(\010\022/\n\014pending_time\030\031 \001(\0132\031.google.proto"
    "buf.Duration\022\026\n\016instance_index\030\032 \001(\005\022\020\n\010"
    "finished\030\033 \001(\010\022\r\n\005first\030* \001(\010\022\023\n\013instanc"
    "e_id\030\034 \001(\t\0222\n\004line\030\035 \003(\0132$.google.appeng"
    "ine.logging.v1.LogLine\022\032\n\022app_engine_rel"
    "ease\030& \001(\t\022\020\n\010trace_id\030\' \001(\t\022F\n\020source_r"
    "eference\030) \003(\0132,.google.appengine.loggin"
    "g.v1.SourceReferenceBx\n\037com.google.appen"
    "gine.logging.v1B\017RequestLogProtoP\001ZBgoog"
    "le.golang.org/genproto/googleapis/appeng"
    "ine/logging/v1;loggingb\006proto3", 1470);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/logging/v1/request_log.proto", &protobuf_RegisterTypes);
  ::google::logging::type::protobuf_AddDesc_google_2flogging_2ftype_2flog_5fseverity_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_once_);
void protobuf_AddDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_once_,
                 &protobuf_AddDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto {
  StaticDescriptorInitializer_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto() {
    protobuf_AddDesc_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  }
} static_descriptor_initializer_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogLine::kTimeFieldNumber;
const int LogLine::kSeverityFieldNumber;
const int LogLine::kLogMessageFieldNumber;
const int LogLine::kSourceLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogLine::LogLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.logging.v1.LogLine)
}

void LogLine::InitAsDefaultInstance() {
  time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  source_location_ = const_cast< ::google::appengine::logging::v1::SourceLocation*>(
      ::google::appengine::logging::v1::SourceLocation::internal_default_instance());
}

LogLine::LogLine(const LogLine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.logging.v1.LogLine)
}

void LogLine::SharedCtor() {
  log_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = NULL;
  source_location_ = NULL;
  severity_ = 0;
  _cached_size_ = 0;
}

LogLine::~LogLine() {
  // @@protoc_insertion_point(destructor:google.appengine.logging.v1.LogLine)
  SharedDtor();
}

void LogLine::SharedDtor() {
  log_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &LogLine_default_instance_.get()) {
    delete time_;
    delete source_location_;
  }
}

void LogLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogLine_descriptor_;
}

const LogLine& LogLine::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LogLine> LogLine_default_instance_;

LogLine* LogLine::New(::google::protobuf::Arena* arena) const {
  LogLine* n = new LogLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogLine::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.logging.v1.LogLine)
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
  severity_ = 0;
  log_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_location_ != NULL) delete source_location_;
  source_location_ = NULL;
}

bool LogLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.logging.v1.LogLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Timestamp time = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_severity;
        break;
      }

      // optional .google.logging.type.LogSeverity severity = 2;
      case 2: {
        if (tag == 16) {
         parse_severity:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::google::logging::type::LogSeverity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_log_message;
        break;
      }

      // optional string log_message = 3;
      case 3: {
        if (tag == 26) {
         parse_log_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_message().data(), this->log_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.LogLine.log_message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_source_location;
        break;
      }

      // optional .google.appengine.logging.v1.SourceLocation source_location = 4;
      case 4: {
        if (tag == 34) {
         parse_source_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.logging.v1.LogLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.logging.v1.LogLine)
  return false;
#undef DO_
}

void LogLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.logging.v1.LogLine)
  // optional .google.protobuf.Timestamp time = 1;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->time_, output);
  }

  // optional .google.logging.type.LogSeverity severity = 2;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->severity(), output);
  }

  // optional string log_message = 3;
  if (this->log_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_message().data(), this->log_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.LogLine.log_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log_message(), output);
  }

  // optional .google.appengine.logging.v1.SourceLocation source_location = 4;
  if (this->has_source_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->source_location_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.logging.v1.LogLine)
}

::google::protobuf::uint8* LogLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.logging.v1.LogLine)
  // optional .google.protobuf.Timestamp time = 1;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->time_, false, target);
  }

  // optional .google.logging.type.LogSeverity severity = 2;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->severity(), target);
  }

  // optional string log_message = 3;
  if (this->log_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_message().data(), this->log_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.LogLine.log_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log_message(), target);
  }

  // optional .google.appengine.logging.v1.SourceLocation source_location = 4;
  if (this->has_source_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->source_location_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.logging.v1.LogLine)
  return target;
}

size_t LogLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.logging.v1.LogLine)
  size_t total_size = 0;

  // optional .google.protobuf.Timestamp time = 1;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);
  }

  // optional .google.logging.type.LogSeverity severity = 2;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  // optional string log_message = 3;
  if (this->log_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_message());
  }

  // optional .google.appengine.logging.v1.SourceLocation source_location = 4;
  if (this->has_source_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_location_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.logging.v1.LogLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LogLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.logging.v1.LogLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.logging.v1.LogLine)
    UnsafeMergeFrom(*source);
  }
}

void LogLine::MergeFrom(const LogLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.logging.v1.LogLine)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LogLine::UnsafeMergeFrom(const LogLine& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
  if (from.log_message().size() > 0) {

    log_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_message_);
  }
  if (from.has_source_location()) {
    mutable_source_location()->::google::appengine::logging::v1::SourceLocation::MergeFrom(from.source_location());
  }
}

void LogLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.logging.v1.LogLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogLine::CopyFrom(const LogLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.logging.v1.LogLine)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LogLine::IsInitialized() const {

  return true;
}

void LogLine::Swap(LogLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogLine::InternalSwap(LogLine* other) {
  std::swap(time_, other->time_);
  std::swap(severity_, other->severity_);
  log_message_.Swap(&other->log_message_);
  std::swap(source_location_, other->source_location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogLine_descriptor_;
  metadata.reflection = LogLine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogLine

// optional .google.protobuf.Timestamp time = 1;
bool LogLine::has_time() const {
  return this != internal_default_instance() && time_ != NULL;
}
void LogLine::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
}
const ::google::protobuf::Timestamp& LogLine::time() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.LogLine.time)
  return time_ != NULL ? *time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* LogLine::mutable_time() {
  
  if (time_ == NULL) {
    time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.LogLine.time)
  return time_;
}
::google::protobuf::Timestamp* LogLine::release_time() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.LogLine.time)
  
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
void LogLine::set_allocated_time(::google::protobuf::Timestamp* time) {
  delete time_;
  if (time != NULL && time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time = new ::google::protobuf::Timestamp;
    new_time->CopyFrom(*time);
    time = new_time;
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.LogLine.time)
}

// optional .google.logging.type.LogSeverity severity = 2;
void LogLine::clear_severity() {
  severity_ = 0;
}
::google::logging::type::LogSeverity LogLine::severity() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.LogLine.severity)
  return static_cast< ::google::logging::type::LogSeverity >(severity_);
}
void LogLine::set_severity(::google::logging::type::LogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.LogLine.severity)
}

// optional string log_message = 3;
void LogLine::clear_log_message() {
  log_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogLine::log_message() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.LogLine.log_message)
  return log_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogLine::set_log_message(const ::std::string& value) {
  
  log_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.LogLine.log_message)
}
void LogLine::set_log_message(const char* value) {
  
  log_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.LogLine.log_message)
}
void LogLine::set_log_message(const char* value, size_t size) {
  
  log_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.LogLine.log_message)
}
::std::string* LogLine::mutable_log_message() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.LogLine.log_message)
  return log_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogLine::release_log_message() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.LogLine.log_message)
  
  return log_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogLine::set_allocated_log_message(::std::string* log_message) {
  if (log_message != NULL) {
    
  } else {
    
  }
  log_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_message);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.LogLine.log_message)
}

// optional .google.appengine.logging.v1.SourceLocation source_location = 4;
bool LogLine::has_source_location() const {
  return this != internal_default_instance() && source_location_ != NULL;
}
void LogLine::clear_source_location() {
  if (GetArenaNoVirtual() == NULL && source_location_ != NULL) delete source_location_;
  source_location_ = NULL;
}
const ::google::appengine::logging::v1::SourceLocation& LogLine::source_location() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.LogLine.source_location)
  return source_location_ != NULL ? *source_location_
                         : *::google::appengine::logging::v1::SourceLocation::internal_default_instance();
}
::google::appengine::logging::v1::SourceLocation* LogLine::mutable_source_location() {
  
  if (source_location_ == NULL) {
    source_location_ = new ::google::appengine::logging::v1::SourceLocation;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.LogLine.source_location)
  return source_location_;
}
::google::appengine::logging::v1::SourceLocation* LogLine::release_source_location() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.LogLine.source_location)
  
  ::google::appengine::logging::v1::SourceLocation* temp = source_location_;
  source_location_ = NULL;
  return temp;
}
void LogLine::set_allocated_source_location(::google::appengine::logging::v1::SourceLocation* source_location) {
  delete source_location_;
  source_location_ = source_location;
  if (source_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.LogLine.source_location)
}

inline const LogLine* LogLine::internal_default_instance() {
  return &LogLine_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceLocation::kFileFieldNumber;
const int SourceLocation::kLineFieldNumber;
const int SourceLocation::kFunctionNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceLocation::SourceLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.logging.v1.SourceLocation)
}

void SourceLocation::InitAsDefaultInstance() {
}

SourceLocation::SourceLocation(const SourceLocation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.logging.v1.SourceLocation)
}

void SourceLocation::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

SourceLocation::~SourceLocation() {
  // @@protoc_insertion_point(destructor:google.appengine.logging.v1.SourceLocation)
  SharedDtor();
}

void SourceLocation::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourceLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceLocation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SourceLocation_descriptor_;
}

const SourceLocation& SourceLocation::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SourceLocation> SourceLocation_default_instance_;

SourceLocation* SourceLocation::New(::google::protobuf::Arena* arena) const {
  SourceLocation* n = new SourceLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.logging.v1.SourceLocation)
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_ = GOOGLE_LONGLONG(0);
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SourceLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.logging.v1.SourceLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), this->file().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.SourceLocation.file"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_line;
        break;
      }

      // optional int64 line = 2;
      case 2: {
        if (tag == 16) {
         parse_line:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_function_name;
        break;
      }

      // optional string function_name = 3;
      case 3: {
        if (tag == 26) {
         parse_function_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), this->function_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.SourceLocation.function_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.logging.v1.SourceLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.logging.v1.SourceLocation)
  return false;
#undef DO_
}

void SourceLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.logging.v1.SourceLocation)
  // optional string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceLocation.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // optional int64 line = 2;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->line(), output);
  }

  // optional string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), this->function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceLocation.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->function_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.logging.v1.SourceLocation)
}

::google::protobuf::uint8* SourceLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.logging.v1.SourceLocation)
  // optional string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceLocation.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // optional int64 line = 2;
  if (this->line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->line(), target);
  }

  // optional string function_name = 3;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), this->function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceLocation.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->function_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.logging.v1.SourceLocation)
  return target;
}

size_t SourceLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.logging.v1.SourceLocation)
  size_t total_size = 0;

  // optional string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // optional int64 line = 2;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->line());
  }

  // optional string function_name = 3;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.logging.v1.SourceLocation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SourceLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.logging.v1.SourceLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.logging.v1.SourceLocation)
    UnsafeMergeFrom(*source);
  }
}

void SourceLocation::MergeFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.logging.v1.SourceLocation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SourceLocation::UnsafeMergeFrom(const SourceLocation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
  if (from.function_name().size() > 0) {

    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
}

void SourceLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.logging.v1.SourceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceLocation::CopyFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.logging.v1.SourceLocation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SourceLocation::IsInitialized() const {

  return true;
}

void SourceLocation::Swap(SourceLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceLocation::InternalSwap(SourceLocation* other) {
  file_.Swap(&other->file_);
  std::swap(line_, other->line_);
  function_name_.Swap(&other->function_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceLocation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SourceLocation_descriptor_;
  metadata.reflection = SourceLocation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceLocation

// optional string file = 1;
void SourceLocation::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceLocation::file() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.SourceLocation.file)
  return file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.SourceLocation.file)
}
void SourceLocation::set_file(const char* value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.SourceLocation.file)
}
void SourceLocation::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.SourceLocation.file)
}
::std::string* SourceLocation::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.SourceLocation.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceLocation::release_file() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.SourceLocation.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.SourceLocation.file)
}

// optional int64 line = 2;
void SourceLocation::clear_line() {
  line_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SourceLocation::line() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.SourceLocation.line)
  return line_;
}
void SourceLocation::set_line(::google::protobuf::int64 value) {
  
  line_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.SourceLocation.line)
}

// optional string function_name = 3;
void SourceLocation::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceLocation::function_name() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.SourceLocation.function_name)
  return function_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_function_name(const ::std::string& value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.SourceLocation.function_name)
}
void SourceLocation::set_function_name(const char* value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.SourceLocation.function_name)
}
void SourceLocation::set_function_name(const char* value, size_t size) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.SourceLocation.function_name)
}
::std::string* SourceLocation::mutable_function_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.SourceLocation.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceLocation::release_function_name() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.SourceLocation.function_name)
  
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_allocated_function_name(::std::string* function_name) {
  if (function_name != NULL) {
    
  } else {
    
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.SourceLocation.function_name)
}

inline const SourceLocation* SourceLocation::internal_default_instance() {
  return &SourceLocation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceReference::kRepositoryFieldNumber;
const int SourceReference::kRevisionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceReference::SourceReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.logging.v1.SourceReference)
}

void SourceReference::InitAsDefaultInstance() {
}

SourceReference::SourceReference(const SourceReference& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.logging.v1.SourceReference)
}

void SourceReference::SharedCtor() {
  repository_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SourceReference::~SourceReference() {
  // @@protoc_insertion_point(destructor:google.appengine.logging.v1.SourceReference)
  SharedDtor();
}

void SourceReference::SharedDtor() {
  repository_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourceReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceReference::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SourceReference_descriptor_;
}

const SourceReference& SourceReference::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SourceReference> SourceReference_default_instance_;

SourceReference* SourceReference::New(::google::protobuf::Arena* arena) const {
  SourceReference* n = new SourceReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceReference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.logging.v1.SourceReference)
  repository_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revision_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SourceReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.logging.v1.SourceReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string repository = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repository()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repository().data(), this->repository().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.SourceReference.repository"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_revision_id;
        break;
      }

      // optional string revision_id = 2;
      case 2: {
        if (tag == 18) {
         parse_revision_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revision_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->revision_id().data(), this->revision_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.SourceReference.revision_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.logging.v1.SourceReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.logging.v1.SourceReference)
  return false;
#undef DO_
}

void SourceReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.logging.v1.SourceReference)
  // optional string repository = 1;
  if (this->repository().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository().data(), this->repository().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceReference.repository");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->repository(), output);
  }

  // optional string revision_id = 2;
  if (this->revision_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision_id().data(), this->revision_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceReference.revision_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->revision_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.logging.v1.SourceReference)
}

::google::protobuf::uint8* SourceReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.logging.v1.SourceReference)
  // optional string repository = 1;
  if (this->repository().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repository().data(), this->repository().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceReference.repository");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->repository(), target);
  }

  // optional string revision_id = 2;
  if (this->revision_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revision_id().data(), this->revision_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.SourceReference.revision_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->revision_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.logging.v1.SourceReference)
  return target;
}

size_t SourceReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.logging.v1.SourceReference)
  size_t total_size = 0;

  // optional string repository = 1;
  if (this->repository().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repository());
  }

  // optional string revision_id = 2;
  if (this->revision_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revision_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.logging.v1.SourceReference)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SourceReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.logging.v1.SourceReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.logging.v1.SourceReference)
    UnsafeMergeFrom(*source);
  }
}

void SourceReference::MergeFrom(const SourceReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.logging.v1.SourceReference)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SourceReference::UnsafeMergeFrom(const SourceReference& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.repository().size() > 0) {

    repository_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repository_);
  }
  if (from.revision_id().size() > 0) {

    revision_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revision_id_);
  }
}

void SourceReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.logging.v1.SourceReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceReference::CopyFrom(const SourceReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.logging.v1.SourceReference)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SourceReference::IsInitialized() const {

  return true;
}

void SourceReference::Swap(SourceReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceReference::InternalSwap(SourceReference* other) {
  repository_.Swap(&other->repository_);
  revision_id_.Swap(&other->revision_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceReference::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SourceReference_descriptor_;
  metadata.reflection = SourceReference_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceReference

// optional string repository = 1;
void SourceReference::clear_repository() {
  repository_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceReference::repository() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.SourceReference.repository)
  return repository_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceReference::set_repository(const ::std::string& value) {
  
  repository_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.SourceReference.repository)
}
void SourceReference::set_repository(const char* value) {
  
  repository_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.SourceReference.repository)
}
void SourceReference::set_repository(const char* value, size_t size) {
  
  repository_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.SourceReference.repository)
}
::std::string* SourceReference::mutable_repository() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.SourceReference.repository)
  return repository_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceReference::release_repository() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.SourceReference.repository)
  
  return repository_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceReference::set_allocated_repository(::std::string* repository) {
  if (repository != NULL) {
    
  } else {
    
  }
  repository_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), repository);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.SourceReference.repository)
}

// optional string revision_id = 2;
void SourceReference::clear_revision_id() {
  revision_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceReference::revision_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.SourceReference.revision_id)
  return revision_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceReference::set_revision_id(const ::std::string& value) {
  
  revision_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.SourceReference.revision_id)
}
void SourceReference::set_revision_id(const char* value) {
  
  revision_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.SourceReference.revision_id)
}
void SourceReference::set_revision_id(const char* value, size_t size) {
  
  revision_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.SourceReference.revision_id)
}
::std::string* SourceReference::mutable_revision_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.SourceReference.revision_id)
  return revision_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceReference::release_revision_id() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.SourceReference.revision_id)
  
  return revision_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceReference::set_allocated_revision_id(::std::string* revision_id) {
  if (revision_id != NULL) {
    
  } else {
    
  }
  revision_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), revision_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.SourceReference.revision_id)
}

inline const SourceReference* SourceReference::internal_default_instance() {
  return &SourceReference_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestLog::kAppIdFieldNumber;
const int RequestLog::kModuleIdFieldNumber;
const int RequestLog::kVersionIdFieldNumber;
const int RequestLog::kRequestIdFieldNumber;
const int RequestLog::kIpFieldNumber;
const int RequestLog::kStartTimeFieldNumber;
const int RequestLog::kEndTimeFieldNumber;
const int RequestLog::kLatencyFieldNumber;
const int RequestLog::kMegaCyclesFieldNumber;
const int RequestLog::kMethodFieldNumber;
const int RequestLog::kResourceFieldNumber;
const int RequestLog::kHttpVersionFieldNumber;
const int RequestLog::kStatusFieldNumber;
const int RequestLog::kResponseSizeFieldNumber;
const int RequestLog::kReferrerFieldNumber;
const int RequestLog::kUserAgentFieldNumber;
const int RequestLog::kNicknameFieldNumber;
const int RequestLog::kUrlMapEntryFieldNumber;
const int RequestLog::kHostFieldNumber;
const int RequestLog::kCostFieldNumber;
const int RequestLog::kTaskQueueNameFieldNumber;
const int RequestLog::kTaskNameFieldNumber;
const int RequestLog::kWasLoadingRequestFieldNumber;
const int RequestLog::kPendingTimeFieldNumber;
const int RequestLog::kInstanceIndexFieldNumber;
const int RequestLog::kFinishedFieldNumber;
const int RequestLog::kFirstFieldNumber;
const int RequestLog::kInstanceIdFieldNumber;
const int RequestLog::kLineFieldNumber;
const int RequestLog::kAppEngineReleaseFieldNumber;
const int RequestLog::kTraceIdFieldNumber;
const int RequestLog::kSourceReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestLog::RequestLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.logging.v1.RequestLog)
}

void RequestLog::InitAsDefaultInstance() {
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  latency_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  pending_time_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

RequestLog::RequestLog(const RequestLog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.logging.v1.RequestLog)
}

void RequestLog::SharedCtor() {
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_map_entry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_queue_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_ = NULL;
  end_time_ = NULL;
  latency_ = NULL;
  pending_time_ = NULL;
  ::memset(&mega_cycles_, 0, reinterpret_cast<char*>(&first_) -
    reinterpret_cast<char*>(&mega_cycles_) + sizeof(first_));
  _cached_size_ = 0;
}

RequestLog::~RequestLog() {
  // @@protoc_insertion_point(destructor:google.appengine.logging.v1.RequestLog)
  SharedDtor();
}

void RequestLog::SharedDtor() {
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_map_entry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_queue_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &RequestLog_default_instance_.get()) {
    delete start_time_;
    delete end_time_;
    delete latency_;
    delete pending_time_;
  }
}

void RequestLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestLog_descriptor_;
}

const RequestLog& RequestLog::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2flogging_2fv1_2frequest_5flog_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RequestLog> RequestLog_default_instance_;

RequestLog* RequestLog::New(::google::protobuf::Arena* arena) const {
  RequestLog* n = new RequestLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestLog::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.logging.v1.RequestLog)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RequestLog, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RequestLog*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && latency_ != NULL) delete latency_;
  latency_ = NULL;
  ZR_(mega_cycles_, status_);
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  http_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(cost_, was_loading_request_);
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_map_entry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_queue_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pending_time_ != NULL) delete pending_time_;
  pending_time_ = NULL;
  ZR_(finished_, first_);
  instance_index_ = 0;
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  line_.Clear();
  source_reference_.Clear();
}

bool RequestLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.logging.v1.RequestLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_id().data(), this->app_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.app_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version_id;
        break;
      }

      // optional string version_id = 2;
      case 2: {
        if (tag == 18) {
         parse_version_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_id().data(), this->version_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.version_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_request_id;
        break;
      }

      // optional string request_id = 3;
      case 3: {
        if (tag == 26) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ip;
        break;
      }

      // optional string ip = 4;
      case 4: {
        if (tag == 34) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 6;
      case 6: {
        if (tag == 50) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 7;
      case 7: {
        if (tag == 58) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_latency;
        break;
      }

      // optional .google.protobuf.Duration latency = 8;
      case 8: {
        if (tag == 66) {
         parse_latency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_latency()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mega_cycles;
        break;
      }

      // optional int64 mega_cycles = 9;
      case 9: {
        if (tag == 72) {
         parse_mega_cycles:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mega_cycles_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_method;
        break;
      }

      // optional string method = 10;
      case 10: {
        if (tag == 82) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.method"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_resource;
        break;
      }

      // optional string resource = 11;
      case 11: {
        if (tag == 90) {
         parse_resource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource().data(), this->resource().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.resource"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_http_version;
        break;
      }

      // optional string http_version = 12;
      case 12: {
        if (tag == 98) {
         parse_http_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_http_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->http_version().data(), this->http_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.http_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_status;
        break;
      }

      // optional int32 status = 13;
      case 13: {
        if (tag == 104) {
         parse_status:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_response_size;
        break;
      }

      // optional int64 response_size = 14;
      case 14: {
        if (tag == 112) {
         parse_response_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &response_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_referrer;
        break;
      }

      // optional string referrer = 15;
      case 15: {
        if (tag == 122) {
         parse_referrer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referrer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referrer().data(), this->referrer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.referrer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_user_agent;
        break;
      }

      // optional string user_agent = 16;
      case 16: {
        if (tag == 130) {
         parse_user_agent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_agent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_agent().data(), this->user_agent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.user_agent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_url_map_entry;
        break;
      }

      // optional string url_map_entry = 17;
      case 17: {
        if (tag == 138) {
         parse_url_map_entry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_map_entry()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url_map_entry().data(), this->url_map_entry().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.url_map_entry"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_host;
        break;
      }

      // optional string host = 20;
      case 20: {
        if (tag == 162) {
         parse_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.host"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_cost;
        break;
      }

      // optional double cost = 21;
      case 21: {
        if (tag == 169) {
         parse_cost:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_task_queue_name;
        break;
      }

      // optional string task_queue_name = 22;
      case 22: {
        if (tag == 178) {
         parse_task_queue_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_queue_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_queue_name().data(), this->task_queue_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.task_queue_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_task_name;
        break;
      }

      // optional string task_name = 23;
      case 23: {
        if (tag == 186) {
         parse_task_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_name().data(), this->task_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.task_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_was_loading_request;
        break;
      }

      // optional bool was_loading_request = 24;
      case 24: {
        if (tag == 192) {
         parse_was_loading_request:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &was_loading_request_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_pending_time;
        break;
      }

      // optional .google.protobuf.Duration pending_time = 25;
      case 25: {
        if (tag == 202) {
         parse_pending_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pending_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_instance_index;
        break;
      }

      // optional int32 instance_index = 26;
      case 26: {
        if (tag == 208) {
         parse_instance_index:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_finished;
        break;
      }

      // optional bool finished = 27;
      case 27: {
        if (tag == 216) {
         parse_finished:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_instance_id;
        break;
      }

      // optional string instance_id = 28;
      case 28: {
        if (tag == 226) {
         parse_instance_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), this->instance_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.instance_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_line;
        break;
      }

      // repeated .google.appengine.logging.v1.LogLine line = 29;
      case 29: {
        if (tag == 234) {
         parse_line:
          DO_(input->IncrementRecursionDepth());
         parse_loop_line:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_line()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_loop_line;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(298)) goto parse_module_id;
        break;
      }

      // optional string module_id = 37;
      case 37: {
        if (tag == 298) {
         parse_module_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module_id().data(), this->module_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.module_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_app_engine_release;
        break;
      }

      // optional string app_engine_release = 38;
      case 38: {
        if (tag == 306) {
         parse_app_engine_release:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_engine_release()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_engine_release().data(), this->app_engine_release().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.app_engine_release"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_trace_id;
        break;
      }

      // optional string trace_id = 39;
      case 39: {
        if (tag == 314) {
         parse_trace_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trace_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trace_id().data(), this->trace_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.trace_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_nickname;
        break;
      }

      // optional string nickname = 40;
      case 40: {
        if (tag == 322) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.logging.v1.RequestLog.nickname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_source_reference;
        break;
      }

      // repeated .google.appengine.logging.v1.SourceReference source_reference = 41;
      case 41: {
        if (tag == 330) {
         parse_source_reference:
          DO_(input->IncrementRecursionDepth());
         parse_loop_source_reference:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_source_reference()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_loop_source_reference;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(336)) goto parse_first;
        break;
      }

      // optional bool first = 42;
      case 42: {
        if (tag == 336) {
         parse_first:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.logging.v1.RequestLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.logging.v1.RequestLog)
  return false;
#undef DO_
}

void RequestLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.logging.v1.RequestLog)
  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_id(), output);
  }

  // optional string version_id = 2;
  if (this->version_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_id().data(), this->version_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.version_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version_id(), output);
  }

  // optional string request_id = 3;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->request_id(), output);
  }

  // optional string ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ip(), output);
  }

  // optional .google.protobuf.Timestamp start_time = 6;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 7;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->end_time_, output);
  }

  // optional .google.protobuf.Duration latency = 8;
  if (this->has_latency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->latency_, output);
  }

  // optional int64 mega_cycles = 9;
  if (this->mega_cycles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->mega_cycles(), output);
  }

  // optional string method = 10;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->method(), output);
  }

  // optional string resource = 11;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), this->resource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.resource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->resource(), output);
  }

  // optional string http_version = 12;
  if (this->http_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http_version().data(), this->http_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.http_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->http_version(), output);
  }

  // optional int32 status = 13;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->status(), output);
  }

  // optional int64 response_size = 14;
  if (this->response_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->response_size(), output);
  }

  // optional string referrer = 15;
  if (this->referrer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrer().data(), this->referrer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.referrer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->referrer(), output);
  }

  // optional string user_agent = 16;
  if (this->user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.user_agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->user_agent(), output);
  }

  // optional string url_map_entry = 17;
  if (this->url_map_entry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_map_entry().data(), this->url_map_entry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.url_map_entry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->url_map_entry(), output);
  }

  // optional string host = 20;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->host(), output);
  }

  // optional double cost = 21;
  if (this->cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->cost(), output);
  }

  // optional string task_queue_name = 22;
  if (this->task_queue_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_queue_name().data(), this->task_queue_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.task_queue_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->task_queue_name(), output);
  }

  // optional string task_name = 23;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.task_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->task_name(), output);
  }

  // optional bool was_loading_request = 24;
  if (this->was_loading_request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->was_loading_request(), output);
  }

  // optional .google.protobuf.Duration pending_time = 25;
  if (this->has_pending_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->pending_time_, output);
  }

  // optional int32 instance_index = 26;
  if (this->instance_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->instance_index(), output);
  }

  // optional bool finished = 27;
  if (this->finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->finished(), output);
  }

  // optional string instance_id = 28;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), this->instance_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->instance_id(), output);
  }

  // repeated .google.appengine.logging.v1.LogLine line = 29;
  for (unsigned int i = 0, n = this->line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->line(i), output);
  }

  // optional string module_id = 37;
  if (this->module_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_id().data(), this->module_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.module_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      37, this->module_id(), output);
  }

  // optional string app_engine_release = 38;
  if (this->app_engine_release().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_engine_release().data(), this->app_engine_release().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.app_engine_release");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      38, this->app_engine_release(), output);
  }

  // optional string trace_id = 39;
  if (this->trace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trace_id().data(), this->trace_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.trace_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      39, this->trace_id(), output);
  }

  // optional string nickname = 40;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->nickname(), output);
  }

  // repeated .google.appengine.logging.v1.SourceReference source_reference = 41;
  for (unsigned int i = 0, n = this->source_reference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->source_reference(i), output);
  }

  // optional bool first = 42;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(42, this->first(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.logging.v1.RequestLog)
}

::google::protobuf::uint8* RequestLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.logging.v1.RequestLog)
  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_id(), target);
  }

  // optional string version_id = 2;
  if (this->version_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_id().data(), this->version_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.version_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version_id(), target);
  }

  // optional string request_id = 3;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->request_id(), target);
  }

  // optional string ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip(), target);
  }

  // optional .google.protobuf.Timestamp start_time = 6;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 7;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->end_time_, false, target);
  }

  // optional .google.protobuf.Duration latency = 8;
  if (this->has_latency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->latency_, false, target);
  }

  // optional int64 mega_cycles = 9;
  if (this->mega_cycles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->mega_cycles(), target);
  }

  // optional string method = 10;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->method(), target);
  }

  // optional string resource = 11;
  if (this->resource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource().data(), this->resource().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.resource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->resource(), target);
  }

  // optional string http_version = 12;
  if (this->http_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->http_version().data(), this->http_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.http_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->http_version(), target);
  }

  // optional int32 status = 13;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->status(), target);
  }

  // optional int64 response_size = 14;
  if (this->response_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->response_size(), target);
  }

  // optional string referrer = 15;
  if (this->referrer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referrer().data(), this->referrer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.referrer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->referrer(), target);
  }

  // optional string user_agent = 16;
  if (this->user_agent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.user_agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->user_agent(), target);
  }

  // optional string url_map_entry = 17;
  if (this->url_map_entry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_map_entry().data(), this->url_map_entry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.url_map_entry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->url_map_entry(), target);
  }

  // optional string host = 20;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->host(), target);
  }

  // optional double cost = 21;
  if (this->cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->cost(), target);
  }

  // optional string task_queue_name = 22;
  if (this->task_queue_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_queue_name().data(), this->task_queue_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.task_queue_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->task_queue_name(), target);
  }

  // optional string task_name = 23;
  if (this->task_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.task_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->task_name(), target);
  }

  // optional bool was_loading_request = 24;
  if (this->was_loading_request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->was_loading_request(), target);
  }

  // optional .google.protobuf.Duration pending_time = 25;
  if (this->has_pending_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->pending_time_, false, target);
  }

  // optional int32 instance_index = 26;
  if (this->instance_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->instance_index(), target);
  }

  // optional bool finished = 27;
  if (this->finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->finished(), target);
  }

  // optional string instance_id = 28;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), this->instance_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->instance_id(), target);
  }

  // repeated .google.appengine.logging.v1.LogLine line = 29;
  for (unsigned int i = 0, n = this->line_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        29, this->line(i), false, target);
  }

  // optional string module_id = 37;
  if (this->module_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_id().data(), this->module_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.module_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->module_id(), target);
  }

  // optional string app_engine_release = 38;
  if (this->app_engine_release().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_engine_release().data(), this->app_engine_release().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.app_engine_release");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->app_engine_release(), target);
  }

  // optional string trace_id = 39;
  if (this->trace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trace_id().data(), this->trace_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.trace_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->trace_id(), target);
  }

  // optional string nickname = 40;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.logging.v1.RequestLog.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->nickname(), target);
  }

  // repeated .google.appengine.logging.v1.SourceReference source_reference = 41;
  for (unsigned int i = 0, n = this->source_reference_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        41, this->source_reference(i), false, target);
  }

  // optional bool first = 42;
  if (this->first() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(42, this->first(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.logging.v1.RequestLog)
  return target;
}

size_t RequestLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.logging.v1.RequestLog)
  size_t total_size = 0;

  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_id());
  }

  // optional string module_id = 37;
  if (this->module_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module_id());
  }

  // optional string version_id = 2;
  if (this->version_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_id());
  }

  // optional string request_id = 3;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // optional string ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // optional .google.protobuf.Timestamp start_time = 6;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp end_time = 7;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  // optional .google.protobuf.Duration latency = 8;
  if (this->has_latency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->latency_);
  }

  // optional int64 mega_cycles = 9;
  if (this->mega_cycles() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->mega_cycles());
  }

  // optional string method = 10;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // optional string resource = 11;
  if (this->resource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource());
  }

  // optional string http_version = 12;
  if (this->http_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->http_version());
  }

  // optional int32 status = 13;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int64 response_size = 14;
  if (this->response_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->response_size());
  }

  // optional string referrer = 15;
  if (this->referrer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referrer());
  }

  // optional string user_agent = 16;
  if (this->user_agent().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_agent());
  }

  // optional string nickname = 40;
  if (this->nickname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // optional string url_map_entry = 17;
  if (this->url_map_entry().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url_map_entry());
  }

  // optional string host = 20;
  if (this->host().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // optional double cost = 21;
  if (this->cost() != 0) {
    total_size += 2 + 8;
  }

  // optional string task_queue_name = 22;
  if (this->task_queue_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_queue_name());
  }

  // optional string task_name = 23;
  if (this->task_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_name());
  }

  // optional bool was_loading_request = 24;
  if (this->was_loading_request() != 0) {
    total_size += 2 + 1;
  }

  // optional .google.protobuf.Duration pending_time = 25;
  if (this->has_pending_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pending_time_);
  }

  // optional int32 instance_index = 26;
  if (this->instance_index() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instance_index());
  }

  // optional bool finished = 27;
  if (this->finished() != 0) {
    total_size += 2 + 1;
  }

  // optional bool first = 42;
  if (this->first() != 0) {
    total_size += 2 + 1;
  }

  // optional string instance_id = 28;
  if (this->instance_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // optional string app_engine_release = 38;
  if (this->app_engine_release().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_engine_release());
  }

  // optional string trace_id = 39;
  if (this->trace_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trace_id());
  }

  // repeated .google.appengine.logging.v1.LogLine line = 29;
  {
    unsigned int count = this->line_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->line(i));
    }
  }

  // repeated .google.appengine.logging.v1.SourceReference source_reference = 41;
  {
    unsigned int count = this->source_reference_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->source_reference(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.logging.v1.RequestLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RequestLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.logging.v1.RequestLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.logging.v1.RequestLog)
    UnsafeMergeFrom(*source);
  }
}

void RequestLog::MergeFrom(const RequestLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.logging.v1.RequestLog)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RequestLog::UnsafeMergeFrom(const RequestLog& from) {
  GOOGLE_DCHECK(&from != this);
  line_.MergeFrom(from.line_);
  source_reference_.MergeFrom(from.source_reference_);
  if (from.app_id().size() > 0) {

    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  if (from.module_id().size() > 0) {

    module_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_id_);
  }
  if (from.version_id().size() > 0) {

    version_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_id_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.has_latency()) {
    mutable_latency()->::google::protobuf::Duration::MergeFrom(from.latency());
  }
  if (from.mega_cycles() != 0) {
    set_mega_cycles(from.mega_cycles());
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.resource().size() > 0) {

    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  if (from.http_version().size() > 0) {

    http_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.http_version_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.response_size() != 0) {
    set_response_size(from.response_size());
  }
  if (from.referrer().size() > 0) {

    referrer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referrer_);
  }
  if (from.user_agent().size() > 0) {

    user_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_agent_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.url_map_entry().size() > 0) {

    url_map_entry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_map_entry_);
  }
  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.cost() != 0) {
    set_cost(from.cost());
  }
  if (from.task_queue_name().size() > 0) {

    task_queue_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_queue_name_);
  }
  if (from.task_name().size() > 0) {

    task_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_name_);
  }
  if (from.was_loading_request() != 0) {
    set_was_loading_request(from.was_loading_request());
  }
  if (from.has_pending_time()) {
    mutable_pending_time()->::google::protobuf::Duration::MergeFrom(from.pending_time());
  }
  if (from.instance_index() != 0) {
    set_instance_index(from.instance_index());
  }
  if (from.finished() != 0) {
    set_finished(from.finished());
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.app_engine_release().size() > 0) {

    app_engine_release_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_engine_release_);
  }
  if (from.trace_id().size() > 0) {

    trace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trace_id_);
  }
}

void RequestLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.logging.v1.RequestLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestLog::CopyFrom(const RequestLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.logging.v1.RequestLog)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RequestLog::IsInitialized() const {

  return true;
}

void RequestLog::Swap(RequestLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestLog::InternalSwap(RequestLog* other) {
  app_id_.Swap(&other->app_id_);
  module_id_.Swap(&other->module_id_);
  version_id_.Swap(&other->version_id_);
  request_id_.Swap(&other->request_id_);
  ip_.Swap(&other->ip_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(latency_, other->latency_);
  std::swap(mega_cycles_, other->mega_cycles_);
  method_.Swap(&other->method_);
  resource_.Swap(&other->resource_);
  http_version_.Swap(&other->http_version_);
  std::swap(status_, other->status_);
  std::swap(response_size_, other->response_size_);
  referrer_.Swap(&other->referrer_);
  user_agent_.Swap(&other->user_agent_);
  nickname_.Swap(&other->nickname_);
  url_map_entry_.Swap(&other->url_map_entry_);
  host_.Swap(&other->host_);
  std::swap(cost_, other->cost_);
  task_queue_name_.Swap(&other->task_queue_name_);
  task_name_.Swap(&other->task_name_);
  std::swap(was_loading_request_, other->was_loading_request_);
  std::swap(pending_time_, other->pending_time_);
  std::swap(instance_index_, other->instance_index_);
  std::swap(finished_, other->finished_);
  std::swap(first_, other->first_);
  instance_id_.Swap(&other->instance_id_);
  line_.UnsafeArenaSwap(&other->line_);
  app_engine_release_.Swap(&other->app_engine_release_);
  trace_id_.Swap(&other->trace_id_);
  source_reference_.UnsafeArenaSwap(&other->source_reference_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestLog_descriptor_;
  metadata.reflection = RequestLog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestLog

// optional string app_id = 1;
void RequestLog::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::app_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.app_id)
}
void RequestLog::set_app_id(const char* value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.app_id)
}
void RequestLog::set_app_id(const char* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.app_id)
}
::std::string* RequestLog::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_app_id() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.app_id)
}

// optional string module_id = 37;
void RequestLog::clear_module_id() {
  module_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::module_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.module_id)
  return module_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_module_id(const ::std::string& value) {
  
  module_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.module_id)
}
void RequestLog::set_module_id(const char* value) {
  
  module_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.module_id)
}
void RequestLog::set_module_id(const char* value, size_t size) {
  
  module_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.module_id)
}
::std::string* RequestLog::mutable_module_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.module_id)
  return module_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_module_id() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.module_id)
  
  return module_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_module_id(::std::string* module_id) {
  if (module_id != NULL) {
    
  } else {
    
  }
  module_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.module_id)
}

// optional string version_id = 2;
void RequestLog::clear_version_id() {
  version_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::version_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.version_id)
  return version_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_version_id(const ::std::string& value) {
  
  version_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.version_id)
}
void RequestLog::set_version_id(const char* value) {
  
  version_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.version_id)
}
void RequestLog::set_version_id(const char* value, size_t size) {
  
  version_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.version_id)
}
::std::string* RequestLog::mutable_version_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.version_id)
  return version_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_version_id() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.version_id)
  
  return version_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_version_id(::std::string* version_id) {
  if (version_id != NULL) {
    
  } else {
    
  }
  version_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.version_id)
}

// optional string request_id = 3;
void RequestLog::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::request_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.request_id)
}
void RequestLog::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.request_id)
}
void RequestLog::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.request_id)
}
::std::string* RequestLog::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_request_id() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.request_id)
}

// optional string ip = 4;
void RequestLog::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::ip() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.ip)
}
void RequestLog::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.ip)
}
void RequestLog::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.ip)
}
::std::string* RequestLog::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_ip() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.ip)
}

// optional .google.protobuf.Timestamp start_time = 6;
bool RequestLog::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void RequestLog::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& RequestLog::start_time() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* RequestLog::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* RequestLog::release_start_time() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void RequestLog::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.start_time)
}

// optional .google.protobuf.Timestamp end_time = 7;
bool RequestLog::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void RequestLog::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& RequestLog::end_time() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* RequestLog::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* RequestLog::release_end_time() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void RequestLog::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.end_time)
}

// optional .google.protobuf.Duration latency = 8;
bool RequestLog::has_latency() const {
  return this != internal_default_instance() && latency_ != NULL;
}
void RequestLog::clear_latency() {
  if (GetArenaNoVirtual() == NULL && latency_ != NULL) delete latency_;
  latency_ = NULL;
}
const ::google::protobuf::Duration& RequestLog::latency() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.latency)
  return latency_ != NULL ? *latency_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* RequestLog::mutable_latency() {
  
  if (latency_ == NULL) {
    latency_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.latency)
  return latency_;
}
::google::protobuf::Duration* RequestLog::release_latency() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.latency)
  
  ::google::protobuf::Duration* temp = latency_;
  latency_ = NULL;
  return temp;
}
void RequestLog::set_allocated_latency(::google::protobuf::Duration* latency) {
  delete latency_;
  if (latency != NULL && latency->GetArena() != NULL) {
    ::google::protobuf::Duration* new_latency = new ::google::protobuf::Duration;
    new_latency->CopyFrom(*latency);
    latency = new_latency;
  }
  latency_ = latency;
  if (latency) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.latency)
}

// optional int64 mega_cycles = 9;
void RequestLog::clear_mega_cycles() {
  mega_cycles_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RequestLog::mega_cycles() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.mega_cycles)
  return mega_cycles_;
}
void RequestLog::set_mega_cycles(::google::protobuf::int64 value) {
  
  mega_cycles_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.mega_cycles)
}

// optional string method = 10;
void RequestLog::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::method() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.method)
}
void RequestLog::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.method)
}
void RequestLog::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.method)
}
::std::string* RequestLog::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_method() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.method)
}

// optional string resource = 11;
void RequestLog::clear_resource() {
  resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::resource() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.resource)
  return resource_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_resource(const ::std::string& value) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.resource)
}
void RequestLog::set_resource(const char* value) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.resource)
}
void RequestLog::set_resource(const char* value, size_t size) {
  
  resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.resource)
}
::std::string* RequestLog::mutable_resource() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.resource)
  return resource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_resource() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.resource)
  
  return resource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_resource(::std::string* resource) {
  if (resource != NULL) {
    
  } else {
    
  }
  resource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.resource)
}

// optional string http_version = 12;
void RequestLog::clear_http_version() {
  http_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::http_version() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.http_version)
  return http_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_http_version(const ::std::string& value) {
  
  http_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.http_version)
}
void RequestLog::set_http_version(const char* value) {
  
  http_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.http_version)
}
void RequestLog::set_http_version(const char* value, size_t size) {
  
  http_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.http_version)
}
::std::string* RequestLog::mutable_http_version() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.http_version)
  return http_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_http_version() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.http_version)
  
  return http_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_http_version(::std::string* http_version) {
  if (http_version != NULL) {
    
  } else {
    
  }
  http_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), http_version);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.http_version)
}

// optional int32 status = 13;
void RequestLog::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 RequestLog::status() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.status)
  return status_;
}
void RequestLog::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.status)
}

// optional int64 response_size = 14;
void RequestLog::clear_response_size() {
  response_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RequestLog::response_size() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.response_size)
  return response_size_;
}
void RequestLog::set_response_size(::google::protobuf::int64 value) {
  
  response_size_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.response_size)
}

// optional string referrer = 15;
void RequestLog::clear_referrer() {
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::referrer() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.referrer)
  return referrer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_referrer(const ::std::string& value) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.referrer)
}
void RequestLog::set_referrer(const char* value) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.referrer)
}
void RequestLog::set_referrer(const char* value, size_t size) {
  
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.referrer)
}
::std::string* RequestLog::mutable_referrer() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.referrer)
  return referrer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_referrer() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.referrer)
  
  return referrer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_referrer(::std::string* referrer) {
  if (referrer != NULL) {
    
  } else {
    
  }
  referrer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.referrer)
}

// optional string user_agent = 16;
void RequestLog::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::user_agent() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.user_agent)
  return user_agent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_user_agent(const ::std::string& value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.user_agent)
}
void RequestLog::set_user_agent(const char* value) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.user_agent)
}
void RequestLog::set_user_agent(const char* value, size_t size) {
  
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.user_agent)
}
::std::string* RequestLog::mutable_user_agent() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_user_agent() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.user_agent)
  
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    
  } else {
    
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.user_agent)
}

// optional string nickname = 40;
void RequestLog::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::nickname() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.nickname)
}
void RequestLog::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.nickname)
}
void RequestLog::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.nickname)
}
::std::string* RequestLog::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_nickname() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.nickname)
}

// optional string url_map_entry = 17;
void RequestLog::clear_url_map_entry() {
  url_map_entry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::url_map_entry() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.url_map_entry)
  return url_map_entry_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_url_map_entry(const ::std::string& value) {
  
  url_map_entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.url_map_entry)
}
void RequestLog::set_url_map_entry(const char* value) {
  
  url_map_entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.url_map_entry)
}
void RequestLog::set_url_map_entry(const char* value, size_t size) {
  
  url_map_entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.url_map_entry)
}
::std::string* RequestLog::mutable_url_map_entry() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.url_map_entry)
  return url_map_entry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_url_map_entry() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.url_map_entry)
  
  return url_map_entry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_url_map_entry(::std::string* url_map_entry) {
  if (url_map_entry != NULL) {
    
  } else {
    
  }
  url_map_entry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_map_entry);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.url_map_entry)
}

// optional string host = 20;
void RequestLog::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::host() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.host)
}
void RequestLog::set_host(const char* value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.host)
}
void RequestLog::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.host)
}
::std::string* RequestLog::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_host() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.host)
}

// optional double cost = 21;
void RequestLog::clear_cost() {
  cost_ = 0;
}
double RequestLog::cost() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.cost)
  return cost_;
}
void RequestLog::set_cost(double value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.cost)
}

// optional string task_queue_name = 22;
void RequestLog::clear_task_queue_name() {
  task_queue_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::task_queue_name() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.task_queue_name)
  return task_queue_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_task_queue_name(const ::std::string& value) {
  
  task_queue_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.task_queue_name)
}
void RequestLog::set_task_queue_name(const char* value) {
  
  task_queue_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.task_queue_name)
}
void RequestLog::set_task_queue_name(const char* value, size_t size) {
  
  task_queue_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.task_queue_name)
}
::std::string* RequestLog::mutable_task_queue_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.task_queue_name)
  return task_queue_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_task_queue_name() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.task_queue_name)
  
  return task_queue_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_task_queue_name(::std::string* task_queue_name) {
  if (task_queue_name != NULL) {
    
  } else {
    
  }
  task_queue_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_queue_name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.task_queue_name)
}

// optional string task_name = 23;
void RequestLog::clear_task_name() {
  task_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::task_name() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.task_name)
  return task_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_task_name(const ::std::string& value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.task_name)
}
void RequestLog::set_task_name(const char* value) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.task_name)
}
void RequestLog::set_task_name(const char* value, size_t size) {
  
  task_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.task_name)
}
::std::string* RequestLog::mutable_task_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.task_name)
  return task_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_task_name() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.task_name)
  
  return task_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_task_name(::std::string* task_name) {
  if (task_name != NULL) {
    
  } else {
    
  }
  task_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.task_name)
}

// optional bool was_loading_request = 24;
void RequestLog::clear_was_loading_request() {
  was_loading_request_ = false;
}
bool RequestLog::was_loading_request() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.was_loading_request)
  return was_loading_request_;
}
void RequestLog::set_was_loading_request(bool value) {
  
  was_loading_request_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.was_loading_request)
}

// optional .google.protobuf.Duration pending_time = 25;
bool RequestLog::has_pending_time() const {
  return this != internal_default_instance() && pending_time_ != NULL;
}
void RequestLog::clear_pending_time() {
  if (GetArenaNoVirtual() == NULL && pending_time_ != NULL) delete pending_time_;
  pending_time_ = NULL;
}
const ::google::protobuf::Duration& RequestLog::pending_time() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.pending_time)
  return pending_time_ != NULL ? *pending_time_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* RequestLog::mutable_pending_time() {
  
  if (pending_time_ == NULL) {
    pending_time_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.pending_time)
  return pending_time_;
}
::google::protobuf::Duration* RequestLog::release_pending_time() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.pending_time)
  
  ::google::protobuf::Duration* temp = pending_time_;
  pending_time_ = NULL;
  return temp;
}
void RequestLog::set_allocated_pending_time(::google::protobuf::Duration* pending_time) {
  delete pending_time_;
  if (pending_time != NULL && pending_time->GetArena() != NULL) {
    ::google::protobuf::Duration* new_pending_time = new ::google::protobuf::Duration;
    new_pending_time->CopyFrom(*pending_time);
    pending_time = new_pending_time;
  }
  pending_time_ = pending_time;
  if (pending_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.pending_time)
}

// optional int32 instance_index = 26;
void RequestLog::clear_instance_index() {
  instance_index_ = 0;
}
::google::protobuf::int32 RequestLog::instance_index() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.instance_index)
  return instance_index_;
}
void RequestLog::set_instance_index(::google::protobuf::int32 value) {
  
  instance_index_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.instance_index)
}

// optional bool finished = 27;
void RequestLog::clear_finished() {
  finished_ = false;
}
bool RequestLog::finished() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.finished)
  return finished_;
}
void RequestLog::set_finished(bool value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.finished)
}

// optional bool first = 42;
void RequestLog::clear_first() {
  first_ = false;
}
bool RequestLog::first() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.first)
  return first_;
}
void RequestLog::set_first(bool value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.first)
}

// optional string instance_id = 28;
void RequestLog::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::instance_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.instance_id)
  return instance_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.instance_id)
}
void RequestLog::set_instance_id(const char* value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.instance_id)
}
void RequestLog::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.instance_id)
}
::std::string* RequestLog::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_instance_id() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.instance_id)
}

// repeated .google.appengine.logging.v1.LogLine line = 29;
int RequestLog::line_size() const {
  return line_.size();
}
void RequestLog::clear_line() {
  line_.Clear();
}
const ::google::appengine::logging::v1::LogLine& RequestLog::line(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.line)
  return line_.Get(index);
}
::google::appengine::logging::v1::LogLine* RequestLog::mutable_line(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.line)
  return line_.Mutable(index);
}
::google::appengine::logging::v1::LogLine* RequestLog::add_line() {
  // @@protoc_insertion_point(field_add:google.appengine.logging.v1.RequestLog.line)
  return line_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::appengine::logging::v1::LogLine >*
RequestLog::mutable_line() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.logging.v1.RequestLog.line)
  return &line_;
}
const ::google::protobuf::RepeatedPtrField< ::google::appengine::logging::v1::LogLine >&
RequestLog::line() const {
  // @@protoc_insertion_point(field_list:google.appengine.logging.v1.RequestLog.line)
  return line_;
}

// optional string app_engine_release = 38;
void RequestLog::clear_app_engine_release() {
  app_engine_release_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::app_engine_release() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.app_engine_release)
  return app_engine_release_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_app_engine_release(const ::std::string& value) {
  
  app_engine_release_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.app_engine_release)
}
void RequestLog::set_app_engine_release(const char* value) {
  
  app_engine_release_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.app_engine_release)
}
void RequestLog::set_app_engine_release(const char* value, size_t size) {
  
  app_engine_release_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.app_engine_release)
}
::std::string* RequestLog::mutable_app_engine_release() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.app_engine_release)
  return app_engine_release_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_app_engine_release() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.app_engine_release)
  
  return app_engine_release_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_app_engine_release(::std::string* app_engine_release) {
  if (app_engine_release != NULL) {
    
  } else {
    
  }
  app_engine_release_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_engine_release);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.app_engine_release)
}

// optional string trace_id = 39;
void RequestLog::clear_trace_id() {
  trace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestLog::trace_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.trace_id)
  return trace_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_trace_id(const ::std::string& value) {
  
  trace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.logging.v1.RequestLog.trace_id)
}
void RequestLog::set_trace_id(const char* value) {
  
  trace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.logging.v1.RequestLog.trace_id)
}
void RequestLog::set_trace_id(const char* value, size_t size) {
  
  trace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.logging.v1.RequestLog.trace_id)
}
::std::string* RequestLog::mutable_trace_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.trace_id)
  return trace_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestLog::release_trace_id() {
  // @@protoc_insertion_point(field_release:google.appengine.logging.v1.RequestLog.trace_id)
  
  return trace_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestLog::set_allocated_trace_id(::std::string* trace_id) {
  if (trace_id != NULL) {
    
  } else {
    
  }
  trace_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trace_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.logging.v1.RequestLog.trace_id)
}

// repeated .google.appengine.logging.v1.SourceReference source_reference = 41;
int RequestLog::source_reference_size() const {
  return source_reference_.size();
}
void RequestLog::clear_source_reference() {
  source_reference_.Clear();
}
const ::google::appengine::logging::v1::SourceReference& RequestLog::source_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.appengine.logging.v1.RequestLog.source_reference)
  return source_reference_.Get(index);
}
::google::appengine::logging::v1::SourceReference* RequestLog::mutable_source_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.appengine.logging.v1.RequestLog.source_reference)
  return source_reference_.Mutable(index);
}
::google::appengine::logging::v1::SourceReference* RequestLog::add_source_reference() {
  // @@protoc_insertion_point(field_add:google.appengine.logging.v1.RequestLog.source_reference)
  return source_reference_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::appengine::logging::v1::SourceReference >*
RequestLog::mutable_source_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.appengine.logging.v1.RequestLog.source_reference)
  return &source_reference_;
}
const ::google::protobuf::RepeatedPtrField< ::google::appengine::logging::v1::SourceReference >&
RequestLog::source_reference() const {
  // @@protoc_insertion_point(field_list:google.appengine.logging.v1.RequestLog.source_reference)
  return source_reference_;
}

inline const RequestLog* RequestLog::internal_default_instance() {
  return &RequestLog_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace logging
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
