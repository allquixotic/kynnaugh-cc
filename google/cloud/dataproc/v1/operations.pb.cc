// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1/operations.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/cloud/dataproc/v1/operations.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace dataproc {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ClusterOperationStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClusterOperationStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ClusterOperationStatus_State_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ClusterOperationMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClusterOperationMetadata_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto() {
  protobuf_AddDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/cloud/dataproc/v1/operations.proto");
  GOOGLE_CHECK(file != NULL);
  ClusterOperationStatus_descriptor_ = file->message_type(0);
  static const int ClusterOperationStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationStatus, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationStatus, inner_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationStatus, details_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationStatus, state_start_time_),
  };
  ClusterOperationStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClusterOperationStatus_descriptor_,
      ClusterOperationStatus::internal_default_instance(),
      ClusterOperationStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClusterOperationStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationStatus, _internal_metadata_));
  ClusterOperationStatus_State_descriptor_ = ClusterOperationStatus_descriptor_->enum_type(0);
  ClusterOperationMetadata_descriptor_ = file->message_type(1);
  static const int ClusterOperationMetadata_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationMetadata, cluster_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationMetadata, cluster_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationMetadata, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationMetadata, status_history_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationMetadata, operation_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationMetadata, description_),
  };
  ClusterOperationMetadata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClusterOperationMetadata_descriptor_,
      ClusterOperationMetadata::internal_default_instance(),
      ClusterOperationMetadata_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClusterOperationMetadata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterOperationMetadata, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClusterOperationStatus_descriptor_, ClusterOperationStatus::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClusterOperationMetadata_descriptor_, ClusterOperationMetadata::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto() {
  ClusterOperationStatus_default_instance_.Shutdown();
  delete ClusterOperationStatus_reflection_;
  ClusterOperationMetadata_default_instance_.Shutdown();
  delete ClusterOperationMetadata_reflection_;
}

void protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::longrunning::protobuf_InitDefaults_google_2flongrunning_2foperations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ClusterOperationStatus_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClusterOperationMetadata_default_instance_.DefaultConstruct();
  ClusterOperationStatus_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClusterOperationMetadata_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_once_);
void protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_once_,
                 &protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_impl);
}
void protobuf_AddDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)google/cloud/dataproc/v1/operations.pr"
    "oto\022\030google.cloud.dataproc.v1\032\034google/ap"
    "i/annotations.proto\032#google/longrunning/"
    "operations.proto\032\033google/protobuf/empty."
    "proto\032\037google/protobuf/timestamp.proto\"\365"
    "\001\n\026ClusterOperationStatus\022E\n\005state\030\001 \001(\016"
    "26.google.cloud.dataproc.v1.ClusterOpera"
    "tionStatus.State\022\023\n\013inner_state\030\002 \001(\t\022\017\n"
    "\007details\030\003 \001(\t\0224\n\020state_start_time\030\004 \001(\013"
    "2\032.google.protobuf.Timestamp\"8\n\005State\022\013\n"
    "\007UNKNOWN\020\000\022\013\n\007PENDING\020\001\022\013\n\007RUNNING\020\002\022\010\n\004"
    "DONE\020\003\"\377\001\n\030ClusterOperationMetadata\022\024\n\014c"
    "luster_name\030\007 \001(\t\022\024\n\014cluster_uuid\030\010 \001(\t\022"
    "@\n\006status\030\t \001(\01320.google.cloud.dataproc."
    "v1.ClusterOperationStatus\022H\n\016status_hist"
    "ory\030\n \003(\01320.google.cloud.dataproc.v1.Clu"
    "sterOperationStatus\022\026\n\016operation_type\030\013 "
    "\001(\t\022\023\n\013description\030\014 \001(\tBs\n\034com.google.c"
    "loud.dataproc.v1B\017OperationsProtoP\001Z@goo"
    "gle.golang.org/genproto/googleapis/cloud"
    "/dataproc/v1;dataprocb\006proto3", 829);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dataproc/v1/operations.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::longrunning::protobuf_AddDesc_google_2flongrunning_2foperations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_once_);
void protobuf_AddDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_once_,
                 &protobuf_AddDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto {
  StaticDescriptorInitializer_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto() {
    protobuf_AddDesc_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto();
  }
} static_descriptor_initializer_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* ClusterOperationStatus_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterOperationStatus_State_descriptor_;
}
bool ClusterOperationStatus_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClusterOperationStatus_State ClusterOperationStatus::UNKNOWN;
const ClusterOperationStatus_State ClusterOperationStatus::PENDING;
const ClusterOperationStatus_State ClusterOperationStatus::RUNNING;
const ClusterOperationStatus_State ClusterOperationStatus::DONE;
const ClusterOperationStatus_State ClusterOperationStatus::State_MIN;
const ClusterOperationStatus_State ClusterOperationStatus::State_MAX;
const int ClusterOperationStatus::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterOperationStatus::kStateFieldNumber;
const int ClusterOperationStatus::kInnerStateFieldNumber;
const int ClusterOperationStatus::kDetailsFieldNumber;
const int ClusterOperationStatus::kStateStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterOperationStatus::ClusterOperationStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.ClusterOperationStatus)
}

void ClusterOperationStatus::InitAsDefaultInstance() {
  state_start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

ClusterOperationStatus::ClusterOperationStatus(const ClusterOperationStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.ClusterOperationStatus)
}

void ClusterOperationStatus::SharedCtor() {
  inner_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_start_time_ = NULL;
  state_ = 0;
  _cached_size_ = 0;
}

ClusterOperationStatus::~ClusterOperationStatus() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.ClusterOperationStatus)
  SharedDtor();
}

void ClusterOperationStatus::SharedDtor() {
  inner_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ClusterOperationStatus_default_instance_.get()) {
    delete state_start_time_;
  }
}

void ClusterOperationStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterOperationStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterOperationStatus_descriptor_;
}

const ClusterOperationStatus& ClusterOperationStatus::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClusterOperationStatus> ClusterOperationStatus_default_instance_;

ClusterOperationStatus* ClusterOperationStatus::New(::google::protobuf::Arena* arena) const {
  ClusterOperationStatus* n = new ClusterOperationStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterOperationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  state_ = 0;
  inner_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) delete state_start_time_;
  state_start_time_ = NULL;
}

bool ClusterOperationStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::dataproc::v1::ClusterOperationStatus_State >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_inner_state;
        break;
      }

      // optional string inner_state = 2;
      case 2: {
        if (tag == 18) {
         parse_inner_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inner_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inner_state().data(), this->inner_state().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationStatus.inner_state"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_details;
        break;
      }

      // optional string details = 3;
      case 3: {
        if (tag == 26) {
         parse_details:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->details().data(), this->details().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationStatus.details"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_state_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp state_start_time = 4;
      case 4: {
        if (tag == 34) {
         parse_state_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.ClusterOperationStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.ClusterOperationStatus)
  return false;
#undef DO_
}

void ClusterOperationStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  // optional .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // optional string inner_state = 2;
  if (this->inner_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inner_state().data(), this->inner_state().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.inner_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->inner_state(), output);
  }

  // optional string details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), this->details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->details(), output);
  }

  // optional .google.protobuf.Timestamp state_start_time = 4;
  if (this->has_state_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->state_start_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.ClusterOperationStatus)
}

::google::protobuf::uint8* ClusterOperationStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  // optional .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // optional string inner_state = 2;
  if (this->inner_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inner_state().data(), this->inner_state().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.inner_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->inner_state(), target);
  }

  // optional string details = 3;
  if (this->details().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->details().data(), this->details().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationStatus.details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->details(), target);
  }

  // optional .google.protobuf.Timestamp state_start_time = 4;
  if (this->has_state_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->state_start_time_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.ClusterOperationStatus)
  return target;
}

size_t ClusterOperationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  size_t total_size = 0;

  // optional .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional string inner_state = 2;
  if (this->inner_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inner_state());
  }

  // optional string details = 3;
  if (this->details().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->details());
  }

  // optional .google.protobuf.Timestamp state_start_time = 4;
  if (this->has_state_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->state_start_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterOperationStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClusterOperationStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterOperationStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.ClusterOperationStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.ClusterOperationStatus)
    UnsafeMergeFrom(*source);
  }
}

void ClusterOperationStatus::MergeFrom(const ClusterOperationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClusterOperationStatus::UnsafeMergeFrom(const ClusterOperationStatus& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.inner_state().size() > 0) {

    inner_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inner_state_);
  }
  if (from.details().size() > 0) {

    details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_);
  }
  if (from.has_state_start_time()) {
    mutable_state_start_time()->::google::protobuf::Timestamp::MergeFrom(from.state_start_time());
  }
}

void ClusterOperationStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterOperationStatus::CopyFrom(const ClusterOperationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.ClusterOperationStatus)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClusterOperationStatus::IsInitialized() const {

  return true;
}

void ClusterOperationStatus::Swap(ClusterOperationStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterOperationStatus::InternalSwap(ClusterOperationStatus* other) {
  std::swap(state_, other->state_);
  inner_state_.Swap(&other->inner_state_);
  details_.Swap(&other->details_);
  std::swap(state_start_time_, other->state_start_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterOperationStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClusterOperationStatus_descriptor_;
  metadata.reflection = ClusterOperationStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterOperationStatus

// optional .google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
void ClusterOperationStatus::clear_state() {
  state_ = 0;
}
::google::cloud::dataproc::v1::ClusterOperationStatus_State ClusterOperationStatus::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.state)
  return static_cast< ::google::cloud::dataproc::v1::ClusterOperationStatus_State >(state_);
}
void ClusterOperationStatus::set_state(::google::cloud::dataproc::v1::ClusterOperationStatus_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationStatus.state)
}

// optional string inner_state = 2;
void ClusterOperationStatus::clear_inner_state() {
  inner_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterOperationStatus::inner_state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
  return inner_state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationStatus::set_inner_state(const ::std::string& value) {
  
  inner_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}
void ClusterOperationStatus::set_inner_state(const char* value) {
  
  inner_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}
void ClusterOperationStatus::set_inner_state(const char* value, size_t size) {
  
  inner_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}
::std::string* ClusterOperationStatus::mutable_inner_state() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
  return inner_state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterOperationStatus::release_inner_state() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
  
  return inner_state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationStatus::set_allocated_inner_state(::std::string* inner_state) {
  if (inner_state != NULL) {
    
  } else {
    
  }
  inner_state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inner_state);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationStatus.inner_state)
}

// optional string details = 3;
void ClusterOperationStatus::clear_details() {
  details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterOperationStatus::details() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.details)
  return details_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationStatus::set_details(const ::std::string& value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}
void ClusterOperationStatus::set_details(const char* value) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}
void ClusterOperationStatus::set_details(const char* value, size_t size) {
  
  details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}
::std::string* ClusterOperationStatus::mutable_details() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationStatus.details)
  return details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterOperationStatus::release_details() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationStatus.details)
  
  return details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationStatus::set_allocated_details(::std::string* details) {
  if (details != NULL) {
    
  } else {
    
  }
  details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), details);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationStatus.details)
}

// optional .google.protobuf.Timestamp state_start_time = 4;
bool ClusterOperationStatus::has_state_start_time() const {
  return this != internal_default_instance() && state_start_time_ != NULL;
}
void ClusterOperationStatus::clear_state_start_time() {
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) delete state_start_time_;
  state_start_time_ = NULL;
}
const ::google::protobuf::Timestamp& ClusterOperationStatus::state_start_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
  return state_start_time_ != NULL ? *state_start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ClusterOperationStatus::mutable_state_start_time() {
  
  if (state_start_time_ == NULL) {
    state_start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
  return state_start_time_;
}
::google::protobuf::Timestamp* ClusterOperationStatus::release_state_start_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
  
  ::google::protobuf::Timestamp* temp = state_start_time_;
  state_start_time_ = NULL;
  return temp;
}
void ClusterOperationStatus::set_allocated_state_start_time(::google::protobuf::Timestamp* state_start_time) {
  delete state_start_time_;
  if (state_start_time != NULL && state_start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_state_start_time = new ::google::protobuf::Timestamp;
    new_state_start_time->CopyFrom(*state_start_time);
    state_start_time = new_state_start_time;
  }
  state_start_time_ = state_start_time;
  if (state_start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationStatus.state_start_time)
}

inline const ClusterOperationStatus* ClusterOperationStatus::internal_default_instance() {
  return &ClusterOperationStatus_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterOperationMetadata::kClusterNameFieldNumber;
const int ClusterOperationMetadata::kClusterUuidFieldNumber;
const int ClusterOperationMetadata::kStatusFieldNumber;
const int ClusterOperationMetadata::kStatusHistoryFieldNumber;
const int ClusterOperationMetadata::kOperationTypeFieldNumber;
const int ClusterOperationMetadata::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterOperationMetadata::ClusterOperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1.ClusterOperationMetadata)
}

void ClusterOperationMetadata::InitAsDefaultInstance() {
  status_ = const_cast< ::google::cloud::dataproc::v1::ClusterOperationStatus*>(
      ::google::cloud::dataproc::v1::ClusterOperationStatus::internal_default_instance());
}

ClusterOperationMetadata::ClusterOperationMetadata(const ClusterOperationMetadata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1.ClusterOperationMetadata)
}

void ClusterOperationMetadata::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
  _cached_size_ = 0;
}

ClusterOperationMetadata::~ClusterOperationMetadata() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1.ClusterOperationMetadata)
  SharedDtor();
}

void ClusterOperationMetadata::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ClusterOperationMetadata_default_instance_.get()) {
    delete status_;
  }
}

void ClusterOperationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterOperationMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterOperationMetadata_descriptor_;
}

const ClusterOperationMetadata& ClusterOperationMetadata::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fdataproc_2fv1_2foperations_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClusterOperationMetadata> ClusterOperationMetadata_default_instance_;

ClusterOperationMetadata* ClusterOperationMetadata::New(::google::protobuf::Arena* arena) const {
  ClusterOperationMetadata* n = new ClusterOperationMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterOperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  operation_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_history_.Clear();
}

bool ClusterOperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string cluster_name = 7;
      case 7: {
        if (tag == 58) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), this->cluster_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_cluster_uuid;
        break;
      }

      // optional string cluster_uuid = 8;
      case 8: {
        if (tag == 66) {
         parse_cluster_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_uuid().data(), this->cluster_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_status;
        break;
      }

      // optional .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
      case 9: {
        if (tag == 74) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_status_history;
        break;
      }

      // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
      case 10: {
        if (tag == 82) {
         parse_status_history:
          DO_(input->IncrementRecursionDepth());
         parse_loop_status_history:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_status_history()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_status_history;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(90)) goto parse_operation_type;
        break;
      }

      // optional string operation_type = 11;
      case 11: {
        if (tag == 90) {
         parse_operation_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_type().data(), this->operation_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_description;
        break;
      }

      // optional string description = 12;
      case 12: {
        if (tag == 98) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1.ClusterOperationMetadata.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1.ClusterOperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1.ClusterOperationMetadata)
  return false;
#undef DO_
}

void ClusterOperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  // optional string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), this->cluster_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cluster_name(), output);
  }

  // optional string cluster_uuid = 8;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), this->cluster_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->cluster_uuid(), output);
  }

  // optional .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->status_, output);
  }

  // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
  for (unsigned int i = 0, n = this->status_history_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->status_history(i), output);
  }

  // optional string operation_type = 11;
  if (this->operation_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_type().data(), this->operation_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->operation_type(), output);
  }

  // optional string description = 12;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1.ClusterOperationMetadata)
}

::google::protobuf::uint8* ClusterOperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  // optional string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), this->cluster_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cluster_name(), target);
  }

  // optional string cluster_uuid = 8;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), this->cluster_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->cluster_uuid(), target);
  }

  // optional .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->status_, false, target);
  }

  // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
  for (unsigned int i = 0, n = this->status_history_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->status_history(i), false, target);
  }

  // optional string operation_type = 11;
  if (this->operation_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_type().data(), this->operation_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->operation_type(), target);
  }

  // optional string description = 12;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1.ClusterOperationMetadata.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1.ClusterOperationMetadata)
  return target;
}

size_t ClusterOperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  size_t total_size = 0;

  // optional string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // optional string cluster_uuid = 8;
  if (this->cluster_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_uuid());
  }

  // optional .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // optional string operation_type = 11;
  if (this->operation_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_type());
  }

  // optional string description = 12;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
  {
    unsigned int count = this->status_history_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status_history(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterOperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClusterOperationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterOperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1.ClusterOperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1.ClusterOperationMetadata)
    UnsafeMergeFrom(*source);
  }
}

void ClusterOperationMetadata::MergeFrom(const ClusterOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClusterOperationMetadata::UnsafeMergeFrom(const ClusterOperationMetadata& from) {
  GOOGLE_DCHECK(&from != this);
  status_history_.MergeFrom(from.status_history_);
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.cluster_uuid().size() > 0) {

    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  if (from.has_status()) {
    mutable_status()->::google::cloud::dataproc::v1::ClusterOperationStatus::MergeFrom(from.status());
  }
  if (from.operation_type().size() > 0) {

    operation_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_type_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void ClusterOperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterOperationMetadata::CopyFrom(const ClusterOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1.ClusterOperationMetadata)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClusterOperationMetadata::IsInitialized() const {

  return true;
}

void ClusterOperationMetadata::Swap(ClusterOperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterOperationMetadata::InternalSwap(ClusterOperationMetadata* other) {
  cluster_name_.Swap(&other->cluster_name_);
  cluster_uuid_.Swap(&other->cluster_uuid_);
  std::swap(status_, other->status_);
  status_history_.UnsafeArenaSwap(&other->status_history_);
  operation_type_.Swap(&other->operation_type_);
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterOperationMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClusterOperationMetadata_descriptor_;
  metadata.reflection = ClusterOperationMetadata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterOperationMetadata

// optional string cluster_name = 7;
void ClusterOperationMetadata::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterOperationMetadata::cluster_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
  return cluster_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}
void ClusterOperationMetadata::set_cluster_name(const char* value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}
void ClusterOperationMetadata::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}
::std::string* ClusterOperationMetadata::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterOperationMetadata::release_cluster_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_name)
}

// optional string cluster_uuid = 8;
void ClusterOperationMetadata::clear_cluster_uuid() {
  cluster_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterOperationMetadata::cluster_uuid() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
  return cluster_uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_cluster_uuid(const ::std::string& value) {
  
  cluster_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}
void ClusterOperationMetadata::set_cluster_uuid(const char* value) {
  
  cluster_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}
void ClusterOperationMetadata::set_cluster_uuid(const char* value, size_t size) {
  
  cluster_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}
::std::string* ClusterOperationMetadata::mutable_cluster_uuid() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
  return cluster_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterOperationMetadata::release_cluster_uuid() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
  
  return cluster_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_allocated_cluster_uuid(::std::string* cluster_uuid) {
  if (cluster_uuid != NULL) {
    
  } else {
    
  }
  cluster_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_uuid);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.cluster_uuid)
}

// optional .google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
bool ClusterOperationMetadata::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
void ClusterOperationMetadata::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::google::cloud::dataproc::v1::ClusterOperationStatus& ClusterOperationMetadata::status() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
  return status_ != NULL ? *status_
                         : *::google::cloud::dataproc::v1::ClusterOperationStatus::internal_default_instance();
}
::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::cloud::dataproc::v1::ClusterOperationStatus;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
  return status_;
}
::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::release_status() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
  
  ::google::cloud::dataproc::v1::ClusterOperationStatus* temp = status_;
  status_ = NULL;
  return temp;
}
void ClusterOperationMetadata::set_allocated_status(::google::cloud::dataproc::v1::ClusterOperationStatus* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.status)
}

// repeated .google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
int ClusterOperationMetadata::status_history_size() const {
  return status_history_.size();
}
void ClusterOperationMetadata::clear_status_history() {
  status_history_.Clear();
}
const ::google::cloud::dataproc::v1::ClusterOperationStatus& ClusterOperationMetadata::status_history(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_.Get(index);
}
::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::mutable_status_history(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_.Mutable(index);
}
::google::cloud::dataproc::v1::ClusterOperationStatus* ClusterOperationMetadata::add_status_history() {
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1::ClusterOperationStatus >*
ClusterOperationMetadata::mutable_status_history() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return &status_history_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1::ClusterOperationStatus >&
ClusterOperationMetadata::status_history() const {
  // @@protoc_insertion_point(field_list:google.cloud.dataproc.v1.ClusterOperationMetadata.status_history)
  return status_history_;
}

// optional string operation_type = 11;
void ClusterOperationMetadata::clear_operation_type() {
  operation_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterOperationMetadata::operation_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
  return operation_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_operation_type(const ::std::string& value) {
  
  operation_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}
void ClusterOperationMetadata::set_operation_type(const char* value) {
  
  operation_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}
void ClusterOperationMetadata::set_operation_type(const char* value, size_t size) {
  
  operation_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}
::std::string* ClusterOperationMetadata::mutable_operation_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
  return operation_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterOperationMetadata::release_operation_type() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
  
  return operation_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_allocated_operation_type(::std::string* operation_type) {
  if (operation_type != NULL) {
    
  } else {
    
  }
  operation_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.operation_type)
}

// optional string description = 12;
void ClusterOperationMetadata::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClusterOperationMetadata::description() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}
void ClusterOperationMetadata::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}
void ClusterOperationMetadata::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}
::std::string* ClusterOperationMetadata::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClusterOperationMetadata::release_description() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClusterOperationMetadata::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1.ClusterOperationMetadata.description)
}

inline const ClusterOperationMetadata* ClusterOperationMetadata::internal_default_instance() {
  return &ClusterOperationMetadata_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace dataproc
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
