// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_table_admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/bigtable/admin/v2/bigtable_table_admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

namespace {

const ::google::protobuf::Descriptor* CreateTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTableRequest_Split_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTableRequest_Split_reflection_ = NULL;
const ::google::protobuf::Descriptor* DropRowRangeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DropRowRangeRequest_reflection_ = NULL;
struct DropRowRangeRequestOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr row_key_prefix_;
  bool delete_all_data_from_table_;
}* DropRowRangeRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ListTablesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTablesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTablesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTablesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteTableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteTableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyColumnFamiliesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyColumnFamiliesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyColumnFamiliesRequest_Modification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyColumnFamiliesRequest_Modification_reflection_ = NULL;
struct ModifyColumnFamiliesRequest_ModificationOneofInstance {
  const ::google::bigtable::admin::v2::ColumnFamily* create_;
  const ::google::bigtable::admin::v2::ColumnFamily* update_;
  bool drop_;
}* ModifyColumnFamiliesRequest_Modification_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto() {
  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/bigtable/admin/v2/bigtable_table_admin.proto");
  GOOGLE_CHECK(file != NULL);
  CreateTableRequest_descriptor_ = file->message_type(0);
  static const int CreateTableRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, table_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, table_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, initial_splits_),
  };
  CreateTableRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateTableRequest_descriptor_,
      CreateTableRequest::internal_default_instance(),
      CreateTableRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateTableRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest, _internal_metadata_));
  CreateTableRequest_Split_descriptor_ = CreateTableRequest_descriptor_->nested_type(0);
  static const int CreateTableRequest_Split_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest_Split, key_),
  };
  CreateTableRequest_Split_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateTableRequest_Split_descriptor_,
      CreateTableRequest_Split::internal_default_instance(),
      CreateTableRequest_Split_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateTableRequest_Split),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTableRequest_Split, _internal_metadata_));
  DropRowRangeRequest_descriptor_ = file->message_type(1);
  static const int DropRowRangeRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropRowRangeRequest, name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(DropRowRangeRequest_default_oneof_instance_, row_key_prefix_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(DropRowRangeRequest_default_oneof_instance_, delete_all_data_from_table_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropRowRangeRequest, target_),
  };
  DropRowRangeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DropRowRangeRequest_descriptor_,
      DropRowRangeRequest::internal_default_instance(),
      DropRowRangeRequest_offsets_,
      -1,
      -1,
      -1,
      DropRowRangeRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropRowRangeRequest, _oneof_case_[0]),
      sizeof(DropRowRangeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropRowRangeRequest, _internal_metadata_));
  ListTablesRequest_descriptor_ = file->message_type(2);
  static const int ListTablesRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTablesRequest, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTablesRequest, view_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTablesRequest, page_token_),
  };
  ListTablesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTablesRequest_descriptor_,
      ListTablesRequest::internal_default_instance(),
      ListTablesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTablesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTablesRequest, _internal_metadata_));
  ListTablesResponse_descriptor_ = file->message_type(3);
  static const int ListTablesResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTablesResponse, tables_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTablesResponse, next_page_token_),
  };
  ListTablesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTablesResponse_descriptor_,
      ListTablesResponse::internal_default_instance(),
      ListTablesResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTablesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTablesResponse, _internal_metadata_));
  GetTableRequest_descriptor_ = file->message_type(4);
  static const int GetTableRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTableRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTableRequest, view_),
  };
  GetTableRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetTableRequest_descriptor_,
      GetTableRequest::internal_default_instance(),
      GetTableRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetTableRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTableRequest, _internal_metadata_));
  DeleteTableRequest_descriptor_ = file->message_type(5);
  static const int DeleteTableRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteTableRequest, name_),
  };
  DeleteTableRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteTableRequest_descriptor_,
      DeleteTableRequest::internal_default_instance(),
      DeleteTableRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteTableRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteTableRequest, _internal_metadata_));
  ModifyColumnFamiliesRequest_descriptor_ = file->message_type(6);
  static const int ModifyColumnFamiliesRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyColumnFamiliesRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyColumnFamiliesRequest, modifications_),
  };
  ModifyColumnFamiliesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModifyColumnFamiliesRequest_descriptor_,
      ModifyColumnFamiliesRequest::internal_default_instance(),
      ModifyColumnFamiliesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ModifyColumnFamiliesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyColumnFamiliesRequest, _internal_metadata_));
  ModifyColumnFamiliesRequest_Modification_descriptor_ = ModifyColumnFamiliesRequest_descriptor_->nested_type(0);
  static const int ModifyColumnFamiliesRequest_Modification_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyColumnFamiliesRequest_Modification, id_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ModifyColumnFamiliesRequest_Modification_default_oneof_instance_, create_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ModifyColumnFamiliesRequest_Modification_default_oneof_instance_, update_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ModifyColumnFamiliesRequest_Modification_default_oneof_instance_, drop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyColumnFamiliesRequest_Modification, mod_),
  };
  ModifyColumnFamiliesRequest_Modification_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModifyColumnFamiliesRequest_Modification_descriptor_,
      ModifyColumnFamiliesRequest_Modification::internal_default_instance(),
      ModifyColumnFamiliesRequest_Modification_offsets_,
      -1,
      -1,
      -1,
      ModifyColumnFamiliesRequest_Modification_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyColumnFamiliesRequest_Modification, _oneof_case_[0]),
      sizeof(ModifyColumnFamiliesRequest_Modification),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyColumnFamiliesRequest_Modification, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateTableRequest_descriptor_, CreateTableRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateTableRequest_Split_descriptor_, CreateTableRequest_Split::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DropRowRangeRequest_descriptor_, DropRowRangeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTablesRequest_descriptor_, ListTablesRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTablesResponse_descriptor_, ListTablesResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetTableRequest_descriptor_, GetTableRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteTableRequest_descriptor_, DeleteTableRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModifyColumnFamiliesRequest_descriptor_, ModifyColumnFamiliesRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModifyColumnFamiliesRequest_Modification_descriptor_, ModifyColumnFamiliesRequest_Modification::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto() {
  CreateTableRequest_default_instance_.Shutdown();
  delete CreateTableRequest_reflection_;
  CreateTableRequest_Split_default_instance_.Shutdown();
  delete CreateTableRequest_Split_reflection_;
  DropRowRangeRequest_default_instance_.Shutdown();
  delete DropRowRangeRequest_default_oneof_instance_;
  delete DropRowRangeRequest_reflection_;
  ListTablesRequest_default_instance_.Shutdown();
  delete ListTablesRequest_reflection_;
  ListTablesResponse_default_instance_.Shutdown();
  delete ListTablesResponse_reflection_;
  GetTableRequest_default_instance_.Shutdown();
  delete GetTableRequest_reflection_;
  DeleteTableRequest_default_instance_.Shutdown();
  delete DeleteTableRequest_reflection_;
  ModifyColumnFamiliesRequest_default_instance_.Shutdown();
  delete ModifyColumnFamiliesRequest_reflection_;
  ModifyColumnFamiliesRequest_Modification_default_instance_.Shutdown();
  delete ModifyColumnFamiliesRequest_Modification_default_oneof_instance_;
  delete ModifyColumnFamiliesRequest_Modification_reflection_;
}

void protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::bigtable::admin::v2::protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2ftable_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  CreateTableRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateTableRequest_Split_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DropRowRangeRequest_default_instance_.DefaultConstruct();
  DropRowRangeRequest_default_oneof_instance_ = new DropRowRangeRequestOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  ListTablesRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListTablesResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetTableRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeleteTableRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ModifyColumnFamiliesRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ModifyColumnFamiliesRequest_Modification_default_instance_.DefaultConstruct();
  ModifyColumnFamiliesRequest_Modification_default_oneof_instance_ = new ModifyColumnFamiliesRequest_ModificationOneofInstance();
  CreateTableRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateTableRequest_Split_default_instance_.get_mutable()->InitAsDefaultInstance();
  DropRowRangeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListTablesRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListTablesResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetTableRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteTableRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ModifyColumnFamiliesRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ModifyColumnFamiliesRequest_Modification_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_once_);
void protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_once_,
                 &protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl);
}
void protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n3google/bigtable/admin/v2/bigtable_tabl"
    "e_admin.proto\022\030google.bigtable.admin.v2\032"
    "\034google/api/annotations.proto\032$google/bi"
    "gtable/admin/v2/table.proto\032\033google/prot"
    "obuf/empty.proto\"\310\001\n\022CreateTableRequest\022"
    "\016\n\006parent\030\001 \001(\t\022\020\n\010table_id\030\002 \001(\t\022.\n\005tab"
    "le\030\003 \001(\0132\037.google.bigtable.admin.v2.Tabl"
    "e\022J\n\016initial_splits\030\004 \003(\01322.google.bigta"
    "ble.admin.v2.CreateTableRequest.Split\032\024\n"
    "\005Split\022\013\n\003key\030\001 \001(\014\"m\n\023DropRowRangeReque"
    "st\022\014\n\004name\030\001 \001(\t\022\030\n\016row_key_prefix\030\002 \001(\014"
    "H\000\022$\n\032delete_all_data_from_table\030\003 \001(\010H\000"
    "B\010\n\006target\"k\n\021ListTablesRequest\022\016\n\006paren"
    "t\030\001 \001(\t\0222\n\004view\030\002 \001(\0162$.google.bigtable."
    "admin.v2.Table.View\022\022\n\npage_token\030\003 \001(\t\""
    "^\n\022ListTablesResponse\022/\n\006tables\030\001 \003(\0132\037."
    "google.bigtable.admin.v2.Table\022\027\n\017next_p"
    "age_token\030\002 \001(\t\"S\n\017GetTableRequest\022\014\n\004na"
    "me\030\001 \001(\t\0222\n\004view\030\002 \001(\0162$.google.bigtable"
    ".admin.v2.Table.View\"\"\n\022DeleteTableReque"
    "st\022\014\n\004name\030\001 \001(\t\"\256\002\n\033ModifyColumnFamilie"
    "sRequest\022\014\n\004name\030\001 \001(\t\022Y\n\rmodifications\030"
    "\002 \003(\0132B.google.bigtable.admin.v2.ModifyC"
    "olumnFamiliesRequest.Modification\032\245\001\n\014Mo"
    "dification\022\n\n\002id\030\001 \001(\t\0228\n\006create\030\002 \001(\0132&"
    ".google.bigtable.admin.v2.ColumnFamilyH\000"
    "\0228\n\006update\030\003 \001(\0132&.google.bigtable.admin"
    ".v2.ColumnFamilyH\000\022\016\n\004drop\030\004 \001(\010H\000B\005\n\003mo"
    "d2\270\007\n\022BigtableTableAdmin\022\223\001\n\013CreateTable"
    "\022,.google.bigtable.admin.v2.CreateTableR"
    "equest\032\037.google.bigtable.admin.v2.Table\""
    "5\202\323\344\223\002/\"*/v2/{parent=projects/*/instance"
    "s/*}/tables:\001*\022\233\001\n\nListTables\022+.google.b"
    "igtable.admin.v2.ListTablesRequest\032,.goo"
    "gle.bigtable.admin.v2.ListTablesResponse"
    "\"2\202\323\344\223\002,\022*/v2/{parent=projects/*/instanc"
    "es/*}/tables\022\212\001\n\010GetTable\022).google.bigta"
    "ble.admin.v2.GetTableRequest\032\037.google.bi"
    "gtable.admin.v2.Table\"2\202\323\344\223\002,\022*/v2/{name"
    "=projects/*/instances/*/tables/*}\022\207\001\n\013De"
    "leteTable\022,.google.bigtable.admin.v2.Del"
    "eteTableRequest\032\026.google.protobuf.Empty\""
    "2\202\323\344\223\002,**/v2/{name=projects/*/instances/"
    "*/tables/*}\022\272\001\n\024ModifyColumnFamilies\0225.g"
    "oogle.bigtable.admin.v2.ModifyColumnFami"
    "liesRequest\032\037.google.bigtable.admin.v2.T"
    "able\"J\202\323\344\223\002D\"\?/v2/{name=projects/*/insta"
    "nces/*/tables/*}:modifyColumnFamilies:\001*"
    "\022\231\001\n\014DropRowRange\022-.google.bigtable.admi"
    "n.v2.DropRowRangeRequest\032\026.google.protob"
    "uf.Empty\"B\202\323\344\223\002<\"7/v2/{name=projects/*/i"
    "nstances/*/tables/*}:dropRowRange:\001*Bx\n\034"
    "com.google.bigtable.admin.v2B\027BigtableTa"
    "bleAdminProtoP\001Z=google.golang.org/genpr"
    "oto/googleapis/bigtable/admin/v2;adminb\006"
    "proto3", 2206);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bigtable/admin/v2/bigtable_table_admin.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::bigtable::admin::v2::protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2ftable_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_once_);
void protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_once_,
                 &protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto {
  StaticDescriptorInitializer_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto() {
    protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  }
} static_descriptor_initializer_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest_Split::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest_Split::CreateTableRequest_Split()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateTableRequest.Split)
}

void CreateTableRequest_Split::InitAsDefaultInstance() {
}

CreateTableRequest_Split::CreateTableRequest_Split(const CreateTableRequest_Split& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateTableRequest.Split)
}

void CreateTableRequest_Split::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateTableRequest_Split::~CreateTableRequest_Split() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateTableRequest.Split)
  SharedDtor();
}

void CreateTableRequest_Split::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTableRequest_Split::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTableRequest_Split::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTableRequest_Split_descriptor_;
}

const CreateTableRequest_Split& CreateTableRequest_Split::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest_Split> CreateTableRequest_Split_default_instance_;

CreateTableRequest_Split* CreateTableRequest_Split::New(::google::protobuf::Arena* arena) const {
  CreateTableRequest_Split* n = new CreateTableRequest_Split;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTableRequest_Split::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateTableRequest_Split::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateTableRequest.Split)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateTableRequest.Split)
  return false;
#undef DO_
}

void CreateTableRequest_Split::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  // optional bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateTableRequest.Split)
}

::google::protobuf::uint8* CreateTableRequest_Split::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  // optional bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateTableRequest.Split)
  return target;
}

size_t CreateTableRequest_Split::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  size_t total_size = 0;

  // optional bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTableRequest_Split::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateTableRequest_Split* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest_Split>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateTableRequest.Split)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateTableRequest.Split)
    UnsafeMergeFrom(*source);
  }
}

void CreateTableRequest_Split::MergeFrom(const CreateTableRequest_Split& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateTableRequest_Split::UnsafeMergeFrom(const CreateTableRequest_Split& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void CreateTableRequest_Split::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest_Split::CopyFrom(const CreateTableRequest_Split& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateTableRequest.Split)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateTableRequest_Split::IsInitialized() const {

  return true;
}

void CreateTableRequest_Split::Swap(CreateTableRequest_Split* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest_Split::InternalSwap(CreateTableRequest_Split* other) {
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTableRequest_Split::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTableRequest_Split_descriptor_;
  metadata.reflection = CreateTableRequest_Split_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTableRequest::kParentFieldNumber;
const int CreateTableRequest::kTableIdFieldNumber;
const int CreateTableRequest::kTableFieldNumber;
const int CreateTableRequest::kInitialSplitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTableRequest::CreateTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.CreateTableRequest)
}

void CreateTableRequest::InitAsDefaultInstance() {
  table_ = const_cast< ::google::bigtable::admin::v2::Table*>(
      ::google::bigtable::admin::v2::Table::internal_default_instance());
}

CreateTableRequest::CreateTableRequest(const CreateTableRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.CreateTableRequest)
}

void CreateTableRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_ = NULL;
  _cached_size_ = 0;
}

CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.CreateTableRequest)
  SharedDtor();
}

void CreateTableRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CreateTableRequest_default_instance_.get()) {
    delete table_;
  }
}

void CreateTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTableRequest_descriptor_;
}

const CreateTableRequest& CreateTableRequest::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest> CreateTableRequest_default_instance_;

CreateTableRequest* CreateTableRequest::New(::google::protobuf::Arena* arena) const {
  CreateTableRequest* n = new CreateTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.CreateTableRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  table_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && table_ != NULL) delete table_;
  table_ = NULL;
  initial_splits_.Clear();
}

bool CreateTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.CreateTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string parent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateTableRequest.parent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_table_id;
        break;
      }

      // optional string table_id = 2;
      case 2: {
        if (tag == 18) {
         parse_table_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_id().data(), this->table_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.CreateTableRequest.table_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_table;
        break;
      }

      // optional .google.bigtable.admin.v2.Table table = 3;
      case 3: {
        if (tag == 26) {
         parse_table:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_table()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_initial_splits;
        break;
      }

      // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
      case 4: {
        if (tag == 34) {
         parse_initial_splits:
          DO_(input->IncrementRecursionDepth());
         parse_loop_initial_splits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_initial_splits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_initial_splits;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.CreateTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.CreateTableRequest)
  return false;
#undef DO_
}

void CreateTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.CreateTableRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // optional string table_id = 2;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), this->table_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.table_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table_id(), output);
  }

  // optional .google.bigtable.admin.v2.Table table = 3;
  if (this->has_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->table_, output);
  }

  // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
  for (unsigned int i = 0, n = this->initial_splits_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->initial_splits(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.CreateTableRequest)
}

::google::protobuf::uint8* CreateTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.CreateTableRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // optional string table_id = 2;
  if (this->table_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_id().data(), this->table_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.CreateTableRequest.table_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table_id(), target);
  }

  // optional .google.bigtable.admin.v2.Table table = 3;
  if (this->has_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->table_, false, target);
  }

  // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
  for (unsigned int i = 0, n = this->initial_splits_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->initial_splits(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.CreateTableRequest)
  return target;
}

size_t CreateTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.CreateTableRequest)
  size_t total_size = 0;

  // optional string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // optional string table_id = 2;
  if (this->table_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_id());
  }

  // optional .google.bigtable.admin.v2.Table table = 3;
  if (this->has_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->table_);
  }

  // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
  {
    unsigned int count = this->initial_splits_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->initial_splits(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.CreateTableRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.CreateTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.CreateTableRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateTableRequest::MergeFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.CreateTableRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateTableRequest::UnsafeMergeFrom(const CreateTableRequest& from) {
  GOOGLE_DCHECK(&from != this);
  initial_splits_.MergeFrom(from.initial_splits_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.table_id().size() > 0) {

    table_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_id_);
  }
  if (from.has_table()) {
    mutable_table()->::google::bigtable::admin::v2::Table::MergeFrom(from.table());
  }
}

void CreateTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.CreateTableRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateTableRequest::IsInitialized() const {

  return true;
}

void CreateTableRequest::Swap(CreateTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTableRequest::InternalSwap(CreateTableRequest* other) {
  parent_.Swap(&other->parent_);
  table_id_.Swap(&other->table_id_);
  std::swap(table_, other->table_);
  initial_splits_.UnsafeArenaSwap(&other->initial_splits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTableRequest_descriptor_;
  metadata.reflection = CreateTableRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateTableRequest_Split

// optional bytes key = 1;
void CreateTableRequest_Split::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateTableRequest_Split::key() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.Split.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTableRequest_Split::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}
void CreateTableRequest_Split::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}
void CreateTableRequest_Split::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}
::std::string* CreateTableRequest_Split::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.Split.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateTableRequest_Split::release_key() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.Split.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTableRequest_Split::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}

inline const CreateTableRequest_Split* CreateTableRequest_Split::internal_default_instance() {
  return &CreateTableRequest_Split_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateTableRequest

// optional string parent = 1;
void CreateTableRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateTableRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTableRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateTableRequest.parent)
}
void CreateTableRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateTableRequest.parent)
}
void CreateTableRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateTableRequest.parent)
}
::std::string* CreateTableRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateTableRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTableRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.parent)
}

// optional string table_id = 2;
void CreateTableRequest::clear_table_id() {
  table_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateTableRequest::table_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.table_id)
  return table_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTableRequest::set_table_id(const ::std::string& value) {
  
  table_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateTableRequest.table_id)
}
void CreateTableRequest::set_table_id(const char* value) {
  
  table_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateTableRequest.table_id)
}
void CreateTableRequest::set_table_id(const char* value, size_t size) {
  
  table_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateTableRequest.table_id)
}
::std::string* CreateTableRequest::mutable_table_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.table_id)
  return table_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateTableRequest::release_table_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.table_id)
  
  return table_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTableRequest::set_allocated_table_id(::std::string* table_id) {
  if (table_id != NULL) {
    
  } else {
    
  }
  table_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.table_id)
}

// optional .google.bigtable.admin.v2.Table table = 3;
bool CreateTableRequest::has_table() const {
  return this != internal_default_instance() && table_ != NULL;
}
void CreateTableRequest::clear_table() {
  if (GetArenaNoVirtual() == NULL && table_ != NULL) delete table_;
  table_ = NULL;
}
const ::google::bigtable::admin::v2::Table& CreateTableRequest::table() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.table)
  return table_ != NULL ? *table_
                         : *::google::bigtable::admin::v2::Table::internal_default_instance();
}
::google::bigtable::admin::v2::Table* CreateTableRequest::mutable_table() {
  
  if (table_ == NULL) {
    table_ = new ::google::bigtable::admin::v2::Table;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.table)
  return table_;
}
::google::bigtable::admin::v2::Table* CreateTableRequest::release_table() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.table)
  
  ::google::bigtable::admin::v2::Table* temp = table_;
  table_ = NULL;
  return temp;
}
void CreateTableRequest::set_allocated_table(::google::bigtable::admin::v2::Table* table) {
  delete table_;
  table_ = table;
  if (table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.table)
}

// repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
int CreateTableRequest::initial_splits_size() const {
  return initial_splits_.size();
}
void CreateTableRequest::clear_initial_splits() {
  initial_splits_.Clear();
}
const ::google::bigtable::admin::v2::CreateTableRequest_Split& CreateTableRequest::initial_splits(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_.Get(index);
}
::google::bigtable::admin::v2::CreateTableRequest_Split* CreateTableRequest::mutable_initial_splits(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_.Mutable(index);
}
::google::bigtable::admin::v2::CreateTableRequest_Split* CreateTableRequest::add_initial_splits() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::CreateTableRequest_Split >*
CreateTableRequest::mutable_initial_splits() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return &initial_splits_;
}
const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::CreateTableRequest_Split >&
CreateTableRequest::initial_splits() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_;
}

inline const CreateTableRequest* CreateTableRequest::internal_default_instance() {
  return &CreateTableRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropRowRangeRequest::kNameFieldNumber;
const int DropRowRangeRequest::kRowKeyPrefixFieldNumber;
const int DropRowRangeRequest::kDeleteAllDataFromTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropRowRangeRequest::DropRowRangeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.DropRowRangeRequest)
}

void DropRowRangeRequest::InitAsDefaultInstance() {
  DropRowRangeRequest_default_oneof_instance_->row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  DropRowRangeRequest_default_oneof_instance_->delete_all_data_from_table_ = false;
}

DropRowRangeRequest::DropRowRangeRequest(const DropRowRangeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.DropRowRangeRequest)
}

void DropRowRangeRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
  _cached_size_ = 0;
}

DropRowRangeRequest::~DropRowRangeRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.DropRowRangeRequest)
  SharedDtor();
}

void DropRowRangeRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_target()) {
    clear_target();
  }
}

void DropRowRangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropRowRangeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropRowRangeRequest_descriptor_;
}

const DropRowRangeRequest& DropRowRangeRequest::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DropRowRangeRequest> DropRowRangeRequest_default_instance_;

DropRowRangeRequest* DropRowRangeRequest::New(::google::protobuf::Arena* arena) const {
  DropRowRangeRequest* n = new DropRowRangeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropRowRangeRequest::clear_target() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.admin.v2.DropRowRangeRequest)
  switch (target_case()) {
    case kRowKeyPrefix: {
      target_.row_key_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDeleteAllDataFromTable: {
      // No need to clear
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_NOT_SET;
}


void DropRowRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.DropRowRangeRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_target();
}

bool DropRowRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.DropRowRangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.DropRowRangeRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_row_key_prefix;
        break;
      }

      // optional bytes row_key_prefix = 2;
      case 2: {
        if (tag == 18) {
         parse_row_key_prefix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_row_key_prefix()));
        } else {
          goto handle_unusual;
        }
        goto after_delete_all_data_from_table;
        break;
      }

      // optional bool delete_all_data_from_table = 3;
      case 3: {
        if (tag == 24) {
          clear_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &target_.delete_all_data_from_table_)));
          set_has_delete_all_data_from_table();
        } else {
          goto handle_unusual;
        }
       after_delete_all_data_from_table:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.DropRowRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.DropRowRangeRequest)
  return false;
#undef DO_
}

void DropRowRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.DropRowRangeRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DropRowRangeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes row_key_prefix = 2;
  if (has_row_key_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->row_key_prefix(), output);
  }

  // optional bool delete_all_data_from_table = 3;
  if (has_delete_all_data_from_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->delete_all_data_from_table(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.DropRowRangeRequest)
}

::google::protobuf::uint8* DropRowRangeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.DropRowRangeRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DropRowRangeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes row_key_prefix = 2;
  if (has_row_key_prefix()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->row_key_prefix(), target);
  }

  // optional bool delete_all_data_from_table = 3;
  if (has_delete_all_data_from_table()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->delete_all_data_from_table(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.DropRowRangeRequest)
  return target;
}

size_t DropRowRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.DropRowRangeRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (target_case()) {
    // optional bytes row_key_prefix = 2;
    case kRowKeyPrefix: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->row_key_prefix());
      break;
    }
    // optional bool delete_all_data_from_table = 3;
    case kDeleteAllDataFromTable: {
      total_size += 1 + 1;
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropRowRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DropRowRangeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropRowRangeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.DropRowRangeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.DropRowRangeRequest)
    UnsafeMergeFrom(*source);
  }
}

void DropRowRangeRequest::MergeFrom(const DropRowRangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DropRowRangeRequest::UnsafeMergeFrom(const DropRowRangeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.target_case()) {
    case kRowKeyPrefix: {
      set_row_key_prefix(from.row_key_prefix());
      break;
    }
    case kDeleteAllDataFromTable: {
      set_delete_all_data_from_table(from.delete_all_data_from_table());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DropRowRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropRowRangeRequest::CopyFrom(const DropRowRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.DropRowRangeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DropRowRangeRequest::IsInitialized() const {

  return true;
}

void DropRowRangeRequest::Swap(DropRowRangeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropRowRangeRequest::InternalSwap(DropRowRangeRequest* other) {
  name_.Swap(&other->name_);
  std::swap(target_, other->target_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropRowRangeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DropRowRangeRequest_descriptor_;
  metadata.reflection = DropRowRangeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropRowRangeRequest

// optional string name = 1;
void DropRowRangeRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DropRowRangeRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DropRowRangeRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DropRowRangeRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.name)
}
void DropRowRangeRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DropRowRangeRequest.name)
}
void DropRowRangeRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DropRowRangeRequest.name)
}
::std::string* DropRowRangeRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DropRowRangeRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DropRowRangeRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DropRowRangeRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DropRowRangeRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DropRowRangeRequest.name)
}

// optional bytes row_key_prefix = 2;
bool DropRowRangeRequest::has_row_key_prefix() const {
  return target_case() == kRowKeyPrefix;
}
void DropRowRangeRequest::set_has_row_key_prefix() {
  _oneof_case_[0] = kRowKeyPrefix;
}
void DropRowRangeRequest::clear_row_key_prefix() {
  if (has_row_key_prefix()) {
    target_.row_key_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_target();
  }
}
const ::std::string& DropRowRangeRequest::row_key_prefix() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  if (has_row_key_prefix()) {
    return target_.row_key_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void DropRowRangeRequest::set_row_key_prefix(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_.row_key_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}
void DropRowRangeRequest::set_row_key_prefix(const char* value) {
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_.row_key_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}
void DropRowRangeRequest::set_row_key_prefix(const void* value, size_t size) {
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_.row_key_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}
::std::string* DropRowRangeRequest::mutable_row_key_prefix() {
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  return target_.row_key_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DropRowRangeRequest::release_row_key_prefix() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  if (has_row_key_prefix()) {
    clear_has_target();
    return target_.row_key_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void DropRowRangeRequest::set_allocated_row_key_prefix(::std::string* row_key_prefix) {
  if (!has_row_key_prefix()) {
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_target();
  if (row_key_prefix != NULL) {
    set_has_row_key_prefix();
    target_.row_key_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        row_key_prefix);
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}

// optional bool delete_all_data_from_table = 3;
bool DropRowRangeRequest::has_delete_all_data_from_table() const {
  return target_case() == kDeleteAllDataFromTable;
}
void DropRowRangeRequest::set_has_delete_all_data_from_table() {
  _oneof_case_[0] = kDeleteAllDataFromTable;
}
void DropRowRangeRequest::clear_delete_all_data_from_table() {
  if (has_delete_all_data_from_table()) {
    target_.delete_all_data_from_table_ = false;
    clear_has_target();
  }
}
bool DropRowRangeRequest::delete_all_data_from_table() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DropRowRangeRequest.delete_all_data_from_table)
  if (has_delete_all_data_from_table()) {
    return target_.delete_all_data_from_table_;
  }
  return false;
}
void DropRowRangeRequest::set_delete_all_data_from_table(bool value) {
  if (!has_delete_all_data_from_table()) {
    clear_target();
    set_has_delete_all_data_from_table();
  }
  target_.delete_all_data_from_table_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.delete_all_data_from_table)
}

bool DropRowRangeRequest::has_target() const {
  return target_case() != TARGET_NOT_SET;
}
void DropRowRangeRequest::clear_has_target() {
  _oneof_case_[0] = TARGET_NOT_SET;
}
DropRowRangeRequest::TargetCase DropRowRangeRequest::target_case() const {
  return DropRowRangeRequest::TargetCase(_oneof_case_[0]);
}
inline const DropRowRangeRequest* DropRowRangeRequest::internal_default_instance() {
  return &DropRowRangeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTablesRequest::kParentFieldNumber;
const int ListTablesRequest::kViewFieldNumber;
const int ListTablesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTablesRequest::ListTablesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListTablesRequest)
}

void ListTablesRequest::InitAsDefaultInstance() {
}

ListTablesRequest::ListTablesRequest(const ListTablesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListTablesRequest)
}

void ListTablesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _cached_size_ = 0;
}

ListTablesRequest::~ListTablesRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListTablesRequest)
  SharedDtor();
}

void ListTablesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTablesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTablesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTablesRequest_descriptor_;
}

const ListTablesRequest& ListTablesRequest::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListTablesRequest> ListTablesRequest_default_instance_;

ListTablesRequest* ListTablesRequest::New(::google::protobuf::Arena* arena) const {
  ListTablesRequest* n = new ListTablesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListTablesRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListTablesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListTablesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string parent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListTablesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_view;
        break;
      }

      // optional .google.bigtable.admin.v2.Table.View view = 2;
      case 2: {
        if (tag == 16) {
         parse_view:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::bigtable::admin::v2::Table_View >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_page_token;
        break;
      }

      // optional string page_token = 3;
      case 3: {
        if (tag == 26) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListTablesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListTablesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListTablesRequest)
  return false;
#undef DO_
}

void ListTablesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListTablesRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->view(), output);
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListTablesRequest)
}

::google::protobuf::uint8* ListTablesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListTablesRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->view(), target);
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListTablesRequest)
  return target;
}

size_t ListTablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListTablesRequest)
  size_t total_size = 0;

  // optional string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTablesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListTablesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListTablesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTablesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListTablesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListTablesRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListTablesRequest::MergeFrom(const ListTablesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListTablesRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListTablesRequest::UnsafeMergeFrom(const ListTablesRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListTablesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTablesRequest::CopyFrom(const ListTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListTablesRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListTablesRequest::IsInitialized() const {

  return true;
}

void ListTablesRequest::Swap(ListTablesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTablesRequest::InternalSwap(ListTablesRequest* other) {
  parent_.Swap(&other->parent_);
  std::swap(view_, other->view_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTablesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTablesRequest_descriptor_;
  metadata.reflection = ListTablesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTablesRequest

// optional string parent = 1;
void ListTablesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTablesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTablesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesRequest.parent)
}
void ListTablesRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListTablesRequest.parent)
}
void ListTablesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListTablesRequest.parent)
}
::std::string* ListTablesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTablesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListTablesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTablesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListTablesRequest.parent)
}

// optional .google.bigtable.admin.v2.Table.View view = 2;
void ListTablesRequest::clear_view() {
  view_ = 0;
}
::google::bigtable::admin::v2::Table_View ListTablesRequest::view() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesRequest.view)
  return static_cast< ::google::bigtable::admin::v2::Table_View >(view_);
}
void ListTablesRequest::set_view(::google::bigtable::admin::v2::Table_View value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesRequest.view)
}

// optional string page_token = 3;
void ListTablesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTablesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTablesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesRequest.page_token)
}
void ListTablesRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListTablesRequest.page_token)
}
void ListTablesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListTablesRequest.page_token)
}
::std::string* ListTablesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTablesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListTablesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTablesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListTablesRequest.page_token)
}

inline const ListTablesRequest* ListTablesRequest::internal_default_instance() {
  return &ListTablesRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTablesResponse::kTablesFieldNumber;
const int ListTablesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTablesResponse::ListTablesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ListTablesResponse)
}

void ListTablesResponse::InitAsDefaultInstance() {
}

ListTablesResponse::ListTablesResponse(const ListTablesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ListTablesResponse)
}

void ListTablesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTablesResponse::~ListTablesResponse() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ListTablesResponse)
  SharedDtor();
}

void ListTablesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTablesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTablesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTablesResponse_descriptor_;
}

const ListTablesResponse& ListTablesResponse::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListTablesResponse> ListTablesResponse_default_instance_;

ListTablesResponse* ListTablesResponse::New(::google::protobuf::Arena* arena) const {
  ListTablesResponse* n = new ListTablesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ListTablesResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tables_.Clear();
}

bool ListTablesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ListTablesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.bigtable.admin.v2.Table tables = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_tables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_tables;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ListTablesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ListTablesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ListTablesResponse)
  return false;
#undef DO_
}

void ListTablesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ListTablesResponse)
  // repeated .google.bigtable.admin.v2.Table tables = 1;
  for (unsigned int i = 0, n = this->tables_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ListTablesResponse)
}

::google::protobuf::uint8* ListTablesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ListTablesResponse)
  // repeated .google.bigtable.admin.v2.Table tables = 1;
  for (unsigned int i = 0, n = this->tables_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->tables(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ListTablesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ListTablesResponse)
  return target;
}

size_t ListTablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ListTablesResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.bigtable.admin.v2.Table tables = 1;
  {
    unsigned int count = this->tables_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tables(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTablesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ListTablesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListTablesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTablesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ListTablesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ListTablesResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListTablesResponse::MergeFrom(const ListTablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ListTablesResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListTablesResponse::UnsafeMergeFrom(const ListTablesResponse& from) {
  GOOGLE_DCHECK(&from != this);
  tables_.MergeFrom(from.tables_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTablesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ListTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTablesResponse::CopyFrom(const ListTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ListTablesResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListTablesResponse::IsInitialized() const {

  return true;
}

void ListTablesResponse::Swap(ListTablesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTablesResponse::InternalSwap(ListTablesResponse* other) {
  tables_.UnsafeArenaSwap(&other->tables_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTablesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTablesResponse_descriptor_;
  metadata.reflection = ListTablesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTablesResponse

// repeated .google.bigtable.admin.v2.Table tables = 1;
int ListTablesResponse::tables_size() const {
  return tables_.size();
}
void ListTablesResponse::clear_tables() {
  tables_.Clear();
}
const ::google::bigtable::admin::v2::Table& ListTablesResponse::tables(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_.Get(index);
}
::google::bigtable::admin::v2::Table* ListTablesResponse::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_.Mutable(index);
}
::google::bigtable::admin::v2::Table* ListTablesResponse::add_tables() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Table >*
ListTablesResponse::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListTablesResponse.tables)
  return &tables_;
}
const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Table >&
ListTablesResponse::tables() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_;
}

// optional string next_page_token = 2;
void ListTablesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTablesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTablesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}
void ListTablesResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}
void ListTablesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}
::std::string* ListTablesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTablesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTablesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}

inline const ListTablesResponse* ListTablesResponse::internal_default_instance() {
  return &ListTablesResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTableRequest::kNameFieldNumber;
const int GetTableRequest::kViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTableRequest::GetTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.GetTableRequest)
}

void GetTableRequest::InitAsDefaultInstance() {
}

GetTableRequest::GetTableRequest(const GetTableRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.GetTableRequest)
}

void GetTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _cached_size_ = 0;
}

GetTableRequest::~GetTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.GetTableRequest)
  SharedDtor();
}

void GetTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTableRequest_descriptor_;
}

const GetTableRequest& GetTableRequest::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetTableRequest> GetTableRequest_default_instance_;

GetTableRequest* GetTableRequest::New(::google::protobuf::Arena* arena) const {
  GetTableRequest* n = new GetTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.GetTableRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
}

bool GetTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.GetTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.GetTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_view;
        break;
      }

      // optional .google.bigtable.admin.v2.Table.View view = 2;
      case 2: {
        if (tag == 16) {
         parse_view:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::bigtable::admin::v2::Table_View >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.GetTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.GetTableRequest)
  return false;
#undef DO_
}

void GetTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.GetTableRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->view(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.GetTableRequest)
}

::google::protobuf::uint8* GetTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.GetTableRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.GetTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->view(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.GetTableRequest)
  return target;
}

size_t GetTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.GetTableRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.GetTableRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.GetTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.GetTableRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetTableRequest::MergeFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.GetTableRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetTableRequest::UnsafeMergeFrom(const GetTableRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
}

void GetTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.GetTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTableRequest::CopyFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.GetTableRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetTableRequest::IsInitialized() const {

  return true;
}

void GetTableRequest::Swap(GetTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTableRequest::InternalSwap(GetTableRequest* other) {
  name_.Swap(&other->name_);
  std::swap(view_, other->view_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTableRequest_descriptor_;
  metadata.reflection = GetTableRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTableRequest

// optional string name = 1;
void GetTableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetTableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetTableRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetTableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetTableRequest.name)
}
void GetTableRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.GetTableRequest.name)
}
void GetTableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.GetTableRequest.name)
}
::std::string* GetTableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.GetTableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetTableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.GetTableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetTableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.GetTableRequest.name)
}

// optional .google.bigtable.admin.v2.Table.View view = 2;
void GetTableRequest::clear_view() {
  view_ = 0;
}
::google::bigtable::admin::v2::Table_View GetTableRequest::view() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetTableRequest.view)
  return static_cast< ::google::bigtable::admin::v2::Table_View >(view_);
}
void GetTableRequest::set_view(::google::bigtable::admin::v2::Table_View value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetTableRequest.view)
}

inline const GetTableRequest* GetTableRequest::internal_default_instance() {
  return &GetTableRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTableRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTableRequest::DeleteTableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.DeleteTableRequest)
}

void DeleteTableRequest::InitAsDefaultInstance() {
}

DeleteTableRequest::DeleteTableRequest(const DeleteTableRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.DeleteTableRequest)
}

void DeleteTableRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteTableRequest::~DeleteTableRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.DeleteTableRequest)
  SharedDtor();
}

void DeleteTableRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteTableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteTableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteTableRequest_descriptor_;
}

const DeleteTableRequest& DeleteTableRequest::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteTableRequest> DeleteTableRequest_default_instance_;

DeleteTableRequest* DeleteTableRequest::New(::google::protobuf::Arena* arena) const {
  DeleteTableRequest* n = new DeleteTableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.DeleteTableRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteTableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.DeleteTableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.DeleteTableRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.DeleteTableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.DeleteTableRequest)
  return false;
#undef DO_
}

void DeleteTableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.DeleteTableRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteTableRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.DeleteTableRequest)
}

::google::protobuf::uint8* DeleteTableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.DeleteTableRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.DeleteTableRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.DeleteTableRequest)
  return target;
}

size_t DeleteTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.DeleteTableRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteTableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteTableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.DeleteTableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.DeleteTableRequest)
    UnsafeMergeFrom(*source);
  }
}

void DeleteTableRequest::MergeFrom(const DeleteTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteTableRequest::UnsafeMergeFrom(const DeleteTableRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteTableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTableRequest::CopyFrom(const DeleteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.DeleteTableRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteTableRequest::IsInitialized() const {

  return true;
}

void DeleteTableRequest::Swap(DeleteTableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTableRequest::InternalSwap(DeleteTableRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteTableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteTableRequest_descriptor_;
  metadata.reflection = DeleteTableRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteTableRequest

// optional string name = 1;
void DeleteTableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteTableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteTableRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteTableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteTableRequest.name)
}
void DeleteTableRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DeleteTableRequest.name)
}
void DeleteTableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DeleteTableRequest.name)
}
::std::string* DeleteTableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DeleteTableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteTableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DeleteTableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteTableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DeleteTableRequest.name)
}

inline const DeleteTableRequest* DeleteTableRequest::internal_default_instance() {
  return &DeleteTableRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyColumnFamiliesRequest_Modification::kIdFieldNumber;
const int ModifyColumnFamiliesRequest_Modification::kCreateFieldNumber;
const int ModifyColumnFamiliesRequest_Modification::kUpdateFieldNumber;
const int ModifyColumnFamiliesRequest_Modification::kDropFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyColumnFamiliesRequest_Modification::ModifyColumnFamiliesRequest_Modification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
}

void ModifyColumnFamiliesRequest_Modification::InitAsDefaultInstance() {
  ModifyColumnFamiliesRequest_Modification_default_oneof_instance_->create_ = const_cast< ::google::bigtable::admin::v2::ColumnFamily*>(
      ::google::bigtable::admin::v2::ColumnFamily::internal_default_instance());
  ModifyColumnFamiliesRequest_Modification_default_oneof_instance_->update_ = const_cast< ::google::bigtable::admin::v2::ColumnFamily*>(
      ::google::bigtable::admin::v2::ColumnFamily::internal_default_instance());
  ModifyColumnFamiliesRequest_Modification_default_oneof_instance_->drop_ = false;
}

ModifyColumnFamiliesRequest_Modification::ModifyColumnFamiliesRequest_Modification(const ModifyColumnFamiliesRequest_Modification& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
}

void ModifyColumnFamiliesRequest_Modification::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mod();
  _cached_size_ = 0;
}

ModifyColumnFamiliesRequest_Modification::~ModifyColumnFamiliesRequest_Modification() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  SharedDtor();
}

void ModifyColumnFamiliesRequest_Modification::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_mod()) {
    clear_mod();
  }
}

void ModifyColumnFamiliesRequest_Modification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyColumnFamiliesRequest_Modification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyColumnFamiliesRequest_Modification_descriptor_;
}

const ModifyColumnFamiliesRequest_Modification& ModifyColumnFamiliesRequest_Modification::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ModifyColumnFamiliesRequest_Modification> ModifyColumnFamiliesRequest_Modification_default_instance_;

ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest_Modification::New(::google::protobuf::Arena* arena) const {
  ModifyColumnFamiliesRequest_Modification* n = new ModifyColumnFamiliesRequest_Modification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyColumnFamiliesRequest_Modification::clear_mod() {
// @@protoc_insertion_point(one_of_clear_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  switch (mod_case()) {
    case kCreate: {
      delete mod_.create_;
      break;
    }
    case kUpdate: {
      delete mod_.update_;
      break;
    }
    case kDrop: {
      // No need to clear
      break;
    }
    case MOD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MOD_NOT_SET;
}


void ModifyColumnFamiliesRequest_Modification::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_mod();
}

bool ModifyColumnFamiliesRequest_Modification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_create;
        break;
      }

      // optional .google.bigtable.admin.v2.ColumnFamily create = 2;
      case 2: {
        if (tag == 18) {
         parse_create:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create()));
        } else {
          goto handle_unusual;
        }
        goto after_drop;
        break;
      }

      // optional .google.bigtable.admin.v2.ColumnFamily update = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_drop;
        break;
      }

      // optional bool drop = 4;
      case 4: {
        if (tag == 32) {
         parse_drop:
          clear_mod();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mod_.drop_)));
          set_has_drop();
        } else {
          goto handle_unusual;
        }
       after_drop:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  return false;
#undef DO_
}

void ModifyColumnFamiliesRequest_Modification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .google.bigtable.admin.v2.ColumnFamily create = 2;
  if (has_create()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *mod_.create_, output);
  }

  // optional .google.bigtable.admin.v2.ColumnFamily update = 3;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *mod_.update_, output);
  }

  // optional bool drop = 4;
  if (has_drop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->drop(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
}

::google::protobuf::uint8* ModifyColumnFamiliesRequest_Modification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .google.bigtable.admin.v2.ColumnFamily create = 2;
  if (has_create()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *mod_.create_, false, target);
  }

  // optional .google.bigtable.admin.v2.ColumnFamily update = 3;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *mod_.update_, false, target);
  }

  // optional bool drop = 4;
  if (has_drop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->drop(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  return target;
}

size_t ModifyColumnFamiliesRequest_Modification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  switch (mod_case()) {
    // optional .google.bigtable.admin.v2.ColumnFamily create = 2;
    case kCreate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *mod_.create_);
      break;
    }
    // optional .google.bigtable.admin.v2.ColumnFamily update = 3;
    case kUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *mod_.update_);
      break;
    }
    // optional bool drop = 4;
    case kDrop: {
      total_size += 1 + 1;
      break;
    }
    case MOD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyColumnFamiliesRequest_Modification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModifyColumnFamiliesRequest_Modification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyColumnFamiliesRequest_Modification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
    UnsafeMergeFrom(*source);
  }
}

void ModifyColumnFamiliesRequest_Modification::MergeFrom(const ModifyColumnFamiliesRequest_Modification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ModifyColumnFamiliesRequest_Modification::UnsafeMergeFrom(const ModifyColumnFamiliesRequest_Modification& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.mod_case()) {
    case kCreate: {
      mutable_create()->::google::bigtable::admin::v2::ColumnFamily::MergeFrom(from.create());
      break;
    }
    case kUpdate: {
      mutable_update()->::google::bigtable::admin::v2::ColumnFamily::MergeFrom(from.update());
      break;
    }
    case kDrop: {
      set_drop(from.drop());
      break;
    }
    case MOD_NOT_SET: {
      break;
    }
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ModifyColumnFamiliesRequest_Modification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyColumnFamiliesRequest_Modification::CopyFrom(const ModifyColumnFamiliesRequest_Modification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ModifyColumnFamiliesRequest_Modification::IsInitialized() const {

  return true;
}

void ModifyColumnFamiliesRequest_Modification::Swap(ModifyColumnFamiliesRequest_Modification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyColumnFamiliesRequest_Modification::InternalSwap(ModifyColumnFamiliesRequest_Modification* other) {
  id_.Swap(&other->id_);
  std::swap(mod_, other->mod_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyColumnFamiliesRequest_Modification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyColumnFamiliesRequest_Modification_descriptor_;
  metadata.reflection = ModifyColumnFamiliesRequest_Modification_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyColumnFamiliesRequest::kNameFieldNumber;
const int ModifyColumnFamiliesRequest::kModificationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyColumnFamiliesRequest::ModifyColumnFamiliesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
}

void ModifyColumnFamiliesRequest::InitAsDefaultInstance() {
}

ModifyColumnFamiliesRequest::ModifyColumnFamiliesRequest(const ModifyColumnFamiliesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
}

void ModifyColumnFamiliesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModifyColumnFamiliesRequest::~ModifyColumnFamiliesRequest() {
  // @@protoc_insertion_point(destructor:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  SharedDtor();
}

void ModifyColumnFamiliesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyColumnFamiliesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyColumnFamiliesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyColumnFamiliesRequest_descriptor_;
}

const ModifyColumnFamiliesRequest& ModifyColumnFamiliesRequest::default_instance() {
  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ModifyColumnFamiliesRequest> ModifyColumnFamiliesRequest_default_instance_;

ModifyColumnFamiliesRequest* ModifyColumnFamiliesRequest::New(::google::protobuf::Arena* arena) const {
  ModifyColumnFamiliesRequest* n = new ModifyColumnFamiliesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyColumnFamiliesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modifications_.Clear();
}

bool ModifyColumnFamiliesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_modifications;
        break;
      }

      // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
      case 2: {
        if (tag == 18) {
         parse_modifications:
          DO_(input->IncrementRecursionDepth());
         parse_loop_modifications:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_modifications()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_modifications;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  return false;
#undef DO_
}

void ModifyColumnFamiliesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
  for (unsigned int i = 0, n = this->modifications_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->modifications(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
}

::google::protobuf::uint8* ModifyColumnFamiliesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
  for (unsigned int i = 0, n = this->modifications_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->modifications(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  return target;
}

size_t ModifyColumnFamiliesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
  {
    unsigned int count = this->modifications_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->modifications(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyColumnFamiliesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModifyColumnFamiliesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyColumnFamiliesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
    UnsafeMergeFrom(*source);
  }
}

void ModifyColumnFamiliesRequest::MergeFrom(const ModifyColumnFamiliesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ModifyColumnFamiliesRequest::UnsafeMergeFrom(const ModifyColumnFamiliesRequest& from) {
  GOOGLE_DCHECK(&from != this);
  modifications_.MergeFrom(from.modifications_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ModifyColumnFamiliesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyColumnFamiliesRequest::CopyFrom(const ModifyColumnFamiliesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ModifyColumnFamiliesRequest::IsInitialized() const {

  return true;
}

void ModifyColumnFamiliesRequest::Swap(ModifyColumnFamiliesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyColumnFamiliesRequest::InternalSwap(ModifyColumnFamiliesRequest* other) {
  name_.Swap(&other->name_);
  modifications_.UnsafeArenaSwap(&other->modifications_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyColumnFamiliesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyColumnFamiliesRequest_descriptor_;
  metadata.reflection = ModifyColumnFamiliesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyColumnFamiliesRequest_Modification

// optional string id = 1;
void ModifyColumnFamiliesRequest_Modification::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyColumnFamiliesRequest_Modification::id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyColumnFamiliesRequest_Modification::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}
void ModifyColumnFamiliesRequest_Modification::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}
void ModifyColumnFamiliesRequest_Modification::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}
::std::string* ModifyColumnFamiliesRequest_Modification::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyColumnFamiliesRequest_Modification::release_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyColumnFamiliesRequest_Modification::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}

// optional .google.bigtable.admin.v2.ColumnFamily create = 2;
bool ModifyColumnFamiliesRequest_Modification::has_create() const {
  return mod_case() == kCreate;
}
void ModifyColumnFamiliesRequest_Modification::set_has_create() {
  _oneof_case_[0] = kCreate;
}
void ModifyColumnFamiliesRequest_Modification::clear_create() {
  if (has_create()) {
    delete mod_.create_;
    clear_has_mod();
  }
}
 const ::google::bigtable::admin::v2::ColumnFamily& ModifyColumnFamiliesRequest_Modification::create() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
  return has_create()
      ? *mod_.create_
      : ::google::bigtable::admin::v2::ColumnFamily::default_instance();
}
::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::mutable_create() {
  if (!has_create()) {
    clear_mod();
    set_has_create();
    mod_.create_ = new ::google::bigtable::admin::v2::ColumnFamily;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
  return mod_.create_;
}
::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::release_create() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
  if (has_create()) {
    clear_has_mod();
    ::google::bigtable::admin::v2::ColumnFamily* temp = mod_.create_;
    mod_.create_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ModifyColumnFamiliesRequest_Modification::set_allocated_create(::google::bigtable::admin::v2::ColumnFamily* create) {
  clear_mod();
  if (create) {
    set_has_create();
    mod_.create_ = create;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
}

// optional .google.bigtable.admin.v2.ColumnFamily update = 3;
bool ModifyColumnFamiliesRequest_Modification::has_update() const {
  return mod_case() == kUpdate;
}
void ModifyColumnFamiliesRequest_Modification::set_has_update() {
  _oneof_case_[0] = kUpdate;
}
void ModifyColumnFamiliesRequest_Modification::clear_update() {
  if (has_update()) {
    delete mod_.update_;
    clear_has_mod();
  }
}
 const ::google::bigtable::admin::v2::ColumnFamily& ModifyColumnFamiliesRequest_Modification::update() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
  return has_update()
      ? *mod_.update_
      : ::google::bigtable::admin::v2::ColumnFamily::default_instance();
}
::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::mutable_update() {
  if (!has_update()) {
    clear_mod();
    set_has_update();
    mod_.update_ = new ::google::bigtable::admin::v2::ColumnFamily;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
  return mod_.update_;
}
::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::release_update() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
  if (has_update()) {
    clear_has_mod();
    ::google::bigtable::admin::v2::ColumnFamily* temp = mod_.update_;
    mod_.update_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ModifyColumnFamiliesRequest_Modification::set_allocated_update(::google::bigtable::admin::v2::ColumnFamily* update) {
  clear_mod();
  if (update) {
    set_has_update();
    mod_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
}

// optional bool drop = 4;
bool ModifyColumnFamiliesRequest_Modification::has_drop() const {
  return mod_case() == kDrop;
}
void ModifyColumnFamiliesRequest_Modification::set_has_drop() {
  _oneof_case_[0] = kDrop;
}
void ModifyColumnFamiliesRequest_Modification::clear_drop() {
  if (has_drop()) {
    mod_.drop_ = false;
    clear_has_mod();
  }
}
bool ModifyColumnFamiliesRequest_Modification::drop() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.drop)
  if (has_drop()) {
    return mod_.drop_;
  }
  return false;
}
void ModifyColumnFamiliesRequest_Modification::set_drop(bool value) {
  if (!has_drop()) {
    clear_mod();
    set_has_drop();
  }
  mod_.drop_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.drop)
}

bool ModifyColumnFamiliesRequest_Modification::has_mod() const {
  return mod_case() != MOD_NOT_SET;
}
void ModifyColumnFamiliesRequest_Modification::clear_has_mod() {
  _oneof_case_[0] = MOD_NOT_SET;
}
ModifyColumnFamiliesRequest_Modification::ModCase ModifyColumnFamiliesRequest_Modification::mod_case() const {
  return ModifyColumnFamiliesRequest_Modification::ModCase(_oneof_case_[0]);
}
inline const ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest_Modification::internal_default_instance() {
  return &ModifyColumnFamiliesRequest_Modification_default_instance_.get();
}
// -------------------------------------------------------------------

// ModifyColumnFamiliesRequest

// optional string name = 1;
void ModifyColumnFamiliesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyColumnFamiliesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyColumnFamiliesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}
void ModifyColumnFamiliesRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}
void ModifyColumnFamiliesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}
::std::string* ModifyColumnFamiliesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyColumnFamiliesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyColumnFamiliesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}

// repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
int ModifyColumnFamiliesRequest::modifications_size() const {
  return modifications_.size();
}
void ModifyColumnFamiliesRequest::clear_modifications() {
  modifications_.Clear();
}
const ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification& ModifyColumnFamiliesRequest::modifications(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_.Get(index);
}
::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest::mutable_modifications(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_.Mutable(index);
}
::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest::add_modifications() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification >*
ModifyColumnFamiliesRequest::mutable_modifications() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return &modifications_;
}
const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification >&
ModifyColumnFamiliesRequest::modifications() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_;
}

inline const ModifyColumnFamiliesRequest* ModifyColumnFamiliesRequest::internal_default_instance() {
  return &ModifyColumnFamiliesRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)
