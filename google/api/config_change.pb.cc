// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/config_change.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/config_change.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

namespace {

const ::google::protobuf::Descriptor* ConfigChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* Advice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Advice_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ChangeType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fapi_2fconfig_5fchange_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fapi_2fconfig_5fchange_2eproto() {
  protobuf_AddDesc_google_2fapi_2fconfig_5fchange_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/api/config_change.proto");
  GOOGLE_CHECK(file != NULL);
  ConfigChange_descriptor_ = file->message_type(0);
  static const int ConfigChange_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigChange, element_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigChange, old_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigChange, new_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigChange, change_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigChange, advices_),
  };
  ConfigChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigChange_descriptor_,
      ConfigChange::internal_default_instance(),
      ConfigChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConfigChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigChange, _internal_metadata_));
  Advice_descriptor_ = file->message_type(1);
  static const int Advice_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Advice, description_),
  };
  Advice_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Advice_descriptor_,
      Advice::internal_default_instance(),
      Advice_offsets_,
      -1,
      -1,
      -1,
      sizeof(Advice),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Advice, _internal_metadata_));
  ChangeType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fapi_2fconfig_5fchange_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigChange_descriptor_, ConfigChange::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Advice_descriptor_, Advice::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fconfig_5fchange_2eproto() {
  ConfigChange_default_instance_.Shutdown();
  delete ConfigChange_reflection_;
  Advice_default_instance_.Shutdown();
  delete Advice_reflection_;
}

void protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ConfigChange_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Advice_default_instance_.DefaultConstruct();
  ConfigChange_default_instance_.get_mutable()->InitAsDefaultInstance();
  Advice_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto_once_);
void protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto_once_,
                 &protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fconfig_5fchange_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036google/api/config_change.proto\022\ngoogle"
    ".api\"\227\001\n\014ConfigChange\022\017\n\007element\030\001 \001(\t\022\021"
    "\n\told_value\030\002 \001(\t\022\021\n\tnew_value\030\003 \001(\t\022+\n\013"
    "change_type\030\004 \001(\0162\026.google.api.ChangeTyp"
    "e\022#\n\007advices\030\005 \003(\0132\022.google.api.Advice\"\035"
    "\n\006Advice\022\023\n\013description\030\002 \001(\t*O\n\nChangeT"
    "ype\022\033\n\027CHANGE_TYPE_UNSPECIFIED\020\000\022\t\n\005ADDE"
    "D\020\001\022\013\n\007REMOVED\020\002\022\014\n\010MODIFIED\020\003Bq\n\016com.go"
    "ogle.apiB\021ConfigChangeProtoP\001ZCgoogle.go"
    "lang.org/genproto/googleapis/api/configc"
    "hange;configchange\242\002\004GAPIb\006proto3", 433);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/config_change.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fconfig_5fchange_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fconfig_5fchange_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fconfig_5fchange_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fconfig_5fchange_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fconfig_5fchange_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fconfig_5fchange_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fconfig_5fchange_2eproto() {
    protobuf_AddDesc_google_2fapi_2fconfig_5fchange_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fconfig_5fchange_2eproto_;
const ::google::protobuf::EnumDescriptor* ChangeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeType_descriptor_;
}
bool ChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigChange::kElementFieldNumber;
const int ConfigChange::kOldValueFieldNumber;
const int ConfigChange::kNewValueFieldNumber;
const int ConfigChange::kChangeTypeFieldNumber;
const int ConfigChange::kAdvicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigChange::ConfigChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.ConfigChange)
}

void ConfigChange::InitAsDefaultInstance() {
}

ConfigChange::ConfigChange(const ConfigChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.ConfigChange)
}

void ConfigChange::SharedCtor() {
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_type_ = 0;
  _cached_size_ = 0;
}

ConfigChange::~ConfigChange() {
  // @@protoc_insertion_point(destructor:google.api.ConfigChange)
  SharedDtor();
}

void ConfigChange::SharedDtor() {
  element_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigChange_descriptor_;
}

const ConfigChange& ConfigChange::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConfigChange> ConfigChange_default_instance_;

ConfigChange* ConfigChange::New(::google::protobuf::Arena* arena) const {
  ConfigChange* n = new ConfigChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigChange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ConfigChange)
  element_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_type_ = 0;
  advices_.Clear();
}

bool ConfigChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.ConfigChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string element = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->element().data(), this->element().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ConfigChange.element"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_old_value;
        break;
      }

      // optional string old_value = 2;
      case 2: {
        if (tag == 18) {
         parse_old_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->old_value().data(), this->old_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ConfigChange.old_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_new_value;
        break;
      }

      // optional string new_value = 3;
      case 3: {
        if (tag == 26) {
         parse_new_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_value().data(), this->new_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ConfigChange.new_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_change_type;
        break;
      }

      // optional .google.api.ChangeType change_type = 4;
      case 4: {
        if (tag == 32) {
         parse_change_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::google::api::ChangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_advices;
        break;
      }

      // repeated .google.api.Advice advices = 5;
      case 5: {
        if (tag == 42) {
         parse_advices:
          DO_(input->IncrementRecursionDepth());
         parse_loop_advices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_advices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_advices;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.ConfigChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.ConfigChange)
  return false;
#undef DO_
}

void ConfigChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.ConfigChange)
  // optional string element = 1;
  if (this->element().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element().data(), this->element().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.element");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->element(), output);
  }

  // optional string old_value = 2;
  if (this->old_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_value().data(), this->old_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.old_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->old_value(), output);
  }

  // optional string new_value = 3;
  if (this->new_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_value().data(), this->new_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.new_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_value(), output);
  }

  // optional .google.api.ChangeType change_type = 4;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->change_type(), output);
  }

  // repeated .google.api.Advice advices = 5;
  for (unsigned int i = 0, n = this->advices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->advices(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.ConfigChange)
}

::google::protobuf::uint8* ConfigChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ConfigChange)
  // optional string element = 1;
  if (this->element().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element().data(), this->element().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.element");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->element(), target);
  }

  // optional string old_value = 2;
  if (this->old_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_value().data(), this->old_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.old_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->old_value(), target);
  }

  // optional string new_value = 3;
  if (this->new_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_value().data(), this->new_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.new_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_value(), target);
  }

  // optional .google.api.ChangeType change_type = 4;
  if (this->change_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->change_type(), target);
  }

  // repeated .google.api.Advice advices = 5;
  for (unsigned int i = 0, n = this->advices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->advices(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.ConfigChange)
  return target;
}

size_t ConfigChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ConfigChange)
  size_t total_size = 0;

  // optional string element = 1;
  if (this->element().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->element());
  }

  // optional string old_value = 2;
  if (this->old_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->old_value());
  }

  // optional string new_value = 3;
  if (this->new_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_value());
  }

  // optional .google.api.ChangeType change_type = 4;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  // repeated .google.api.Advice advices = 5;
  {
    unsigned int count = this->advices_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->advices(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.ConfigChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.ConfigChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.ConfigChange)
    UnsafeMergeFrom(*source);
  }
}

void ConfigChange::MergeFrom(const ConfigChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.ConfigChange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConfigChange::UnsafeMergeFrom(const ConfigChange& from) {
  GOOGLE_DCHECK(&from != this);
  advices_.MergeFrom(from.advices_);
  if (from.element().size() > 0) {

    element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
  }
  if (from.old_value().size() > 0) {

    old_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_value_);
  }
  if (from.new_value().size() > 0) {

    new_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_value_);
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
}

void ConfigChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.ConfigChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigChange::CopyFrom(const ConfigChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ConfigChange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConfigChange::IsInitialized() const {

  return true;
}

void ConfigChange::Swap(ConfigChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigChange::InternalSwap(ConfigChange* other) {
  element_.Swap(&other->element_);
  old_value_.Swap(&other->old_value_);
  new_value_.Swap(&other->new_value_);
  std::swap(change_type_, other->change_type_);
  advices_.UnsafeArenaSwap(&other->advices_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigChange_descriptor_;
  metadata.reflection = ConfigChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigChange

// optional string element = 1;
void ConfigChange::clear_element() {
  element_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigChange::element() const {
  // @@protoc_insertion_point(field_get:google.api.ConfigChange.element)
  return element_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigChange::set_element(const ::std::string& value) {
  
  element_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.ConfigChange.element)
}
void ConfigChange::set_element(const char* value) {
  
  element_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.ConfigChange.element)
}
void ConfigChange::set_element(const char* value, size_t size) {
  
  element_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.ConfigChange.element)
}
::std::string* ConfigChange::mutable_element() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ConfigChange.element)
  return element_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigChange::release_element() {
  // @@protoc_insertion_point(field_release:google.api.ConfigChange.element)
  
  return element_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigChange::set_allocated_element(::std::string* element) {
  if (element != NULL) {
    
  } else {
    
  }
  element_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), element);
  // @@protoc_insertion_point(field_set_allocated:google.api.ConfigChange.element)
}

// optional string old_value = 2;
void ConfigChange::clear_old_value() {
  old_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigChange::old_value() const {
  // @@protoc_insertion_point(field_get:google.api.ConfigChange.old_value)
  return old_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigChange::set_old_value(const ::std::string& value) {
  
  old_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.ConfigChange.old_value)
}
void ConfigChange::set_old_value(const char* value) {
  
  old_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.ConfigChange.old_value)
}
void ConfigChange::set_old_value(const char* value, size_t size) {
  
  old_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.ConfigChange.old_value)
}
::std::string* ConfigChange::mutable_old_value() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ConfigChange.old_value)
  return old_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigChange::release_old_value() {
  // @@protoc_insertion_point(field_release:google.api.ConfigChange.old_value)
  
  return old_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigChange::set_allocated_old_value(::std::string* old_value) {
  if (old_value != NULL) {
    
  } else {
    
  }
  old_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_value);
  // @@protoc_insertion_point(field_set_allocated:google.api.ConfigChange.old_value)
}

// optional string new_value = 3;
void ConfigChange::clear_new_value() {
  new_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigChange::new_value() const {
  // @@protoc_insertion_point(field_get:google.api.ConfigChange.new_value)
  return new_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigChange::set_new_value(const ::std::string& value) {
  
  new_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.ConfigChange.new_value)
}
void ConfigChange::set_new_value(const char* value) {
  
  new_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.ConfigChange.new_value)
}
void ConfigChange::set_new_value(const char* value, size_t size) {
  
  new_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.ConfigChange.new_value)
}
::std::string* ConfigChange::mutable_new_value() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ConfigChange.new_value)
  return new_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigChange::release_new_value() {
  // @@protoc_insertion_point(field_release:google.api.ConfigChange.new_value)
  
  return new_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigChange::set_allocated_new_value(::std::string* new_value) {
  if (new_value != NULL) {
    
  } else {
    
  }
  new_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_value);
  // @@protoc_insertion_point(field_set_allocated:google.api.ConfigChange.new_value)
}

// optional .google.api.ChangeType change_type = 4;
void ConfigChange::clear_change_type() {
  change_type_ = 0;
}
::google::api::ChangeType ConfigChange::change_type() const {
  // @@protoc_insertion_point(field_get:google.api.ConfigChange.change_type)
  return static_cast< ::google::api::ChangeType >(change_type_);
}
void ConfigChange::set_change_type(::google::api::ChangeType value) {
  
  change_type_ = value;
  // @@protoc_insertion_point(field_set:google.api.ConfigChange.change_type)
}

// repeated .google.api.Advice advices = 5;
int ConfigChange::advices_size() const {
  return advices_.size();
}
void ConfigChange::clear_advices() {
  advices_.Clear();
}
const ::google::api::Advice& ConfigChange::advices(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ConfigChange.advices)
  return advices_.Get(index);
}
::google::api::Advice* ConfigChange::mutable_advices(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.ConfigChange.advices)
  return advices_.Mutable(index);
}
::google::api::Advice* ConfigChange::add_advices() {
  // @@protoc_insertion_point(field_add:google.api.ConfigChange.advices)
  return advices_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::Advice >*
ConfigChange::mutable_advices() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ConfigChange.advices)
  return &advices_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::Advice >&
ConfigChange::advices() const {
  // @@protoc_insertion_point(field_list:google.api.ConfigChange.advices)
  return advices_;
}

inline const ConfigChange* ConfigChange::internal_default_instance() {
  return &ConfigChange_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Advice::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Advice::Advice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Advice)
}

void Advice::InitAsDefaultInstance() {
}

Advice::Advice(const Advice& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.api.Advice)
}

void Advice::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Advice::~Advice() {
  // @@protoc_insertion_point(destructor:google.api.Advice)
  SharedDtor();
}

void Advice::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Advice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Advice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Advice_descriptor_;
}

const Advice& Advice::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fconfig_5fchange_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Advice> Advice_default_instance_;

Advice* Advice::New(::google::protobuf::Arena* arena) const {
  Advice* n = new Advice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Advice::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Advice)
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Advice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Advice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string description = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Advice.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Advice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Advice)
  return false;
#undef DO_
}

void Advice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Advice)
  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Advice.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.Advice)
}

::google::protobuf::uint8* Advice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Advice)
  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Advice.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.Advice)
  return target;
}

size_t Advice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Advice)
  size_t total_size = 0;

  // optional string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Advice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Advice)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Advice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Advice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Advice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Advice)
    UnsafeMergeFrom(*source);
  }
}

void Advice::MergeFrom(const Advice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Advice)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Advice::UnsafeMergeFrom(const Advice& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void Advice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Advice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Advice::CopyFrom(const Advice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Advice)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Advice::IsInitialized() const {

  return true;
}

void Advice::Swap(Advice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Advice::InternalSwap(Advice* other) {
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Advice::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Advice_descriptor_;
  metadata.reflection = Advice_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Advice

// optional string description = 2;
void Advice::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Advice::description() const {
  // @@protoc_insertion_point(field_get:google.api.Advice.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Advice::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Advice.description)
}
void Advice::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Advice.description)
}
void Advice::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Advice.description)
}
::std::string* Advice::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Advice.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Advice::release_description() {
  // @@protoc_insertion_point(field_release:google.api.Advice.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Advice::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.api.Advice.description)
}

inline const Advice* Advice::internal_default_instance() {
  return &Advice_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
