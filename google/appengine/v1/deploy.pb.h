// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/deploy.proto

#ifndef PROTOBUF_google_2fappengine_2fv1_2fdeploy_2eproto__INCLUDED
#define PROTOBUF_google_2fappengine_2fv1_2fdeploy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace appengine {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
void protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto();
void protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
void protobuf_ShutdownFile_google_2fappengine_2fv1_2fdeploy_2eproto();

class ContainerInfo;
class Deployment;
class FileInfo;
class ZipInfo;

// ===================================================================

class Deployment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.Deployment) */ {
 public:
  Deployment();
  virtual ~Deployment();

  Deployment(const Deployment& from);

  inline Deployment& operator=(const Deployment& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Deployment& default_instance();

  static const Deployment* internal_default_instance();

  void Swap(Deployment* other);

  // implements Message ----------------------------------------------

  inline Deployment* New() const { return New(NULL); }

  Deployment* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Deployment& from);
  void MergeFrom(const Deployment& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Deployment* other);
  void UnsafeMergeFrom(const Deployment& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.appengine.v1.FileInfo> files = 1;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >&
      files() const;
  ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >*
      mutable_files();

  // optional .google.appengine.v1.ContainerInfo container = 2;
  bool has_container() const;
  void clear_container();
  static const int kContainerFieldNumber = 2;
  const ::google::appengine::v1::ContainerInfo& container() const;
  ::google::appengine::v1::ContainerInfo* mutable_container();
  ::google::appengine::v1::ContainerInfo* release_container();
  void set_allocated_container(::google::appengine::v1::ContainerInfo* container);

  // optional .google.appengine.v1.ZipInfo zip = 3;
  bool has_zip() const;
  void clear_zip();
  static const int kZipFieldNumber = 3;
  const ::google::appengine::v1::ZipInfo& zip() const;
  ::google::appengine::v1::ZipInfo* mutable_zip();
  ::google::appengine::v1::ZipInfo* release_zip();
  void set_allocated_zip(::google::appengine::v1::ZipInfo* zip);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.Deployment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::google::appengine::v1::FileInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Deployment_FilesEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::google::appengine::v1::FileInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > files_;
  ::google::appengine::v1::ContainerInfo* container_;
  ::google::appengine::v1::ZipInfo* zip_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
  friend void protobuf_ShutdownFile_google_2fappengine_2fv1_2fdeploy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Deployment> Deployment_default_instance_;

// -------------------------------------------------------------------

class FileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.FileInfo) */ {
 public:
  FileInfo();
  virtual ~FileInfo();

  FileInfo(const FileInfo& from);

  inline FileInfo& operator=(const FileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfo& default_instance();

  static const FileInfo* internal_default_instance();

  void Swap(FileInfo* other);

  // implements Message ----------------------------------------------

  inline FileInfo* New() const { return New(NULL); }

  FileInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileInfo& from);
  void MergeFrom(const FileInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileInfo* other);
  void UnsafeMergeFrom(const FileInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_url = 1;
  void clear_source_url();
  static const int kSourceUrlFieldNumber = 1;
  const ::std::string& source_url() const;
  void set_source_url(const ::std::string& value);
  void set_source_url(const char* value);
  void set_source_url(const char* value, size_t size);
  ::std::string* mutable_source_url();
  ::std::string* release_source_url();
  void set_allocated_source_url(::std::string* source_url);

  // optional string sha1_sum = 2;
  void clear_sha1_sum();
  static const int kSha1SumFieldNumber = 2;
  const ::std::string& sha1_sum() const;
  void set_sha1_sum(const ::std::string& value);
  void set_sha1_sum(const char* value);
  void set_sha1_sum(const char* value, size_t size);
  ::std::string* mutable_sha1_sum();
  ::std::string* release_sha1_sum();
  void set_allocated_sha1_sum(::std::string* sha1_sum);

  // optional string mime_type = 3;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 3;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.FileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_url_;
  ::google::protobuf::internal::ArenaStringPtr sha1_sum_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
  friend void protobuf_ShutdownFile_google_2fappengine_2fv1_2fdeploy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FileInfo> FileInfo_default_instance_;

// -------------------------------------------------------------------

class ContainerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ContainerInfo) */ {
 public:
  ContainerInfo();
  virtual ~ContainerInfo();

  ContainerInfo(const ContainerInfo& from);

  inline ContainerInfo& operator=(const ContainerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContainerInfo& default_instance();

  static const ContainerInfo* internal_default_instance();

  void Swap(ContainerInfo* other);

  // implements Message ----------------------------------------------

  inline ContainerInfo* New() const { return New(NULL); }

  ContainerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContainerInfo& from);
  void MergeFrom(const ContainerInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ContainerInfo* other);
  void UnsafeMergeFrom(const ContainerInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string image = 1;
  void clear_image();
  static const int kImageFieldNumber = 1;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  void set_image(const char* value);
  void set_image(const char* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ContainerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
  friend void protobuf_ShutdownFile_google_2fappengine_2fv1_2fdeploy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ContainerInfo> ContainerInfo_default_instance_;

// -------------------------------------------------------------------

class ZipInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.appengine.v1.ZipInfo) */ {
 public:
  ZipInfo();
  virtual ~ZipInfo();

  ZipInfo(const ZipInfo& from);

  inline ZipInfo& operator=(const ZipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZipInfo& default_instance();

  static const ZipInfo* internal_default_instance();

  void Swap(ZipInfo* other);

  // implements Message ----------------------------------------------

  inline ZipInfo* New() const { return New(NULL); }

  ZipInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZipInfo& from);
  void MergeFrom(const ZipInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ZipInfo* other);
  void UnsafeMergeFrom(const ZipInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_url = 3;
  void clear_source_url();
  static const int kSourceUrlFieldNumber = 3;
  const ::std::string& source_url() const;
  void set_source_url(const ::std::string& value);
  void set_source_url(const char* value);
  void set_source_url(const char* value, size_t size);
  ::std::string* mutable_source_url();
  ::std::string* release_source_url();
  void set_allocated_source_url(::std::string* source_url);

  // optional int32 files_count = 4;
  void clear_files_count();
  static const int kFilesCountFieldNumber = 4;
  ::google::protobuf::int32 files_count() const;
  void set_files_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.appengine.v1.ZipInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_url_;
  ::google::protobuf::int32 files_count_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fappengine_2fv1_2fdeploy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fappengine_2fv1_2fdeploy_2eproto();
  friend void protobuf_ShutdownFile_google_2fappengine_2fv1_2fdeploy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ZipInfo> ZipInfo_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Deployment

// map<string, .google.appengine.v1.FileInfo> files = 1;
inline int Deployment::files_size() const {
  return files_.size();
}
inline void Deployment::clear_files() {
  files_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >&
Deployment::files() const {
  // @@protoc_insertion_point(field_map:google.appengine.v1.Deployment.files)
  return files_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::appengine::v1::FileInfo >*
Deployment::mutable_files() {
  // @@protoc_insertion_point(field_mutable_map:google.appengine.v1.Deployment.files)
  return files_.MutableMap();
}

// optional .google.appengine.v1.ContainerInfo container = 2;
inline bool Deployment::has_container() const {
  return this != internal_default_instance() && container_ != NULL;
}
inline void Deployment::clear_container() {
  if (GetArenaNoVirtual() == NULL && container_ != NULL) delete container_;
  container_ = NULL;
}
inline const ::google::appengine::v1::ContainerInfo& Deployment::container() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Deployment.container)
  return container_ != NULL ? *container_
                         : *::google::appengine::v1::ContainerInfo::internal_default_instance();
}
inline ::google::appengine::v1::ContainerInfo* Deployment::mutable_container() {
  
  if (container_ == NULL) {
    container_ = new ::google::appengine::v1::ContainerInfo;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Deployment.container)
  return container_;
}
inline ::google::appengine::v1::ContainerInfo* Deployment::release_container() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Deployment.container)
  
  ::google::appengine::v1::ContainerInfo* temp = container_;
  container_ = NULL;
  return temp;
}
inline void Deployment::set_allocated_container(::google::appengine::v1::ContainerInfo* container) {
  delete container_;
  container_ = container;
  if (container) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Deployment.container)
}

// optional .google.appengine.v1.ZipInfo zip = 3;
inline bool Deployment::has_zip() const {
  return this != internal_default_instance() && zip_ != NULL;
}
inline void Deployment::clear_zip() {
  if (GetArenaNoVirtual() == NULL && zip_ != NULL) delete zip_;
  zip_ = NULL;
}
inline const ::google::appengine::v1::ZipInfo& Deployment::zip() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Deployment.zip)
  return zip_ != NULL ? *zip_
                         : *::google::appengine::v1::ZipInfo::internal_default_instance();
}
inline ::google::appengine::v1::ZipInfo* Deployment::mutable_zip() {
  
  if (zip_ == NULL) {
    zip_ = new ::google::appengine::v1::ZipInfo;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Deployment.zip)
  return zip_;
}
inline ::google::appengine::v1::ZipInfo* Deployment::release_zip() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Deployment.zip)
  
  ::google::appengine::v1::ZipInfo* temp = zip_;
  zip_ = NULL;
  return temp;
}
inline void Deployment::set_allocated_zip(::google::appengine::v1::ZipInfo* zip) {
  delete zip_;
  zip_ = zip;
  if (zip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Deployment.zip)
}

inline const Deployment* Deployment::internal_default_instance() {
  return &Deployment_default_instance_.get();
}
// -------------------------------------------------------------------

// FileInfo

// optional string source_url = 1;
inline void FileInfo::clear_source_url() {
  source_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::source_url() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.FileInfo.source_url)
  return source_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_source_url(const ::std::string& value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.FileInfo.source_url)
}
inline void FileInfo::set_source_url(const char* value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.FileInfo.source_url)
}
inline void FileInfo::set_source_url(const char* value, size_t size) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.FileInfo.source_url)
}
inline ::std::string* FileInfo::mutable_source_url() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.FileInfo.source_url)
  return source_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_source_url() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.FileInfo.source_url)
  
  return source_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_source_url(::std::string* source_url) {
  if (source_url != NULL) {
    
  } else {
    
  }
  source_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_url);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.FileInfo.source_url)
}

// optional string sha1_sum = 2;
inline void FileInfo::clear_sha1_sum() {
  sha1_sum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::sha1_sum() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.FileInfo.sha1_sum)
  return sha1_sum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_sha1_sum(const ::std::string& value) {
  
  sha1_sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.FileInfo.sha1_sum)
}
inline void FileInfo::set_sha1_sum(const char* value) {
  
  sha1_sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.FileInfo.sha1_sum)
}
inline void FileInfo::set_sha1_sum(const char* value, size_t size) {
  
  sha1_sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.FileInfo.sha1_sum)
}
inline ::std::string* FileInfo::mutable_sha1_sum() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.FileInfo.sha1_sum)
  return sha1_sum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_sha1_sum() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.FileInfo.sha1_sum)
  
  return sha1_sum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_sha1_sum(::std::string* sha1_sum) {
  if (sha1_sum != NULL) {
    
  } else {
    
  }
  sha1_sum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha1_sum);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.FileInfo.sha1_sum)
}

// optional string mime_type = 3;
inline void FileInfo::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::mime_type() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.FileInfo.mime_type)
  return mime_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.FileInfo.mime_type)
}
inline void FileInfo::set_mime_type(const char* value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.FileInfo.mime_type)
}
inline void FileInfo::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.FileInfo.mime_type)
}
inline ::std::string* FileInfo::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.FileInfo.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_mime_type() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.FileInfo.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.FileInfo.mime_type)
}

inline const FileInfo* FileInfo::internal_default_instance() {
  return &FileInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ContainerInfo

// optional string image = 1;
inline void ContainerInfo::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContainerInfo::image() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ContainerInfo.image)
  return image_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContainerInfo::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ContainerInfo.image)
}
inline void ContainerInfo::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ContainerInfo.image)
}
inline void ContainerInfo::set_image(const char* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ContainerInfo.image)
}
inline ::std::string* ContainerInfo::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ContainerInfo.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContainerInfo::release_image() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ContainerInfo.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContainerInfo::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ContainerInfo.image)
}

inline const ContainerInfo* ContainerInfo::internal_default_instance() {
  return &ContainerInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ZipInfo

// optional string source_url = 3;
inline void ZipInfo::clear_source_url() {
  source_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ZipInfo::source_url() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ZipInfo.source_url)
  return source_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZipInfo::set_source_url(const ::std::string& value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ZipInfo.source_url)
}
inline void ZipInfo::set_source_url(const char* value) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ZipInfo.source_url)
}
inline void ZipInfo::set_source_url(const char* value, size_t size) {
  
  source_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ZipInfo.source_url)
}
inline ::std::string* ZipInfo::mutable_source_url() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ZipInfo.source_url)
  return source_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ZipInfo::release_source_url() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ZipInfo.source_url)
  
  return source_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ZipInfo::set_allocated_source_url(::std::string* source_url) {
  if (source_url != NULL) {
    
  } else {
    
  }
  source_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_url);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ZipInfo.source_url)
}

// optional int32 files_count = 4;
inline void ZipInfo::clear_files_count() {
  files_count_ = 0;
}
inline ::google::protobuf::int32 ZipInfo::files_count() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ZipInfo.files_count)
  return files_count_;
}
inline void ZipInfo::set_files_count(::google::protobuf::int32 value) {
  
  files_count_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ZipInfo.files_count)
}

inline const ZipInfo* ZipInfo::internal_default_instance() {
  return &ZipInfo_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fappengine_2fv1_2fdeploy_2eproto__INCLUDED
