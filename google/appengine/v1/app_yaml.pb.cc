// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/app_yaml.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/appengine/v1/app_yaml.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace appengine {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ApiConfigHandler_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ApiConfigHandler_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorHandler_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorHandler_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorHandler_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* UrlMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UrlMap_reflection_ = NULL;
struct UrlMapOneofInstance {
  const ::google::appengine::v1::StaticFilesHandler* static_files_;
  const ::google::appengine::v1::ScriptHandler* script_;
  const ::google::appengine::v1::ApiEndpointHandler* api_endpoint_;
}* UrlMap_default_oneof_instance_ = NULL;
const ::google::protobuf::EnumDescriptor* UrlMap_RedirectHttpResponseCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StaticFilesHandler_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StaticFilesHandler_reflection_ = NULL;
const ::google::protobuf::Descriptor* StaticFilesHandler_HttpHeadersEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ScriptHandler_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScriptHandler_reflection_ = NULL;
const ::google::protobuf::Descriptor* ApiEndpointHandler_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ApiEndpointHandler_reflection_ = NULL;
const ::google::protobuf::Descriptor* HealthCheck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HealthCheck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AuthFailAction_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* LoginRequirement_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SecurityLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto() {
  protobuf_AddDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/appengine/v1/app_yaml.proto");
  GOOGLE_CHECK(file != NULL);
  ApiConfigHandler_descriptor_ = file->message_type(0);
  static const int ApiConfigHandler_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigHandler, auth_fail_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigHandler, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigHandler, script_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigHandler, security_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigHandler, url_),
  };
  ApiConfigHandler_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ApiConfigHandler_descriptor_,
      ApiConfigHandler::internal_default_instance(),
      ApiConfigHandler_offsets_,
      -1,
      -1,
      -1,
      sizeof(ApiConfigHandler),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiConfigHandler, _internal_metadata_));
  ErrorHandler_descriptor_ = file->message_type(1);
  static const int ErrorHandler_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorHandler, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorHandler, static_file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorHandler, mime_type_),
  };
  ErrorHandler_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorHandler_descriptor_,
      ErrorHandler::internal_default_instance(),
      ErrorHandler_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorHandler),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorHandler, _internal_metadata_));
  ErrorHandler_ErrorCode_descriptor_ = ErrorHandler_descriptor_->enum_type(0);
  UrlMap_descriptor_ = file->message_type(2);
  static const int UrlMap_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, url_regex_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UrlMap_default_oneof_instance_, static_files_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UrlMap_default_oneof_instance_, script_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UrlMap_default_oneof_instance_, api_endpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, security_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, auth_fail_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, redirect_http_response_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, handler_type_),
  };
  UrlMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UrlMap_descriptor_,
      UrlMap::internal_default_instance(),
      UrlMap_offsets_,
      -1,
      -1,
      -1,
      UrlMap_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, _oneof_case_[0]),
      sizeof(UrlMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlMap, _internal_metadata_));
  UrlMap_RedirectHttpResponseCode_descriptor_ = UrlMap_descriptor_->enum_type(0);
  StaticFilesHandler_descriptor_ = file->message_type(3);
  static const int StaticFilesHandler_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, upload_path_regex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, http_headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, mime_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, expiration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, require_matching_file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, application_readable_),
  };
  StaticFilesHandler_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StaticFilesHandler_descriptor_,
      StaticFilesHandler::internal_default_instance(),
      StaticFilesHandler_offsets_,
      -1,
      -1,
      -1,
      sizeof(StaticFilesHandler),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticFilesHandler, _internal_metadata_));
  StaticFilesHandler_HttpHeadersEntry_descriptor_ = StaticFilesHandler_descriptor_->nested_type(0);
  ScriptHandler_descriptor_ = file->message_type(4);
  static const int ScriptHandler_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptHandler, script_path_),
  };
  ScriptHandler_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScriptHandler_descriptor_,
      ScriptHandler::internal_default_instance(),
      ScriptHandler_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScriptHandler),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScriptHandler, _internal_metadata_));
  ApiEndpointHandler_descriptor_ = file->message_type(5);
  static const int ApiEndpointHandler_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiEndpointHandler, script_path_),
  };
  ApiEndpointHandler_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ApiEndpointHandler_descriptor_,
      ApiEndpointHandler::internal_default_instance(),
      ApiEndpointHandler_offsets_,
      -1,
      -1,
      -1,
      sizeof(ApiEndpointHandler),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApiEndpointHandler, _internal_metadata_));
  HealthCheck_descriptor_ = file->message_type(6);
  static const int HealthCheck_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, disable_health_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, healthy_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, unhealthy_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, restart_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, check_interval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, timeout_),
  };
  HealthCheck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HealthCheck_descriptor_,
      HealthCheck::internal_default_instance(),
      HealthCheck_offsets_,
      -1,
      -1,
      -1,
      sizeof(HealthCheck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HealthCheck, _internal_metadata_));
  Library_descriptor_ = file->message_type(7);
  static const int Library_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library, version_),
  };
  Library_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Library_descriptor_,
      Library::internal_default_instance(),
      Library_offsets_,
      -1,
      -1,
      -1,
      sizeof(Library),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library, _internal_metadata_));
  AuthFailAction_descriptor_ = file->enum_type(0);
  LoginRequirement_descriptor_ = file->enum_type(1);
  SecurityLevel_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ApiConfigHandler_descriptor_, ApiConfigHandler::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorHandler_descriptor_, ErrorHandler::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UrlMap_descriptor_, UrlMap::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StaticFilesHandler_descriptor_, StaticFilesHandler::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        StaticFilesHandler_HttpHeadersEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                StaticFilesHandler_HttpHeadersEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScriptHandler_descriptor_, ScriptHandler::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ApiEndpointHandler_descriptor_, ApiEndpointHandler::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HealthCheck_descriptor_, HealthCheck::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Library_descriptor_, Library::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fappengine_2fv1_2fapp_5fyaml_2eproto() {
  ApiConfigHandler_default_instance_.Shutdown();
  delete ApiConfigHandler_reflection_;
  ErrorHandler_default_instance_.Shutdown();
  delete ErrorHandler_reflection_;
  UrlMap_default_instance_.Shutdown();
  delete UrlMap_default_oneof_instance_;
  delete UrlMap_reflection_;
  StaticFilesHandler_default_instance_.Shutdown();
  delete StaticFilesHandler_reflection_;
  ScriptHandler_default_instance_.Shutdown();
  delete ScriptHandler_reflection_;
  ApiEndpointHandler_default_instance_.Shutdown();
  delete ApiEndpointHandler_reflection_;
  HealthCheck_default_instance_.Shutdown();
  delete HealthCheck_reflection_;
  Library_default_instance_.Shutdown();
  delete Library_reflection_;
}

void protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ApiConfigHandler_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ErrorHandler_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UrlMap_default_instance_.DefaultConstruct();
  UrlMap_default_oneof_instance_ = new UrlMapOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  StaticFilesHandler_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ScriptHandler_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ApiEndpointHandler_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HealthCheck_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Library_default_instance_.DefaultConstruct();
  ApiConfigHandler_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorHandler_default_instance_.get_mutable()->InitAsDefaultInstance();
  UrlMap_default_instance_.get_mutable()->InitAsDefaultInstance();
  StaticFilesHandler_default_instance_.get_mutable()->InitAsDefaultInstance();
  ScriptHandler_default_instance_.get_mutable()->InitAsDefaultInstance();
  ApiEndpointHandler_default_instance_.get_mutable()->InitAsDefaultInstance();
  HealthCheck_default_instance_.get_mutable()->InitAsDefaultInstance();
  Library_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_once_);
void protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_once_,
                 &protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_impl);
}
void protobuf_AddDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"google/appengine/v1/app_yaml.proto\022\023go"
    "ogle.appengine.v1\032\034google/api/annotation"
    "s.proto\032\036google/protobuf/duration.proto\""
    "\340\001\n\020ApiConfigHandler\022=\n\020auth_fail_action"
    "\030\001 \001(\0162#.google.appengine.v1.AuthFailAct"
    "ion\0224\n\005login\030\002 \001(\0162%.google.appengine.v1"
    ".LoginRequirement\022\016\n\006script\030\003 \001(\t\022:\n\016sec"
    "urity_level\030\004 \001(\0162\".google.appengine.v1."
    "SecurityLevel\022\013\n\003url\030\005 \001(\t\"\217\002\n\014ErrorHand"
    "ler\022\?\n\nerror_code\030\001 \001(\0162+.google.appengi"
    "ne.v1.ErrorHandler.ErrorCode\022\023\n\013static_f"
    "ile\030\002 \001(\t\022\021\n\tmime_type\030\003 \001(\t\"\225\001\n\tErrorCo"
    "de\022\032\n\026ERROR_CODE_UNSPECIFIED\020\000\022\026\n\022ERROR_"
    "CODE_DEFAULT\020\000\022\031\n\025ERROR_CODE_OVER_QUOTA\020"
    "\001\022\035\n\031ERROR_CODE_DOS_API_DENIAL\020\002\022\026\n\022ERRO"
    "R_CODE_TIMEOUT\020\003\032\002\020\001\"\315\005\n\006UrlMap\022\021\n\turl_r"
    "egex\030\001 \001(\t\022\?\n\014static_files\030\002 \001(\0132\'.googl"
    "e.appengine.v1.StaticFilesHandlerH\000\0224\n\006s"
    "cript\030\003 \001(\0132\".google.appengine.v1.Script"
    "HandlerH\000\022\?\n\014api_endpoint\030\004 \001(\0132\'.google"
    ".appengine.v1.ApiEndpointHandlerH\000\022:\n\016se"
    "curity_level\030\005 \001(\0162\".google.appengine.v1"
    ".SecurityLevel\0224\n\005login\030\006 \001(\0162%.google.a"
    "ppengine.v1.LoginRequirement\022=\n\020auth_fai"
    "l_action\030\007 \001(\0162#.google.appengine.v1.Aut"
    "hFailAction\022Y\n\033redirect_http_response_co"
    "de\030\010 \001(\01624.google.appengine.v1.UrlMap.Re"
    "directHttpResponseCode\"\333\001\n\030RedirectHttpR"
    "esponseCode\022+\n\'REDIRECT_HTTP_RESPONSE_CO"
    "DE_UNSPECIFIED\020\000\022#\n\037REDIRECT_HTTP_RESPON"
    "SE_CODE_301\020\001\022#\n\037REDIRECT_HTTP_RESPONSE_"
    "CODE_302\020\002\022#\n\037REDIRECT_HTTP_RESPONSE_COD"
    "E_303\020\003\022#\n\037REDIRECT_HTTP_RESPONSE_CODE_3"
    "07\020\004B\016\n\014handler_type\"\300\002\n\022StaticFilesHand"
    "ler\022\014\n\004path\030\001 \001(\t\022\031\n\021upload_path_regex\030\002"
    " \001(\t\022N\n\014http_headers\030\003 \003(\01328.google.appe"
    "ngine.v1.StaticFilesHandler.HttpHeadersE"
    "ntry\022\021\n\tmime_type\030\004 \001(\t\022-\n\nexpiration\030\005 "
    "\001(\0132\031.google.protobuf.Duration\022\035\n\025requir"
    "e_matching_file\030\006 \001(\010\022\034\n\024application_rea"
    "dable\030\007 \001(\010\0322\n\020HttpHeadersEntry\022\013\n\003key\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"$\n\rScriptHandler"
    "\022\023\n\013script_path\030\001 \001(\t\")\n\022ApiEndpointHand"
    "ler\022\023\n\013script_path\030\001 \001(\t\"\353\001\n\013HealthCheck"
    "\022\034\n\024disable_health_check\030\001 \001(\010\022\014\n\004host\030\002"
    " \001(\t\022\031\n\021healthy_threshold\030\003 \001(\r\022\033\n\023unhea"
    "lthy_threshold\030\004 \001(\r\022\031\n\021restart_threshol"
    "d\030\005 \001(\r\0221\n\016check_interval\030\006 \001(\0132\031.google"
    ".protobuf.Duration\022*\n\007timeout\030\007 \001(\0132\031.go"
    "ogle.protobuf.Duration\"(\n\007Library\022\014\n\004nam"
    "e\030\001 \001(\t\022\017\n\007version\030\002 \001(\t*t\n\016AuthFailActi"
    "on\022 \n\034AUTH_FAIL_ACTION_UNSPECIFIED\020\000\022\035\n\031"
    "AUTH_FAIL_ACTION_REDIRECT\020\001\022!\n\035AUTH_FAIL"
    "_ACTION_UNAUTHORIZED\020\002*b\n\020LoginRequireme"
    "nt\022\025\n\021LOGIN_UNSPECIFIED\020\000\022\022\n\016LOGIN_OPTIO"
    "NAL\020\001\022\017\n\013LOGIN_ADMIN\020\002\022\022\n\016LOGIN_REQUIRED"
    "\020\003*y\n\rSecurityLevel\022\026\n\022SECURE_UNSPECIFIE"
    "D\020\000\022\022\n\016SECURE_DEFAULT\020\000\022\020\n\014SECURE_NEVER\020"
    "\001\022\023\n\017SECURE_OPTIONAL\020\002\022\021\n\rSECURE_ALWAYS\020"
    "\003\032\002\020\001Bg\n\027com.google.appengine.v1B\014AppYam"
    "lProtoP\001Z<google.golang.org/genproto/goo"
    "gleapis/appengine/v1;appengineb\006proto3", 2478);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/v1/app_yaml.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fappengine_2fv1_2fapp_5fyaml_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_once_);
void protobuf_AddDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_once_,
                 &protobuf_AddDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fappengine_2fv1_2fapp_5fyaml_2eproto {
  StaticDescriptorInitializer_google_2fappengine_2fv1_2fapp_5fyaml_2eproto() {
    protobuf_AddDesc_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  }
} static_descriptor_initializer_google_2fappengine_2fv1_2fapp_5fyaml_2eproto_;
const ::google::protobuf::EnumDescriptor* AuthFailAction_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthFailAction_descriptor_;
}
bool AuthFailAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginRequirement_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequirement_descriptor_;
}
bool LoginRequirement_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SecurityLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SecurityLevel_descriptor_;
}
bool SecurityLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApiConfigHandler::kAuthFailActionFieldNumber;
const int ApiConfigHandler::kLoginFieldNumber;
const int ApiConfigHandler::kScriptFieldNumber;
const int ApiConfigHandler::kSecurityLevelFieldNumber;
const int ApiConfigHandler::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApiConfigHandler::ApiConfigHandler()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.ApiConfigHandler)
}

void ApiConfigHandler::InitAsDefaultInstance() {
}

ApiConfigHandler::ApiConfigHandler(const ApiConfigHandler& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.ApiConfigHandler)
}

void ApiConfigHandler::SharedCtor() {
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_fail_action_, 0, reinterpret_cast<char*>(&security_level_) -
    reinterpret_cast<char*>(&auth_fail_action_) + sizeof(security_level_));
  _cached_size_ = 0;
}

ApiConfigHandler::~ApiConfigHandler() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.ApiConfigHandler)
  SharedDtor();
}

void ApiConfigHandler::SharedDtor() {
  script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApiConfigHandler::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApiConfigHandler::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ApiConfigHandler_descriptor_;
}

const ApiConfigHandler& ApiConfigHandler::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ApiConfigHandler> ApiConfigHandler_default_instance_;

ApiConfigHandler* ApiConfigHandler::New(::google::protobuf::Arena* arena) const {
  ApiConfigHandler* n = new ApiConfigHandler;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApiConfigHandler::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.ApiConfigHandler)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ApiConfigHandler, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ApiConfigHandler*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(auth_fail_action_, security_level_);
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ApiConfigHandler::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.ApiConfigHandler)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.appengine.v1.AuthFailAction auth_fail_action = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_auth_fail_action(static_cast< ::google::appengine::v1::AuthFailAction >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_login;
        break;
      }

      // optional .google.appengine.v1.LoginRequirement login = 2;
      case 2: {
        if (tag == 16) {
         parse_login:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_login(static_cast< ::google::appengine::v1::LoginRequirement >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_script;
        break;
      }

      // optional string script = 3;
      case 3: {
        if (tag == 26) {
         parse_script:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script().data(), this->script().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ApiConfigHandler.script"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_security_level;
        break;
      }

      // optional .google.appengine.v1.SecurityLevel security_level = 4;
      case 4: {
        if (tag == 32) {
         parse_security_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_security_level(static_cast< ::google::appengine::v1::SecurityLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_url;
        break;
      }

      // optional string url = 5;
      case 5: {
        if (tag == 42) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ApiConfigHandler.url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.ApiConfigHandler)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.ApiConfigHandler)
  return false;
#undef DO_
}

void ApiConfigHandler::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.ApiConfigHandler)
  // optional .google.appengine.v1.AuthFailAction auth_fail_action = 1;
  if (this->auth_fail_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->auth_fail_action(), output);
  }

  // optional .google.appengine.v1.LoginRequirement login = 2;
  if (this->login() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->login(), output);
  }

  // optional string script = 3;
  if (this->script().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script().data(), this->script().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ApiConfigHandler.script");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->script(), output);
  }

  // optional .google.appengine.v1.SecurityLevel security_level = 4;
  if (this->security_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->security_level(), output);
  }

  // optional string url = 5;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ApiConfigHandler.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.ApiConfigHandler)
}

::google::protobuf::uint8* ApiConfigHandler::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.ApiConfigHandler)
  // optional .google.appengine.v1.AuthFailAction auth_fail_action = 1;
  if (this->auth_fail_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->auth_fail_action(), target);
  }

  // optional .google.appengine.v1.LoginRequirement login = 2;
  if (this->login() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->login(), target);
  }

  // optional string script = 3;
  if (this->script().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script().data(), this->script().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ApiConfigHandler.script");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->script(), target);
  }

  // optional .google.appengine.v1.SecurityLevel security_level = 4;
  if (this->security_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->security_level(), target);
  }

  // optional string url = 5;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ApiConfigHandler.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.ApiConfigHandler)
  return target;
}

size_t ApiConfigHandler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.ApiConfigHandler)
  size_t total_size = 0;

  // optional .google.appengine.v1.AuthFailAction auth_fail_action = 1;
  if (this->auth_fail_action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->auth_fail_action());
  }

  // optional .google.appengine.v1.LoginRequirement login = 2;
  if (this->login() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->login());
  }

  // optional string script = 3;
  if (this->script().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script());
  }

  // optional .google.appengine.v1.SecurityLevel security_level = 4;
  if (this->security_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->security_level());
  }

  // optional string url = 5;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApiConfigHandler::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.ApiConfigHandler)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ApiConfigHandler* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApiConfigHandler>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.ApiConfigHandler)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.ApiConfigHandler)
    UnsafeMergeFrom(*source);
  }
}

void ApiConfigHandler::MergeFrom(const ApiConfigHandler& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.ApiConfigHandler)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ApiConfigHandler::UnsafeMergeFrom(const ApiConfigHandler& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.auth_fail_action() != 0) {
    set_auth_fail_action(from.auth_fail_action());
  }
  if (from.login() != 0) {
    set_login(from.login());
  }
  if (from.script().size() > 0) {

    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  if (from.security_level() != 0) {
    set_security_level(from.security_level());
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void ApiConfigHandler::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.ApiConfigHandler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiConfigHandler::CopyFrom(const ApiConfigHandler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.ApiConfigHandler)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ApiConfigHandler::IsInitialized() const {

  return true;
}

void ApiConfigHandler::Swap(ApiConfigHandler* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApiConfigHandler::InternalSwap(ApiConfigHandler* other) {
  std::swap(auth_fail_action_, other->auth_fail_action_);
  std::swap(login_, other->login_);
  script_.Swap(&other->script_);
  std::swap(security_level_, other->security_level_);
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApiConfigHandler::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ApiConfigHandler_descriptor_;
  metadata.reflection = ApiConfigHandler_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApiConfigHandler

// optional .google.appengine.v1.AuthFailAction auth_fail_action = 1;
void ApiConfigHandler::clear_auth_fail_action() {
  auth_fail_action_ = 0;
}
::google::appengine::v1::AuthFailAction ApiConfigHandler::auth_fail_action() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.auth_fail_action)
  return static_cast< ::google::appengine::v1::AuthFailAction >(auth_fail_action_);
}
void ApiConfigHandler::set_auth_fail_action(::google::appengine::v1::AuthFailAction value) {
  
  auth_fail_action_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.auth_fail_action)
}

// optional .google.appengine.v1.LoginRequirement login = 2;
void ApiConfigHandler::clear_login() {
  login_ = 0;
}
::google::appengine::v1::LoginRequirement ApiConfigHandler::login() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.login)
  return static_cast< ::google::appengine::v1::LoginRequirement >(login_);
}
void ApiConfigHandler::set_login(::google::appengine::v1::LoginRequirement value) {
  
  login_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.login)
}

// optional string script = 3;
void ApiConfigHandler::clear_script() {
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ApiConfigHandler::script() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.script)
  return script_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApiConfigHandler::set_script(const ::std::string& value) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.script)
}
void ApiConfigHandler::set_script(const char* value) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ApiConfigHandler.script)
}
void ApiConfigHandler::set_script(const char* value, size_t size) {
  
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ApiConfigHandler.script)
}
::std::string* ApiConfigHandler::mutable_script() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ApiConfigHandler.script)
  return script_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ApiConfigHandler::release_script() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ApiConfigHandler.script)
  
  return script_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApiConfigHandler::set_allocated_script(::std::string* script) {
  if (script != NULL) {
    
  } else {
    
  }
  script_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ApiConfigHandler.script)
}

// optional .google.appengine.v1.SecurityLevel security_level = 4;
void ApiConfigHandler::clear_security_level() {
  security_level_ = 0;
}
::google::appengine::v1::SecurityLevel ApiConfigHandler::security_level() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.security_level)
  return static_cast< ::google::appengine::v1::SecurityLevel >(security_level_);
}
void ApiConfigHandler::set_security_level(::google::appengine::v1::SecurityLevel value) {
  
  security_level_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.security_level)
}

// optional string url = 5;
void ApiConfigHandler::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ApiConfigHandler::url() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiConfigHandler.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApiConfigHandler::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiConfigHandler.url)
}
void ApiConfigHandler::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ApiConfigHandler.url)
}
void ApiConfigHandler::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ApiConfigHandler.url)
}
::std::string* ApiConfigHandler::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ApiConfigHandler.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ApiConfigHandler::release_url() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ApiConfigHandler.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApiConfigHandler::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ApiConfigHandler.url)
}

inline const ApiConfigHandler* ApiConfigHandler::internal_default_instance() {
  return &ApiConfigHandler_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ErrorHandler_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorHandler_ErrorCode_descriptor_;
}
bool ErrorHandler_ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ErrorHandler_ErrorCode ErrorHandler::ERROR_CODE_UNSPECIFIED;
const ErrorHandler_ErrorCode ErrorHandler::ERROR_CODE_DEFAULT;
const ErrorHandler_ErrorCode ErrorHandler::ERROR_CODE_OVER_QUOTA;
const ErrorHandler_ErrorCode ErrorHandler::ERROR_CODE_DOS_API_DENIAL;
const ErrorHandler_ErrorCode ErrorHandler::ERROR_CODE_TIMEOUT;
const ErrorHandler_ErrorCode ErrorHandler::ErrorCode_MIN;
const ErrorHandler_ErrorCode ErrorHandler::ErrorCode_MAX;
const int ErrorHandler::ErrorCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorHandler::kErrorCodeFieldNumber;
const int ErrorHandler::kStaticFileFieldNumber;
const int ErrorHandler::kMimeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorHandler::ErrorHandler()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.ErrorHandler)
}

void ErrorHandler::InitAsDefaultInstance() {
}

ErrorHandler::ErrorHandler(const ErrorHandler& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.ErrorHandler)
}

void ErrorHandler::SharedCtor() {
  static_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

ErrorHandler::~ErrorHandler() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.ErrorHandler)
  SharedDtor();
}

void ErrorHandler::SharedDtor() {
  static_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorHandler::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorHandler::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorHandler_descriptor_;
}

const ErrorHandler& ErrorHandler::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorHandler> ErrorHandler_default_instance_;

ErrorHandler* ErrorHandler::New(::google::protobuf::Arena* arena) const {
  ErrorHandler* n = new ErrorHandler;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorHandler::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.ErrorHandler)
  error_code_ = 0;
  static_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ErrorHandler::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.ErrorHandler)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::google::appengine::v1::ErrorHandler_ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_static_file;
        break;
      }

      // optional string static_file = 2;
      case 2: {
        if (tag == 18) {
         parse_static_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_static_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->static_file().data(), this->static_file().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ErrorHandler.static_file"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mime_type;
        break;
      }

      // optional string mime_type = 3;
      case 3: {
        if (tag == 26) {
         parse_mime_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), this->mime_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ErrorHandler.mime_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.ErrorHandler)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.ErrorHandler)
  return false;
#undef DO_
}

void ErrorHandler::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.ErrorHandler)
  // optional .google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // optional string static_file = 2;
  if (this->static_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->static_file().data(), this->static_file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ErrorHandler.static_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->static_file(), output);
  }

  // optional string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), this->mime_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ErrorHandler.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mime_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.ErrorHandler)
}

::google::protobuf::uint8* ErrorHandler::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.ErrorHandler)
  // optional .google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // optional string static_file = 2;
  if (this->static_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->static_file().data(), this->static_file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ErrorHandler.static_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->static_file(), target);
  }

  // optional string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), this->mime_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ErrorHandler.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mime_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.ErrorHandler)
  return target;
}

size_t ErrorHandler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.ErrorHandler)
  size_t total_size = 0;

  // optional .google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  // optional string static_file = 2;
  if (this->static_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->static_file());
  }

  // optional string mime_type = 3;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorHandler::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.ErrorHandler)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorHandler* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorHandler>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.ErrorHandler)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.ErrorHandler)
    UnsafeMergeFrom(*source);
  }
}

void ErrorHandler::MergeFrom(const ErrorHandler& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.ErrorHandler)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorHandler::UnsafeMergeFrom(const ErrorHandler& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.static_file().size() > 0) {

    static_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.static_file_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
}

void ErrorHandler::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.ErrorHandler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorHandler::CopyFrom(const ErrorHandler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.ErrorHandler)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorHandler::IsInitialized() const {

  return true;
}

void ErrorHandler::Swap(ErrorHandler* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorHandler::InternalSwap(ErrorHandler* other) {
  std::swap(error_code_, other->error_code_);
  static_file_.Swap(&other->static_file_);
  mime_type_.Swap(&other->mime_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorHandler::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorHandler_descriptor_;
  metadata.reflection = ErrorHandler_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorHandler

// optional .google.appengine.v1.ErrorHandler.ErrorCode error_code = 1;
void ErrorHandler::clear_error_code() {
  error_code_ = 0;
}
::google::appengine::v1::ErrorHandler_ErrorCode ErrorHandler::error_code() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ErrorHandler.error_code)
  return static_cast< ::google::appengine::v1::ErrorHandler_ErrorCode >(error_code_);
}
void ErrorHandler::set_error_code(::google::appengine::v1::ErrorHandler_ErrorCode value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.ErrorHandler.error_code)
}

// optional string static_file = 2;
void ErrorHandler::clear_static_file() {
  static_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorHandler::static_file() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ErrorHandler.static_file)
  return static_file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorHandler::set_static_file(const ::std::string& value) {
  
  static_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ErrorHandler.static_file)
}
void ErrorHandler::set_static_file(const char* value) {
  
  static_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ErrorHandler.static_file)
}
void ErrorHandler::set_static_file(const char* value, size_t size) {
  
  static_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ErrorHandler.static_file)
}
::std::string* ErrorHandler::mutable_static_file() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ErrorHandler.static_file)
  return static_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorHandler::release_static_file() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ErrorHandler.static_file)
  
  return static_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorHandler::set_allocated_static_file(::std::string* static_file) {
  if (static_file != NULL) {
    
  } else {
    
  }
  static_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), static_file);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ErrorHandler.static_file)
}

// optional string mime_type = 3;
void ErrorHandler::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorHandler::mime_type() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ErrorHandler.mime_type)
  return mime_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorHandler::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ErrorHandler.mime_type)
}
void ErrorHandler::set_mime_type(const char* value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ErrorHandler.mime_type)
}
void ErrorHandler::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ErrorHandler.mime_type)
}
::std::string* ErrorHandler::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ErrorHandler.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorHandler::release_mime_type() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ErrorHandler.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorHandler::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ErrorHandler.mime_type)
}

inline const ErrorHandler* ErrorHandler::internal_default_instance() {
  return &ErrorHandler_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* UrlMap_RedirectHttpResponseCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UrlMap_RedirectHttpResponseCode_descriptor_;
}
bool UrlMap_RedirectHttpResponseCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UrlMap_RedirectHttpResponseCode UrlMap::REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED;
const UrlMap_RedirectHttpResponseCode UrlMap::REDIRECT_HTTP_RESPONSE_CODE_301;
const UrlMap_RedirectHttpResponseCode UrlMap::REDIRECT_HTTP_RESPONSE_CODE_302;
const UrlMap_RedirectHttpResponseCode UrlMap::REDIRECT_HTTP_RESPONSE_CODE_303;
const UrlMap_RedirectHttpResponseCode UrlMap::REDIRECT_HTTP_RESPONSE_CODE_307;
const UrlMap_RedirectHttpResponseCode UrlMap::RedirectHttpResponseCode_MIN;
const UrlMap_RedirectHttpResponseCode UrlMap::RedirectHttpResponseCode_MAX;
const int UrlMap::RedirectHttpResponseCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UrlMap::kUrlRegexFieldNumber;
const int UrlMap::kStaticFilesFieldNumber;
const int UrlMap::kScriptFieldNumber;
const int UrlMap::kApiEndpointFieldNumber;
const int UrlMap::kSecurityLevelFieldNumber;
const int UrlMap::kLoginFieldNumber;
const int UrlMap::kAuthFailActionFieldNumber;
const int UrlMap::kRedirectHttpResponseCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UrlMap::UrlMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.UrlMap)
}

void UrlMap::InitAsDefaultInstance() {
  UrlMap_default_oneof_instance_->static_files_ = const_cast< ::google::appengine::v1::StaticFilesHandler*>(
      ::google::appengine::v1::StaticFilesHandler::internal_default_instance());
  UrlMap_default_oneof_instance_->script_ = const_cast< ::google::appengine::v1::ScriptHandler*>(
      ::google::appengine::v1::ScriptHandler::internal_default_instance());
  UrlMap_default_oneof_instance_->api_endpoint_ = const_cast< ::google::appengine::v1::ApiEndpointHandler*>(
      ::google::appengine::v1::ApiEndpointHandler::internal_default_instance());
}

UrlMap::UrlMap(const UrlMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.UrlMap)
}

void UrlMap::SharedCtor() {
  url_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&security_level_, 0, reinterpret_cast<char*>(&redirect_http_response_code_) -
    reinterpret_cast<char*>(&security_level_) + sizeof(redirect_http_response_code_));
  clear_has_handler_type();
  _cached_size_ = 0;
}

UrlMap::~UrlMap() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.UrlMap)
  SharedDtor();
}

void UrlMap::SharedDtor() {
  url_regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_handler_type()) {
    clear_handler_type();
  }
}

void UrlMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UrlMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UrlMap_descriptor_;
}

const UrlMap& UrlMap::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UrlMap> UrlMap_default_instance_;

UrlMap* UrlMap::New(::google::protobuf::Arena* arena) const {
  UrlMap* n = new UrlMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UrlMap::clear_handler_type() {
// @@protoc_insertion_point(one_of_clear_start:google.appengine.v1.UrlMap)
  switch (handler_type_case()) {
    case kStaticFiles: {
      delete handler_type_.static_files_;
      break;
    }
    case kScript: {
      delete handler_type_.script_;
      break;
    }
    case kApiEndpoint: {
      delete handler_type_.api_endpoint_;
      break;
    }
    case HANDLER_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = HANDLER_TYPE_NOT_SET;
}


void UrlMap::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.UrlMap)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UrlMap, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UrlMap*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(security_level_, redirect_http_response_code_);
  url_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  clear_handler_type();
}

bool UrlMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.UrlMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url_regex = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url_regex().data(), this->url_regex().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.UrlMap.url_regex"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_static_files;
        break;
      }

      // optional .google.appengine.v1.StaticFilesHandler static_files = 2;
      case 2: {
        if (tag == 18) {
         parse_static_files:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_static_files()));
        } else {
          goto handle_unusual;
        }
        goto after_api_endpoint;
        break;
      }

      // optional .google.appengine.v1.ScriptHandler script = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_script()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_api_endpoint;
        break;
      }

      // optional .google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
      case 4: {
        if (tag == 34) {
         parse_api_endpoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_api_endpoint()));
        } else {
          goto handle_unusual;
        }
       after_api_endpoint:
        if (input->ExpectTag(40)) goto parse_security_level;
        break;
      }

      // optional .google.appengine.v1.SecurityLevel security_level = 5;
      case 5: {
        if (tag == 40) {
         parse_security_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_security_level(static_cast< ::google::appengine::v1::SecurityLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_login;
        break;
      }

      // optional .google.appengine.v1.LoginRequirement login = 6;
      case 6: {
        if (tag == 48) {
         parse_login:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_login(static_cast< ::google::appengine::v1::LoginRequirement >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_auth_fail_action;
        break;
      }

      // optional .google.appengine.v1.AuthFailAction auth_fail_action = 7;
      case 7: {
        if (tag == 56) {
         parse_auth_fail_action:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_auth_fail_action(static_cast< ::google::appengine::v1::AuthFailAction >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_redirect_http_response_code;
        break;
      }

      // optional .google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
      case 8: {
        if (tag == 64) {
         parse_redirect_http_response_code:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_redirect_http_response_code(static_cast< ::google::appengine::v1::UrlMap_RedirectHttpResponseCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.UrlMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.UrlMap)
  return false;
#undef DO_
}

void UrlMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.UrlMap)
  // optional string url_regex = 1;
  if (this->url_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_regex().data(), this->url_regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.UrlMap.url_regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url_regex(), output);
  }

  // optional .google.appengine.v1.StaticFilesHandler static_files = 2;
  if (has_static_files()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *handler_type_.static_files_, output);
  }

  // optional .google.appengine.v1.ScriptHandler script = 3;
  if (has_script()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *handler_type_.script_, output);
  }

  // optional .google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
  if (has_api_endpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *handler_type_.api_endpoint_, output);
  }

  // optional .google.appengine.v1.SecurityLevel security_level = 5;
  if (this->security_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->security_level(), output);
  }

  // optional .google.appengine.v1.LoginRequirement login = 6;
  if (this->login() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->login(), output);
  }

  // optional .google.appengine.v1.AuthFailAction auth_fail_action = 7;
  if (this->auth_fail_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->auth_fail_action(), output);
  }

  // optional .google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
  if (this->redirect_http_response_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->redirect_http_response_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.UrlMap)
}

::google::protobuf::uint8* UrlMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.UrlMap)
  // optional string url_regex = 1;
  if (this->url_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_regex().data(), this->url_regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.UrlMap.url_regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url_regex(), target);
  }

  // optional .google.appengine.v1.StaticFilesHandler static_files = 2;
  if (has_static_files()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *handler_type_.static_files_, false, target);
  }

  // optional .google.appengine.v1.ScriptHandler script = 3;
  if (has_script()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *handler_type_.script_, false, target);
  }

  // optional .google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
  if (has_api_endpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *handler_type_.api_endpoint_, false, target);
  }

  // optional .google.appengine.v1.SecurityLevel security_level = 5;
  if (this->security_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->security_level(), target);
  }

  // optional .google.appengine.v1.LoginRequirement login = 6;
  if (this->login() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->login(), target);
  }

  // optional .google.appengine.v1.AuthFailAction auth_fail_action = 7;
  if (this->auth_fail_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->auth_fail_action(), target);
  }

  // optional .google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
  if (this->redirect_http_response_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->redirect_http_response_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.UrlMap)
  return target;
}

size_t UrlMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.UrlMap)
  size_t total_size = 0;

  // optional string url_regex = 1;
  if (this->url_regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url_regex());
  }

  // optional .google.appengine.v1.SecurityLevel security_level = 5;
  if (this->security_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->security_level());
  }

  // optional .google.appengine.v1.LoginRequirement login = 6;
  if (this->login() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->login());
  }

  // optional .google.appengine.v1.AuthFailAction auth_fail_action = 7;
  if (this->auth_fail_action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->auth_fail_action());
  }

  // optional .google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
  if (this->redirect_http_response_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->redirect_http_response_code());
  }

  switch (handler_type_case()) {
    // optional .google.appengine.v1.StaticFilesHandler static_files = 2;
    case kStaticFiles: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *handler_type_.static_files_);
      break;
    }
    // optional .google.appengine.v1.ScriptHandler script = 3;
    case kScript: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *handler_type_.script_);
      break;
    }
    // optional .google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
    case kApiEndpoint: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *handler_type_.api_endpoint_);
      break;
    }
    case HANDLER_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UrlMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.UrlMap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UrlMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UrlMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.UrlMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.UrlMap)
    UnsafeMergeFrom(*source);
  }
}

void UrlMap::MergeFrom(const UrlMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.UrlMap)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UrlMap::UnsafeMergeFrom(const UrlMap& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.handler_type_case()) {
    case kStaticFiles: {
      mutable_static_files()->::google::appengine::v1::StaticFilesHandler::MergeFrom(from.static_files());
      break;
    }
    case kScript: {
      mutable_script()->::google::appengine::v1::ScriptHandler::MergeFrom(from.script());
      break;
    }
    case kApiEndpoint: {
      mutable_api_endpoint()->::google::appengine::v1::ApiEndpointHandler::MergeFrom(from.api_endpoint());
      break;
    }
    case HANDLER_TYPE_NOT_SET: {
      break;
    }
  }
  if (from.url_regex().size() > 0) {

    url_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_regex_);
  }
  if (from.security_level() != 0) {
    set_security_level(from.security_level());
  }
  if (from.login() != 0) {
    set_login(from.login());
  }
  if (from.auth_fail_action() != 0) {
    set_auth_fail_action(from.auth_fail_action());
  }
  if (from.redirect_http_response_code() != 0) {
    set_redirect_http_response_code(from.redirect_http_response_code());
  }
}

void UrlMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.UrlMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UrlMap::CopyFrom(const UrlMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.UrlMap)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UrlMap::IsInitialized() const {

  return true;
}

void UrlMap::Swap(UrlMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UrlMap::InternalSwap(UrlMap* other) {
  url_regex_.Swap(&other->url_regex_);
  std::swap(security_level_, other->security_level_);
  std::swap(login_, other->login_);
  std::swap(auth_fail_action_, other->auth_fail_action_);
  std::swap(redirect_http_response_code_, other->redirect_http_response_code_);
  std::swap(handler_type_, other->handler_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UrlMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UrlMap_descriptor_;
  metadata.reflection = UrlMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UrlMap

// optional string url_regex = 1;
void UrlMap::clear_url_regex() {
  url_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UrlMap::url_regex() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.url_regex)
  return url_regex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UrlMap::set_url_regex(const ::std::string& value) {
  
  url_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.url_regex)
}
void UrlMap::set_url_regex(const char* value) {
  
  url_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.UrlMap.url_regex)
}
void UrlMap::set_url_regex(const char* value, size_t size) {
  
  url_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.UrlMap.url_regex)
}
::std::string* UrlMap::mutable_url_regex() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.url_regex)
  return url_regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UrlMap::release_url_regex() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.url_regex)
  
  return url_regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UrlMap::set_allocated_url_regex(::std::string* url_regex) {
  if (url_regex != NULL) {
    
  } else {
    
  }
  url_regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_regex);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlMap.url_regex)
}

// optional .google.appengine.v1.StaticFilesHandler static_files = 2;
bool UrlMap::has_static_files() const {
  return handler_type_case() == kStaticFiles;
}
void UrlMap::set_has_static_files() {
  _oneof_case_[0] = kStaticFiles;
}
void UrlMap::clear_static_files() {
  if (has_static_files()) {
    delete handler_type_.static_files_;
    clear_has_handler_type();
  }
}
 const ::google::appengine::v1::StaticFilesHandler& UrlMap::static_files() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.static_files)
  return has_static_files()
      ? *handler_type_.static_files_
      : ::google::appengine::v1::StaticFilesHandler::default_instance();
}
::google::appengine::v1::StaticFilesHandler* UrlMap::mutable_static_files() {
  if (!has_static_files()) {
    clear_handler_type();
    set_has_static_files();
    handler_type_.static_files_ = new ::google::appengine::v1::StaticFilesHandler;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.static_files)
  return handler_type_.static_files_;
}
::google::appengine::v1::StaticFilesHandler* UrlMap::release_static_files() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.static_files)
  if (has_static_files()) {
    clear_has_handler_type();
    ::google::appengine::v1::StaticFilesHandler* temp = handler_type_.static_files_;
    handler_type_.static_files_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UrlMap::set_allocated_static_files(::google::appengine::v1::StaticFilesHandler* static_files) {
  clear_handler_type();
  if (static_files) {
    set_has_static_files();
    handler_type_.static_files_ = static_files;
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlMap.static_files)
}

// optional .google.appengine.v1.ScriptHandler script = 3;
bool UrlMap::has_script() const {
  return handler_type_case() == kScript;
}
void UrlMap::set_has_script() {
  _oneof_case_[0] = kScript;
}
void UrlMap::clear_script() {
  if (has_script()) {
    delete handler_type_.script_;
    clear_has_handler_type();
  }
}
 const ::google::appengine::v1::ScriptHandler& UrlMap::script() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.script)
  return has_script()
      ? *handler_type_.script_
      : ::google::appengine::v1::ScriptHandler::default_instance();
}
::google::appengine::v1::ScriptHandler* UrlMap::mutable_script() {
  if (!has_script()) {
    clear_handler_type();
    set_has_script();
    handler_type_.script_ = new ::google::appengine::v1::ScriptHandler;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.script)
  return handler_type_.script_;
}
::google::appengine::v1::ScriptHandler* UrlMap::release_script() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.script)
  if (has_script()) {
    clear_has_handler_type();
    ::google::appengine::v1::ScriptHandler* temp = handler_type_.script_;
    handler_type_.script_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UrlMap::set_allocated_script(::google::appengine::v1::ScriptHandler* script) {
  clear_handler_type();
  if (script) {
    set_has_script();
    handler_type_.script_ = script;
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlMap.script)
}

// optional .google.appengine.v1.ApiEndpointHandler api_endpoint = 4;
bool UrlMap::has_api_endpoint() const {
  return handler_type_case() == kApiEndpoint;
}
void UrlMap::set_has_api_endpoint() {
  _oneof_case_[0] = kApiEndpoint;
}
void UrlMap::clear_api_endpoint() {
  if (has_api_endpoint()) {
    delete handler_type_.api_endpoint_;
    clear_has_handler_type();
  }
}
 const ::google::appengine::v1::ApiEndpointHandler& UrlMap::api_endpoint() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.api_endpoint)
  return has_api_endpoint()
      ? *handler_type_.api_endpoint_
      : ::google::appengine::v1::ApiEndpointHandler::default_instance();
}
::google::appengine::v1::ApiEndpointHandler* UrlMap::mutable_api_endpoint() {
  if (!has_api_endpoint()) {
    clear_handler_type();
    set_has_api_endpoint();
    handler_type_.api_endpoint_ = new ::google::appengine::v1::ApiEndpointHandler;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.UrlMap.api_endpoint)
  return handler_type_.api_endpoint_;
}
::google::appengine::v1::ApiEndpointHandler* UrlMap::release_api_endpoint() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.UrlMap.api_endpoint)
  if (has_api_endpoint()) {
    clear_has_handler_type();
    ::google::appengine::v1::ApiEndpointHandler* temp = handler_type_.api_endpoint_;
    handler_type_.api_endpoint_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UrlMap::set_allocated_api_endpoint(::google::appengine::v1::ApiEndpointHandler* api_endpoint) {
  clear_handler_type();
  if (api_endpoint) {
    set_has_api_endpoint();
    handler_type_.api_endpoint_ = api_endpoint;
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.UrlMap.api_endpoint)
}

// optional .google.appengine.v1.SecurityLevel security_level = 5;
void UrlMap::clear_security_level() {
  security_level_ = 0;
}
::google::appengine::v1::SecurityLevel UrlMap::security_level() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.security_level)
  return static_cast< ::google::appengine::v1::SecurityLevel >(security_level_);
}
void UrlMap::set_security_level(::google::appengine::v1::SecurityLevel value) {
  
  security_level_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.security_level)
}

// optional .google.appengine.v1.LoginRequirement login = 6;
void UrlMap::clear_login() {
  login_ = 0;
}
::google::appengine::v1::LoginRequirement UrlMap::login() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.login)
  return static_cast< ::google::appengine::v1::LoginRequirement >(login_);
}
void UrlMap::set_login(::google::appengine::v1::LoginRequirement value) {
  
  login_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.login)
}

// optional .google.appengine.v1.AuthFailAction auth_fail_action = 7;
void UrlMap::clear_auth_fail_action() {
  auth_fail_action_ = 0;
}
::google::appengine::v1::AuthFailAction UrlMap::auth_fail_action() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.auth_fail_action)
  return static_cast< ::google::appengine::v1::AuthFailAction >(auth_fail_action_);
}
void UrlMap::set_auth_fail_action(::google::appengine::v1::AuthFailAction value) {
  
  auth_fail_action_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.auth_fail_action)
}

// optional .google.appengine.v1.UrlMap.RedirectHttpResponseCode redirect_http_response_code = 8;
void UrlMap::clear_redirect_http_response_code() {
  redirect_http_response_code_ = 0;
}
::google::appengine::v1::UrlMap_RedirectHttpResponseCode UrlMap::redirect_http_response_code() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.UrlMap.redirect_http_response_code)
  return static_cast< ::google::appengine::v1::UrlMap_RedirectHttpResponseCode >(redirect_http_response_code_);
}
void UrlMap::set_redirect_http_response_code(::google::appengine::v1::UrlMap_RedirectHttpResponseCode value) {
  
  redirect_http_response_code_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.UrlMap.redirect_http_response_code)
}

bool UrlMap::has_handler_type() const {
  return handler_type_case() != HANDLER_TYPE_NOT_SET;
}
void UrlMap::clear_has_handler_type() {
  _oneof_case_[0] = HANDLER_TYPE_NOT_SET;
}
UrlMap::HandlerTypeCase UrlMap::handler_type_case() const {
  return UrlMap::HandlerTypeCase(_oneof_case_[0]);
}
inline const UrlMap* UrlMap::internal_default_instance() {
  return &UrlMap_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StaticFilesHandler::kPathFieldNumber;
const int StaticFilesHandler::kUploadPathRegexFieldNumber;
const int StaticFilesHandler::kHttpHeadersFieldNumber;
const int StaticFilesHandler::kMimeTypeFieldNumber;
const int StaticFilesHandler::kExpirationFieldNumber;
const int StaticFilesHandler::kRequireMatchingFileFieldNumber;
const int StaticFilesHandler::kApplicationReadableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StaticFilesHandler::StaticFilesHandler()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.StaticFilesHandler)
}

void StaticFilesHandler::InitAsDefaultInstance() {
  expiration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

StaticFilesHandler::StaticFilesHandler(const StaticFilesHandler& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.StaticFilesHandler)
}

void StaticFilesHandler::SharedCtor() {
  http_headers_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  http_headers_.SetEntryDescriptor(
      &::google::appengine::v1::StaticFilesHandler_HttpHeadersEntry_descriptor_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upload_path_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_ = NULL;
  ::memset(&require_matching_file_, 0, reinterpret_cast<char*>(&application_readable_) -
    reinterpret_cast<char*>(&require_matching_file_) + sizeof(application_readable_));
  _cached_size_ = 0;
}

StaticFilesHandler::~StaticFilesHandler() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.StaticFilesHandler)
  SharedDtor();
}

void StaticFilesHandler::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upload_path_regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &StaticFilesHandler_default_instance_.get()) {
    delete expiration_;
  }
}

void StaticFilesHandler::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StaticFilesHandler::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StaticFilesHandler_descriptor_;
}

const StaticFilesHandler& StaticFilesHandler::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StaticFilesHandler> StaticFilesHandler_default_instance_;

StaticFilesHandler* StaticFilesHandler::New(::google::protobuf::Arena* arena) const {
  StaticFilesHandler* n = new StaticFilesHandler;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StaticFilesHandler::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.StaticFilesHandler)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StaticFilesHandler, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StaticFilesHandler*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(require_matching_file_, application_readable_);
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upload_path_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && expiration_ != NULL) delete expiration_;
  expiration_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  http_headers_.Clear();
}

bool StaticFilesHandler::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.StaticFilesHandler)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.StaticFilesHandler.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_upload_path_regex;
        break;
      }

      // optional string upload_path_regex = 2;
      case 2: {
        if (tag == 18) {
         parse_upload_path_regex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upload_path_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->upload_path_regex().data(), this->upload_path_regex().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.StaticFilesHandler.upload_path_regex"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_http_headers;
        break;
      }

      // map<string, string> http_headers = 3;
      case 3: {
        if (tag == 26) {
         parse_http_headers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_http_headers:
          StaticFilesHandler_HttpHeadersEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&http_headers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.StaticFilesHandler.HttpHeadersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.StaticFilesHandler.HttpHeadersEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_http_headers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_mime_type;
        break;
      }

      // optional string mime_type = 4;
      case 4: {
        if (tag == 34) {
         parse_mime_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), this->mime_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.StaticFilesHandler.mime_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_expiration;
        break;
      }

      // optional .google.protobuf.Duration expiration = 5;
      case 5: {
        if (tag == 42) {
         parse_expiration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expiration()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_require_matching_file;
        break;
      }

      // optional bool require_matching_file = 6;
      case 6: {
        if (tag == 48) {
         parse_require_matching_file:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &require_matching_file_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_application_readable;
        break;
      }

      // optional bool application_readable = 7;
      case 7: {
        if (tag == 56) {
         parse_application_readable:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &application_readable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.StaticFilesHandler)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.StaticFilesHandler)
  return false;
#undef DO_
}

void StaticFilesHandler::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.StaticFilesHandler)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.StaticFilesHandler.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional string upload_path_regex = 2;
  if (this->upload_path_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upload_path_regex().data(), this->upload_path_regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.StaticFilesHandler.upload_path_regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->upload_path_regex(), output);
  }

  // map<string, string> http_headers = 3;
  if (!this->http_headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.StaticFilesHandler.HttpHeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.StaticFilesHandler.HttpHeadersEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->http_headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->http_headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->http_headers().begin();
          it != this->http_headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StaticFilesHandler_HttpHeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(http_headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StaticFilesHandler_HttpHeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->http_headers().begin();
          it != this->http_headers().end(); ++it) {
        entry.reset(http_headers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string mime_type = 4;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), this->mime_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.StaticFilesHandler.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mime_type(), output);
  }

  // optional .google.protobuf.Duration expiration = 5;
  if (this->has_expiration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->expiration_, output);
  }

  // optional bool require_matching_file = 6;
  if (this->require_matching_file() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->require_matching_file(), output);
  }

  // optional bool application_readable = 7;
  if (this->application_readable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->application_readable(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.StaticFilesHandler)
}

::google::protobuf::uint8* StaticFilesHandler::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.StaticFilesHandler)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.StaticFilesHandler.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional string upload_path_regex = 2;
  if (this->upload_path_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upload_path_regex().data(), this->upload_path_regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.StaticFilesHandler.upload_path_regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->upload_path_regex(), target);
  }

  // map<string, string> http_headers = 3;
  if (!this->http_headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.StaticFilesHandler.HttpHeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.appengine.v1.StaticFilesHandler.HttpHeadersEntry.value");
      }
    };

    if (deterministic &&
        this->http_headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->http_headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->http_headers().begin();
          it != this->http_headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StaticFilesHandler_HttpHeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(http_headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StaticFilesHandler_HttpHeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->http_headers().begin();
          it != this->http_headers().end(); ++it) {
        entry.reset(http_headers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string mime_type = 4;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), this->mime_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.StaticFilesHandler.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mime_type(), target);
  }

  // optional .google.protobuf.Duration expiration = 5;
  if (this->has_expiration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->expiration_, false, target);
  }

  // optional bool require_matching_file = 6;
  if (this->require_matching_file() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->require_matching_file(), target);
  }

  // optional bool application_readable = 7;
  if (this->application_readable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->application_readable(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.StaticFilesHandler)
  return target;
}

size_t StaticFilesHandler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.StaticFilesHandler)
  size_t total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional string upload_path_regex = 2;
  if (this->upload_path_regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upload_path_regex());
  }

  // optional string mime_type = 4;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // optional .google.protobuf.Duration expiration = 5;
  if (this->has_expiration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->expiration_);
  }

  // optional bool require_matching_file = 6;
  if (this->require_matching_file() != 0) {
    total_size += 1 + 1;
  }

  // optional bool application_readable = 7;
  if (this->application_readable() != 0) {
    total_size += 1 + 1;
  }

  // map<string, string> http_headers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->http_headers_size());
  {
    ::google::protobuf::scoped_ptr<StaticFilesHandler_HttpHeadersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->http_headers().begin();
        it != this->http_headers().end(); ++it) {
      entry.reset(http_headers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StaticFilesHandler::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.StaticFilesHandler)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StaticFilesHandler* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StaticFilesHandler>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.StaticFilesHandler)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.StaticFilesHandler)
    UnsafeMergeFrom(*source);
  }
}

void StaticFilesHandler::MergeFrom(const StaticFilesHandler& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.StaticFilesHandler)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StaticFilesHandler::UnsafeMergeFrom(const StaticFilesHandler& from) {
  GOOGLE_DCHECK(&from != this);
  http_headers_.MergeFrom(from.http_headers_);
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.upload_path_regex().size() > 0) {

    upload_path_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upload_path_regex_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_expiration()) {
    mutable_expiration()->::google::protobuf::Duration::MergeFrom(from.expiration());
  }
  if (from.require_matching_file() != 0) {
    set_require_matching_file(from.require_matching_file());
  }
  if (from.application_readable() != 0) {
    set_application_readable(from.application_readable());
  }
}

void StaticFilesHandler::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.StaticFilesHandler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StaticFilesHandler::CopyFrom(const StaticFilesHandler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.StaticFilesHandler)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StaticFilesHandler::IsInitialized() const {

  return true;
}

void StaticFilesHandler::Swap(StaticFilesHandler* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StaticFilesHandler::InternalSwap(StaticFilesHandler* other) {
  path_.Swap(&other->path_);
  upload_path_regex_.Swap(&other->upload_path_regex_);
  http_headers_.Swap(&other->http_headers_);
  mime_type_.Swap(&other->mime_type_);
  std::swap(expiration_, other->expiration_);
  std::swap(require_matching_file_, other->require_matching_file_);
  std::swap(application_readable_, other->application_readable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StaticFilesHandler::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StaticFilesHandler_descriptor_;
  metadata.reflection = StaticFilesHandler_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StaticFilesHandler

// optional string path = 1;
void StaticFilesHandler::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StaticFilesHandler::path() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StaticFilesHandler::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.path)
}
void StaticFilesHandler::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.StaticFilesHandler.path)
}
void StaticFilesHandler::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.StaticFilesHandler.path)
}
::std::string* StaticFilesHandler::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StaticFilesHandler::release_path() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StaticFilesHandler::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.path)
}

// optional string upload_path_regex = 2;
void StaticFilesHandler::clear_upload_path_regex() {
  upload_path_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StaticFilesHandler::upload_path_regex() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.upload_path_regex)
  return upload_path_regex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StaticFilesHandler::set_upload_path_regex(const ::std::string& value) {
  
  upload_path_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}
void StaticFilesHandler::set_upload_path_regex(const char* value) {
  
  upload_path_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}
void StaticFilesHandler::set_upload_path_regex(const char* value, size_t size) {
  
  upload_path_regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}
::std::string* StaticFilesHandler::mutable_upload_path_regex() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.upload_path_regex)
  return upload_path_regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StaticFilesHandler::release_upload_path_regex() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.upload_path_regex)
  
  return upload_path_regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StaticFilesHandler::set_allocated_upload_path_regex(::std::string* upload_path_regex) {
  if (upload_path_regex != NULL) {
    
  } else {
    
  }
  upload_path_regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upload_path_regex);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.upload_path_regex)
}

// map<string, string> http_headers = 3;
int StaticFilesHandler::http_headers_size() const {
  return http_headers_.size();
}
void StaticFilesHandler::clear_http_headers() {
  http_headers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
StaticFilesHandler::http_headers() const {
  // @@protoc_insertion_point(field_map:google.appengine.v1.StaticFilesHandler.http_headers)
  return http_headers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
StaticFilesHandler::mutable_http_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.appengine.v1.StaticFilesHandler.http_headers)
  return http_headers_.MutableMap();
}

// optional string mime_type = 4;
void StaticFilesHandler::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StaticFilesHandler::mime_type() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.mime_type)
  return mime_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StaticFilesHandler::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.mime_type)
}
void StaticFilesHandler::set_mime_type(const char* value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.StaticFilesHandler.mime_type)
}
void StaticFilesHandler::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.StaticFilesHandler.mime_type)
}
::std::string* StaticFilesHandler::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StaticFilesHandler::release_mime_type() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StaticFilesHandler::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.mime_type)
}

// optional .google.protobuf.Duration expiration = 5;
bool StaticFilesHandler::has_expiration() const {
  return this != internal_default_instance() && expiration_ != NULL;
}
void StaticFilesHandler::clear_expiration() {
  if (GetArenaNoVirtual() == NULL && expiration_ != NULL) delete expiration_;
  expiration_ = NULL;
}
const ::google::protobuf::Duration& StaticFilesHandler::expiration() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.expiration)
  return expiration_ != NULL ? *expiration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* StaticFilesHandler::mutable_expiration() {
  
  if (expiration_ == NULL) {
    expiration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.StaticFilesHandler.expiration)
  return expiration_;
}
::google::protobuf::Duration* StaticFilesHandler::release_expiration() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.StaticFilesHandler.expiration)
  
  ::google::protobuf::Duration* temp = expiration_;
  expiration_ = NULL;
  return temp;
}
void StaticFilesHandler::set_allocated_expiration(::google::protobuf::Duration* expiration) {
  delete expiration_;
  if (expiration != NULL && expiration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_expiration = new ::google::protobuf::Duration;
    new_expiration->CopyFrom(*expiration);
    expiration = new_expiration;
  }
  expiration_ = expiration;
  if (expiration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.StaticFilesHandler.expiration)
}

// optional bool require_matching_file = 6;
void StaticFilesHandler::clear_require_matching_file() {
  require_matching_file_ = false;
}
bool StaticFilesHandler::require_matching_file() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.require_matching_file)
  return require_matching_file_;
}
void StaticFilesHandler::set_require_matching_file(bool value) {
  
  require_matching_file_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.require_matching_file)
}

// optional bool application_readable = 7;
void StaticFilesHandler::clear_application_readable() {
  application_readable_ = false;
}
bool StaticFilesHandler::application_readable() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.StaticFilesHandler.application_readable)
  return application_readable_;
}
void StaticFilesHandler::set_application_readable(bool value) {
  
  application_readable_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.StaticFilesHandler.application_readable)
}

inline const StaticFilesHandler* StaticFilesHandler::internal_default_instance() {
  return &StaticFilesHandler_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScriptHandler::kScriptPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScriptHandler::ScriptHandler()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.ScriptHandler)
}

void ScriptHandler::InitAsDefaultInstance() {
}

ScriptHandler::ScriptHandler(const ScriptHandler& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.ScriptHandler)
}

void ScriptHandler::SharedCtor() {
  script_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ScriptHandler::~ScriptHandler() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.ScriptHandler)
  SharedDtor();
}

void ScriptHandler::SharedDtor() {
  script_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScriptHandler::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScriptHandler::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScriptHandler_descriptor_;
}

const ScriptHandler& ScriptHandler::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ScriptHandler> ScriptHandler_default_instance_;

ScriptHandler* ScriptHandler::New(::google::protobuf::Arena* arena) const {
  ScriptHandler* n = new ScriptHandler;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScriptHandler::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.ScriptHandler)
  script_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ScriptHandler::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.ScriptHandler)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string script_path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_path().data(), this->script_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ScriptHandler.script_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.ScriptHandler)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.ScriptHandler)
  return false;
#undef DO_
}

void ScriptHandler::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.ScriptHandler)
  // optional string script_path = 1;
  if (this->script_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_path().data(), this->script_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ScriptHandler.script_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->script_path(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.ScriptHandler)
}

::google::protobuf::uint8* ScriptHandler::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.ScriptHandler)
  // optional string script_path = 1;
  if (this->script_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_path().data(), this->script_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ScriptHandler.script_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->script_path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.ScriptHandler)
  return target;
}

size_t ScriptHandler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.ScriptHandler)
  size_t total_size = 0;

  // optional string script_path = 1;
  if (this->script_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScriptHandler::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.ScriptHandler)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ScriptHandler* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScriptHandler>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.ScriptHandler)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.ScriptHandler)
    UnsafeMergeFrom(*source);
  }
}

void ScriptHandler::MergeFrom(const ScriptHandler& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.ScriptHandler)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ScriptHandler::UnsafeMergeFrom(const ScriptHandler& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.script_path().size() > 0) {

    script_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_path_);
  }
}

void ScriptHandler::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.ScriptHandler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScriptHandler::CopyFrom(const ScriptHandler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.ScriptHandler)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ScriptHandler::IsInitialized() const {

  return true;
}

void ScriptHandler::Swap(ScriptHandler* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScriptHandler::InternalSwap(ScriptHandler* other) {
  script_path_.Swap(&other->script_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScriptHandler::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScriptHandler_descriptor_;
  metadata.reflection = ScriptHandler_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScriptHandler

// optional string script_path = 1;
void ScriptHandler::clear_script_path() {
  script_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ScriptHandler::script_path() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ScriptHandler.script_path)
  return script_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScriptHandler::set_script_path(const ::std::string& value) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ScriptHandler.script_path)
}
void ScriptHandler::set_script_path(const char* value) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ScriptHandler.script_path)
}
void ScriptHandler::set_script_path(const char* value, size_t size) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ScriptHandler.script_path)
}
::std::string* ScriptHandler::mutable_script_path() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ScriptHandler.script_path)
  return script_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScriptHandler::release_script_path() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ScriptHandler.script_path)
  
  return script_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScriptHandler::set_allocated_script_path(::std::string* script_path) {
  if (script_path != NULL) {
    
  } else {
    
  }
  script_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_path);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ScriptHandler.script_path)
}

inline const ScriptHandler* ScriptHandler::internal_default_instance() {
  return &ScriptHandler_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApiEndpointHandler::kScriptPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApiEndpointHandler::ApiEndpointHandler()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.ApiEndpointHandler)
}

void ApiEndpointHandler::InitAsDefaultInstance() {
}

ApiEndpointHandler::ApiEndpointHandler(const ApiEndpointHandler& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.ApiEndpointHandler)
}

void ApiEndpointHandler::SharedCtor() {
  script_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ApiEndpointHandler::~ApiEndpointHandler() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.ApiEndpointHandler)
  SharedDtor();
}

void ApiEndpointHandler::SharedDtor() {
  script_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApiEndpointHandler::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApiEndpointHandler::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ApiEndpointHandler_descriptor_;
}

const ApiEndpointHandler& ApiEndpointHandler::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ApiEndpointHandler> ApiEndpointHandler_default_instance_;

ApiEndpointHandler* ApiEndpointHandler::New(::google::protobuf::Arena* arena) const {
  ApiEndpointHandler* n = new ApiEndpointHandler;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApiEndpointHandler::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.ApiEndpointHandler)
  script_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ApiEndpointHandler::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.ApiEndpointHandler)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string script_path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->script_path().data(), this->script_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.ApiEndpointHandler.script_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.ApiEndpointHandler)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.ApiEndpointHandler)
  return false;
#undef DO_
}

void ApiEndpointHandler::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.ApiEndpointHandler)
  // optional string script_path = 1;
  if (this->script_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_path().data(), this->script_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ApiEndpointHandler.script_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->script_path(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.ApiEndpointHandler)
}

::google::protobuf::uint8* ApiEndpointHandler::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.ApiEndpointHandler)
  // optional string script_path = 1;
  if (this->script_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->script_path().data(), this->script_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.ApiEndpointHandler.script_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->script_path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.ApiEndpointHandler)
  return target;
}

size_t ApiEndpointHandler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.ApiEndpointHandler)
  size_t total_size = 0;

  // optional string script_path = 1;
  if (this->script_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->script_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApiEndpointHandler::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.ApiEndpointHandler)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ApiEndpointHandler* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApiEndpointHandler>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.ApiEndpointHandler)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.ApiEndpointHandler)
    UnsafeMergeFrom(*source);
  }
}

void ApiEndpointHandler::MergeFrom(const ApiEndpointHandler& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.ApiEndpointHandler)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ApiEndpointHandler::UnsafeMergeFrom(const ApiEndpointHandler& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.script_path().size() > 0) {

    script_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_path_);
  }
}

void ApiEndpointHandler::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.ApiEndpointHandler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApiEndpointHandler::CopyFrom(const ApiEndpointHandler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.ApiEndpointHandler)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ApiEndpointHandler::IsInitialized() const {

  return true;
}

void ApiEndpointHandler::Swap(ApiEndpointHandler* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApiEndpointHandler::InternalSwap(ApiEndpointHandler* other) {
  script_path_.Swap(&other->script_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApiEndpointHandler::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ApiEndpointHandler_descriptor_;
  metadata.reflection = ApiEndpointHandler_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApiEndpointHandler

// optional string script_path = 1;
void ApiEndpointHandler::clear_script_path() {
  script_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ApiEndpointHandler::script_path() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.ApiEndpointHandler.script_path)
  return script_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApiEndpointHandler::set_script_path(const ::std::string& value) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.ApiEndpointHandler.script_path)
}
void ApiEndpointHandler::set_script_path(const char* value) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.ApiEndpointHandler.script_path)
}
void ApiEndpointHandler::set_script_path(const char* value, size_t size) {
  
  script_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.ApiEndpointHandler.script_path)
}
::std::string* ApiEndpointHandler::mutable_script_path() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.ApiEndpointHandler.script_path)
  return script_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ApiEndpointHandler::release_script_path() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.ApiEndpointHandler.script_path)
  
  return script_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApiEndpointHandler::set_allocated_script_path(::std::string* script_path) {
  if (script_path != NULL) {
    
  } else {
    
  }
  script_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_path);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.ApiEndpointHandler.script_path)
}

inline const ApiEndpointHandler* ApiEndpointHandler::internal_default_instance() {
  return &ApiEndpointHandler_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HealthCheck::kDisableHealthCheckFieldNumber;
const int HealthCheck::kHostFieldNumber;
const int HealthCheck::kHealthyThresholdFieldNumber;
const int HealthCheck::kUnhealthyThresholdFieldNumber;
const int HealthCheck::kRestartThresholdFieldNumber;
const int HealthCheck::kCheckIntervalFieldNumber;
const int HealthCheck::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HealthCheck::HealthCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.HealthCheck)
}

void HealthCheck::InitAsDefaultInstance() {
  check_interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}

HealthCheck::HealthCheck(const HealthCheck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.HealthCheck)
}

void HealthCheck::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_interval_ = NULL;
  timeout_ = NULL;
  ::memset(&disable_health_check_, 0, reinterpret_cast<char*>(&restart_threshold_) -
    reinterpret_cast<char*>(&disable_health_check_) + sizeof(restart_threshold_));
  _cached_size_ = 0;
}

HealthCheck::~HealthCheck() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.HealthCheck)
  SharedDtor();
}

void HealthCheck::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &HealthCheck_default_instance_.get()) {
    delete check_interval_;
    delete timeout_;
  }
}

void HealthCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HealthCheck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HealthCheck_descriptor_;
}

const HealthCheck& HealthCheck::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HealthCheck> HealthCheck_default_instance_;

HealthCheck* HealthCheck::New(::google::protobuf::Arena* arena) const {
  HealthCheck* n = new HealthCheck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HealthCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.HealthCheck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HealthCheck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HealthCheck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(disable_health_check_, restart_threshold_);
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && check_interval_ != NULL) delete check_interval_;
  check_interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool HealthCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.HealthCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool disable_health_check = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_health_check_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host;
        break;
      }

      // optional string host = 2;
      case 2: {
        if (tag == 18) {
         parse_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.HealthCheck.host"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_healthy_threshold;
        break;
      }

      // optional uint32 healthy_threshold = 3;
      case 3: {
        if (tag == 24) {
         parse_healthy_threshold:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &healthy_threshold_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_unhealthy_threshold;
        break;
      }

      // optional uint32 unhealthy_threshold = 4;
      case 4: {
        if (tag == 32) {
         parse_unhealthy_threshold:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unhealthy_threshold_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_restart_threshold;
        break;
      }

      // optional uint32 restart_threshold = 5;
      case 5: {
        if (tag == 40) {
         parse_restart_threshold:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &restart_threshold_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_check_interval;
        break;
      }

      // optional .google.protobuf.Duration check_interval = 6;
      case 6: {
        if (tag == 50) {
         parse_check_interval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_check_interval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_timeout;
        break;
      }

      // optional .google.protobuf.Duration timeout = 7;
      case 7: {
        if (tag == 58) {
         parse_timeout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.HealthCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.HealthCheck)
  return false;
#undef DO_
}

void HealthCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.HealthCheck)
  // optional bool disable_health_check = 1;
  if (this->disable_health_check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disable_health_check(), output);
  }

  // optional string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.HealthCheck.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // optional uint32 healthy_threshold = 3;
  if (this->healthy_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->healthy_threshold(), output);
  }

  // optional uint32 unhealthy_threshold = 4;
  if (this->unhealthy_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->unhealthy_threshold(), output);
  }

  // optional uint32 restart_threshold = 5;
  if (this->restart_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->restart_threshold(), output);
  }

  // optional .google.protobuf.Duration check_interval = 6;
  if (this->has_check_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->check_interval_, output);
  }

  // optional .google.protobuf.Duration timeout = 7;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->timeout_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.HealthCheck)
}

::google::protobuf::uint8* HealthCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.HealthCheck)
  // optional bool disable_health_check = 1;
  if (this->disable_health_check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disable_health_check(), target);
  }

  // optional string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.HealthCheck.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // optional uint32 healthy_threshold = 3;
  if (this->healthy_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->healthy_threshold(), target);
  }

  // optional uint32 unhealthy_threshold = 4;
  if (this->unhealthy_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->unhealthy_threshold(), target);
  }

  // optional uint32 restart_threshold = 5;
  if (this->restart_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->restart_threshold(), target);
  }

  // optional .google.protobuf.Duration check_interval = 6;
  if (this->has_check_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->check_interval_, false, target);
  }

  // optional .google.protobuf.Duration timeout = 7;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->timeout_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.HealthCheck)
  return target;
}

size_t HealthCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.HealthCheck)
  size_t total_size = 0;

  // optional bool disable_health_check = 1;
  if (this->disable_health_check() != 0) {
    total_size += 1 + 1;
  }

  // optional string host = 2;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // optional uint32 healthy_threshold = 3;
  if (this->healthy_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->healthy_threshold());
  }

  // optional uint32 unhealthy_threshold = 4;
  if (this->unhealthy_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unhealthy_threshold());
  }

  // optional uint32 restart_threshold = 5;
  if (this->restart_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->restart_threshold());
  }

  // optional .google.protobuf.Duration check_interval = 6;
  if (this->has_check_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->check_interval_);
  }

  // optional .google.protobuf.Duration timeout = 7;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timeout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HealthCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.HealthCheck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HealthCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HealthCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.HealthCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.HealthCheck)
    UnsafeMergeFrom(*source);
  }
}

void HealthCheck::MergeFrom(const HealthCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.HealthCheck)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HealthCheck::UnsafeMergeFrom(const HealthCheck& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.disable_health_check() != 0) {
    set_disable_health_check(from.disable_health_check());
  }
  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.healthy_threshold() != 0) {
    set_healthy_threshold(from.healthy_threshold());
  }
  if (from.unhealthy_threshold() != 0) {
    set_unhealthy_threshold(from.unhealthy_threshold());
  }
  if (from.restart_threshold() != 0) {
    set_restart_threshold(from.restart_threshold());
  }
  if (from.has_check_interval()) {
    mutable_check_interval()->::google::protobuf::Duration::MergeFrom(from.check_interval());
  }
  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
}

void HealthCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.HealthCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthCheck::CopyFrom(const HealthCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.HealthCheck)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HealthCheck::IsInitialized() const {

  return true;
}

void HealthCheck::Swap(HealthCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HealthCheck::InternalSwap(HealthCheck* other) {
  std::swap(disable_health_check_, other->disable_health_check_);
  host_.Swap(&other->host_);
  std::swap(healthy_threshold_, other->healthy_threshold_);
  std::swap(unhealthy_threshold_, other->unhealthy_threshold_);
  std::swap(restart_threshold_, other->restart_threshold_);
  std::swap(check_interval_, other->check_interval_);
  std::swap(timeout_, other->timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HealthCheck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HealthCheck_descriptor_;
  metadata.reflection = HealthCheck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HealthCheck

// optional bool disable_health_check = 1;
void HealthCheck::clear_disable_health_check() {
  disable_health_check_ = false;
}
bool HealthCheck::disable_health_check() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.disable_health_check)
  return disable_health_check_;
}
void HealthCheck::set_disable_health_check(bool value) {
  
  disable_health_check_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.disable_health_check)
}

// optional string host = 2;
void HealthCheck::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HealthCheck::host() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HealthCheck::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.host)
}
void HealthCheck::set_host(const char* value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.HealthCheck.host)
}
void HealthCheck::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.HealthCheck.host)
}
::std::string* HealthCheck::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.HealthCheck.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HealthCheck::release_host() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.HealthCheck.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HealthCheck::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.HealthCheck.host)
}

// optional uint32 healthy_threshold = 3;
void HealthCheck::clear_healthy_threshold() {
  healthy_threshold_ = 0u;
}
::google::protobuf::uint32 HealthCheck::healthy_threshold() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.healthy_threshold)
  return healthy_threshold_;
}
void HealthCheck::set_healthy_threshold(::google::protobuf::uint32 value) {
  
  healthy_threshold_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.healthy_threshold)
}

// optional uint32 unhealthy_threshold = 4;
void HealthCheck::clear_unhealthy_threshold() {
  unhealthy_threshold_ = 0u;
}
::google::protobuf::uint32 HealthCheck::unhealthy_threshold() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.unhealthy_threshold)
  return unhealthy_threshold_;
}
void HealthCheck::set_unhealthy_threshold(::google::protobuf::uint32 value) {
  
  unhealthy_threshold_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.unhealthy_threshold)
}

// optional uint32 restart_threshold = 5;
void HealthCheck::clear_restart_threshold() {
  restart_threshold_ = 0u;
}
::google::protobuf::uint32 HealthCheck::restart_threshold() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.restart_threshold)
  return restart_threshold_;
}
void HealthCheck::set_restart_threshold(::google::protobuf::uint32 value) {
  
  restart_threshold_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.HealthCheck.restart_threshold)
}

// optional .google.protobuf.Duration check_interval = 6;
bool HealthCheck::has_check_interval() const {
  return this != internal_default_instance() && check_interval_ != NULL;
}
void HealthCheck::clear_check_interval() {
  if (GetArenaNoVirtual() == NULL && check_interval_ != NULL) delete check_interval_;
  check_interval_ = NULL;
}
const ::google::protobuf::Duration& HealthCheck::check_interval() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.check_interval)
  return check_interval_ != NULL ? *check_interval_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* HealthCheck::mutable_check_interval() {
  
  if (check_interval_ == NULL) {
    check_interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.HealthCheck.check_interval)
  return check_interval_;
}
::google::protobuf::Duration* HealthCheck::release_check_interval() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.HealthCheck.check_interval)
  
  ::google::protobuf::Duration* temp = check_interval_;
  check_interval_ = NULL;
  return temp;
}
void HealthCheck::set_allocated_check_interval(::google::protobuf::Duration* check_interval) {
  delete check_interval_;
  if (check_interval != NULL && check_interval->GetArena() != NULL) {
    ::google::protobuf::Duration* new_check_interval = new ::google::protobuf::Duration;
    new_check_interval->CopyFrom(*check_interval);
    check_interval = new_check_interval;
  }
  check_interval_ = check_interval;
  if (check_interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.HealthCheck.check_interval)
}

// optional .google.protobuf.Duration timeout = 7;
bool HealthCheck::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
void HealthCheck::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;
}
const ::google::protobuf::Duration& HealthCheck::timeout() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.HealthCheck.timeout)
  return timeout_ != NULL ? *timeout_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* HealthCheck::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.HealthCheck.timeout)
  return timeout_;
}
::google::protobuf::Duration* HealthCheck::release_timeout() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.HealthCheck.timeout)
  
  ::google::protobuf::Duration* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
void HealthCheck::set_allocated_timeout(::google::protobuf::Duration* timeout) {
  delete timeout_;
  if (timeout != NULL && timeout->GetArena() != NULL) {
    ::google::protobuf::Duration* new_timeout = new ::google::protobuf::Duration;
    new_timeout->CopyFrom(*timeout);
    timeout = new_timeout;
  }
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.HealthCheck.timeout)
}

inline const HealthCheck* HealthCheck::internal_default_instance() {
  return &HealthCheck_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Library::kNameFieldNumber;
const int Library::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Library::Library()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Library)
}

void Library::InitAsDefaultInstance() {
}

Library::Library(const Library& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Library)
}

void Library::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Library::~Library() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Library)
  SharedDtor();
}

void Library::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Library::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_descriptor_;
}

const Library& Library::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2fapp_5fyaml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Library> Library_default_instance_;

Library* Library::New(::google::protobuf::Arena* arena) const {
  Library* n = new Library;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Library::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Library)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Library::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Library)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Library.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // optional string version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Library.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Library)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Library)
  return false;
#undef DO_
}

void Library::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Library)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Library.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Library.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Library)
}

::google::protobuf::uint8* Library::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Library)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Library.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Library.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Library)
  return target;
}

size_t Library::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Library)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Library)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Library* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Library>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Library)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Library)
    UnsafeMergeFrom(*source);
  }
}

void Library::MergeFrom(const Library& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Library)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Library::UnsafeMergeFrom(const Library& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void Library::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Library)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library::CopyFrom(const Library& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Library)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Library::IsInitialized() const {

  return true;
}

void Library::Swap(Library* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Library::InternalSwap(Library* other) {
  name_.Swap(&other->name_);
  version_.Swap(&other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Library::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_descriptor_;
  metadata.reflection = Library_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Library

// optional string name = 1;
void Library::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Library::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Library.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Library::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Library.name)
}
void Library::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Library.name)
}
void Library::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Library.name)
}
::std::string* Library::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Library.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Library::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Library.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Library::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Library.name)
}

// optional string version = 2;
void Library::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Library::version() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Library.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Library::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Library.version)
}
void Library::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Library.version)
}
void Library::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Library.version)
}
::std::string* Library::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Library.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Library::release_version() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Library.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Library::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Library.version)
}

inline const Library* Library::internal_default_instance() {
  return &Library_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
