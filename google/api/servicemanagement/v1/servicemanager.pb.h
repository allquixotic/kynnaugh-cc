// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/servicemanager.proto

#ifndef PROTOBUF_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/service.pb.h"
#include "google/api/servicemanagement/v1/resources.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
void protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

class CreateServiceConfigRequest;
class CreateServiceRequest;
class CreateServiceRolloutRequest;
class DeleteServiceRequest;
class DisableServiceRequest;
class EnableServiceRequest;
class GenerateConfigReportRequest;
class GenerateConfigReportResponse;
class GetServiceConfigRequest;
class GetServiceRequest;
class GetServiceRolloutRequest;
class ListServiceConfigsRequest;
class ListServiceConfigsResponse;
class ListServiceRolloutsRequest;
class ListServiceRolloutsResponse;
class ListServicesRequest;
class ListServicesResponse;
class SubmitConfigSourceRequest;
class SubmitConfigSourceResponse;
class UndeleteServiceRequest;
class UndeleteServiceResponse;

// ===================================================================

class ListServicesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ListServicesRequest) */ {
 public:
  ListServicesRequest();
  virtual ~ListServicesRequest();

  ListServicesRequest(const ListServicesRequest& from);

  inline ListServicesRequest& operator=(const ListServicesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServicesRequest& default_instance();

  static const ListServicesRequest* internal_default_instance();

  void Swap(ListServicesRequest* other);

  // implements Message ----------------------------------------------

  inline ListServicesRequest* New() const { return New(NULL); }

  ListServicesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServicesRequest& from);
  void MergeFrom(const ListServicesRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServicesRequest* other);
  void UnsafeMergeFrom(const ListServicesRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string producer_project_id = 1;
  void clear_producer_project_id();
  static const int kProducerProjectIdFieldNumber = 1;
  const ::std::string& producer_project_id() const;
  void set_producer_project_id(const ::std::string& value);
  void set_producer_project_id(const char* value);
  void set_producer_project_id(const char* value, size_t size);
  ::std::string* mutable_producer_project_id();
  ::std::string* release_producer_project_id();
  void set_allocated_producer_project_id(::std::string* producer_project_id);

  // optional int32 page_size = 5;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 5;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // optional string page_token = 6;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 6;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ListServicesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr producer_project_id_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListServicesRequest> ListServicesRequest_default_instance_;

// -------------------------------------------------------------------

class ListServicesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ListServicesResponse) */ {
 public:
  ListServicesResponse();
  virtual ~ListServicesResponse();

  ListServicesResponse(const ListServicesResponse& from);

  inline ListServicesResponse& operator=(const ListServicesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServicesResponse& default_instance();

  static const ListServicesResponse* internal_default_instance();

  void Swap(ListServicesResponse* other);

  // implements Message ----------------------------------------------

  inline ListServicesResponse* New() const { return New(NULL); }

  ListServicesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServicesResponse& from);
  void MergeFrom(const ListServicesResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServicesResponse* other);
  void UnsafeMergeFrom(const ListServicesResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  int services_size() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  const ::google::api::servicemanagement::v1::ManagedService& services(int index) const;
  ::google::api::servicemanagement::v1::ManagedService* mutable_services(int index);
  ::google::api::servicemanagement::v1::ManagedService* add_services();
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ManagedService >*
      mutable_services();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ManagedService >&
      services() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ListServicesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ManagedService > services_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListServicesResponse> ListServicesResponse_default_instance_;

// -------------------------------------------------------------------

class GetServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.GetServiceRequest) */ {
 public:
  GetServiceRequest();
  virtual ~GetServiceRequest();

  GetServiceRequest(const GetServiceRequest& from);

  inline GetServiceRequest& operator=(const GetServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceRequest& default_instance();

  static const GetServiceRequest* internal_default_instance();

  void Swap(GetServiceRequest* other);

  // implements Message ----------------------------------------------

  inline GetServiceRequest* New() const { return New(NULL); }

  GetServiceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceRequest& from);
  void MergeFrom(const GetServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetServiceRequest* other);
  void UnsafeMergeFrom(const GetServiceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.GetServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetServiceRequest> GetServiceRequest_default_instance_;

// -------------------------------------------------------------------

class CreateServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.CreateServiceRequest) */ {
 public:
  CreateServiceRequest();
  virtual ~CreateServiceRequest();

  CreateServiceRequest(const CreateServiceRequest& from);

  inline CreateServiceRequest& operator=(const CreateServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateServiceRequest& default_instance();

  static const CreateServiceRequest* internal_default_instance();

  void Swap(CreateServiceRequest* other);

  // implements Message ----------------------------------------------

  inline CreateServiceRequest* New() const { return New(NULL); }

  CreateServiceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateServiceRequest& from);
  void MergeFrom(const CreateServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateServiceRequest* other);
  void UnsafeMergeFrom(const CreateServiceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.api.servicemanagement.v1.ManagedService service = 1;
  bool has_service() const;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::google::api::servicemanagement::v1::ManagedService& service() const;
  ::google::api::servicemanagement::v1::ManagedService* mutable_service();
  ::google::api::servicemanagement::v1::ManagedService* release_service();
  void set_allocated_service(::google::api::servicemanagement::v1::ManagedService* service);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.CreateServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::api::servicemanagement::v1::ManagedService* service_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateServiceRequest> CreateServiceRequest_default_instance_;

// -------------------------------------------------------------------

class DeleteServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.DeleteServiceRequest) */ {
 public:
  DeleteServiceRequest();
  virtual ~DeleteServiceRequest();

  DeleteServiceRequest(const DeleteServiceRequest& from);

  inline DeleteServiceRequest& operator=(const DeleteServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteServiceRequest& default_instance();

  static const DeleteServiceRequest* internal_default_instance();

  void Swap(DeleteServiceRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteServiceRequest* New() const { return New(NULL); }

  DeleteServiceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteServiceRequest& from);
  void MergeFrom(const DeleteServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteServiceRequest* other);
  void UnsafeMergeFrom(const DeleteServiceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.DeleteServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteServiceRequest> DeleteServiceRequest_default_instance_;

// -------------------------------------------------------------------

class UndeleteServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.UndeleteServiceRequest) */ {
 public:
  UndeleteServiceRequest();
  virtual ~UndeleteServiceRequest();

  UndeleteServiceRequest(const UndeleteServiceRequest& from);

  inline UndeleteServiceRequest& operator=(const UndeleteServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UndeleteServiceRequest& default_instance();

  static const UndeleteServiceRequest* internal_default_instance();

  void Swap(UndeleteServiceRequest* other);

  // implements Message ----------------------------------------------

  inline UndeleteServiceRequest* New() const { return New(NULL); }

  UndeleteServiceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UndeleteServiceRequest& from);
  void MergeFrom(const UndeleteServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UndeleteServiceRequest* other);
  void UnsafeMergeFrom(const UndeleteServiceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.UndeleteServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UndeleteServiceRequest> UndeleteServiceRequest_default_instance_;

// -------------------------------------------------------------------

class UndeleteServiceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.UndeleteServiceResponse) */ {
 public:
  UndeleteServiceResponse();
  virtual ~UndeleteServiceResponse();

  UndeleteServiceResponse(const UndeleteServiceResponse& from);

  inline UndeleteServiceResponse& operator=(const UndeleteServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UndeleteServiceResponse& default_instance();

  static const UndeleteServiceResponse* internal_default_instance();

  void Swap(UndeleteServiceResponse* other);

  // implements Message ----------------------------------------------

  inline UndeleteServiceResponse* New() const { return New(NULL); }

  UndeleteServiceResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UndeleteServiceResponse& from);
  void MergeFrom(const UndeleteServiceResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UndeleteServiceResponse* other);
  void UnsafeMergeFrom(const UndeleteServiceResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.api.servicemanagement.v1.ManagedService service = 1;
  bool has_service() const;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::google::api::servicemanagement::v1::ManagedService& service() const;
  ::google::api::servicemanagement::v1::ManagedService* mutable_service();
  ::google::api::servicemanagement::v1::ManagedService* release_service();
  void set_allocated_service(::google::api::servicemanagement::v1::ManagedService* service);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.UndeleteServiceResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::api::servicemanagement::v1::ManagedService* service_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UndeleteServiceResponse> UndeleteServiceResponse_default_instance_;

// -------------------------------------------------------------------

class GetServiceConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.GetServiceConfigRequest) */ {
 public:
  GetServiceConfigRequest();
  virtual ~GetServiceConfigRequest();

  GetServiceConfigRequest(const GetServiceConfigRequest& from);

  inline GetServiceConfigRequest& operator=(const GetServiceConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceConfigRequest& default_instance();

  static const GetServiceConfigRequest* internal_default_instance();

  void Swap(GetServiceConfigRequest* other);

  // implements Message ----------------------------------------------

  inline GetServiceConfigRequest* New() const { return New(NULL); }

  GetServiceConfigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceConfigRequest& from);
  void MergeFrom(const GetServiceConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetServiceConfigRequest* other);
  void UnsafeMergeFrom(const GetServiceConfigRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  const ::std::string& config_id() const;
  void set_config_id(const ::std::string& value);
  void set_config_id(const char* value);
  void set_config_id(const char* value, size_t size);
  ::std::string* mutable_config_id();
  ::std::string* release_config_id();
  void set_allocated_config_id(::std::string* config_id);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.GetServiceConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr config_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetServiceConfigRequest> GetServiceConfigRequest_default_instance_;

// -------------------------------------------------------------------

class ListServiceConfigsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ListServiceConfigsRequest) */ {
 public:
  ListServiceConfigsRequest();
  virtual ~ListServiceConfigsRequest();

  ListServiceConfigsRequest(const ListServiceConfigsRequest& from);

  inline ListServiceConfigsRequest& operator=(const ListServiceConfigsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceConfigsRequest& default_instance();

  static const ListServiceConfigsRequest* internal_default_instance();

  void Swap(ListServiceConfigsRequest* other);

  // implements Message ----------------------------------------------

  inline ListServiceConfigsRequest* New() const { return New(NULL); }

  ListServiceConfigsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceConfigsRequest& from);
  void MergeFrom(const ListServiceConfigsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServiceConfigsRequest* other);
  void UnsafeMergeFrom(const ListServiceConfigsRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // optional int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ListServiceConfigsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListServiceConfigsRequest> ListServiceConfigsRequest_default_instance_;

// -------------------------------------------------------------------

class ListServiceConfigsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ListServiceConfigsResponse) */ {
 public:
  ListServiceConfigsResponse();
  virtual ~ListServiceConfigsResponse();

  ListServiceConfigsResponse(const ListServiceConfigsResponse& from);

  inline ListServiceConfigsResponse& operator=(const ListServiceConfigsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceConfigsResponse& default_instance();

  static const ListServiceConfigsResponse* internal_default_instance();

  void Swap(ListServiceConfigsResponse* other);

  // implements Message ----------------------------------------------

  inline ListServiceConfigsResponse* New() const { return New(NULL); }

  ListServiceConfigsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceConfigsResponse& from);
  void MergeFrom(const ListServiceConfigsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServiceConfigsResponse* other);
  void UnsafeMergeFrom(const ListServiceConfigsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.Service service_configs = 1;
  int service_configs_size() const;
  void clear_service_configs();
  static const int kServiceConfigsFieldNumber = 1;
  const ::google::api::Service& service_configs(int index) const;
  ::google::api::Service* mutable_service_configs(int index);
  ::google::api::Service* add_service_configs();
  ::google::protobuf::RepeatedPtrField< ::google::api::Service >*
      mutable_service_configs();
  const ::google::protobuf::RepeatedPtrField< ::google::api::Service >&
      service_configs() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ListServiceConfigsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::Service > service_configs_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListServiceConfigsResponse> ListServiceConfigsResponse_default_instance_;

// -------------------------------------------------------------------

class CreateServiceConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.CreateServiceConfigRequest) */ {
 public:
  CreateServiceConfigRequest();
  virtual ~CreateServiceConfigRequest();

  CreateServiceConfigRequest(const CreateServiceConfigRequest& from);

  inline CreateServiceConfigRequest& operator=(const CreateServiceConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateServiceConfigRequest& default_instance();

  static const CreateServiceConfigRequest* internal_default_instance();

  void Swap(CreateServiceConfigRequest* other);

  // implements Message ----------------------------------------------

  inline CreateServiceConfigRequest* New() const { return New(NULL); }

  CreateServiceConfigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateServiceConfigRequest& from);
  void MergeFrom(const CreateServiceConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateServiceConfigRequest* other);
  void UnsafeMergeFrom(const CreateServiceConfigRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional .google.api.Service service_config = 2;
  bool has_service_config() const;
  void clear_service_config();
  static const int kServiceConfigFieldNumber = 2;
  const ::google::api::Service& service_config() const;
  ::google::api::Service* mutable_service_config();
  ::google::api::Service* release_service_config();
  void set_allocated_service_config(::google::api::Service* service_config);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.CreateServiceConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::api::Service* service_config_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateServiceConfigRequest> CreateServiceConfigRequest_default_instance_;

// -------------------------------------------------------------------

class SubmitConfigSourceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.SubmitConfigSourceRequest) */ {
 public:
  SubmitConfigSourceRequest();
  virtual ~SubmitConfigSourceRequest();

  SubmitConfigSourceRequest(const SubmitConfigSourceRequest& from);

  inline SubmitConfigSourceRequest& operator=(const SubmitConfigSourceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitConfigSourceRequest& default_instance();

  static const SubmitConfigSourceRequest* internal_default_instance();

  void Swap(SubmitConfigSourceRequest* other);

  // implements Message ----------------------------------------------

  inline SubmitConfigSourceRequest* New() const { return New(NULL); }

  SubmitConfigSourceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitConfigSourceRequest& from);
  void MergeFrom(const SubmitConfigSourceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubmitConfigSourceRequest* other);
  void UnsafeMergeFrom(const SubmitConfigSourceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional .google.api.servicemanagement.v1.ConfigSource config_source = 2;
  bool has_config_source() const;
  void clear_config_source();
  static const int kConfigSourceFieldNumber = 2;
  const ::google::api::servicemanagement::v1::ConfigSource& config_source() const;
  ::google::api::servicemanagement::v1::ConfigSource* mutable_config_source();
  ::google::api::servicemanagement::v1::ConfigSource* release_config_source();
  void set_allocated_config_source(::google::api::servicemanagement::v1::ConfigSource* config_source);

  // optional bool validate_only = 3;
  void clear_validate_only();
  static const int kValidateOnlyFieldNumber = 3;
  bool validate_only() const;
  void set_validate_only(bool value);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::api::servicemanagement::v1::ConfigSource* config_source_;
  bool validate_only_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SubmitConfigSourceRequest> SubmitConfigSourceRequest_default_instance_;

// -------------------------------------------------------------------

class SubmitConfigSourceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.SubmitConfigSourceResponse) */ {
 public:
  SubmitConfigSourceResponse();
  virtual ~SubmitConfigSourceResponse();

  SubmitConfigSourceResponse(const SubmitConfigSourceResponse& from);

  inline SubmitConfigSourceResponse& operator=(const SubmitConfigSourceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitConfigSourceResponse& default_instance();

  static const SubmitConfigSourceResponse* internal_default_instance();

  void Swap(SubmitConfigSourceResponse* other);

  // implements Message ----------------------------------------------

  inline SubmitConfigSourceResponse* New() const { return New(NULL); }

  SubmitConfigSourceResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitConfigSourceResponse& from);
  void MergeFrom(const SubmitConfigSourceResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubmitConfigSourceResponse* other);
  void UnsafeMergeFrom(const SubmitConfigSourceResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.api.Service service_config = 1;
  bool has_service_config() const;
  void clear_service_config();
  static const int kServiceConfigFieldNumber = 1;
  const ::google::api::Service& service_config() const;
  ::google::api::Service* mutable_service_config();
  ::google::api::Service* release_service_config();
  void set_allocated_service_config(::google::api::Service* service_config);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::api::Service* service_config_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SubmitConfigSourceResponse> SubmitConfigSourceResponse_default_instance_;

// -------------------------------------------------------------------

class CreateServiceRolloutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.CreateServiceRolloutRequest) */ {
 public:
  CreateServiceRolloutRequest();
  virtual ~CreateServiceRolloutRequest();

  CreateServiceRolloutRequest(const CreateServiceRolloutRequest& from);

  inline CreateServiceRolloutRequest& operator=(const CreateServiceRolloutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateServiceRolloutRequest& default_instance();

  static const CreateServiceRolloutRequest* internal_default_instance();

  void Swap(CreateServiceRolloutRequest* other);

  // implements Message ----------------------------------------------

  inline CreateServiceRolloutRequest* New() const { return New(NULL); }

  CreateServiceRolloutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateServiceRolloutRequest& from);
  void MergeFrom(const CreateServiceRolloutRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateServiceRolloutRequest* other);
  void UnsafeMergeFrom(const CreateServiceRolloutRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional .google.api.servicemanagement.v1.Rollout rollout = 2;
  bool has_rollout() const;
  void clear_rollout();
  static const int kRolloutFieldNumber = 2;
  const ::google::api::servicemanagement::v1::Rollout& rollout() const;
  ::google::api::servicemanagement::v1::Rollout* mutable_rollout();
  ::google::api::servicemanagement::v1::Rollout* release_rollout();
  void set_allocated_rollout(::google::api::servicemanagement::v1::Rollout* rollout);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::api::servicemanagement::v1::Rollout* rollout_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateServiceRolloutRequest> CreateServiceRolloutRequest_default_instance_;

// -------------------------------------------------------------------

class ListServiceRolloutsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ListServiceRolloutsRequest) */ {
 public:
  ListServiceRolloutsRequest();
  virtual ~ListServiceRolloutsRequest();

  ListServiceRolloutsRequest(const ListServiceRolloutsRequest& from);

  inline ListServiceRolloutsRequest& operator=(const ListServiceRolloutsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceRolloutsRequest& default_instance();

  static const ListServiceRolloutsRequest* internal_default_instance();

  void Swap(ListServiceRolloutsRequest* other);

  // implements Message ----------------------------------------------

  inline ListServiceRolloutsRequest* New() const { return New(NULL); }

  ListServiceRolloutsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceRolloutsRequest& from);
  void MergeFrom(const ListServiceRolloutsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServiceRolloutsRequest* other);
  void UnsafeMergeFrom(const ListServiceRolloutsRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // optional int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListServiceRolloutsRequest> ListServiceRolloutsRequest_default_instance_;

// -------------------------------------------------------------------

class ListServiceRolloutsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ListServiceRolloutsResponse) */ {
 public:
  ListServiceRolloutsResponse();
  virtual ~ListServiceRolloutsResponse();

  ListServiceRolloutsResponse(const ListServiceRolloutsResponse& from);

  inline ListServiceRolloutsResponse& operator=(const ListServiceRolloutsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceRolloutsResponse& default_instance();

  static const ListServiceRolloutsResponse* internal_default_instance();

  void Swap(ListServiceRolloutsResponse* other);

  // implements Message ----------------------------------------------

  inline ListServiceRolloutsResponse* New() const { return New(NULL); }

  ListServiceRolloutsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceRolloutsResponse& from);
  void MergeFrom(const ListServiceRolloutsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServiceRolloutsResponse* other);
  void UnsafeMergeFrom(const ListServiceRolloutsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  int rollouts_size() const;
  void clear_rollouts();
  static const int kRolloutsFieldNumber = 1;
  const ::google::api::servicemanagement::v1::Rollout& rollouts(int index) const;
  ::google::api::servicemanagement::v1::Rollout* mutable_rollouts(int index);
  ::google::api::servicemanagement::v1::Rollout* add_rollouts();
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Rollout >*
      mutable_rollouts();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Rollout >&
      rollouts() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Rollout > rollouts_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListServiceRolloutsResponse> ListServiceRolloutsResponse_default_instance_;

// -------------------------------------------------------------------

class GetServiceRolloutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.GetServiceRolloutRequest) */ {
 public:
  GetServiceRolloutRequest();
  virtual ~GetServiceRolloutRequest();

  GetServiceRolloutRequest(const GetServiceRolloutRequest& from);

  inline GetServiceRolloutRequest& operator=(const GetServiceRolloutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceRolloutRequest& default_instance();

  static const GetServiceRolloutRequest* internal_default_instance();

  void Swap(GetServiceRolloutRequest* other);

  // implements Message ----------------------------------------------

  inline GetServiceRolloutRequest* New() const { return New(NULL); }

  GetServiceRolloutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceRolloutRequest& from);
  void MergeFrom(const GetServiceRolloutRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetServiceRolloutRequest* other);
  void UnsafeMergeFrom(const GetServiceRolloutRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string rollout_id = 2;
  void clear_rollout_id();
  static const int kRolloutIdFieldNumber = 2;
  const ::std::string& rollout_id() const;
  void set_rollout_id(const ::std::string& value);
  void set_rollout_id(const char* value);
  void set_rollout_id(const char* value, size_t size);
  ::std::string* mutable_rollout_id();
  ::std::string* release_rollout_id();
  void set_allocated_rollout_id(::std::string* rollout_id);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.GetServiceRolloutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr rollout_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetServiceRolloutRequest> GetServiceRolloutRequest_default_instance_;

// -------------------------------------------------------------------

class EnableServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.EnableServiceRequest) */ {
 public:
  EnableServiceRequest();
  virtual ~EnableServiceRequest();

  EnableServiceRequest(const EnableServiceRequest& from);

  inline EnableServiceRequest& operator=(const EnableServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableServiceRequest& default_instance();

  static const EnableServiceRequest* internal_default_instance();

  void Swap(EnableServiceRequest* other);

  // implements Message ----------------------------------------------

  inline EnableServiceRequest* New() const { return New(NULL); }

  EnableServiceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableServiceRequest& from);
  void MergeFrom(const EnableServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnableServiceRequest* other);
  void UnsafeMergeFrom(const EnableServiceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string consumer_id = 2;
  void clear_consumer_id();
  static const int kConsumerIdFieldNumber = 2;
  const ::std::string& consumer_id() const;
  void set_consumer_id(const ::std::string& value);
  void set_consumer_id(const char* value);
  void set_consumer_id(const char* value, size_t size);
  ::std::string* mutable_consumer_id();
  ::std::string* release_consumer_id();
  void set_allocated_consumer_id(::std::string* consumer_id);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.EnableServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr consumer_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EnableServiceRequest> EnableServiceRequest_default_instance_;

// -------------------------------------------------------------------

class DisableServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.DisableServiceRequest) */ {
 public:
  DisableServiceRequest();
  virtual ~DisableServiceRequest();

  DisableServiceRequest(const DisableServiceRequest& from);

  inline DisableServiceRequest& operator=(const DisableServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisableServiceRequest& default_instance();

  static const DisableServiceRequest* internal_default_instance();

  void Swap(DisableServiceRequest* other);

  // implements Message ----------------------------------------------

  inline DisableServiceRequest* New() const { return New(NULL); }

  DisableServiceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisableServiceRequest& from);
  void MergeFrom(const DisableServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisableServiceRequest* other);
  void UnsafeMergeFrom(const DisableServiceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string consumer_id = 2;
  void clear_consumer_id();
  static const int kConsumerIdFieldNumber = 2;
  const ::std::string& consumer_id() const;
  void set_consumer_id(const ::std::string& value);
  void set_consumer_id(const char* value);
  void set_consumer_id(const char* value, size_t size);
  ::std::string* mutable_consumer_id();
  ::std::string* release_consumer_id();
  void set_allocated_consumer_id(::std::string* consumer_id);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.DisableServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr consumer_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DisableServiceRequest> DisableServiceRequest_default_instance_;

// -------------------------------------------------------------------

class GenerateConfigReportRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.GenerateConfigReportRequest) */ {
 public:
  GenerateConfigReportRequest();
  virtual ~GenerateConfigReportRequest();

  GenerateConfigReportRequest(const GenerateConfigReportRequest& from);

  inline GenerateConfigReportRequest& operator=(const GenerateConfigReportRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateConfigReportRequest& default_instance();

  static const GenerateConfigReportRequest* internal_default_instance();

  void Swap(GenerateConfigReportRequest* other);

  // implements Message ----------------------------------------------

  inline GenerateConfigReportRequest* New() const { return New(NULL); }

  GenerateConfigReportRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenerateConfigReportRequest& from);
  void MergeFrom(const GenerateConfigReportRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GenerateConfigReportRequest* other);
  void UnsafeMergeFrom(const GenerateConfigReportRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Any new_config = 1;
  bool has_new_config() const;
  void clear_new_config();
  static const int kNewConfigFieldNumber = 1;
  const ::google::protobuf::Any& new_config() const;
  ::google::protobuf::Any* mutable_new_config();
  ::google::protobuf::Any* release_new_config();
  void set_allocated_new_config(::google::protobuf::Any* new_config);

  // optional .google.protobuf.Any old_config = 2;
  bool has_old_config() const;
  void clear_old_config();
  static const int kOldConfigFieldNumber = 2;
  const ::google::protobuf::Any& old_config() const;
  ::google::protobuf::Any* mutable_old_config();
  ::google::protobuf::Any* release_old_config();
  void set_allocated_old_config(::google::protobuf::Any* old_config);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.GenerateConfigReportRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* new_config_;
  ::google::protobuf::Any* old_config_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GenerateConfigReportRequest> GenerateConfigReportRequest_default_instance_;

// -------------------------------------------------------------------

class GenerateConfigReportResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.GenerateConfigReportResponse) */ {
 public:
  GenerateConfigReportResponse();
  virtual ~GenerateConfigReportResponse();

  GenerateConfigReportResponse(const GenerateConfigReportResponse& from);

  inline GenerateConfigReportResponse& operator=(const GenerateConfigReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenerateConfigReportResponse& default_instance();

  static const GenerateConfigReportResponse* internal_default_instance();

  void Swap(GenerateConfigReportResponse* other);

  // implements Message ----------------------------------------------

  inline GenerateConfigReportResponse* New() const { return New(NULL); }

  GenerateConfigReportResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenerateConfigReportResponse& from);
  void MergeFrom(const GenerateConfigReportResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GenerateConfigReportResponse* other);
  void UnsafeMergeFrom(const GenerateConfigReportResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  int change_reports_size() const;
  void clear_change_reports();
  static const int kChangeReportsFieldNumber = 3;
  const ::google::api::servicemanagement::v1::ChangeReport& change_reports(int index) const;
  ::google::api::servicemanagement::v1::ChangeReport* mutable_change_reports(int index);
  ::google::api::servicemanagement::v1::ChangeReport* add_change_reports();
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ChangeReport >*
      mutable_change_reports();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ChangeReport >&
      change_reports() const;

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  int diagnostics_size() const;
  void clear_diagnostics();
  static const int kDiagnosticsFieldNumber = 4;
  const ::google::api::servicemanagement::v1::Diagnostic& diagnostics(int index) const;
  ::google::api::servicemanagement::v1::Diagnostic* mutable_diagnostics(int index);
  ::google::api::servicemanagement::v1::Diagnostic* add_diagnostics();
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Diagnostic >*
      mutable_diagnostics();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Diagnostic >&
      diagnostics() const;

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.GenerateConfigReportResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ChangeReport > change_reports_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Diagnostic > diagnostics_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GenerateConfigReportResponse> GenerateConfigReportResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ListServicesRequest

// optional string producer_project_id = 1;
inline void ListServicesRequest::clear_producer_project_id() {
  producer_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServicesRequest::producer_project_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServicesRequest.producer_project_id)
  return producer_project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesRequest::set_producer_project_id(const ::std::string& value) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServicesRequest.producer_project_id)
}
inline void ListServicesRequest::set_producer_project_id(const char* value) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServicesRequest.producer_project_id)
}
inline void ListServicesRequest::set_producer_project_id(const char* value, size_t size) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServicesRequest.producer_project_id)
}
inline ::std::string* ListServicesRequest::mutable_producer_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServicesRequest.producer_project_id)
  return producer_project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServicesRequest::release_producer_project_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServicesRequest.producer_project_id)
  
  return producer_project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesRequest::set_allocated_producer_project_id(::std::string* producer_project_id) {
  if (producer_project_id != NULL) {
    
  } else {
    
  }
  producer_project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_project_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServicesRequest.producer_project_id)
}

// optional int32 page_size = 5;
inline void ListServicesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListServicesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServicesRequest.page_size)
  return page_size_;
}
inline void ListServicesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServicesRequest.page_size)
}

// optional string page_token = 6;
inline void ListServicesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServicesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServicesRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServicesRequest.page_token)
}
inline void ListServicesRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServicesRequest.page_token)
}
inline void ListServicesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServicesRequest.page_token)
}
inline ::std::string* ListServicesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServicesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServicesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServicesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServicesRequest.page_token)
}

inline const ListServicesRequest* ListServicesRequest::internal_default_instance() {
  return &ListServicesRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListServicesResponse

// repeated .google.api.servicemanagement.v1.ManagedService services = 1;
inline int ListServicesResponse::services_size() const {
  return services_.size();
}
inline void ListServicesResponse::clear_services() {
  services_.Clear();
}
inline const ::google::api::servicemanagement::v1::ManagedService& ListServicesResponse::services(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServicesResponse.services)
  return services_.Get(index);
}
inline ::google::api::servicemanagement::v1::ManagedService* ListServicesResponse::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServicesResponse.services)
  return services_.Mutable(index);
}
inline ::google::api::servicemanagement::v1::ManagedService* ListServicesResponse::add_services() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.ListServicesResponse.services)
  return services_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ManagedService >*
ListServicesResponse::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.ListServicesResponse.services)
  return &services_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ManagedService >&
ListServicesResponse::services() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.ListServicesResponse.services)
  return services_;
}

// optional string next_page_token = 2;
inline void ListServicesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServicesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServicesResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServicesResponse.next_page_token)
}
inline void ListServicesResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServicesResponse.next_page_token)
}
inline void ListServicesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServicesResponse.next_page_token)
}
inline ::std::string* ListServicesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServicesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServicesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServicesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServicesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServicesResponse.next_page_token)
}

inline const ListServicesResponse* ListServicesResponse::internal_default_instance() {
  return &ListServicesResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// GetServiceRequest

// optional string service_name = 1;
inline void GetServiceRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GetServiceRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.GetServiceRequest.service_name)
}
inline void GetServiceRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.GetServiceRequest.service_name)
}
inline void GetServiceRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.GetServiceRequest.service_name)
}
inline ::std::string* GetServiceRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GetServiceRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GetServiceRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GetServiceRequest.service_name)
}

inline const GetServiceRequest* GetServiceRequest::internal_default_instance() {
  return &GetServiceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateServiceRequest

// optional .google.api.servicemanagement.v1.ManagedService service = 1;
inline bool CreateServiceRequest::has_service() const {
  return this != internal_default_instance() && service_ != NULL;
}
inline void CreateServiceRequest::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) delete service_;
  service_ = NULL;
}
inline const ::google::api::servicemanagement::v1::ManagedService& CreateServiceRequest::service() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.CreateServiceRequest.service)
  return service_ != NULL ? *service_
                         : *::google::api::servicemanagement::v1::ManagedService::internal_default_instance();
}
inline ::google::api::servicemanagement::v1::ManagedService* CreateServiceRequest::mutable_service() {
  
  if (service_ == NULL) {
    service_ = new ::google::api::servicemanagement::v1::ManagedService;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.CreateServiceRequest.service)
  return service_;
}
inline ::google::api::servicemanagement::v1::ManagedService* CreateServiceRequest::release_service() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.CreateServiceRequest.service)
  
  ::google::api::servicemanagement::v1::ManagedService* temp = service_;
  service_ = NULL;
  return temp;
}
inline void CreateServiceRequest::set_allocated_service(::google::api::servicemanagement::v1::ManagedService* service) {
  delete service_;
  service_ = service;
  if (service) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.CreateServiceRequest.service)
}

inline const CreateServiceRequest* CreateServiceRequest::internal_default_instance() {
  return &CreateServiceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteServiceRequest

// optional string service_name = 1;
inline void DeleteServiceRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteServiceRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.DeleteServiceRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteServiceRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.DeleteServiceRequest.service_name)
}
inline void DeleteServiceRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.DeleteServiceRequest.service_name)
}
inline void DeleteServiceRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.DeleteServiceRequest.service_name)
}
inline ::std::string* DeleteServiceRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.DeleteServiceRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteServiceRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.DeleteServiceRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteServiceRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.DeleteServiceRequest.service_name)
}

inline const DeleteServiceRequest* DeleteServiceRequest::internal_default_instance() {
  return &DeleteServiceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UndeleteServiceRequest

// optional string service_name = 1;
inline void UndeleteServiceRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UndeleteServiceRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.UndeleteServiceRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UndeleteServiceRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.UndeleteServiceRequest.service_name)
}
inline void UndeleteServiceRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.UndeleteServiceRequest.service_name)
}
inline void UndeleteServiceRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.UndeleteServiceRequest.service_name)
}
inline ::std::string* UndeleteServiceRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.UndeleteServiceRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UndeleteServiceRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.UndeleteServiceRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UndeleteServiceRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.UndeleteServiceRequest.service_name)
}

inline const UndeleteServiceRequest* UndeleteServiceRequest::internal_default_instance() {
  return &UndeleteServiceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UndeleteServiceResponse

// optional .google.api.servicemanagement.v1.ManagedService service = 1;
inline bool UndeleteServiceResponse::has_service() const {
  return this != internal_default_instance() && service_ != NULL;
}
inline void UndeleteServiceResponse::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) delete service_;
  service_ = NULL;
}
inline const ::google::api::servicemanagement::v1::ManagedService& UndeleteServiceResponse::service() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.UndeleteServiceResponse.service)
  return service_ != NULL ? *service_
                         : *::google::api::servicemanagement::v1::ManagedService::internal_default_instance();
}
inline ::google::api::servicemanagement::v1::ManagedService* UndeleteServiceResponse::mutable_service() {
  
  if (service_ == NULL) {
    service_ = new ::google::api::servicemanagement::v1::ManagedService;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.UndeleteServiceResponse.service)
  return service_;
}
inline ::google::api::servicemanagement::v1::ManagedService* UndeleteServiceResponse::release_service() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.UndeleteServiceResponse.service)
  
  ::google::api::servicemanagement::v1::ManagedService* temp = service_;
  service_ = NULL;
  return temp;
}
inline void UndeleteServiceResponse::set_allocated_service(::google::api::servicemanagement::v1::ManagedService* service) {
  delete service_;
  service_ = service;
  if (service) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.UndeleteServiceResponse.service)
}

inline const UndeleteServiceResponse* UndeleteServiceResponse::internal_default_instance() {
  return &UndeleteServiceResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// GetServiceConfigRequest

// optional string service_name = 1;
inline void GetServiceConfigRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceConfigRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GetServiceConfigRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.GetServiceConfigRequest.service_name)
}
inline void GetServiceConfigRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.GetServiceConfigRequest.service_name)
}
inline void GetServiceConfigRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.GetServiceConfigRequest.service_name)
}
inline ::std::string* GetServiceConfigRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GetServiceConfigRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceConfigRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GetServiceConfigRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GetServiceConfigRequest.service_name)
}

// optional string config_id = 2;
inline void GetServiceConfigRequest::clear_config_id() {
  config_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceConfigRequest::config_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GetServiceConfigRequest.config_id)
  return config_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigRequest::set_config_id(const ::std::string& value) {
  
  config_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.GetServiceConfigRequest.config_id)
}
inline void GetServiceConfigRequest::set_config_id(const char* value) {
  
  config_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.GetServiceConfigRequest.config_id)
}
inline void GetServiceConfigRequest::set_config_id(const char* value, size_t size) {
  
  config_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.GetServiceConfigRequest.config_id)
}
inline ::std::string* GetServiceConfigRequest::mutable_config_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GetServiceConfigRequest.config_id)
  return config_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceConfigRequest::release_config_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GetServiceConfigRequest.config_id)
  
  return config_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceConfigRequest::set_allocated_config_id(::std::string* config_id) {
  if (config_id != NULL) {
    
  } else {
    
  }
  config_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GetServiceConfigRequest.config_id)
}

inline const GetServiceConfigRequest* GetServiceConfigRequest::internal_default_instance() {
  return &GetServiceConfigRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListServiceConfigsRequest

// optional string service_name = 1;
inline void ListServiceConfigsRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServiceConfigsRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceConfigsRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name)
}
inline void ListServiceConfigsRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name)
}
inline void ListServiceConfigsRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name)
}
inline ::std::string* ListServiceConfigsRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServiceConfigsRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceConfigsRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name)
}

// optional string page_token = 2;
inline void ListServiceConfigsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServiceConfigsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceConfigsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token)
}
inline void ListServiceConfigsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token)
}
inline void ListServiceConfigsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token)
}
inline ::std::string* ListServiceConfigsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServiceConfigsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceConfigsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token)
}

// optional int32 page_size = 3;
inline void ListServiceConfigsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListServiceConfigsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_size)
  return page_size_;
}
inline void ListServiceConfigsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceConfigsRequest.page_size)
}

inline const ListServiceConfigsRequest* ListServiceConfigsRequest::internal_default_instance() {
  return &ListServiceConfigsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListServiceConfigsResponse

// repeated .google.api.Service service_configs = 1;
inline int ListServiceConfigsResponse::service_configs_size() const {
  return service_configs_.size();
}
inline void ListServiceConfigsResponse::clear_service_configs() {
  service_configs_.Clear();
}
inline const ::google::api::Service& ListServiceConfigsResponse::service_configs(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceConfigsResponse.service_configs)
  return service_configs_.Get(index);
}
inline ::google::api::Service* ListServiceConfigsResponse::mutable_service_configs(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceConfigsResponse.service_configs)
  return service_configs_.Mutable(index);
}
inline ::google::api::Service* ListServiceConfigsResponse::add_service_configs() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.ListServiceConfigsResponse.service_configs)
  return service_configs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::Service >*
ListServiceConfigsResponse::mutable_service_configs() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.ListServiceConfigsResponse.service_configs)
  return &service_configs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::Service >&
ListServiceConfigsResponse::service_configs() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.ListServiceConfigsResponse.service_configs)
  return service_configs_;
}

// optional string next_page_token = 2;
inline void ListServiceConfigsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServiceConfigsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceConfigsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token)
}
inline void ListServiceConfigsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token)
}
inline void ListServiceConfigsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token)
}
inline ::std::string* ListServiceConfigsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServiceConfigsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceConfigsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token)
}

inline const ListServiceConfigsResponse* ListServiceConfigsResponse::internal_default_instance() {
  return &ListServiceConfigsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateServiceConfigRequest

// optional string service_name = 1;
inline void CreateServiceConfigRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateServiceConfigRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateServiceConfigRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name)
}
inline void CreateServiceConfigRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name)
}
inline void CreateServiceConfigRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name)
}
inline ::std::string* CreateServiceConfigRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateServiceConfigRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateServiceConfigRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name)
}

// optional .google.api.Service service_config = 2;
inline bool CreateServiceConfigRequest::has_service_config() const {
  return this != internal_default_instance() && service_config_ != NULL;
}
inline void CreateServiceConfigRequest::clear_service_config() {
  if (GetArenaNoVirtual() == NULL && service_config_ != NULL) delete service_config_;
  service_config_ = NULL;
}
inline const ::google::api::Service& CreateServiceConfigRequest::service_config() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_config)
  return service_config_ != NULL ? *service_config_
                         : *::google::api::Service::internal_default_instance();
}
inline ::google::api::Service* CreateServiceConfigRequest::mutable_service_config() {
  
  if (service_config_ == NULL) {
    service_config_ = new ::google::api::Service;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_config)
  return service_config_;
}
inline ::google::api::Service* CreateServiceConfigRequest::release_service_config() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_config)
  
  ::google::api::Service* temp = service_config_;
  service_config_ = NULL;
  return temp;
}
inline void CreateServiceConfigRequest::set_allocated_service_config(::google::api::Service* service_config) {
  delete service_config_;
  service_config_ = service_config;
  if (service_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.CreateServiceConfigRequest.service_config)
}

inline const CreateServiceConfigRequest* CreateServiceConfigRequest::internal_default_instance() {
  return &CreateServiceConfigRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SubmitConfigSourceRequest

// optional string service_name = 1;
inline void SubmitConfigSourceRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubmitConfigSourceRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitConfigSourceRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name)
}
inline void SubmitConfigSourceRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name)
}
inline void SubmitConfigSourceRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name)
}
inline ::std::string* SubmitConfigSourceRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitConfigSourceRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitConfigSourceRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name)
}

// optional .google.api.servicemanagement.v1.ConfigSource config_source = 2;
inline bool SubmitConfigSourceRequest::has_config_source() const {
  return this != internal_default_instance() && config_source_ != NULL;
}
inline void SubmitConfigSourceRequest::clear_config_source() {
  if (GetArenaNoVirtual() == NULL && config_source_ != NULL) delete config_source_;
  config_source_ = NULL;
}
inline const ::google::api::servicemanagement::v1::ConfigSource& SubmitConfigSourceRequest::config_source() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.SubmitConfigSourceRequest.config_source)
  return config_source_ != NULL ? *config_source_
                         : *::google::api::servicemanagement::v1::ConfigSource::internal_default_instance();
}
inline ::google::api::servicemanagement::v1::ConfigSource* SubmitConfigSourceRequest::mutable_config_source() {
  
  if (config_source_ == NULL) {
    config_source_ = new ::google::api::servicemanagement::v1::ConfigSource;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.SubmitConfigSourceRequest.config_source)
  return config_source_;
}
inline ::google::api::servicemanagement::v1::ConfigSource* SubmitConfigSourceRequest::release_config_source() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.SubmitConfigSourceRequest.config_source)
  
  ::google::api::servicemanagement::v1::ConfigSource* temp = config_source_;
  config_source_ = NULL;
  return temp;
}
inline void SubmitConfigSourceRequest::set_allocated_config_source(::google::api::servicemanagement::v1::ConfigSource* config_source) {
  delete config_source_;
  config_source_ = config_source;
  if (config_source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.SubmitConfigSourceRequest.config_source)
}

// optional bool validate_only = 3;
inline void SubmitConfigSourceRequest::clear_validate_only() {
  validate_only_ = false;
}
inline bool SubmitConfigSourceRequest::validate_only() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.SubmitConfigSourceRequest.validate_only)
  return validate_only_;
}
inline void SubmitConfigSourceRequest::set_validate_only(bool value) {
  
  validate_only_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.SubmitConfigSourceRequest.validate_only)
}

inline const SubmitConfigSourceRequest* SubmitConfigSourceRequest::internal_default_instance() {
  return &SubmitConfigSourceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SubmitConfigSourceResponse

// optional .google.api.Service service_config = 1;
inline bool SubmitConfigSourceResponse::has_service_config() const {
  return this != internal_default_instance() && service_config_ != NULL;
}
inline void SubmitConfigSourceResponse::clear_service_config() {
  if (GetArenaNoVirtual() == NULL && service_config_ != NULL) delete service_config_;
  service_config_ = NULL;
}
inline const ::google::api::Service& SubmitConfigSourceResponse::service_config() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.SubmitConfigSourceResponse.service_config)
  return service_config_ != NULL ? *service_config_
                         : *::google::api::Service::internal_default_instance();
}
inline ::google::api::Service* SubmitConfigSourceResponse::mutable_service_config() {
  
  if (service_config_ == NULL) {
    service_config_ = new ::google::api::Service;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.SubmitConfigSourceResponse.service_config)
  return service_config_;
}
inline ::google::api::Service* SubmitConfigSourceResponse::release_service_config() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.SubmitConfigSourceResponse.service_config)
  
  ::google::api::Service* temp = service_config_;
  service_config_ = NULL;
  return temp;
}
inline void SubmitConfigSourceResponse::set_allocated_service_config(::google::api::Service* service_config) {
  delete service_config_;
  service_config_ = service_config;
  if (service_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.SubmitConfigSourceResponse.service_config)
}

inline const SubmitConfigSourceResponse* SubmitConfigSourceResponse::internal_default_instance() {
  return &SubmitConfigSourceResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateServiceRolloutRequest

// optional string service_name = 1;
inline void CreateServiceRolloutRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateServiceRolloutRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateServiceRolloutRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name)
}
inline void CreateServiceRolloutRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name)
}
inline void CreateServiceRolloutRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name)
}
inline ::std::string* CreateServiceRolloutRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateServiceRolloutRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateServiceRolloutRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name)
}

// optional .google.api.servicemanagement.v1.Rollout rollout = 2;
inline bool CreateServiceRolloutRequest::has_rollout() const {
  return this != internal_default_instance() && rollout_ != NULL;
}
inline void CreateServiceRolloutRequest::clear_rollout() {
  if (GetArenaNoVirtual() == NULL && rollout_ != NULL) delete rollout_;
  rollout_ = NULL;
}
inline const ::google::api::servicemanagement::v1::Rollout& CreateServiceRolloutRequest::rollout() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.CreateServiceRolloutRequest.rollout)
  return rollout_ != NULL ? *rollout_
                         : *::google::api::servicemanagement::v1::Rollout::internal_default_instance();
}
inline ::google::api::servicemanagement::v1::Rollout* CreateServiceRolloutRequest::mutable_rollout() {
  
  if (rollout_ == NULL) {
    rollout_ = new ::google::api::servicemanagement::v1::Rollout;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.CreateServiceRolloutRequest.rollout)
  return rollout_;
}
inline ::google::api::servicemanagement::v1::Rollout* CreateServiceRolloutRequest::release_rollout() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.CreateServiceRolloutRequest.rollout)
  
  ::google::api::servicemanagement::v1::Rollout* temp = rollout_;
  rollout_ = NULL;
  return temp;
}
inline void CreateServiceRolloutRequest::set_allocated_rollout(::google::api::servicemanagement::v1::Rollout* rollout) {
  delete rollout_;
  rollout_ = rollout;
  if (rollout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.CreateServiceRolloutRequest.rollout)
}

inline const CreateServiceRolloutRequest* CreateServiceRolloutRequest::internal_default_instance() {
  return &CreateServiceRolloutRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListServiceRolloutsRequest

// optional string service_name = 1;
inline void ListServiceRolloutsRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServiceRolloutsRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceRolloutsRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name)
}
inline void ListServiceRolloutsRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name)
}
inline void ListServiceRolloutsRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name)
}
inline ::std::string* ListServiceRolloutsRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServiceRolloutsRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceRolloutsRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name)
}

// optional string page_token = 2;
inline void ListServiceRolloutsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServiceRolloutsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceRolloutsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token)
}
inline void ListServiceRolloutsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token)
}
inline void ListServiceRolloutsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token)
}
inline ::std::string* ListServiceRolloutsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServiceRolloutsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceRolloutsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token)
}

// optional int32 page_size = 3;
inline void ListServiceRolloutsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListServiceRolloutsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_size)
  return page_size_;
}
inline void ListServiceRolloutsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_size)
}

inline const ListServiceRolloutsRequest* ListServiceRolloutsRequest::internal_default_instance() {
  return &ListServiceRolloutsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListServiceRolloutsResponse

// repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
inline int ListServiceRolloutsResponse::rollouts_size() const {
  return rollouts_.size();
}
inline void ListServiceRolloutsResponse::clear_rollouts() {
  rollouts_.Clear();
}
inline const ::google::api::servicemanagement::v1::Rollout& ListServiceRolloutsResponse::rollouts(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceRolloutsResponse.rollouts)
  return rollouts_.Get(index);
}
inline ::google::api::servicemanagement::v1::Rollout* ListServiceRolloutsResponse::mutable_rollouts(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceRolloutsResponse.rollouts)
  return rollouts_.Mutable(index);
}
inline ::google::api::servicemanagement::v1::Rollout* ListServiceRolloutsResponse::add_rollouts() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.ListServiceRolloutsResponse.rollouts)
  return rollouts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Rollout >*
ListServiceRolloutsResponse::mutable_rollouts() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.ListServiceRolloutsResponse.rollouts)
  return &rollouts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Rollout >&
ListServiceRolloutsResponse::rollouts() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.ListServiceRolloutsResponse.rollouts)
  return rollouts_;
}

// optional string next_page_token = 2;
inline void ListServiceRolloutsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListServiceRolloutsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceRolloutsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token)
}
inline void ListServiceRolloutsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token)
}
inline void ListServiceRolloutsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token)
}
inline ::std::string* ListServiceRolloutsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListServiceRolloutsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListServiceRolloutsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token)
}

inline const ListServiceRolloutsResponse* ListServiceRolloutsResponse::internal_default_instance() {
  return &ListServiceRolloutsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// GetServiceRolloutRequest

// optional string service_name = 1;
inline void GetServiceRolloutRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceRolloutRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceRolloutRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name)
}
inline void GetServiceRolloutRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name)
}
inline void GetServiceRolloutRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name)
}
inline ::std::string* GetServiceRolloutRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceRolloutRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceRolloutRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name)
}

// optional string rollout_id = 2;
inline void GetServiceRolloutRequest::clear_rollout_id() {
  rollout_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetServiceRolloutRequest::rollout_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id)
  return rollout_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceRolloutRequest::set_rollout_id(const ::std::string& value) {
  
  rollout_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id)
}
inline void GetServiceRolloutRequest::set_rollout_id(const char* value) {
  
  rollout_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id)
}
inline void GetServiceRolloutRequest::set_rollout_id(const char* value, size_t size) {
  
  rollout_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id)
}
inline ::std::string* GetServiceRolloutRequest::mutable_rollout_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id)
  return rollout_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetServiceRolloutRequest::release_rollout_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id)
  
  return rollout_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetServiceRolloutRequest::set_allocated_rollout_id(::std::string* rollout_id) {
  if (rollout_id != NULL) {
    
  } else {
    
  }
  rollout_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rollout_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id)
}

inline const GetServiceRolloutRequest* GetServiceRolloutRequest::internal_default_instance() {
  return &GetServiceRolloutRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// EnableServiceRequest

// optional string service_name = 1;
inline void EnableServiceRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnableServiceRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.EnableServiceRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableServiceRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.EnableServiceRequest.service_name)
}
inline void EnableServiceRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.EnableServiceRequest.service_name)
}
inline void EnableServiceRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.EnableServiceRequest.service_name)
}
inline ::std::string* EnableServiceRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.EnableServiceRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnableServiceRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.EnableServiceRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableServiceRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.EnableServiceRequest.service_name)
}

// optional string consumer_id = 2;
inline void EnableServiceRequest::clear_consumer_id() {
  consumer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnableServiceRequest::consumer_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.EnableServiceRequest.consumer_id)
  return consumer_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableServiceRequest::set_consumer_id(const ::std::string& value) {
  
  consumer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.EnableServiceRequest.consumer_id)
}
inline void EnableServiceRequest::set_consumer_id(const char* value) {
  
  consumer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.EnableServiceRequest.consumer_id)
}
inline void EnableServiceRequest::set_consumer_id(const char* value, size_t size) {
  
  consumer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.EnableServiceRequest.consumer_id)
}
inline ::std::string* EnableServiceRequest::mutable_consumer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.EnableServiceRequest.consumer_id)
  return consumer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnableServiceRequest::release_consumer_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.EnableServiceRequest.consumer_id)
  
  return consumer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnableServiceRequest::set_allocated_consumer_id(::std::string* consumer_id) {
  if (consumer_id != NULL) {
    
  } else {
    
  }
  consumer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consumer_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.EnableServiceRequest.consumer_id)
}

inline const EnableServiceRequest* EnableServiceRequest::internal_default_instance() {
  return &EnableServiceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DisableServiceRequest

// optional string service_name = 1;
inline void DisableServiceRequest::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DisableServiceRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.DisableServiceRequest.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableServiceRequest::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.DisableServiceRequest.service_name)
}
inline void DisableServiceRequest::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.DisableServiceRequest.service_name)
}
inline void DisableServiceRequest::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.DisableServiceRequest.service_name)
}
inline ::std::string* DisableServiceRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.DisableServiceRequest.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DisableServiceRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.DisableServiceRequest.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableServiceRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.DisableServiceRequest.service_name)
}

// optional string consumer_id = 2;
inline void DisableServiceRequest::clear_consumer_id() {
  consumer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DisableServiceRequest::consumer_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.DisableServiceRequest.consumer_id)
  return consumer_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableServiceRequest::set_consumer_id(const ::std::string& value) {
  
  consumer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.DisableServiceRequest.consumer_id)
}
inline void DisableServiceRequest::set_consumer_id(const char* value) {
  
  consumer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.DisableServiceRequest.consumer_id)
}
inline void DisableServiceRequest::set_consumer_id(const char* value, size_t size) {
  
  consumer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.DisableServiceRequest.consumer_id)
}
inline ::std::string* DisableServiceRequest::mutable_consumer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.DisableServiceRequest.consumer_id)
  return consumer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DisableServiceRequest::release_consumer_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.DisableServiceRequest.consumer_id)
  
  return consumer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisableServiceRequest::set_allocated_consumer_id(::std::string* consumer_id) {
  if (consumer_id != NULL) {
    
  } else {
    
  }
  consumer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consumer_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.DisableServiceRequest.consumer_id)
}

inline const DisableServiceRequest* DisableServiceRequest::internal_default_instance() {
  return &DisableServiceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GenerateConfigReportRequest

// optional .google.protobuf.Any new_config = 1;
inline bool GenerateConfigReportRequest::has_new_config() const {
  return this != internal_default_instance() && new_config_ != NULL;
}
inline void GenerateConfigReportRequest::clear_new_config() {
  if (GetArenaNoVirtual() == NULL && new_config_ != NULL) delete new_config_;
  new_config_ = NULL;
}
inline const ::google::protobuf::Any& GenerateConfigReportRequest::new_config() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GenerateConfigReportRequest.new_config)
  return new_config_ != NULL ? *new_config_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* GenerateConfigReportRequest::mutable_new_config() {
  
  if (new_config_ == NULL) {
    new_config_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GenerateConfigReportRequest.new_config)
  return new_config_;
}
inline ::google::protobuf::Any* GenerateConfigReportRequest::release_new_config() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GenerateConfigReportRequest.new_config)
  
  ::google::protobuf::Any* temp = new_config_;
  new_config_ = NULL;
  return temp;
}
inline void GenerateConfigReportRequest::set_allocated_new_config(::google::protobuf::Any* new_config) {
  delete new_config_;
  new_config_ = new_config;
  if (new_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GenerateConfigReportRequest.new_config)
}

// optional .google.protobuf.Any old_config = 2;
inline bool GenerateConfigReportRequest::has_old_config() const {
  return this != internal_default_instance() && old_config_ != NULL;
}
inline void GenerateConfigReportRequest::clear_old_config() {
  if (GetArenaNoVirtual() == NULL && old_config_ != NULL) delete old_config_;
  old_config_ = NULL;
}
inline const ::google::protobuf::Any& GenerateConfigReportRequest::old_config() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GenerateConfigReportRequest.old_config)
  return old_config_ != NULL ? *old_config_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* GenerateConfigReportRequest::mutable_old_config() {
  
  if (old_config_ == NULL) {
    old_config_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GenerateConfigReportRequest.old_config)
  return old_config_;
}
inline ::google::protobuf::Any* GenerateConfigReportRequest::release_old_config() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GenerateConfigReportRequest.old_config)
  
  ::google::protobuf::Any* temp = old_config_;
  old_config_ = NULL;
  return temp;
}
inline void GenerateConfigReportRequest::set_allocated_old_config(::google::protobuf::Any* old_config) {
  delete old_config_;
  old_config_ = old_config;
  if (old_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GenerateConfigReportRequest.old_config)
}

inline const GenerateConfigReportRequest* GenerateConfigReportRequest::internal_default_instance() {
  return &GenerateConfigReportRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GenerateConfigReportResponse

// optional string service_name = 1;
inline void GenerateConfigReportResponse::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateConfigReportResponse::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateConfigReportResponse::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name)
}
inline void GenerateConfigReportResponse::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name)
}
inline void GenerateConfigReportResponse::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name)
}
inline ::std::string* GenerateConfigReportResponse::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateConfigReportResponse::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateConfigReportResponse::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name)
}

// optional string id = 2;
inline void GenerateConfigReportResponse::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenerateConfigReportResponse::id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GenerateConfigReportResponse.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateConfigReportResponse::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.GenerateConfigReportResponse.id)
}
inline void GenerateConfigReportResponse::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.GenerateConfigReportResponse.id)
}
inline void GenerateConfigReportResponse::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.GenerateConfigReportResponse.id)
}
inline ::std::string* GenerateConfigReportResponse::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GenerateConfigReportResponse.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenerateConfigReportResponse::release_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.GenerateConfigReportResponse.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenerateConfigReportResponse::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.GenerateConfigReportResponse.id)
}

// repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
inline int GenerateConfigReportResponse::change_reports_size() const {
  return change_reports_.size();
}
inline void GenerateConfigReportResponse::clear_change_reports() {
  change_reports_.Clear();
}
inline const ::google::api::servicemanagement::v1::ChangeReport& GenerateConfigReportResponse::change_reports(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GenerateConfigReportResponse.change_reports)
  return change_reports_.Get(index);
}
inline ::google::api::servicemanagement::v1::ChangeReport* GenerateConfigReportResponse::mutable_change_reports(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GenerateConfigReportResponse.change_reports)
  return change_reports_.Mutable(index);
}
inline ::google::api::servicemanagement::v1::ChangeReport* GenerateConfigReportResponse::add_change_reports() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.GenerateConfigReportResponse.change_reports)
  return change_reports_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ChangeReport >*
GenerateConfigReportResponse::mutable_change_reports() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.GenerateConfigReportResponse.change_reports)
  return &change_reports_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ChangeReport >&
GenerateConfigReportResponse::change_reports() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.GenerateConfigReportResponse.change_reports)
  return change_reports_;
}

// repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
inline int GenerateConfigReportResponse::diagnostics_size() const {
  return diagnostics_.size();
}
inline void GenerateConfigReportResponse::clear_diagnostics() {
  diagnostics_.Clear();
}
inline const ::google::api::servicemanagement::v1::Diagnostic& GenerateConfigReportResponse::diagnostics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.GenerateConfigReportResponse.diagnostics)
  return diagnostics_.Get(index);
}
inline ::google::api::servicemanagement::v1::Diagnostic* GenerateConfigReportResponse::mutable_diagnostics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.GenerateConfigReportResponse.diagnostics)
  return diagnostics_.Mutable(index);
}
inline ::google::api::servicemanagement::v1::Diagnostic* GenerateConfigReportResponse::add_diagnostics() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.GenerateConfigReportResponse.diagnostics)
  return diagnostics_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Diagnostic >*
GenerateConfigReportResponse::mutable_diagnostics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.GenerateConfigReportResponse.diagnostics)
  return &diagnostics_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::Diagnostic >&
GenerateConfigReportResponse::diagnostics() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.GenerateConfigReportResponse.diagnostics)
  return diagnostics_;
}

inline const GenerateConfigReportResponse* GenerateConfigReportResponse::internal_default_instance() {
  return &GenerateConfigReportResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto__INCLUDED
