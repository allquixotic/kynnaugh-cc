// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/functions/v1beta2/operations.proto

#ifndef PROTOBUF_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto__INCLUDED
#define PROTOBUF_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace functions {
namespace v1beta2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto();
void protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto();
void protobuf_AssignDesc_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto();
void protobuf_ShutdownFile_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto();

class OperationMetadataV1Beta2;

enum OperationType {
  OPERATION_UNSPECIFIED = 0,
  CREATE_FUNCTION = 1,
  UPDATE_FUNCTION = 2,
  DELETE_FUNCTION = 3,
  OperationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationType_IsValid(int value);
const OperationType OperationType_MIN = OPERATION_UNSPECIFIED;
const OperationType OperationType_MAX = DELETE_FUNCTION;
const int OperationType_ARRAYSIZE = OperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationType_descriptor();
inline const ::std::string& OperationType_Name(OperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationType_descriptor(), value);
}
inline bool OperationType_Parse(
    const ::std::string& name, OperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationType>(
    OperationType_descriptor(), name, value);
}
// ===================================================================

class OperationMetadataV1Beta2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.functions.v1beta2.OperationMetadataV1Beta2) */ {
 public:
  OperationMetadataV1Beta2();
  virtual ~OperationMetadataV1Beta2();

  OperationMetadataV1Beta2(const OperationMetadataV1Beta2& from);

  inline OperationMetadataV1Beta2& operator=(const OperationMetadataV1Beta2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationMetadataV1Beta2& default_instance();

  static const OperationMetadataV1Beta2* internal_default_instance();

  void Swap(OperationMetadataV1Beta2* other);

  // implements Message ----------------------------------------------

  inline OperationMetadataV1Beta2* New() const { return New(NULL); }

  OperationMetadataV1Beta2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationMetadataV1Beta2& from);
  void MergeFrom(const OperationMetadataV1Beta2& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperationMetadataV1Beta2* other);
  void UnsafeMergeFrom(const OperationMetadataV1Beta2& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string target = 1;
  void clear_target();
  static const int kTargetFieldNumber = 1;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional .google.cloud.functions.v1beta2.OperationType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::cloud::functions::v1beta2::OperationType type() const;
  void set_type(::google::cloud::functions::v1beta2::OperationType value);

  // optional .google.protobuf.Any request = 3;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 3;
  const ::google::protobuf::Any& request() const;
  ::google::protobuf::Any* mutable_request();
  ::google::protobuf::Any* release_request();
  void set_allocated_request(::google::protobuf::Any* request);

  // @@protoc_insertion_point(class_scope:google.cloud.functions.v1beta2.OperationMetadataV1Beta2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::Any* request_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto();
  friend void protobuf_ShutdownFile_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperationMetadataV1Beta2> OperationMetadataV1Beta2_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OperationMetadataV1Beta2

// optional string target = 1;
inline void OperationMetadataV1Beta2::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OperationMetadataV1Beta2::target() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.target)
  return target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1Beta2::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.target)
}
inline void OperationMetadataV1Beta2::set_target(const char* value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.target)
}
inline void OperationMetadataV1Beta2::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.target)
}
inline ::std::string* OperationMetadataV1Beta2::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperationMetadataV1Beta2::release_target() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadataV1Beta2::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.target)
}

// optional .google.cloud.functions.v1beta2.OperationType type = 2;
inline void OperationMetadataV1Beta2::clear_type() {
  type_ = 0;
}
inline ::google::cloud::functions::v1beta2::OperationType OperationMetadataV1Beta2::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.type)
  return static_cast< ::google::cloud::functions::v1beta2::OperationType >(type_);
}
inline void OperationMetadataV1Beta2::set_type(::google::cloud::functions::v1beta2::OperationType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.type)
}

// optional .google.protobuf.Any request = 3;
inline bool OperationMetadataV1Beta2::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void OperationMetadataV1Beta2::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
inline const ::google::protobuf::Any& OperationMetadataV1Beta2::request() const {
  // @@protoc_insertion_point(field_get:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.request)
  return request_ != NULL ? *request_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* OperationMetadataV1Beta2::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.request)
  return request_;
}
inline ::google::protobuf::Any* OperationMetadataV1Beta2::release_request() {
  // @@protoc_insertion_point(field_release:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.request)
  
  ::google::protobuf::Any* temp = request_;
  request_ = NULL;
  return temp;
}
inline void OperationMetadataV1Beta2::set_allocated_request(::google::protobuf::Any* request) {
  delete request_;
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.functions.v1beta2.OperationMetadataV1Beta2.request)
}

inline const OperationMetadataV1Beta2* OperationMetadataV1Beta2::internal_default_instance() {
  return &OperationMetadataV1Beta2_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta2
}  // namespace functions
}  // namespace cloud
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::functions::v1beta2::OperationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::functions::v1beta2::OperationType>() {
  return ::google::cloud::functions::v1beta2::OperationType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fcloud_2ffunctions_2fv1beta2_2foperations_2eproto__INCLUDED
