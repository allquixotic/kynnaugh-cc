// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/reads.proto

#ifndef PROTOBUF_google_2fgenomics_2fv1_2freads_2eproto__INCLUDED
#define PROTOBUF_google_2fgenomics_2fv1_2freads_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/genomics/v1/range.pb.h"
#include "google/genomics/v1/readalignment.pb.h"
#include "google/genomics/v1/readgroupset.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace genomics {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto();
void protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto();
void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

class CoverageBucket;
class DeleteReadGroupSetRequest;
class ExportReadGroupSetRequest;
class GetReadGroupSetRequest;
class ImportReadGroupSetsRequest;
class ImportReadGroupSetsResponse;
class ListCoverageBucketsRequest;
class ListCoverageBucketsResponse;
class SearchReadGroupSetsRequest;
class SearchReadGroupSetsResponse;
class SearchReadsRequest;
class SearchReadsResponse;
class StreamReadsRequest;
class StreamReadsResponse;
class UpdateReadGroupSetRequest;

enum ImportReadGroupSetsRequest_PartitionStrategy {
  ImportReadGroupSetsRequest_PartitionStrategy_PARTITION_STRATEGY_UNSPECIFIED = 0,
  ImportReadGroupSetsRequest_PartitionStrategy_PER_FILE_PER_SAMPLE = 1,
  ImportReadGroupSetsRequest_PartitionStrategy_MERGE_ALL = 2,
  ImportReadGroupSetsRequest_PartitionStrategy_ImportReadGroupSetsRequest_PartitionStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImportReadGroupSetsRequest_PartitionStrategy_ImportReadGroupSetsRequest_PartitionStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImportReadGroupSetsRequest_PartitionStrategy_IsValid(int value);
const ImportReadGroupSetsRequest_PartitionStrategy ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategy_MIN = ImportReadGroupSetsRequest_PartitionStrategy_PARTITION_STRATEGY_UNSPECIFIED;
const ImportReadGroupSetsRequest_PartitionStrategy ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategy_MAX = ImportReadGroupSetsRequest_PartitionStrategy_MERGE_ALL;
const int ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategy_ARRAYSIZE = ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategy_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImportReadGroupSetsRequest_PartitionStrategy_descriptor();
inline const ::std::string& ImportReadGroupSetsRequest_PartitionStrategy_Name(ImportReadGroupSetsRequest_PartitionStrategy value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImportReadGroupSetsRequest_PartitionStrategy_descriptor(), value);
}
inline bool ImportReadGroupSetsRequest_PartitionStrategy_Parse(
    const ::std::string& name, ImportReadGroupSetsRequest_PartitionStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImportReadGroupSetsRequest_PartitionStrategy>(
    ImportReadGroupSetsRequest_PartitionStrategy_descriptor(), name, value);
}
// ===================================================================

class SearchReadGroupSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchReadGroupSetsRequest) */ {
 public:
  SearchReadGroupSetsRequest();
  virtual ~SearchReadGroupSetsRequest();

  SearchReadGroupSetsRequest(const SearchReadGroupSetsRequest& from);

  inline SearchReadGroupSetsRequest& operator=(const SearchReadGroupSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchReadGroupSetsRequest& default_instance();

  static const SearchReadGroupSetsRequest* internal_default_instance();

  void UnsafeArenaSwap(SearchReadGroupSetsRequest* other);
  void Swap(SearchReadGroupSetsRequest* other);

  // implements Message ----------------------------------------------

  inline SearchReadGroupSetsRequest* New() const { return New(NULL); }

  SearchReadGroupSetsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchReadGroupSetsRequest& from);
  void MergeFrom(const SearchReadGroupSetsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchReadGroupSetsRequest* other);
  void UnsafeMergeFrom(const SearchReadGroupSetsRequest& from);
  protected:
  explicit SearchReadGroupSetsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string dataset_ids = 1;
  int dataset_ids_size() const;
  void clear_dataset_ids();
  static const int kDatasetIdsFieldNumber = 1;
  const ::std::string& dataset_ids(int index) const;
  ::std::string* mutable_dataset_ids(int index);
  void set_dataset_ids(int index, const ::std::string& value);
  void set_dataset_ids(int index, const char* value);
  void set_dataset_ids(int index, const char* value, size_t size);
  ::std::string* add_dataset_ids();
  void add_dataset_ids(const ::std::string& value);
  void add_dataset_ids(const char* value);
  void add_dataset_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dataset_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dataset_ids();

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // optional string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // optional int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchReadGroupSetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dataset_ids_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SearchReadGroupSetsRequest> SearchReadGroupSetsRequest_default_instance_;

// -------------------------------------------------------------------

class SearchReadGroupSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchReadGroupSetsResponse) */ {
 public:
  SearchReadGroupSetsResponse();
  virtual ~SearchReadGroupSetsResponse();

  SearchReadGroupSetsResponse(const SearchReadGroupSetsResponse& from);

  inline SearchReadGroupSetsResponse& operator=(const SearchReadGroupSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchReadGroupSetsResponse& default_instance();

  static const SearchReadGroupSetsResponse* internal_default_instance();

  void UnsafeArenaSwap(SearchReadGroupSetsResponse* other);
  void Swap(SearchReadGroupSetsResponse* other);

  // implements Message ----------------------------------------------

  inline SearchReadGroupSetsResponse* New() const { return New(NULL); }

  SearchReadGroupSetsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchReadGroupSetsResponse& from);
  void MergeFrom(const SearchReadGroupSetsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchReadGroupSetsResponse* other);
  void UnsafeMergeFrom(const SearchReadGroupSetsResponse& from);
  protected:
  explicit SearchReadGroupSetsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.ReadGroupSet read_group_sets = 1;
  int read_group_sets_size() const;
  void clear_read_group_sets();
  static const int kReadGroupSetsFieldNumber = 1;
  const ::google::genomics::v1::ReadGroupSet& read_group_sets(int index) const;
  ::google::genomics::v1::ReadGroupSet* mutable_read_group_sets(int index);
  ::google::genomics::v1::ReadGroupSet* add_read_group_sets();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroupSet >*
      mutable_read_group_sets();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroupSet >&
      read_group_sets() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchReadGroupSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroupSet > read_group_sets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SearchReadGroupSetsResponse> SearchReadGroupSetsResponse_default_instance_;

// -------------------------------------------------------------------

class ImportReadGroupSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ImportReadGroupSetsRequest) */ {
 public:
  ImportReadGroupSetsRequest();
  virtual ~ImportReadGroupSetsRequest();

  ImportReadGroupSetsRequest(const ImportReadGroupSetsRequest& from);

  inline ImportReadGroupSetsRequest& operator=(const ImportReadGroupSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportReadGroupSetsRequest& default_instance();

  static const ImportReadGroupSetsRequest* internal_default_instance();

  void UnsafeArenaSwap(ImportReadGroupSetsRequest* other);
  void Swap(ImportReadGroupSetsRequest* other);

  // implements Message ----------------------------------------------

  inline ImportReadGroupSetsRequest* New() const { return New(NULL); }

  ImportReadGroupSetsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImportReadGroupSetsRequest& from);
  void MergeFrom(const ImportReadGroupSetsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImportReadGroupSetsRequest* other);
  void UnsafeMergeFrom(const ImportReadGroupSetsRequest& from);
  protected:
  explicit ImportReadGroupSetsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ImportReadGroupSetsRequest_PartitionStrategy PartitionStrategy;
  static const PartitionStrategy PARTITION_STRATEGY_UNSPECIFIED =
    ImportReadGroupSetsRequest_PartitionStrategy_PARTITION_STRATEGY_UNSPECIFIED;
  static const PartitionStrategy PER_FILE_PER_SAMPLE =
    ImportReadGroupSetsRequest_PartitionStrategy_PER_FILE_PER_SAMPLE;
  static const PartitionStrategy MERGE_ALL =
    ImportReadGroupSetsRequest_PartitionStrategy_MERGE_ALL;
  static inline bool PartitionStrategy_IsValid(int value) {
    return ImportReadGroupSetsRequest_PartitionStrategy_IsValid(value);
  }
  static const PartitionStrategy PartitionStrategy_MIN =
    ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategy_MIN;
  static const PartitionStrategy PartitionStrategy_MAX =
    ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategy_MAX;
  static const int PartitionStrategy_ARRAYSIZE =
    ImportReadGroupSetsRequest_PartitionStrategy_PartitionStrategy_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PartitionStrategy_descriptor() {
    return ImportReadGroupSetsRequest_PartitionStrategy_descriptor();
  }
  static inline const ::std::string& PartitionStrategy_Name(PartitionStrategy value) {
    return ImportReadGroupSetsRequest_PartitionStrategy_Name(value);
  }
  static inline bool PartitionStrategy_Parse(const ::std::string& name,
      PartitionStrategy* value) {
    return ImportReadGroupSetsRequest_PartitionStrategy_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string dataset_id = 1;
  void clear_dataset_id();
  static const int kDatasetIdFieldNumber = 1;
  const ::std::string& dataset_id() const;
  void set_dataset_id(const ::std::string& value);
  void set_dataset_id(const char* value);
  void set_dataset_id(const char* value, size_t size);
  ::std::string* mutable_dataset_id();
  ::std::string* release_dataset_id();
  void set_allocated_dataset_id(::std::string* dataset_id);
  ::std::string* unsafe_arena_release_dataset_id();
  void unsafe_arena_set_allocated_dataset_id(
      ::std::string* dataset_id);

  // optional string reference_set_id = 4;
  void clear_reference_set_id();
  static const int kReferenceSetIdFieldNumber = 4;
  const ::std::string& reference_set_id() const;
  void set_reference_set_id(const ::std::string& value);
  void set_reference_set_id(const char* value);
  void set_reference_set_id(const char* value, size_t size);
  ::std::string* mutable_reference_set_id();
  ::std::string* release_reference_set_id();
  void set_allocated_reference_set_id(::std::string* reference_set_id);
  ::std::string* unsafe_arena_release_reference_set_id();
  void unsafe_arena_set_allocated_reference_set_id(
      ::std::string* reference_set_id);

  // repeated string source_uris = 2;
  int source_uris_size() const;
  void clear_source_uris();
  static const int kSourceUrisFieldNumber = 2;
  const ::std::string& source_uris(int index) const;
  ::std::string* mutable_source_uris(int index);
  void set_source_uris(int index, const ::std::string& value);
  void set_source_uris(int index, const char* value);
  void set_source_uris(int index, const char* value, size_t size);
  ::std::string* add_source_uris();
  void add_source_uris(const ::std::string& value);
  void add_source_uris(const char* value);
  void add_source_uris(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& source_uris() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_source_uris();

  // optional .google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;
  void clear_partition_strategy();
  static const int kPartitionStrategyFieldNumber = 5;
  ::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy partition_strategy() const;
  void set_partition_strategy(::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ImportReadGroupSetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> source_uris_;
  ::google::protobuf::internal::ArenaStringPtr dataset_id_;
  ::google::protobuf::internal::ArenaStringPtr reference_set_id_;
  int partition_strategy_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImportReadGroupSetsRequest> ImportReadGroupSetsRequest_default_instance_;

// -------------------------------------------------------------------

class ImportReadGroupSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ImportReadGroupSetsResponse) */ {
 public:
  ImportReadGroupSetsResponse();
  virtual ~ImportReadGroupSetsResponse();

  ImportReadGroupSetsResponse(const ImportReadGroupSetsResponse& from);

  inline ImportReadGroupSetsResponse& operator=(const ImportReadGroupSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportReadGroupSetsResponse& default_instance();

  static const ImportReadGroupSetsResponse* internal_default_instance();

  void UnsafeArenaSwap(ImportReadGroupSetsResponse* other);
  void Swap(ImportReadGroupSetsResponse* other);

  // implements Message ----------------------------------------------

  inline ImportReadGroupSetsResponse* New() const { return New(NULL); }

  ImportReadGroupSetsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImportReadGroupSetsResponse& from);
  void MergeFrom(const ImportReadGroupSetsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImportReadGroupSetsResponse* other);
  void UnsafeMergeFrom(const ImportReadGroupSetsResponse& from);
  protected:
  explicit ImportReadGroupSetsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string read_group_set_ids = 1;
  int read_group_set_ids_size() const;
  void clear_read_group_set_ids();
  static const int kReadGroupSetIdsFieldNumber = 1;
  const ::std::string& read_group_set_ids(int index) const;
  ::std::string* mutable_read_group_set_ids(int index);
  void set_read_group_set_ids(int index, const ::std::string& value);
  void set_read_group_set_ids(int index, const char* value);
  void set_read_group_set_ids(int index, const char* value, size_t size);
  ::std::string* add_read_group_set_ids();
  void add_read_group_set_ids(const ::std::string& value);
  void add_read_group_set_ids(const char* value);
  void add_read_group_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& read_group_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_read_group_set_ids();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ImportReadGroupSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> read_group_set_ids_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImportReadGroupSetsResponse> ImportReadGroupSetsResponse_default_instance_;

// -------------------------------------------------------------------

class ExportReadGroupSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ExportReadGroupSetRequest) */ {
 public:
  ExportReadGroupSetRequest();
  virtual ~ExportReadGroupSetRequest();

  ExportReadGroupSetRequest(const ExportReadGroupSetRequest& from);

  inline ExportReadGroupSetRequest& operator=(const ExportReadGroupSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportReadGroupSetRequest& default_instance();

  static const ExportReadGroupSetRequest* internal_default_instance();

  void UnsafeArenaSwap(ExportReadGroupSetRequest* other);
  void Swap(ExportReadGroupSetRequest* other);

  // implements Message ----------------------------------------------

  inline ExportReadGroupSetRequest* New() const { return New(NULL); }

  ExportReadGroupSetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExportReadGroupSetRequest& from);
  void MergeFrom(const ExportReadGroupSetRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExportReadGroupSetRequest* other);
  void UnsafeMergeFrom(const ExportReadGroupSetRequest& from);
  protected:
  explicit ExportReadGroupSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // optional string export_uri = 2;
  void clear_export_uri();
  static const int kExportUriFieldNumber = 2;
  const ::std::string& export_uri() const;
  void set_export_uri(const ::std::string& value);
  void set_export_uri(const char* value);
  void set_export_uri(const char* value, size_t size);
  ::std::string* mutable_export_uri();
  ::std::string* release_export_uri();
  void set_allocated_export_uri(::std::string* export_uri);
  ::std::string* unsafe_arena_release_export_uri();
  void unsafe_arena_set_allocated_export_uri(
      ::std::string* export_uri);

  // optional string read_group_set_id = 3;
  void clear_read_group_set_id();
  static const int kReadGroupSetIdFieldNumber = 3;
  const ::std::string& read_group_set_id() const;
  void set_read_group_set_id(const ::std::string& value);
  void set_read_group_set_id(const char* value);
  void set_read_group_set_id(const char* value, size_t size);
  ::std::string* mutable_read_group_set_id();
  ::std::string* release_read_group_set_id();
  void set_allocated_read_group_set_id(::std::string* read_group_set_id);
  ::std::string* unsafe_arena_release_read_group_set_id();
  void unsafe_arena_set_allocated_read_group_set_id(
      ::std::string* read_group_set_id);

  // repeated string reference_names = 4;
  int reference_names_size() const;
  void clear_reference_names();
  static const int kReferenceNamesFieldNumber = 4;
  const ::std::string& reference_names(int index) const;
  ::std::string* mutable_reference_names(int index);
  void set_reference_names(int index, const ::std::string& value);
  void set_reference_names(int index, const char* value);
  void set_reference_names(int index, const char* value, size_t size);
  ::std::string* add_reference_names();
  void add_reference_names(const ::std::string& value);
  void add_reference_names(const char* value);
  void add_reference_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& reference_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_reference_names();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ExportReadGroupSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> reference_names_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr export_uri_;
  ::google::protobuf::internal::ArenaStringPtr read_group_set_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExportReadGroupSetRequest> ExportReadGroupSetRequest_default_instance_;

// -------------------------------------------------------------------

class UpdateReadGroupSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.UpdateReadGroupSetRequest) */ {
 public:
  UpdateReadGroupSetRequest();
  virtual ~UpdateReadGroupSetRequest();

  UpdateReadGroupSetRequest(const UpdateReadGroupSetRequest& from);

  inline UpdateReadGroupSetRequest& operator=(const UpdateReadGroupSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateReadGroupSetRequest& default_instance();

  static const UpdateReadGroupSetRequest* internal_default_instance();

  void UnsafeArenaSwap(UpdateReadGroupSetRequest* other);
  void Swap(UpdateReadGroupSetRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateReadGroupSetRequest* New() const { return New(NULL); }

  UpdateReadGroupSetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateReadGroupSetRequest& from);
  void MergeFrom(const UpdateReadGroupSetRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateReadGroupSetRequest* other);
  void UnsafeMergeFrom(const UpdateReadGroupSetRequest& from);
  protected:
  explicit UpdateReadGroupSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string read_group_set_id = 1;
  void clear_read_group_set_id();
  static const int kReadGroupSetIdFieldNumber = 1;
  const ::std::string& read_group_set_id() const;
  void set_read_group_set_id(const ::std::string& value);
  void set_read_group_set_id(const char* value);
  void set_read_group_set_id(const char* value, size_t size);
  ::std::string* mutable_read_group_set_id();
  ::std::string* release_read_group_set_id();
  void set_allocated_read_group_set_id(::std::string* read_group_set_id);
  ::std::string* unsafe_arena_release_read_group_set_id();
  void unsafe_arena_set_allocated_read_group_set_id(
      ::std::string* read_group_set_id);

  // optional .google.genomics.v1.ReadGroupSet read_group_set = 2;
  bool has_read_group_set() const;
  void clear_read_group_set();
  static const int kReadGroupSetFieldNumber = 2;
  private:
  void _slow_mutable_read_group_set();
  void _slow_set_allocated_read_group_set(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::ReadGroupSet** read_group_set);
  ::google::genomics::v1::ReadGroupSet* _slow_release_read_group_set();
  public:
  const ::google::genomics::v1::ReadGroupSet& read_group_set() const;
  ::google::genomics::v1::ReadGroupSet* mutable_read_group_set();
  ::google::genomics::v1::ReadGroupSet* release_read_group_set();
  void set_allocated_read_group_set(::google::genomics::v1::ReadGroupSet* read_group_set);
  ::google::genomics::v1::ReadGroupSet* unsafe_arena_release_read_group_set();
  void unsafe_arena_set_allocated_read_group_set(
      ::google::genomics::v1::ReadGroupSet* read_group_set);

  // optional .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  void _slow_mutable_update_mask();
  ::google::protobuf::FieldMask* _slow_release_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* mutable_update_mask();
  ::google::protobuf::FieldMask* release_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.UpdateReadGroupSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr read_group_set_id_;
  ::google::genomics::v1::ReadGroupSet* read_group_set_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateReadGroupSetRequest> UpdateReadGroupSetRequest_default_instance_;

// -------------------------------------------------------------------

class DeleteReadGroupSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.DeleteReadGroupSetRequest) */ {
 public:
  DeleteReadGroupSetRequest();
  virtual ~DeleteReadGroupSetRequest();

  DeleteReadGroupSetRequest(const DeleteReadGroupSetRequest& from);

  inline DeleteReadGroupSetRequest& operator=(const DeleteReadGroupSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteReadGroupSetRequest& default_instance();

  static const DeleteReadGroupSetRequest* internal_default_instance();

  void UnsafeArenaSwap(DeleteReadGroupSetRequest* other);
  void Swap(DeleteReadGroupSetRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteReadGroupSetRequest* New() const { return New(NULL); }

  DeleteReadGroupSetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteReadGroupSetRequest& from);
  void MergeFrom(const DeleteReadGroupSetRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteReadGroupSetRequest* other);
  void UnsafeMergeFrom(const DeleteReadGroupSetRequest& from);
  protected:
  explicit DeleteReadGroupSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string read_group_set_id = 1;
  void clear_read_group_set_id();
  static const int kReadGroupSetIdFieldNumber = 1;
  const ::std::string& read_group_set_id() const;
  void set_read_group_set_id(const ::std::string& value);
  void set_read_group_set_id(const char* value);
  void set_read_group_set_id(const char* value, size_t size);
  ::std::string* mutable_read_group_set_id();
  ::std::string* release_read_group_set_id();
  void set_allocated_read_group_set_id(::std::string* read_group_set_id);
  ::std::string* unsafe_arena_release_read_group_set_id();
  void unsafe_arena_set_allocated_read_group_set_id(
      ::std::string* read_group_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.DeleteReadGroupSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr read_group_set_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteReadGroupSetRequest> DeleteReadGroupSetRequest_default_instance_;

// -------------------------------------------------------------------

class GetReadGroupSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.GetReadGroupSetRequest) */ {
 public:
  GetReadGroupSetRequest();
  virtual ~GetReadGroupSetRequest();

  GetReadGroupSetRequest(const GetReadGroupSetRequest& from);

  inline GetReadGroupSetRequest& operator=(const GetReadGroupSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReadGroupSetRequest& default_instance();

  static const GetReadGroupSetRequest* internal_default_instance();

  void UnsafeArenaSwap(GetReadGroupSetRequest* other);
  void Swap(GetReadGroupSetRequest* other);

  // implements Message ----------------------------------------------

  inline GetReadGroupSetRequest* New() const { return New(NULL); }

  GetReadGroupSetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetReadGroupSetRequest& from);
  void MergeFrom(const GetReadGroupSetRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetReadGroupSetRequest* other);
  void UnsafeMergeFrom(const GetReadGroupSetRequest& from);
  protected:
  explicit GetReadGroupSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string read_group_set_id = 1;
  void clear_read_group_set_id();
  static const int kReadGroupSetIdFieldNumber = 1;
  const ::std::string& read_group_set_id() const;
  void set_read_group_set_id(const ::std::string& value);
  void set_read_group_set_id(const char* value);
  void set_read_group_set_id(const char* value, size_t size);
  ::std::string* mutable_read_group_set_id();
  ::std::string* release_read_group_set_id();
  void set_allocated_read_group_set_id(::std::string* read_group_set_id);
  ::std::string* unsafe_arena_release_read_group_set_id();
  void unsafe_arena_set_allocated_read_group_set_id(
      ::std::string* read_group_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.GetReadGroupSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr read_group_set_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetReadGroupSetRequest> GetReadGroupSetRequest_default_instance_;

// -------------------------------------------------------------------

class ListCoverageBucketsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ListCoverageBucketsRequest) */ {
 public:
  ListCoverageBucketsRequest();
  virtual ~ListCoverageBucketsRequest();

  ListCoverageBucketsRequest(const ListCoverageBucketsRequest& from);

  inline ListCoverageBucketsRequest& operator=(const ListCoverageBucketsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCoverageBucketsRequest& default_instance();

  static const ListCoverageBucketsRequest* internal_default_instance();

  void UnsafeArenaSwap(ListCoverageBucketsRequest* other);
  void Swap(ListCoverageBucketsRequest* other);

  // implements Message ----------------------------------------------

  inline ListCoverageBucketsRequest* New() const { return New(NULL); }

  ListCoverageBucketsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListCoverageBucketsRequest& from);
  void MergeFrom(const ListCoverageBucketsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListCoverageBucketsRequest* other);
  void UnsafeMergeFrom(const ListCoverageBucketsRequest& from);
  protected:
  explicit ListCoverageBucketsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string read_group_set_id = 1;
  void clear_read_group_set_id();
  static const int kReadGroupSetIdFieldNumber = 1;
  const ::std::string& read_group_set_id() const;
  void set_read_group_set_id(const ::std::string& value);
  void set_read_group_set_id(const char* value);
  void set_read_group_set_id(const char* value, size_t size);
  ::std::string* mutable_read_group_set_id();
  ::std::string* release_read_group_set_id();
  void set_allocated_read_group_set_id(::std::string* read_group_set_id);
  ::std::string* unsafe_arena_release_read_group_set_id();
  void unsafe_arena_set_allocated_read_group_set_id(
      ::std::string* read_group_set_id);

  // optional string reference_name = 3;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 3;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  ::std::string* unsafe_arena_release_reference_name();
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // optional int64 start = 4;
  void clear_start();
  static const int kStartFieldNumber = 4;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // optional int64 end = 5;
  void clear_end();
  static const int kEndFieldNumber = 5;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // optional int64 target_bucket_width = 6;
  void clear_target_bucket_width();
  static const int kTargetBucketWidthFieldNumber = 6;
  ::google::protobuf::int64 target_bucket_width() const;
  void set_target_bucket_width(::google::protobuf::int64 value);

  // optional string page_token = 7;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 7;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // optional int32 page_size = 8;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 8;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ListCoverageBucketsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr read_group_set_id_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  ::google::protobuf::int64 target_bucket_width_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListCoverageBucketsRequest> ListCoverageBucketsRequest_default_instance_;

// -------------------------------------------------------------------

class CoverageBucket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.CoverageBucket) */ {
 public:
  CoverageBucket();
  virtual ~CoverageBucket();

  CoverageBucket(const CoverageBucket& from);

  inline CoverageBucket& operator=(const CoverageBucket& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoverageBucket& default_instance();

  static const CoverageBucket* internal_default_instance();

  void UnsafeArenaSwap(CoverageBucket* other);
  void Swap(CoverageBucket* other);

  // implements Message ----------------------------------------------

  inline CoverageBucket* New() const { return New(NULL); }

  CoverageBucket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoverageBucket& from);
  void MergeFrom(const CoverageBucket& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CoverageBucket* other);
  void UnsafeMergeFrom(const CoverageBucket& from);
  protected:
  explicit CoverageBucket(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.genomics.v1.Range range = 1;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 1;
  private:
  void _slow_mutable_range();
  void _slow_set_allocated_range(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::Range** range);
  ::google::genomics::v1::Range* _slow_release_range();
  public:
  const ::google::genomics::v1::Range& range() const;
  ::google::genomics::v1::Range* mutable_range();
  ::google::genomics::v1::Range* release_range();
  void set_allocated_range(::google::genomics::v1::Range* range);
  ::google::genomics::v1::Range* unsafe_arena_release_range();
  void unsafe_arena_set_allocated_range(
      ::google::genomics::v1::Range* range);

  // optional float mean_coverage = 2;
  void clear_mean_coverage();
  static const int kMeanCoverageFieldNumber = 2;
  float mean_coverage() const;
  void set_mean_coverage(float value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.CoverageBucket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::genomics::v1::Range* range_;
  float mean_coverage_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CoverageBucket> CoverageBucket_default_instance_;

// -------------------------------------------------------------------

class ListCoverageBucketsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ListCoverageBucketsResponse) */ {
 public:
  ListCoverageBucketsResponse();
  virtual ~ListCoverageBucketsResponse();

  ListCoverageBucketsResponse(const ListCoverageBucketsResponse& from);

  inline ListCoverageBucketsResponse& operator=(const ListCoverageBucketsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCoverageBucketsResponse& default_instance();

  static const ListCoverageBucketsResponse* internal_default_instance();

  void UnsafeArenaSwap(ListCoverageBucketsResponse* other);
  void Swap(ListCoverageBucketsResponse* other);

  // implements Message ----------------------------------------------

  inline ListCoverageBucketsResponse* New() const { return New(NULL); }

  ListCoverageBucketsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListCoverageBucketsResponse& from);
  void MergeFrom(const ListCoverageBucketsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListCoverageBucketsResponse* other);
  void UnsafeMergeFrom(const ListCoverageBucketsResponse& from);
  protected:
  explicit ListCoverageBucketsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 bucket_width = 1;
  void clear_bucket_width();
  static const int kBucketWidthFieldNumber = 1;
  ::google::protobuf::int64 bucket_width() const;
  void set_bucket_width(::google::protobuf::int64 value);

  // repeated .google.genomics.v1.CoverageBucket coverage_buckets = 2;
  int coverage_buckets_size() const;
  void clear_coverage_buckets();
  static const int kCoverageBucketsFieldNumber = 2;
  const ::google::genomics::v1::CoverageBucket& coverage_buckets(int index) const;
  ::google::genomics::v1::CoverageBucket* mutable_coverage_buckets(int index);
  ::google::genomics::v1::CoverageBucket* add_coverage_buckets();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CoverageBucket >*
      mutable_coverage_buckets();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CoverageBucket >&
      coverage_buckets() const;

  // optional string next_page_token = 3;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 3;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ListCoverageBucketsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CoverageBucket > coverage_buckets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::int64 bucket_width_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListCoverageBucketsResponse> ListCoverageBucketsResponse_default_instance_;

// -------------------------------------------------------------------

class SearchReadsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchReadsRequest) */ {
 public:
  SearchReadsRequest();
  virtual ~SearchReadsRequest();

  SearchReadsRequest(const SearchReadsRequest& from);

  inline SearchReadsRequest& operator=(const SearchReadsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchReadsRequest& default_instance();

  static const SearchReadsRequest* internal_default_instance();

  void UnsafeArenaSwap(SearchReadsRequest* other);
  void Swap(SearchReadsRequest* other);

  // implements Message ----------------------------------------------

  inline SearchReadsRequest* New() const { return New(NULL); }

  SearchReadsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchReadsRequest& from);
  void MergeFrom(const SearchReadsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchReadsRequest* other);
  void UnsafeMergeFrom(const SearchReadsRequest& from);
  protected:
  explicit SearchReadsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string read_group_set_ids = 1;
  int read_group_set_ids_size() const;
  void clear_read_group_set_ids();
  static const int kReadGroupSetIdsFieldNumber = 1;
  const ::std::string& read_group_set_ids(int index) const;
  ::std::string* mutable_read_group_set_ids(int index);
  void set_read_group_set_ids(int index, const ::std::string& value);
  void set_read_group_set_ids(int index, const char* value);
  void set_read_group_set_ids(int index, const char* value, size_t size);
  ::std::string* add_read_group_set_ids();
  void add_read_group_set_ids(const ::std::string& value);
  void add_read_group_set_ids(const char* value);
  void add_read_group_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& read_group_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_read_group_set_ids();

  // repeated string read_group_ids = 5;
  int read_group_ids_size() const;
  void clear_read_group_ids();
  static const int kReadGroupIdsFieldNumber = 5;
  const ::std::string& read_group_ids(int index) const;
  ::std::string* mutable_read_group_ids(int index);
  void set_read_group_ids(int index, const ::std::string& value);
  void set_read_group_ids(int index, const char* value);
  void set_read_group_ids(int index, const char* value, size_t size);
  ::std::string* add_read_group_ids();
  void add_read_group_ids(const ::std::string& value);
  void add_read_group_ids(const char* value);
  void add_read_group_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& read_group_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_read_group_ids();

  // optional string reference_name = 7;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 7;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  ::std::string* unsafe_arena_release_reference_name();
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // optional int64 start = 8;
  void clear_start();
  static const int kStartFieldNumber = 8;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // optional int64 end = 9;
  void clear_end();
  static const int kEndFieldNumber = 9;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // optional string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // optional int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchReadsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> read_group_set_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> read_group_ids_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SearchReadsRequest> SearchReadsRequest_default_instance_;

// -------------------------------------------------------------------

class SearchReadsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchReadsResponse) */ {
 public:
  SearchReadsResponse();
  virtual ~SearchReadsResponse();

  SearchReadsResponse(const SearchReadsResponse& from);

  inline SearchReadsResponse& operator=(const SearchReadsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchReadsResponse& default_instance();

  static const SearchReadsResponse* internal_default_instance();

  void UnsafeArenaSwap(SearchReadsResponse* other);
  void Swap(SearchReadsResponse* other);

  // implements Message ----------------------------------------------

  inline SearchReadsResponse* New() const { return New(NULL); }

  SearchReadsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchReadsResponse& from);
  void MergeFrom(const SearchReadsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchReadsResponse* other);
  void UnsafeMergeFrom(const SearchReadsResponse& from);
  protected:
  explicit SearchReadsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Read alignments = 1;
  int alignments_size() const;
  void clear_alignments();
  static const int kAlignmentsFieldNumber = 1;
  const ::google::genomics::v1::Read& alignments(int index) const;
  ::google::genomics::v1::Read* mutable_alignments(int index);
  ::google::genomics::v1::Read* add_alignments();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >*
      mutable_alignments();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >&
      alignments() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchReadsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read > alignments_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SearchReadsResponse> SearchReadsResponse_default_instance_;

// -------------------------------------------------------------------

class StreamReadsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.StreamReadsRequest) */ {
 public:
  StreamReadsRequest();
  virtual ~StreamReadsRequest();

  StreamReadsRequest(const StreamReadsRequest& from);

  inline StreamReadsRequest& operator=(const StreamReadsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamReadsRequest& default_instance();

  static const StreamReadsRequest* internal_default_instance();

  void UnsafeArenaSwap(StreamReadsRequest* other);
  void Swap(StreamReadsRequest* other);

  // implements Message ----------------------------------------------

  inline StreamReadsRequest* New() const { return New(NULL); }

  StreamReadsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StreamReadsRequest& from);
  void MergeFrom(const StreamReadsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StreamReadsRequest* other);
  void UnsafeMergeFrom(const StreamReadsRequest& from);
  protected:
  explicit StreamReadsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // optional string read_group_set_id = 2;
  void clear_read_group_set_id();
  static const int kReadGroupSetIdFieldNumber = 2;
  const ::std::string& read_group_set_id() const;
  void set_read_group_set_id(const ::std::string& value);
  void set_read_group_set_id(const char* value);
  void set_read_group_set_id(const char* value, size_t size);
  ::std::string* mutable_read_group_set_id();
  ::std::string* release_read_group_set_id();
  void set_allocated_read_group_set_id(::std::string* read_group_set_id);
  ::std::string* unsafe_arena_release_read_group_set_id();
  void unsafe_arena_set_allocated_read_group_set_id(
      ::std::string* read_group_set_id);

  // optional string reference_name = 3;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 3;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  ::std::string* unsafe_arena_release_reference_name();
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // optional int64 start = 4;
  void clear_start();
  static const int kStartFieldNumber = 4;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // optional int64 end = 5;
  void clear_end();
  static const int kEndFieldNumber = 5;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // optional int32 shard = 6;
  void clear_shard();
  static const int kShardFieldNumber = 6;
  ::google::protobuf::int32 shard() const;
  void set_shard(::google::protobuf::int32 value);

  // optional int32 total_shards = 7;
  void clear_total_shards();
  static const int kTotalShardsFieldNumber = 7;
  ::google::protobuf::int32 total_shards() const;
  void set_total_shards(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.StreamReadsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr read_group_set_id_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  ::google::protobuf::int32 shard_;
  ::google::protobuf::int32 total_shards_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StreamReadsRequest> StreamReadsRequest_default_instance_;

// -------------------------------------------------------------------

class StreamReadsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.StreamReadsResponse) */ {
 public:
  StreamReadsResponse();
  virtual ~StreamReadsResponse();

  StreamReadsResponse(const StreamReadsResponse& from);

  inline StreamReadsResponse& operator=(const StreamReadsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamReadsResponse& default_instance();

  static const StreamReadsResponse* internal_default_instance();

  void UnsafeArenaSwap(StreamReadsResponse* other);
  void Swap(StreamReadsResponse* other);

  // implements Message ----------------------------------------------

  inline StreamReadsResponse* New() const { return New(NULL); }

  StreamReadsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StreamReadsResponse& from);
  void MergeFrom(const StreamReadsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StreamReadsResponse* other);
  void UnsafeMergeFrom(const StreamReadsResponse& from);
  protected:
  explicit StreamReadsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Read alignments = 1;
  int alignments_size() const;
  void clear_alignments();
  static const int kAlignmentsFieldNumber = 1;
  const ::google::genomics::v1::Read& alignments(int index) const;
  ::google::genomics::v1::Read* mutable_alignments(int index);
  ::google::genomics::v1::Read* add_alignments();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >*
      mutable_alignments();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >&
      alignments() const;

  // @@protoc_insertion_point(class_scope:google.genomics.v1.StreamReadsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read > alignments_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fgenomics_2fv1_2freads_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fgenomics_2fv1_2freads_2eproto();
  friend void protobuf_ShutdownFile_google_2fgenomics_2fv1_2freads_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StreamReadsResponse> StreamReadsResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchReadGroupSetsRequest

// repeated string dataset_ids = 1;
inline int SearchReadGroupSetsRequest::dataset_ids_size() const {
  return dataset_ids_.size();
}
inline void SearchReadGroupSetsRequest::clear_dataset_ids() {
  dataset_ids_.Clear();
}
inline const ::std::string& SearchReadGroupSetsRequest::dataset_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
  return dataset_ids_.Get(index);
}
inline ::std::string* SearchReadGroupSetsRequest::mutable_dataset_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
  return dataset_ids_.Mutable(index);
}
inline void SearchReadGroupSetsRequest::set_dataset_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
  dataset_ids_.Mutable(index)->assign(value);
}
inline void SearchReadGroupSetsRequest::set_dataset_ids(int index, const char* value) {
  dataset_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
}
inline void SearchReadGroupSetsRequest::set_dataset_ids(int index, const char* value, size_t size) {
  dataset_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
}
inline ::std::string* SearchReadGroupSetsRequest::add_dataset_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
  return dataset_ids_.Add();
}
inline void SearchReadGroupSetsRequest::add_dataset_ids(const ::std::string& value) {
  dataset_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
}
inline void SearchReadGroupSetsRequest::add_dataset_ids(const char* value) {
  dataset_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
}
inline void SearchReadGroupSetsRequest::add_dataset_ids(const char* value, size_t size) {
  dataset_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchReadGroupSetsRequest::dataset_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
  return dataset_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchReadGroupSetsRequest::mutable_dataset_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchReadGroupSetsRequest.dataset_ids)
  return &dataset_ids_;
}

// optional string name = 3;
inline void SearchReadGroupSetsRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchReadGroupSetsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadGroupSetsRequest.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchReadGroupSetsRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadGroupSetsRequest.name)
}
inline void SearchReadGroupSetsRequest::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadGroupSetsRequest.name)
}
inline void SearchReadGroupSetsRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadGroupSetsRequest.name)
}
inline ::std::string* SearchReadGroupSetsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadGroupSetsRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadGroupSetsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchReadGroupSetsRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadGroupSetsRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchReadGroupSetsRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchReadGroupSetsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchReadGroupSetsRequest.name)
}
inline void SearchReadGroupSetsRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchReadGroupSetsRequest.name)
}

// optional string page_token = 2;
inline void SearchReadGroupSetsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchReadGroupSetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
  return page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchReadGroupSetsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
}
inline void SearchReadGroupSetsRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
}
inline void SearchReadGroupSetsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
}
inline ::std::string* SearchReadGroupSetsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadGroupSetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadGroupSetsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchReadGroupSetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
}
inline void SearchReadGroupSetsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchReadGroupSetsRequest.page_token)
}

// optional int32 page_size = 4;
inline void SearchReadGroupSetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchReadGroupSetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadGroupSetsRequest.page_size)
  return page_size_;
}
inline void SearchReadGroupSetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadGroupSetsRequest.page_size)
}

inline const SearchReadGroupSetsRequest* SearchReadGroupSetsRequest::internal_default_instance() {
  return &SearchReadGroupSetsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SearchReadGroupSetsResponse

// repeated .google.genomics.v1.ReadGroupSet read_group_sets = 1;
inline int SearchReadGroupSetsResponse::read_group_sets_size() const {
  return read_group_sets_.size();
}
inline void SearchReadGroupSetsResponse::clear_read_group_sets() {
  read_group_sets_.Clear();
}
inline const ::google::genomics::v1::ReadGroupSet& SearchReadGroupSetsResponse::read_group_sets(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadGroupSetsResponse.read_group_sets)
  return read_group_sets_.Get(index);
}
inline ::google::genomics::v1::ReadGroupSet* SearchReadGroupSetsResponse::mutable_read_group_sets(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadGroupSetsResponse.read_group_sets)
  return read_group_sets_.Mutable(index);
}
inline ::google::genomics::v1::ReadGroupSet* SearchReadGroupSetsResponse::add_read_group_sets() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchReadGroupSetsResponse.read_group_sets)
  return read_group_sets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroupSet >*
SearchReadGroupSetsResponse::mutable_read_group_sets() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchReadGroupSetsResponse.read_group_sets)
  return &read_group_sets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroupSet >&
SearchReadGroupSetsResponse::read_group_sets() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchReadGroupSetsResponse.read_group_sets)
  return read_group_sets_;
}

// optional string next_page_token = 2;
inline void SearchReadGroupSetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchReadGroupSetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
  return next_page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchReadGroupSetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
}
inline void SearchReadGroupSetsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
}
inline void SearchReadGroupSetsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
}
inline ::std::string* SearchReadGroupSetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadGroupSetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadGroupSetsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchReadGroupSetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
}
inline void SearchReadGroupSetsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchReadGroupSetsResponse.next_page_token)
}

inline const SearchReadGroupSetsResponse* SearchReadGroupSetsResponse::internal_default_instance() {
  return &SearchReadGroupSetsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ImportReadGroupSetsRequest

// optional string dataset_id = 1;
inline void ImportReadGroupSetsRequest::clear_dataset_id() {
  dataset_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ImportReadGroupSetsRequest::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
  return dataset_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportReadGroupSetsRequest::set_dataset_id(const ::std::string& value) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
}
inline void ImportReadGroupSetsRequest::set_dataset_id(const char* value) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
}
inline void ImportReadGroupSetsRequest::set_dataset_id(const char* value,
    size_t size) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
}
inline ::std::string* ImportReadGroupSetsRequest::mutable_dataset_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
  return dataset_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportReadGroupSetsRequest::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
  
  return dataset_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportReadGroupSetsRequest::unsafe_arena_release_dataset_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return dataset_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImportReadGroupSetsRequest::set_allocated_dataset_id(::std::string* dataset_id) {
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataset_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
}
inline void ImportReadGroupSetsRequest::unsafe_arena_set_allocated_dataset_id(
    ::std::string* dataset_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      dataset_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ImportReadGroupSetsRequest.dataset_id)
}

// optional string reference_set_id = 4;
inline void ImportReadGroupSetsRequest::clear_reference_set_id() {
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ImportReadGroupSetsRequest::reference_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
  return reference_set_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportReadGroupSetsRequest::set_reference_set_id(const ::std::string& value) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
}
inline void ImportReadGroupSetsRequest::set_reference_set_id(const char* value) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
}
inline void ImportReadGroupSetsRequest::set_reference_set_id(const char* value,
    size_t size) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
}
inline ::std::string* ImportReadGroupSetsRequest::mutable_reference_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
  return reference_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportReadGroupSetsRequest::release_reference_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
  
  return reference_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportReadGroupSetsRequest::unsafe_arena_release_reference_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImportReadGroupSetsRequest::set_allocated_reference_set_id(::std::string* reference_set_id) {
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
}
inline void ImportReadGroupSetsRequest::unsafe_arena_set_allocated_reference_set_id(
    ::std::string* reference_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ImportReadGroupSetsRequest.reference_set_id)
}

// repeated string source_uris = 2;
inline int ImportReadGroupSetsRequest::source_uris_size() const {
  return source_uris_.size();
}
inline void ImportReadGroupSetsRequest::clear_source_uris() {
  source_uris_.Clear();
}
inline const ::std::string& ImportReadGroupSetsRequest::source_uris(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
  return source_uris_.Get(index);
}
inline ::std::string* ImportReadGroupSetsRequest::mutable_source_uris(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
  return source_uris_.Mutable(index);
}
inline void ImportReadGroupSetsRequest::set_source_uris(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
  source_uris_.Mutable(index)->assign(value);
}
inline void ImportReadGroupSetsRequest::set_source_uris(int index, const char* value) {
  source_uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
}
inline void ImportReadGroupSetsRequest::set_source_uris(int index, const char* value, size_t size) {
  source_uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
}
inline ::std::string* ImportReadGroupSetsRequest::add_source_uris() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
  return source_uris_.Add();
}
inline void ImportReadGroupSetsRequest::add_source_uris(const ::std::string& value) {
  source_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
}
inline void ImportReadGroupSetsRequest::add_source_uris(const char* value) {
  source_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
}
inline void ImportReadGroupSetsRequest::add_source_uris(const char* value, size_t size) {
  source_uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImportReadGroupSetsRequest::source_uris() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
  return source_uris_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ImportReadGroupSetsRequest::mutable_source_uris() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ImportReadGroupSetsRequest.source_uris)
  return &source_uris_;
}

// optional .google.genomics.v1.ImportReadGroupSetsRequest.PartitionStrategy partition_strategy = 5;
inline void ImportReadGroupSetsRequest::clear_partition_strategy() {
  partition_strategy_ = 0;
}
inline ::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy ImportReadGroupSetsRequest::partition_strategy() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportReadGroupSetsRequest.partition_strategy)
  return static_cast< ::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy >(partition_strategy_);
}
inline void ImportReadGroupSetsRequest::set_partition_strategy(::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy value) {
  
  partition_strategy_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportReadGroupSetsRequest.partition_strategy)
}

inline const ImportReadGroupSetsRequest* ImportReadGroupSetsRequest::internal_default_instance() {
  return &ImportReadGroupSetsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ImportReadGroupSetsResponse

// repeated string read_group_set_ids = 1;
inline int ImportReadGroupSetsResponse::read_group_set_ids_size() const {
  return read_group_set_ids_.size();
}
inline void ImportReadGroupSetsResponse::clear_read_group_set_ids() {
  read_group_set_ids_.Clear();
}
inline const ::std::string& ImportReadGroupSetsResponse::read_group_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
  return read_group_set_ids_.Get(index);
}
inline ::std::string* ImportReadGroupSetsResponse::mutable_read_group_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
  return read_group_set_ids_.Mutable(index);
}
inline void ImportReadGroupSetsResponse::set_read_group_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
  read_group_set_ids_.Mutable(index)->assign(value);
}
inline void ImportReadGroupSetsResponse::set_read_group_set_ids(int index, const char* value) {
  read_group_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
}
inline void ImportReadGroupSetsResponse::set_read_group_set_ids(int index, const char* value, size_t size) {
  read_group_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
}
inline ::std::string* ImportReadGroupSetsResponse::add_read_group_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
  return read_group_set_ids_.Add();
}
inline void ImportReadGroupSetsResponse::add_read_group_set_ids(const ::std::string& value) {
  read_group_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
}
inline void ImportReadGroupSetsResponse::add_read_group_set_ids(const char* value) {
  read_group_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
}
inline void ImportReadGroupSetsResponse::add_read_group_set_ids(const char* value, size_t size) {
  read_group_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImportReadGroupSetsResponse::read_group_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
  return read_group_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ImportReadGroupSetsResponse::mutable_read_group_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ImportReadGroupSetsResponse.read_group_set_ids)
  return &read_group_set_ids_;
}

inline const ImportReadGroupSetsResponse* ImportReadGroupSetsResponse::internal_default_instance() {
  return &ImportReadGroupSetsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ExportReadGroupSetRequest

// optional string project_id = 1;
inline void ExportReadGroupSetRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportReadGroupSetRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportReadGroupSetRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportReadGroupSetRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportReadGroupSetRequest.project_id)
}
inline void ExportReadGroupSetRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportReadGroupSetRequest.project_id)
}
inline void ExportReadGroupSetRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportReadGroupSetRequest.project_id)
}
inline ::std::string* ExportReadGroupSetRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportReadGroupSetRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportReadGroupSetRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExportReadGroupSetRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportReadGroupSetRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExportReadGroupSetRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportReadGroupSetRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExportReadGroupSetRequest.project_id)
}
inline void ExportReadGroupSetRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExportReadGroupSetRequest.project_id)
}

// optional string export_uri = 2;
inline void ExportReadGroupSetRequest::clear_export_uri() {
  export_uri_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportReadGroupSetRequest::export_uri() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
  return export_uri_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportReadGroupSetRequest::set_export_uri(const ::std::string& value) {
  
  export_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
}
inline void ExportReadGroupSetRequest::set_export_uri(const char* value) {
  
  export_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
}
inline void ExportReadGroupSetRequest::set_export_uri(const char* value,
    size_t size) {
  
  export_uri_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
}
inline ::std::string* ExportReadGroupSetRequest::mutable_export_uri() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
  return export_uri_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportReadGroupSetRequest::release_export_uri() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
  
  return export_uri_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportReadGroupSetRequest::unsafe_arena_release_export_uri() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return export_uri_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportReadGroupSetRequest::set_allocated_export_uri(::std::string* export_uri) {
  if (export_uri != NULL) {
    
  } else {
    
  }
  export_uri_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), export_uri,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
}
inline void ExportReadGroupSetRequest::unsafe_arena_set_allocated_export_uri(
    ::std::string* export_uri) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (export_uri != NULL) {
    
  } else {
    
  }
  export_uri_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      export_uri, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExportReadGroupSetRequest.export_uri)
}

// optional string read_group_set_id = 3;
inline void ExportReadGroupSetRequest::clear_read_group_set_id() {
  read_group_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportReadGroupSetRequest::read_group_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportReadGroupSetRequest::set_read_group_set_id(const ::std::string& value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
}
inline void ExportReadGroupSetRequest::set_read_group_set_id(const char* value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
}
inline void ExportReadGroupSetRequest::set_read_group_set_id(const char* value,
    size_t size) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
}
inline ::std::string* ExportReadGroupSetRequest::mutable_read_group_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportReadGroupSetRequest::release_read_group_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
  
  return read_group_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportReadGroupSetRequest::unsafe_arena_release_read_group_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportReadGroupSetRequest::set_allocated_read_group_set_id(::std::string* read_group_set_id) {
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
}
inline void ExportReadGroupSetRequest::unsafe_arena_set_allocated_read_group_set_id(
    ::std::string* read_group_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExportReadGroupSetRequest.read_group_set_id)
}

// repeated string reference_names = 4;
inline int ExportReadGroupSetRequest::reference_names_size() const {
  return reference_names_.size();
}
inline void ExportReadGroupSetRequest::clear_reference_names() {
  reference_names_.Clear();
}
inline const ::std::string& ExportReadGroupSetRequest::reference_names(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
  return reference_names_.Get(index);
}
inline ::std::string* ExportReadGroupSetRequest::mutable_reference_names(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
  return reference_names_.Mutable(index);
}
inline void ExportReadGroupSetRequest::set_reference_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
  reference_names_.Mutable(index)->assign(value);
}
inline void ExportReadGroupSetRequest::set_reference_names(int index, const char* value) {
  reference_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
}
inline void ExportReadGroupSetRequest::set_reference_names(int index, const char* value, size_t size) {
  reference_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
}
inline ::std::string* ExportReadGroupSetRequest::add_reference_names() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
  return reference_names_.Add();
}
inline void ExportReadGroupSetRequest::add_reference_names(const ::std::string& value) {
  reference_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
}
inline void ExportReadGroupSetRequest::add_reference_names(const char* value) {
  reference_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
}
inline void ExportReadGroupSetRequest::add_reference_names(const char* value, size_t size) {
  reference_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ExportReadGroupSetRequest::reference_names() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
  return reference_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ExportReadGroupSetRequest::mutable_reference_names() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ExportReadGroupSetRequest.reference_names)
  return &reference_names_;
}

inline const ExportReadGroupSetRequest* ExportReadGroupSetRequest::internal_default_instance() {
  return &ExportReadGroupSetRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateReadGroupSetRequest

// optional string read_group_set_id = 1;
inline void UpdateReadGroupSetRequest::clear_read_group_set_id() {
  read_group_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateReadGroupSetRequest::read_group_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateReadGroupSetRequest::set_read_group_set_id(const ::std::string& value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
}
inline void UpdateReadGroupSetRequest::set_read_group_set_id(const char* value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
}
inline void UpdateReadGroupSetRequest::set_read_group_set_id(const char* value,
    size_t size) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
}
inline ::std::string* UpdateReadGroupSetRequest::mutable_read_group_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateReadGroupSetRequest::release_read_group_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
  
  return read_group_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateReadGroupSetRequest::unsafe_arena_release_read_group_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateReadGroupSetRequest::set_allocated_read_group_set_id(::std::string* read_group_set_id) {
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
}
inline void UpdateReadGroupSetRequest::unsafe_arena_set_allocated_read_group_set_id(
    ::std::string* read_group_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set_id)
}

// optional .google.genomics.v1.ReadGroupSet read_group_set = 2;
inline bool UpdateReadGroupSetRequest::has_read_group_set() const {
  return this != internal_default_instance() && read_group_set_ != NULL;
}
inline void UpdateReadGroupSetRequest::clear_read_group_set() {
  if (GetArenaNoVirtual() == NULL && read_group_set_ != NULL) delete read_group_set_;
  read_group_set_ = NULL;
}
inline const ::google::genomics::v1::ReadGroupSet& UpdateReadGroupSetRequest::read_group_set() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set)
  return read_group_set_ != NULL ? *read_group_set_
                         : *::google::genomics::v1::ReadGroupSet::internal_default_instance();
}
inline ::google::genomics::v1::ReadGroupSet* UpdateReadGroupSetRequest::mutable_read_group_set() {
  
  if (read_group_set_ == NULL) {
    _slow_mutable_read_group_set();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set)
  return read_group_set_;
}
inline ::google::genomics::v1::ReadGroupSet* UpdateReadGroupSetRequest::release_read_group_set() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_read_group_set();
  } else {
    ::google::genomics::v1::ReadGroupSet* temp = read_group_set_;
    read_group_set_ = NULL;
    return temp;
  }
}
inline  void UpdateReadGroupSetRequest::set_allocated_read_group_set(::google::genomics::v1::ReadGroupSet* read_group_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete read_group_set_;
  }
  if (read_group_set != NULL) {
    _slow_set_allocated_read_group_set(message_arena, &read_group_set);
  }
  read_group_set_ = read_group_set;
  if (read_group_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateReadGroupSetRequest.read_group_set)
}

// optional .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateReadGroupSetRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline void UpdateReadGroupSetRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) delete update_mask_;
  update_mask_ = NULL;
}
inline const ::google::protobuf::FieldMask& UpdateReadGroupSetRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateReadGroupSetRequest.update_mask)
  return update_mask_ != NULL ? *update_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
inline ::google::protobuf::FieldMask* UpdateReadGroupSetRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateReadGroupSetRequest.update_mask)
  return update_mask_;
}
inline ::google::protobuf::FieldMask* UpdateReadGroupSetRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateReadGroupSetRequest.update_mask)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_mask();
  } else {
    ::google::protobuf::FieldMask* temp = update_mask_;
    update_mask_ = NULL;
    return temp;
  }
}
inline  void UpdateReadGroupSetRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_mask_;
  }
  if (update_mask != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(update_mask);
    }
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateReadGroupSetRequest.update_mask)
}

inline const UpdateReadGroupSetRequest* UpdateReadGroupSetRequest::internal_default_instance() {
  return &UpdateReadGroupSetRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteReadGroupSetRequest

// optional string read_group_set_id = 1;
inline void DeleteReadGroupSetRequest::clear_read_group_set_id() {
  read_group_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteReadGroupSetRequest::read_group_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteReadGroupSetRequest::set_read_group_set_id(const ::std::string& value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
}
inline void DeleteReadGroupSetRequest::set_read_group_set_id(const char* value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
}
inline void DeleteReadGroupSetRequest::set_read_group_set_id(const char* value,
    size_t size) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
}
inline ::std::string* DeleteReadGroupSetRequest::mutable_read_group_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteReadGroupSetRequest::release_read_group_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
  
  return read_group_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteReadGroupSetRequest::unsafe_arena_release_read_group_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteReadGroupSetRequest::set_allocated_read_group_set_id(::std::string* read_group_set_id) {
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
}
inline void DeleteReadGroupSetRequest::unsafe_arena_set_allocated_read_group_set_id(
    ::std::string* read_group_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.DeleteReadGroupSetRequest.read_group_set_id)
}

inline const DeleteReadGroupSetRequest* DeleteReadGroupSetRequest::internal_default_instance() {
  return &DeleteReadGroupSetRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetReadGroupSetRequest

// optional string read_group_set_id = 1;
inline void GetReadGroupSetRequest::clear_read_group_set_id() {
  read_group_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetReadGroupSetRequest::read_group_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReadGroupSetRequest::set_read_group_set_id(const ::std::string& value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
}
inline void GetReadGroupSetRequest::set_read_group_set_id(const char* value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
}
inline void GetReadGroupSetRequest::set_read_group_set_id(const char* value,
    size_t size) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
}
inline ::std::string* GetReadGroupSetRequest::mutable_read_group_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
  return read_group_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetReadGroupSetRequest::release_read_group_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
  
  return read_group_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetReadGroupSetRequest::unsafe_arena_release_read_group_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetReadGroupSetRequest::set_allocated_read_group_set_id(::std::string* read_group_set_id) {
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
}
inline void GetReadGroupSetRequest::unsafe_arena_set_allocated_read_group_set_id(
    ::std::string* read_group_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.GetReadGroupSetRequest.read_group_set_id)
}

inline const GetReadGroupSetRequest* GetReadGroupSetRequest::internal_default_instance() {
  return &GetReadGroupSetRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListCoverageBucketsRequest

// optional string read_group_set_id = 1;
inline void ListCoverageBucketsRequest::clear_read_group_set_id() {
  read_group_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCoverageBucketsRequest::read_group_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
  return read_group_set_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListCoverageBucketsRequest::set_read_group_set_id(const ::std::string& value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
}
inline void ListCoverageBucketsRequest::set_read_group_set_id(const char* value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
}
inline void ListCoverageBucketsRequest::set_read_group_set_id(const char* value,
    size_t size) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
}
inline ::std::string* ListCoverageBucketsRequest::mutable_read_group_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
  return read_group_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsRequest::release_read_group_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
  
  return read_group_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsRequest::unsafe_arena_release_read_group_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCoverageBucketsRequest::set_allocated_read_group_set_id(::std::string* read_group_set_id) {
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
}
inline void ListCoverageBucketsRequest::unsafe_arena_set_allocated_read_group_set_id(
    ::std::string* read_group_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ListCoverageBucketsRequest.read_group_set_id)
}

// optional string reference_name = 3;
inline void ListCoverageBucketsRequest::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCoverageBucketsRequest::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
  return reference_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListCoverageBucketsRequest::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
}
inline void ListCoverageBucketsRequest::set_reference_name(const char* value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
}
inline void ListCoverageBucketsRequest::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
}
inline ::std::string* ListCoverageBucketsRequest::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsRequest::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsRequest::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCoverageBucketsRequest::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
}
inline void ListCoverageBucketsRequest::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ListCoverageBucketsRequest.reference_name)
}

// optional int64 start = 4;
inline void ListCoverageBucketsRequest::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListCoverageBucketsRequest::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsRequest.start)
  return start_;
}
inline void ListCoverageBucketsRequest::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsRequest.start)
}

// optional int64 end = 5;
inline void ListCoverageBucketsRequest::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListCoverageBucketsRequest::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsRequest.end)
  return end_;
}
inline void ListCoverageBucketsRequest::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsRequest.end)
}

// optional int64 target_bucket_width = 6;
inline void ListCoverageBucketsRequest::clear_target_bucket_width() {
  target_bucket_width_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListCoverageBucketsRequest::target_bucket_width() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsRequest.target_bucket_width)
  return target_bucket_width_;
}
inline void ListCoverageBucketsRequest::set_target_bucket_width(::google::protobuf::int64 value) {
  
  target_bucket_width_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsRequest.target_bucket_width)
}

// optional string page_token = 7;
inline void ListCoverageBucketsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCoverageBucketsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsRequest.page_token)
  return page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListCoverageBucketsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsRequest.page_token)
}
inline void ListCoverageBucketsRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ListCoverageBucketsRequest.page_token)
}
inline void ListCoverageBucketsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ListCoverageBucketsRequest.page_token)
}
inline ::std::string* ListCoverageBucketsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ListCoverageBucketsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ListCoverageBucketsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ListCoverageBucketsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCoverageBucketsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ListCoverageBucketsRequest.page_token)
}
inline void ListCoverageBucketsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ListCoverageBucketsRequest.page_token)
}

// optional int32 page_size = 8;
inline void ListCoverageBucketsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListCoverageBucketsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsRequest.page_size)
  return page_size_;
}
inline void ListCoverageBucketsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsRequest.page_size)
}

inline const ListCoverageBucketsRequest* ListCoverageBucketsRequest::internal_default_instance() {
  return &ListCoverageBucketsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CoverageBucket

// optional .google.genomics.v1.Range range = 1;
inline bool CoverageBucket::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void CoverageBucket::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
inline const ::google::genomics::v1::Range& CoverageBucket::range() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CoverageBucket.range)
  return range_ != NULL ? *range_
                         : *::google::genomics::v1::Range::internal_default_instance();
}
inline ::google::genomics::v1::Range* CoverageBucket::mutable_range() {
  
  if (range_ == NULL) {
    _slow_mutable_range();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CoverageBucket.range)
  return range_;
}
inline ::google::genomics::v1::Range* CoverageBucket::release_range() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CoverageBucket.range)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_range();
  } else {
    ::google::genomics::v1::Range* temp = range_;
    range_ = NULL;
    return temp;
  }
}
inline  void CoverageBucket::set_allocated_range(::google::genomics::v1::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete range_;
  }
  if (range != NULL) {
    _slow_set_allocated_range(message_arena, &range);
  }
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CoverageBucket.range)
}

// optional float mean_coverage = 2;
inline void CoverageBucket::clear_mean_coverage() {
  mean_coverage_ = 0;
}
inline float CoverageBucket::mean_coverage() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CoverageBucket.mean_coverage)
  return mean_coverage_;
}
inline void CoverageBucket::set_mean_coverage(float value) {
  
  mean_coverage_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.CoverageBucket.mean_coverage)
}

inline const CoverageBucket* CoverageBucket::internal_default_instance() {
  return &CoverageBucket_default_instance_.get();
}
// -------------------------------------------------------------------

// ListCoverageBucketsResponse

// optional int64 bucket_width = 1;
inline void ListCoverageBucketsResponse::clear_bucket_width() {
  bucket_width_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListCoverageBucketsResponse::bucket_width() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsResponse.bucket_width)
  return bucket_width_;
}
inline void ListCoverageBucketsResponse::set_bucket_width(::google::protobuf::int64 value) {
  
  bucket_width_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsResponse.bucket_width)
}

// repeated .google.genomics.v1.CoverageBucket coverage_buckets = 2;
inline int ListCoverageBucketsResponse::coverage_buckets_size() const {
  return coverage_buckets_.size();
}
inline void ListCoverageBucketsResponse::clear_coverage_buckets() {
  coverage_buckets_.Clear();
}
inline const ::google::genomics::v1::CoverageBucket& ListCoverageBucketsResponse::coverage_buckets(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsResponse.coverage_buckets)
  return coverage_buckets_.Get(index);
}
inline ::google::genomics::v1::CoverageBucket* ListCoverageBucketsResponse::mutable_coverage_buckets(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ListCoverageBucketsResponse.coverage_buckets)
  return coverage_buckets_.Mutable(index);
}
inline ::google::genomics::v1::CoverageBucket* ListCoverageBucketsResponse::add_coverage_buckets() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.ListCoverageBucketsResponse.coverage_buckets)
  return coverage_buckets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CoverageBucket >*
ListCoverageBucketsResponse::mutable_coverage_buckets() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ListCoverageBucketsResponse.coverage_buckets)
  return &coverage_buckets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CoverageBucket >&
ListCoverageBucketsResponse::coverage_buckets() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ListCoverageBucketsResponse.coverage_buckets)
  return coverage_buckets_;
}

// optional string next_page_token = 3;
inline void ListCoverageBucketsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCoverageBucketsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
  return next_page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListCoverageBucketsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
}
inline void ListCoverageBucketsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
}
inline void ListCoverageBucketsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
}
inline ::std::string* ListCoverageBucketsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCoverageBucketsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCoverageBucketsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
}
inline void ListCoverageBucketsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ListCoverageBucketsResponse.next_page_token)
}

inline const ListCoverageBucketsResponse* ListCoverageBucketsResponse::internal_default_instance() {
  return &ListCoverageBucketsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// SearchReadsRequest

// repeated string read_group_set_ids = 1;
inline int SearchReadsRequest::read_group_set_ids_size() const {
  return read_group_set_ids_.size();
}
inline void SearchReadsRequest::clear_read_group_set_ids() {
  read_group_set_ids_.Clear();
}
inline const ::std::string& SearchReadsRequest::read_group_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
  return read_group_set_ids_.Get(index);
}
inline ::std::string* SearchReadsRequest::mutable_read_group_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
  return read_group_set_ids_.Mutable(index);
}
inline void SearchReadsRequest::set_read_group_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
  read_group_set_ids_.Mutable(index)->assign(value);
}
inline void SearchReadsRequest::set_read_group_set_ids(int index, const char* value) {
  read_group_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
}
inline void SearchReadsRequest::set_read_group_set_ids(int index, const char* value, size_t size) {
  read_group_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
}
inline ::std::string* SearchReadsRequest::add_read_group_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
  return read_group_set_ids_.Add();
}
inline void SearchReadsRequest::add_read_group_set_ids(const ::std::string& value) {
  read_group_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
}
inline void SearchReadsRequest::add_read_group_set_ids(const char* value) {
  read_group_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
}
inline void SearchReadsRequest::add_read_group_set_ids(const char* value, size_t size) {
  read_group_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchReadsRequest::read_group_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
  return read_group_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchReadsRequest::mutable_read_group_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchReadsRequest.read_group_set_ids)
  return &read_group_set_ids_;
}

// repeated string read_group_ids = 5;
inline int SearchReadsRequest::read_group_ids_size() const {
  return read_group_ids_.size();
}
inline void SearchReadsRequest::clear_read_group_ids() {
  read_group_ids_.Clear();
}
inline const ::std::string& SearchReadsRequest::read_group_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsRequest.read_group_ids)
  return read_group_ids_.Get(index);
}
inline ::std::string* SearchReadsRequest::mutable_read_group_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadsRequest.read_group_ids)
  return read_group_ids_.Mutable(index);
}
inline void SearchReadsRequest::set_read_group_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsRequest.read_group_ids)
  read_group_ids_.Mutable(index)->assign(value);
}
inline void SearchReadsRequest::set_read_group_ids(int index, const char* value) {
  read_group_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadsRequest.read_group_ids)
}
inline void SearchReadsRequest::set_read_group_ids(int index, const char* value, size_t size) {
  read_group_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadsRequest.read_group_ids)
}
inline ::std::string* SearchReadsRequest::add_read_group_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchReadsRequest.read_group_ids)
  return read_group_ids_.Add();
}
inline void SearchReadsRequest::add_read_group_ids(const ::std::string& value) {
  read_group_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchReadsRequest.read_group_ids)
}
inline void SearchReadsRequest::add_read_group_ids(const char* value) {
  read_group_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchReadsRequest.read_group_ids)
}
inline void SearchReadsRequest::add_read_group_ids(const char* value, size_t size) {
  read_group_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchReadsRequest.read_group_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchReadsRequest::read_group_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchReadsRequest.read_group_ids)
  return read_group_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchReadsRequest::mutable_read_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchReadsRequest.read_group_ids)
  return &read_group_ids_;
}

// optional string reference_name = 7;
inline void SearchReadsRequest::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchReadsRequest::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsRequest.reference_name)
  return reference_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchReadsRequest::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsRequest.reference_name)
}
inline void SearchReadsRequest::set_reference_name(const char* value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadsRequest.reference_name)
}
inline void SearchReadsRequest::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadsRequest.reference_name)
}
inline ::std::string* SearchReadsRequest::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadsRequest.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadsRequest::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchReadsRequest.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadsRequest::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchReadsRequest.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchReadsRequest::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchReadsRequest.reference_name)
}
inline void SearchReadsRequest::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchReadsRequest.reference_name)
}

// optional int64 start = 8;
inline void SearchReadsRequest::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchReadsRequest::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsRequest.start)
  return start_;
}
inline void SearchReadsRequest::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsRequest.start)
}

// optional int64 end = 9;
inline void SearchReadsRequest::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchReadsRequest::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsRequest.end)
  return end_;
}
inline void SearchReadsRequest::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsRequest.end)
}

// optional string page_token = 3;
inline void SearchReadsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchReadsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsRequest.page_token)
  return page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchReadsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsRequest.page_token)
}
inline void SearchReadsRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadsRequest.page_token)
}
inline void SearchReadsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadsRequest.page_token)
}
inline ::std::string* SearchReadsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchReadsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchReadsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchReadsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchReadsRequest.page_token)
}
inline void SearchReadsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchReadsRequest.page_token)
}

// optional int32 page_size = 4;
inline void SearchReadsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchReadsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsRequest.page_size)
  return page_size_;
}
inline void SearchReadsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsRequest.page_size)
}

inline const SearchReadsRequest* SearchReadsRequest::internal_default_instance() {
  return &SearchReadsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SearchReadsResponse

// repeated .google.genomics.v1.Read alignments = 1;
inline int SearchReadsResponse::alignments_size() const {
  return alignments_.size();
}
inline void SearchReadsResponse::clear_alignments() {
  alignments_.Clear();
}
inline const ::google::genomics::v1::Read& SearchReadsResponse::alignments(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsResponse.alignments)
  return alignments_.Get(index);
}
inline ::google::genomics::v1::Read* SearchReadsResponse::mutable_alignments(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadsResponse.alignments)
  return alignments_.Mutable(index);
}
inline ::google::genomics::v1::Read* SearchReadsResponse::add_alignments() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchReadsResponse.alignments)
  return alignments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >*
SearchReadsResponse::mutable_alignments() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchReadsResponse.alignments)
  return &alignments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >&
SearchReadsResponse::alignments() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchReadsResponse.alignments)
  return alignments_;
}

// optional string next_page_token = 2;
inline void SearchReadsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchReadsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchReadsResponse.next_page_token)
  return next_page_token_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchReadsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchReadsResponse.next_page_token)
}
inline void SearchReadsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchReadsResponse.next_page_token)
}
inline void SearchReadsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchReadsResponse.next_page_token)
}
inline ::std::string* SearchReadsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchReadsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchReadsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchReadsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchReadsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchReadsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchReadsResponse.next_page_token)
}
inline void SearchReadsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchReadsResponse.next_page_token)
}

inline const SearchReadsResponse* SearchReadsResponse::internal_default_instance() {
  return &SearchReadsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// StreamReadsRequest

// optional string project_id = 1;
inline void StreamReadsRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamReadsRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsRequest.project_id)
  return project_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StreamReadsRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamReadsRequest.project_id)
}
inline void StreamReadsRequest::set_project_id(const char* value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.StreamReadsRequest.project_id)
}
inline void StreamReadsRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.StreamReadsRequest.project_id)
}
inline ::std::string* StreamReadsRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamReadsRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamReadsRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.StreamReadsRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamReadsRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.StreamReadsRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamReadsRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.StreamReadsRequest.project_id)
}
inline void StreamReadsRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.StreamReadsRequest.project_id)
}

// optional string read_group_set_id = 2;
inline void StreamReadsRequest::clear_read_group_set_id() {
  read_group_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamReadsRequest::read_group_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsRequest.read_group_set_id)
  return read_group_set_id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StreamReadsRequest::set_read_group_set_id(const ::std::string& value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamReadsRequest.read_group_set_id)
}
inline void StreamReadsRequest::set_read_group_set_id(const char* value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.StreamReadsRequest.read_group_set_id)
}
inline void StreamReadsRequest::set_read_group_set_id(const char* value,
    size_t size) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.StreamReadsRequest.read_group_set_id)
}
inline ::std::string* StreamReadsRequest::mutable_read_group_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamReadsRequest.read_group_set_id)
  return read_group_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamReadsRequest::release_read_group_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.StreamReadsRequest.read_group_set_id)
  
  return read_group_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamReadsRequest::unsafe_arena_release_read_group_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.StreamReadsRequest.read_group_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamReadsRequest::set_allocated_read_group_set_id(::std::string* read_group_set_id) {
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.StreamReadsRequest.read_group_set_id)
}
inline void StreamReadsRequest::unsafe_arena_set_allocated_read_group_set_id(
    ::std::string* read_group_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.StreamReadsRequest.read_group_set_id)
}

// optional string reference_name = 3;
inline void StreamReadsRequest::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamReadsRequest::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsRequest.reference_name)
  return reference_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StreamReadsRequest::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamReadsRequest.reference_name)
}
inline void StreamReadsRequest::set_reference_name(const char* value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.StreamReadsRequest.reference_name)
}
inline void StreamReadsRequest::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.StreamReadsRequest.reference_name)
}
inline ::std::string* StreamReadsRequest::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamReadsRequest.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamReadsRequest::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.StreamReadsRequest.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamReadsRequest::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.StreamReadsRequest.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamReadsRequest::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.StreamReadsRequest.reference_name)
}
inline void StreamReadsRequest::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.StreamReadsRequest.reference_name)
}

// optional int64 start = 4;
inline void StreamReadsRequest::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StreamReadsRequest::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsRequest.start)
  return start_;
}
inline void StreamReadsRequest::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamReadsRequest.start)
}

// optional int64 end = 5;
inline void StreamReadsRequest::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StreamReadsRequest::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsRequest.end)
  return end_;
}
inline void StreamReadsRequest::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamReadsRequest.end)
}

// optional int32 shard = 6;
inline void StreamReadsRequest::clear_shard() {
  shard_ = 0;
}
inline ::google::protobuf::int32 StreamReadsRequest::shard() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsRequest.shard)
  return shard_;
}
inline void StreamReadsRequest::set_shard(::google::protobuf::int32 value) {
  
  shard_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamReadsRequest.shard)
}

// optional int32 total_shards = 7;
inline void StreamReadsRequest::clear_total_shards() {
  total_shards_ = 0;
}
inline ::google::protobuf::int32 StreamReadsRequest::total_shards() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsRequest.total_shards)
  return total_shards_;
}
inline void StreamReadsRequest::set_total_shards(::google::protobuf::int32 value) {
  
  total_shards_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamReadsRequest.total_shards)
}

inline const StreamReadsRequest* StreamReadsRequest::internal_default_instance() {
  return &StreamReadsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// StreamReadsResponse

// repeated .google.genomics.v1.Read alignments = 1;
inline int StreamReadsResponse::alignments_size() const {
  return alignments_.size();
}
inline void StreamReadsResponse::clear_alignments() {
  alignments_.Clear();
}
inline const ::google::genomics::v1::Read& StreamReadsResponse::alignments(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamReadsResponse.alignments)
  return alignments_.Get(index);
}
inline ::google::genomics::v1::Read* StreamReadsResponse::mutable_alignments(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamReadsResponse.alignments)
  return alignments_.Mutable(index);
}
inline ::google::genomics::v1::Read* StreamReadsResponse::add_alignments() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.StreamReadsResponse.alignments)
  return alignments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >*
StreamReadsResponse::mutable_alignments() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.StreamReadsResponse.alignments)
  return &alignments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Read >&
StreamReadsResponse::alignments() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.StreamReadsResponse.alignments)
  return alignments_;
}

inline const StreamReadsResponse* StreamReadsResponse::internal_default_instance() {
  return &StreamReadsResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace genomics
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy>() {
  return ::google::genomics::v1::ImportReadGroupSetsRequest_PartitionStrategy_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fgenomics_2fv1_2freads_2eproto__INCLUDED
