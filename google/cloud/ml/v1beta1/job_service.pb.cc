// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1beta1/job_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/cloud/ml/v1beta1/job_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace cloud {
namespace ml {
namespace v1beta1 {

namespace {

const ::google::protobuf::Descriptor* TrainingInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainingInput_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TrainingInput_ScaleTier_descriptor_ = NULL;
const ::google::protobuf::Descriptor* HyperparameterSpec_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HyperparameterSpec_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HyperparameterSpec_GoalType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ParameterSpec_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParameterSpec_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ParameterSpec_ParameterType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ParameterSpec_ScaleType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* HyperparameterOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HyperparameterOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* HyperparameterOutput_HyperparameterMetric_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HyperparameterOutput_HyperparameterMetric_reflection_ = NULL;
const ::google::protobuf::Descriptor* HyperparameterOutput_HyperparametersEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TrainingOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainingOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* PredictionInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PredictionInput_reflection_ = NULL;
struct PredictionInputOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::internal::ArenaStringPtr version_name_;
}* PredictionInput_default_oneof_instance_ = NULL;
const ::google::protobuf::EnumDescriptor* PredictionInput_DataFormat_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PredictionOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PredictionOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* Job_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Job_reflection_ = NULL;
struct JobOneofInstance {
  const ::google::cloud::ml::v1beta1::TrainingInput* training_input_;
  const ::google::cloud::ml::v1beta1::PredictionInput* prediction_input_;
  const ::google::cloud::ml::v1beta1::TrainingOutput* training_output_;
  const ::google::cloud::ml::v1beta1::PredictionOutput* prediction_output_;
}* Job_default_oneof_instance_ = NULL;
const ::google::protobuf::EnumDescriptor* Job_State_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CreateJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListJobsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListJobsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListJobsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListJobsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CancelJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CancelJobRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto() {
  protobuf_AddDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/cloud/ml/v1beta1/job_service.proto");
  GOOGLE_CHECK(file != NULL);
  TrainingInput_descriptor_ = file->message_type(0);
  static const int TrainingInput_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, scale_tier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, master_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, worker_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, parameter_server_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, worker_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, parameter_server_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, package_uris_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, python_module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, hyperparameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, region_),
  };
  TrainingInput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrainingInput_descriptor_,
      TrainingInput::internal_default_instance(),
      TrainingInput_offsets_,
      -1,
      -1,
      -1,
      sizeof(TrainingInput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingInput, _internal_metadata_));
  TrainingInput_ScaleTier_descriptor_ = TrainingInput_descriptor_->enum_type(0);
  HyperparameterSpec_descriptor_ = file->message_type(1);
  static const int HyperparameterSpec_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterSpec, goal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterSpec, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterSpec, max_trials_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterSpec, max_parallel_trials_),
  };
  HyperparameterSpec_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HyperparameterSpec_descriptor_,
      HyperparameterSpec::internal_default_instance(),
      HyperparameterSpec_offsets_,
      -1,
      -1,
      -1,
      sizeof(HyperparameterSpec),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterSpec, _internal_metadata_));
  HyperparameterSpec_GoalType_descriptor_ = HyperparameterSpec_descriptor_->enum_type(0);
  ParameterSpec_descriptor_ = file->message_type(2);
  static const int ParameterSpec_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, parameter_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, min_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, max_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, categorical_values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, discrete_values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, scale_type_),
  };
  ParameterSpec_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ParameterSpec_descriptor_,
      ParameterSpec::internal_default_instance(),
      ParameterSpec_offsets_,
      -1,
      -1,
      -1,
      sizeof(ParameterSpec),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterSpec, _internal_metadata_));
  ParameterSpec_ParameterType_descriptor_ = ParameterSpec_descriptor_->enum_type(0);
  ParameterSpec_ScaleType_descriptor_ = ParameterSpec_descriptor_->enum_type(1);
  HyperparameterOutput_descriptor_ = file->message_type(3);
  static const int HyperparameterOutput_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput, trial_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput, hyperparameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput, final_metric_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput, all_metrics_),
  };
  HyperparameterOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HyperparameterOutput_descriptor_,
      HyperparameterOutput::internal_default_instance(),
      HyperparameterOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(HyperparameterOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput, _internal_metadata_));
  HyperparameterOutput_HyperparameterMetric_descriptor_ = HyperparameterOutput_descriptor_->nested_type(0);
  static const int HyperparameterOutput_HyperparameterMetric_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput_HyperparameterMetric, training_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput_HyperparameterMetric, objective_value_),
  };
  HyperparameterOutput_HyperparameterMetric_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HyperparameterOutput_HyperparameterMetric_descriptor_,
      HyperparameterOutput_HyperparameterMetric::internal_default_instance(),
      HyperparameterOutput_HyperparameterMetric_offsets_,
      -1,
      -1,
      -1,
      sizeof(HyperparameterOutput_HyperparameterMetric),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HyperparameterOutput_HyperparameterMetric, _internal_metadata_));
  HyperparameterOutput_HyperparametersEntry_descriptor_ = HyperparameterOutput_descriptor_->nested_type(1);
  TrainingOutput_descriptor_ = file->message_type(4);
  static const int TrainingOutput_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingOutput, completed_trial_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingOutput, trials_),
  };
  TrainingOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrainingOutput_descriptor_,
      TrainingOutput::internal_default_instance(),
      TrainingOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(TrainingOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingOutput, _internal_metadata_));
  PredictionInput_descriptor_ = file->message_type(5);
  static const int PredictionInput_offsets_[8] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(PredictionInput_default_oneof_instance_, model_name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(PredictionInput_default_oneof_instance_, version_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, data_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, input_paths_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, output_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, max_worker_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, model_version_),
  };
  PredictionInput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PredictionInput_descriptor_,
      PredictionInput::internal_default_instance(),
      PredictionInput_offsets_,
      -1,
      -1,
      -1,
      PredictionInput_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, _oneof_case_[0]),
      sizeof(PredictionInput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionInput, _internal_metadata_));
  PredictionInput_DataFormat_descriptor_ = PredictionInput_descriptor_->enum_type(0);
  PredictionOutput_descriptor_ = file->message_type(6);
  static const int PredictionOutput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionOutput, output_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionOutput, prediction_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionOutput, error_count_),
  };
  PredictionOutput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PredictionOutput_descriptor_,
      PredictionOutput::internal_default_instance(),
      PredictionOutput_offsets_,
      -1,
      -1,
      -1,
      sizeof(PredictionOutput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionOutput, _internal_metadata_));
  Job_descriptor_ = file->message_type(7);
  static const int Job_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, job_id_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Job_default_oneof_instance_, training_input_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Job_default_oneof_instance_, prediction_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, error_message_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Job_default_oneof_instance_, training_output_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Job_default_oneof_instance_, prediction_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, output_),
  };
  Job_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Job_descriptor_,
      Job::internal_default_instance(),
      Job_offsets_,
      -1,
      -1,
      -1,
      Job_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, _oneof_case_[0]),
      sizeof(Job),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, _internal_metadata_));
  Job_State_descriptor_ = Job_descriptor_->enum_type(0);
  CreateJobRequest_descriptor_ = file->message_type(8);
  static const int CreateJobRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobRequest, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobRequest, job_),
  };
  CreateJobRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateJobRequest_descriptor_,
      CreateJobRequest::internal_default_instance(),
      CreateJobRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateJobRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobRequest, _internal_metadata_));
  ListJobsRequest_descriptor_ = file->message_type(9);
  static const int ListJobsRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsRequest, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsRequest, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsRequest, page_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsRequest, page_size_),
  };
  ListJobsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListJobsRequest_descriptor_,
      ListJobsRequest::internal_default_instance(),
      ListJobsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListJobsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsRequest, _internal_metadata_));
  ListJobsResponse_descriptor_ = file->message_type(10);
  static const int ListJobsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsResponse, jobs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsResponse, next_page_token_),
  };
  ListJobsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListJobsResponse_descriptor_,
      ListJobsResponse::internal_default_instance(),
      ListJobsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListJobsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListJobsResponse, _internal_metadata_));
  GetJobRequest_descriptor_ = file->message_type(11);
  static const int GetJobRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobRequest, name_),
  };
  GetJobRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetJobRequest_descriptor_,
      GetJobRequest::internal_default_instance(),
      GetJobRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetJobRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobRequest, _internal_metadata_));
  CancelJobRequest_descriptor_ = file->message_type(12);
  static const int CancelJobRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelJobRequest, name_),
  };
  CancelJobRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CancelJobRequest_descriptor_,
      CancelJobRequest::internal_default_instance(),
      CancelJobRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CancelJobRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelJobRequest, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrainingInput_descriptor_, TrainingInput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HyperparameterSpec_descriptor_, HyperparameterSpec::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ParameterSpec_descriptor_, ParameterSpec::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HyperparameterOutput_descriptor_, HyperparameterOutput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HyperparameterOutput_HyperparameterMetric_descriptor_, HyperparameterOutput_HyperparameterMetric::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        HyperparameterOutput_HyperparametersEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                HyperparameterOutput_HyperparametersEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrainingOutput_descriptor_, TrainingOutput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PredictionInput_descriptor_, PredictionInput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PredictionOutput_descriptor_, PredictionOutput::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Job_descriptor_, Job::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateJobRequest_descriptor_, CreateJobRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListJobsRequest_descriptor_, ListJobsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListJobsResponse_descriptor_, ListJobsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetJobRequest_descriptor_, GetJobRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CancelJobRequest_descriptor_, CancelJobRequest::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto() {
  TrainingInput_default_instance_.Shutdown();
  delete TrainingInput_reflection_;
  HyperparameterSpec_default_instance_.Shutdown();
  delete HyperparameterSpec_reflection_;
  ParameterSpec_default_instance_.Shutdown();
  delete ParameterSpec_reflection_;
  HyperparameterOutput_default_instance_.Shutdown();
  delete HyperparameterOutput_reflection_;
  HyperparameterOutput_HyperparameterMetric_default_instance_.Shutdown();
  delete HyperparameterOutput_HyperparameterMetric_reflection_;
  TrainingOutput_default_instance_.Shutdown();
  delete TrainingOutput_reflection_;
  PredictionInput_default_instance_.Shutdown();
  delete PredictionInput_default_oneof_instance_;
  delete PredictionInput_reflection_;
  PredictionOutput_default_instance_.Shutdown();
  delete PredictionOutput_reflection_;
  Job_default_instance_.Shutdown();
  delete Job_default_oneof_instance_;
  delete Job_reflection_;
  CreateJobRequest_default_instance_.Shutdown();
  delete CreateJobRequest_reflection_;
  ListJobsRequest_default_instance_.Shutdown();
  delete ListJobsRequest_reflection_;
  ListJobsResponse_default_instance_.Shutdown();
  delete ListJobsResponse_reflection_;
  GetJobRequest_default_instance_.Shutdown();
  delete GetJobRequest_reflection_;
  CancelJobRequest_default_instance_.Shutdown();
  delete CancelJobRequest_reflection_;
}

void protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  TrainingInput_default_instance_.DefaultConstruct();
  HyperparameterSpec_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ParameterSpec_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HyperparameterOutput_default_instance_.DefaultConstruct();
  HyperparameterOutput_HyperparameterMetric_default_instance_.DefaultConstruct();
  TrainingOutput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PredictionInput_default_instance_.DefaultConstruct();
  PredictionInput_default_oneof_instance_ = new PredictionInputOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  PredictionOutput_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Job_default_instance_.DefaultConstruct();
  Job_default_oneof_instance_ = new JobOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  CreateJobRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListJobsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListJobsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetJobRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CancelJobRequest_default_instance_.DefaultConstruct();
  TrainingInput_default_instance_.get_mutable()->InitAsDefaultInstance();
  HyperparameterSpec_default_instance_.get_mutable()->InitAsDefaultInstance();
  ParameterSpec_default_instance_.get_mutable()->InitAsDefaultInstance();
  HyperparameterOutput_default_instance_.get_mutable()->InitAsDefaultInstance();
  HyperparameterOutput_HyperparameterMetric_default_instance_.get_mutable()->InitAsDefaultInstance();
  TrainingOutput_default_instance_.get_mutable()->InitAsDefaultInstance();
  PredictionInput_default_instance_.get_mutable()->InitAsDefaultInstance();
  PredictionOutput_default_instance_.get_mutable()->InitAsDefaultInstance();
  Job_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateJobRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListJobsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListJobsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetJobRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CancelJobRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_once_);
void protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_once_,
                 &protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_impl);
}
void protobuf_AddDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)google/cloud/ml/v1beta1/job_service.pr"
    "oto\022\027google.cloud.ml.v1beta1\032\034google/api"
    "/annotations.proto\032\033google/protobuf/empt"
    "y.proto\032\037google/protobuf/timestamp.proto"
    "\"\250\003\n\rTrainingInput\022D\n\nscale_tier\030\001 \001(\01620"
    ".google.cloud.ml.v1beta1.TrainingInput.S"
    "caleTier\022\023\n\013master_type\030\002 \001(\t\022\023\n\013worker_"
    "type\030\003 \001(\t\022\035\n\025parameter_server_type\030\004 \001("
    "\t\022\024\n\014worker_count\030\005 \001(\003\022\036\n\026parameter_ser"
    "ver_count\030\006 \001(\003\022\024\n\014package_uris\030\007 \003(\t\022\025\n"
    "\rpython_module\030\010 \001(\t\022\014\n\004args\030\n \003(\t\022D\n\017hy"
    "perparameters\030\014 \001(\0132+.google.cloud.ml.v1"
    "beta1.HyperparameterSpec\022\016\n\006region\030\016 \001(\t"
    "\"A\n\tScaleTier\022\t\n\005BASIC\020\000\022\016\n\nSTANDARD_1\020\001"
    "\022\r\n\tPREMIUM_1\020\003\022\n\n\006CUSTOM\020\005\"\204\002\n\022Hyperpar"
    "ameterSpec\022B\n\004goal\030\001 \001(\01624.google.cloud."
    "ml.v1beta1.HyperparameterSpec.GoalType\0226"
    "\n\006params\030\002 \003(\0132&.google.cloud.ml.v1beta1"
    ".ParameterSpec\022\022\n\nmax_trials\030\003 \001(\005\022\033\n\023ma"
    "x_parallel_trials\030\004 \001(\005\"A\n\010GoalType\022\031\n\025G"
    "OAL_TYPE_UNSPECIFIED\020\000\022\014\n\010MAXIMIZE\020\001\022\014\n\010"
    "MINIMIZE\020\002\"\323\003\n\rParameterSpec\022\026\n\016paramete"
    "r_name\030\001 \001(\t\022B\n\004type\030\004 \001(\01624.google.clou"
    "d.ml.v1beta1.ParameterSpec.ParameterType"
    "\022\021\n\tmin_value\030\002 \001(\001\022\021\n\tmax_value\030\003 \001(\001\022\032"
    "\n\022categorical_values\030\005 \003(\t\022\027\n\017discrete_v"
    "alues\030\006 \003(\001\022D\n\nscale_type\030\007 \001(\01620.google"
    ".cloud.ml.v1beta1.ParameterSpec.ScaleTyp"
    "e\"g\n\rParameterType\022\036\n\032PARAMETER_TYPE_UNS"
    "PECIFIED\020\000\022\n\n\006DOUBLE\020\001\022\013\n\007INTEGER\020\002\022\017\n\013C"
    "ATEGORICAL\020\003\022\014\n\010DISCRETE\020\004\"\\\n\tScaleType\022"
    "\010\n\004NONE\020\000\022\025\n\021UNIT_LINEAR_SCALE\020\001\022\022\n\016UNIT"
    "_LOG_SCALE\020\002\022\032\n\026UNIT_REVERSE_LOG_SCALE\020\003"
    "\"\270\003\n\024HyperparameterOutput\022\020\n\010trial_id\030\001 "
    "\001(\t\022[\n\017hyperparameters\030\002 \003(\0132B.google.cl"
    "oud.ml.v1beta1.HyperparameterOutput.Hype"
    "rparametersEntry\022X\n\014final_metric\030\003 \001(\0132B"
    ".google.cloud.ml.v1beta1.HyperparameterO"
    "utput.HyperparameterMetric\022W\n\013all_metric"
    "s\030\004 \003(\0132B.google.cloud.ml.v1beta1.Hyperp"
    "arameterOutput.HyperparameterMetric\032F\n\024H"
    "yperparameterMetric\022\025\n\rtraining_step\030\001 \001"
    "(\003\022\027\n\017objective_value\030\002 \001(\001\0326\n\024Hyperpara"
    "metersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
    "\0028\001\"n\n\016TrainingOutput\022\035\n\025completed_trial"
    "_count\030\001 \001(\003\022=\n\006trials\030\002 \003(\0132-.google.cl"
    "oud.ml.v1beta1.HyperparameterOutput\"\306\002\n\017"
    "PredictionInput\022\024\n\nmodel_name\030\001 \001(\tH\000\022\026\n"
    "\014version_name\030\002 \001(\tH\000\022H\n\013data_format\030\003 \001"
    "(\01623.google.cloud.ml.v1beta1.PredictionI"
    "nput.DataFormat\022\023\n\013input_paths\030\004 \003(\t\022\023\n\013"
    "output_path\030\005 \001(\t\022\030\n\020max_worker_count\030\006 "
    "\001(\003\022\016\n\006region\030\007 \001(\t\"V\n\nDataFormat\022\033\n\027DAT"
    "A_FORMAT_UNSPECIFIED\020\000\022\010\n\004TEXT\020\001\022\r\n\tTF_R"
    "ECORD\020\002\022\022\n\016TF_RECORD_GZIP\020\003B\017\n\rmodel_ver"
    "sion\"V\n\020PredictionOutput\022\023\n\013output_path\030"
    "\001 \001(\t\022\030\n\020prediction_count\030\002 \001(\003\022\023\n\013error"
    "_count\030\003 \001(\003\"\230\005\n\003Job\022\016\n\006job_id\030\001 \001(\t\022@\n\016"
    "training_input\030\002 \001(\0132&.google.cloud.ml.v"
    "1beta1.TrainingInputH\000\022D\n\020prediction_inp"
    "ut\030\003 \001(\0132(.google.cloud.ml.v1beta1.Predi"
    "ctionInputH\000\022/\n\013create_time\030\004 \001(\0132\032.goog"
    "le.protobuf.Timestamp\022.\n\nstart_time\030\005 \001("
    "\0132\032.google.protobuf.Timestamp\022,\n\010end_tim"
    "e\030\006 \001(\0132\032.google.protobuf.Timestamp\0221\n\005s"
    "tate\030\007 \001(\0162\".google.cloud.ml.v1beta1.Job"
    ".State\022\025\n\rerror_message\030\010 \001(\t\022B\n\017trainin"
    "g_output\030\t \001(\0132\'.google.cloud.ml.v1beta1"
    ".TrainingOutputH\001\022F\n\021prediction_output\030\n"
    " \001(\0132).google.cloud.ml.v1beta1.Predictio"
    "nOutputH\001\"\200\001\n\005State\022\025\n\021STATE_UNSPECIFIED"
    "\020\000\022\n\n\006QUEUED\020\001\022\r\n\tPREPARING\020\002\022\013\n\007RUNNING"
    "\020\003\022\r\n\tSUCCEEDED\020\004\022\n\n\006FAILED\020\005\022\016\n\nCANCELL"
    "ING\020\006\022\r\n\tCANCELLED\020\007B\007\n\005inputB\010\n\006output\""
    "M\n\020CreateJobRequest\022\016\n\006parent\030\001 \001(\t\022)\n\003j"
    "ob\030\002 \001(\0132\034.google.cloud.ml.v1beta1.Job\"X"
    "\n\017ListJobsRequest\022\016\n\006parent\030\001 \001(\t\022\016\n\006fil"
    "ter\030\002 \001(\t\022\022\n\npage_token\030\004 \001(\t\022\021\n\tpage_si"
    "ze\030\005 \001(\005\"W\n\020ListJobsResponse\022*\n\004jobs\030\001 \003"
    "(\0132\034.google.cloud.ml.v1beta1.Job\022\027\n\017next"
    "_page_token\030\002 \001(\t\"\035\n\rGetJobRequest\022\014\n\004na"
    "me\030\001 \001(\t\" \n\020CancelJobRequest\022\014\n\004name\030\001 \001"
    "(\t2\241\004\n\nJobService\022\204\001\n\tCreateJob\022).google"
    ".cloud.ml.v1beta1.CreateJobRequest\032\034.goo"
    "gle.cloud.ml.v1beta1.Job\".\202\323\344\223\002(\"!/v1bet"
    "a1/{parent=projects/*}/jobs:\003job\022\212\001\n\010Lis"
    "tJobs\022(.google.cloud.ml.v1beta1.ListJobs"
    "Request\032).google.cloud.ml.v1beta1.ListJo"
    "bsResponse\")\202\323\344\223\002#\022!/v1beta1/{parent=pro"
    "jects/*}/jobs\022y\n\006GetJob\022&.google.cloud.m"
    "l.v1beta1.GetJobRequest\032\034.google.cloud.m"
    "l.v1beta1.Job\")\202\323\344\223\002#\022!/v1beta1/{name=pr"
    "ojects/*/jobs/*}\022\203\001\n\tCancelJob\022).google."
    "cloud.ml.v1beta1.CancelJobRequest\032\026.goog"
    "le.protobuf.Empty\"3\202\323\344\223\002-\"(/v1beta1/{nam"
    "e=projects/*/jobs/*}:cancel:\001*Bo\n\037com.go"
    "ogle.cloud.ml.api.v1beta1B\017JobServicePro"
    "toP\001Z9google.golang.org/genproto/googlea"
    "pis/cloud/ml/v1beta1;mlb\006proto3", 3951);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/ml/v1beta1/job_service.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_once_);
void protobuf_AddDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_once_,
                 &protobuf_AddDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto {
  StaticDescriptorInitializer_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto() {
    protobuf_AddDesc_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  }
} static_descriptor_initializer_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* TrainingInput_ScaleTier_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingInput_ScaleTier_descriptor_;
}
bool TrainingInput_ScaleTier_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrainingInput_ScaleTier TrainingInput::BASIC;
const TrainingInput_ScaleTier TrainingInput::STANDARD_1;
const TrainingInput_ScaleTier TrainingInput::PREMIUM_1;
const TrainingInput_ScaleTier TrainingInput::CUSTOM;
const TrainingInput_ScaleTier TrainingInput::ScaleTier_MIN;
const TrainingInput_ScaleTier TrainingInput::ScaleTier_MAX;
const int TrainingInput::ScaleTier_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainingInput::kScaleTierFieldNumber;
const int TrainingInput::kMasterTypeFieldNumber;
const int TrainingInput::kWorkerTypeFieldNumber;
const int TrainingInput::kParameterServerTypeFieldNumber;
const int TrainingInput::kWorkerCountFieldNumber;
const int TrainingInput::kParameterServerCountFieldNumber;
const int TrainingInput::kPackageUrisFieldNumber;
const int TrainingInput::kPythonModuleFieldNumber;
const int TrainingInput::kArgsFieldNumber;
const int TrainingInput::kHyperparametersFieldNumber;
const int TrainingInput::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingInput::TrainingInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.TrainingInput)
}

void TrainingInput::InitAsDefaultInstance() {
  hyperparameters_ = const_cast< ::google::cloud::ml::v1beta1::HyperparameterSpec*>(
      ::google::cloud::ml::v1beta1::HyperparameterSpec::internal_default_instance());
}

TrainingInput::TrainingInput(const TrainingInput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.TrainingInput)
}

void TrainingInput::SharedCtor() {
  master_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_server_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  python_module_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hyperparameters_ = NULL;
  ::memset(&worker_count_, 0, reinterpret_cast<char*>(&scale_tier_) -
    reinterpret_cast<char*>(&worker_count_) + sizeof(scale_tier_));
  _cached_size_ = 0;
}

TrainingInput::~TrainingInput() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.TrainingInput)
  SharedDtor();
}

void TrainingInput::SharedDtor() {
  master_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_server_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  python_module_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TrainingInput_default_instance_.get()) {
    delete hyperparameters_;
  }
}

void TrainingInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainingInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingInput_descriptor_;
}

const TrainingInput& TrainingInput::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TrainingInput> TrainingInput_default_instance_;

TrainingInput* TrainingInput::New(::google::protobuf::Arena* arena) const {
  TrainingInput* n = new TrainingInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainingInput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.TrainingInput)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TrainingInput, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TrainingInput*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(worker_count_, scale_tier_);
  master_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worker_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameter_server_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  python_module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && hyperparameters_ != NULL) delete hyperparameters_;
  hyperparameters_ = NULL;
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  package_uris_.Clear();
  args_.Clear();
}

bool TrainingInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.TrainingInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.ml.v1beta1.TrainingInput.ScaleTier scale_tier = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scale_tier(static_cast< ::google::cloud::ml::v1beta1::TrainingInput_ScaleTier >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_master_type;
        break;
      }

      // optional string master_type = 2;
      case 2: {
        if (tag == 18) {
         parse_master_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_type().data(), this->master_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.TrainingInput.master_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_worker_type;
        break;
      }

      // optional string worker_type = 3;
      case 3: {
        if (tag == 26) {
         parse_worker_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_type().data(), this->worker_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.TrainingInput.worker_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_parameter_server_type;
        break;
      }

      // optional string parameter_server_type = 4;
      case 4: {
        if (tag == 34) {
         parse_parameter_server_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter_server_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameter_server_type().data(), this->parameter_server_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.TrainingInput.parameter_server_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_worker_count;
        break;
      }

      // optional int64 worker_count = 5;
      case 5: {
        if (tag == 40) {
         parse_worker_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worker_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_parameter_server_count;
        break;
      }

      // optional int64 parameter_server_count = 6;
      case 6: {
        if (tag == 48) {
         parse_parameter_server_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parameter_server_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_package_uris;
        break;
      }

      // repeated string package_uris = 7;
      case 7: {
        if (tag == 58) {
         parse_package_uris:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_package_uris()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package_uris(this->package_uris_size() - 1).data(),
            this->package_uris(this->package_uris_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.TrainingInput.package_uris"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_package_uris;
        if (input->ExpectTag(66)) goto parse_python_module;
        break;
      }

      // optional string python_module = 8;
      case 8: {
        if (tag == 66) {
         parse_python_module:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_python_module()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->python_module().data(), this->python_module().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.TrainingInput.python_module"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_args;
        break;
      }

      // repeated string args = 10;
      case 10: {
        if (tag == 82) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            this->args(this->args_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.TrainingInput.args"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_args;
        if (input->ExpectTag(98)) goto parse_hyperparameters;
        break;
      }

      // optional .google.cloud.ml.v1beta1.HyperparameterSpec hyperparameters = 12;
      case 12: {
        if (tag == 98) {
         parse_hyperparameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hyperparameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_region;
        break;
      }

      // optional string region = 14;
      case 14: {
        if (tag == 114) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.TrainingInput.region"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.TrainingInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.TrainingInput)
  return false;
#undef DO_
}

void TrainingInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.TrainingInput)
  // optional .google.cloud.ml.v1beta1.TrainingInput.ScaleTier scale_tier = 1;
  if (this->scale_tier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scale_tier(), output);
  }

  // optional string master_type = 2;
  if (this->master_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_type().data(), this->master_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.master_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->master_type(), output);
  }

  // optional string worker_type = 3;
  if (this->worker_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_type().data(), this->worker_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.worker_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->worker_type(), output);
  }

  // optional string parameter_server_type = 4;
  if (this->parameter_server_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_server_type().data(), this->parameter_server_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.parameter_server_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parameter_server_type(), output);
  }

  // optional int64 worker_count = 5;
  if (this->worker_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->worker_count(), output);
  }

  // optional int64 parameter_server_count = 6;
  if (this->parameter_server_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->parameter_server_count(), output);
  }

  // repeated string package_uris = 7;
  for (int i = 0; i < this->package_uris_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_uris(i).data(), this->package_uris(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.package_uris");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->package_uris(i), output);
  }

  // optional string python_module = 8;
  if (this->python_module().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->python_module().data(), this->python_module().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.python_module");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->python_module(), output);
  }

  // repeated string args = 10;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->args(i), output);
  }

  // optional .google.cloud.ml.v1beta1.HyperparameterSpec hyperparameters = 12;
  if (this->has_hyperparameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->hyperparameters_, output);
  }

  // optional string region = 14;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->region(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.TrainingInput)
}

::google::protobuf::uint8* TrainingInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.TrainingInput)
  // optional .google.cloud.ml.v1beta1.TrainingInput.ScaleTier scale_tier = 1;
  if (this->scale_tier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->scale_tier(), target);
  }

  // optional string master_type = 2;
  if (this->master_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_type().data(), this->master_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.master_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->master_type(), target);
  }

  // optional string worker_type = 3;
  if (this->worker_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_type().data(), this->worker_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.worker_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->worker_type(), target);
  }

  // optional string parameter_server_type = 4;
  if (this->parameter_server_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_server_type().data(), this->parameter_server_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.parameter_server_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parameter_server_type(), target);
  }

  // optional int64 worker_count = 5;
  if (this->worker_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->worker_count(), target);
  }

  // optional int64 parameter_server_count = 6;
  if (this->parameter_server_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->parameter_server_count(), target);
  }

  // repeated string package_uris = 7;
  for (int i = 0; i < this->package_uris_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package_uris(i).data(), this->package_uris(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.package_uris");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->package_uris(i), target);
  }

  // optional string python_module = 8;
  if (this->python_module().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->python_module().data(), this->python_module().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.python_module");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->python_module(), target);
  }

  // repeated string args = 10;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->args(i), target);
  }

  // optional .google.cloud.ml.v1beta1.HyperparameterSpec hyperparameters = 12;
  if (this->has_hyperparameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->hyperparameters_, false, target);
  }

  // optional string region = 14;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.TrainingInput.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->region(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.TrainingInput)
  return target;
}

size_t TrainingInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.TrainingInput)
  size_t total_size = 0;

  // optional .google.cloud.ml.v1beta1.TrainingInput.ScaleTier scale_tier = 1;
  if (this->scale_tier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scale_tier());
  }

  // optional string master_type = 2;
  if (this->master_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_type());
  }

  // optional string worker_type = 3;
  if (this->worker_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_type());
  }

  // optional string parameter_server_type = 4;
  if (this->parameter_server_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameter_server_type());
  }

  // optional int64 worker_count = 5;
  if (this->worker_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worker_count());
  }

  // optional int64 parameter_server_count = 6;
  if (this->parameter_server_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->parameter_server_count());
  }

  // optional string python_module = 8;
  if (this->python_module().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->python_module());
  }

  // optional .google.cloud.ml.v1beta1.HyperparameterSpec hyperparameters = 12;
  if (this->has_hyperparameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hyperparameters_);
  }

  // optional string region = 14;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // repeated string package_uris = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->package_uris_size());
  for (int i = 0; i < this->package_uris_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->package_uris(i));
  }

  // repeated string args = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0; i < this->args_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainingInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.TrainingInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrainingInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainingInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.TrainingInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.TrainingInput)
    UnsafeMergeFrom(*source);
  }
}

void TrainingInput::MergeFrom(const TrainingInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.TrainingInput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TrainingInput::UnsafeMergeFrom(const TrainingInput& from) {
  GOOGLE_DCHECK(&from != this);
  package_uris_.UnsafeMergeFrom(from.package_uris_);
  args_.UnsafeMergeFrom(from.args_);
  if (from.scale_tier() != 0) {
    set_scale_tier(from.scale_tier());
  }
  if (from.master_type().size() > 0) {

    master_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_type_);
  }
  if (from.worker_type().size() > 0) {

    worker_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_type_);
  }
  if (from.parameter_server_type().size() > 0) {

    parameter_server_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_server_type_);
  }
  if (from.worker_count() != 0) {
    set_worker_count(from.worker_count());
  }
  if (from.parameter_server_count() != 0) {
    set_parameter_server_count(from.parameter_server_count());
  }
  if (from.python_module().size() > 0) {

    python_module_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.python_module_);
  }
  if (from.has_hyperparameters()) {
    mutable_hyperparameters()->::google::cloud::ml::v1beta1::HyperparameterSpec::MergeFrom(from.hyperparameters());
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
}

void TrainingInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.TrainingInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingInput::CopyFrom(const TrainingInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.TrainingInput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TrainingInput::IsInitialized() const {

  return true;
}

void TrainingInput::Swap(TrainingInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingInput::InternalSwap(TrainingInput* other) {
  std::swap(scale_tier_, other->scale_tier_);
  master_type_.Swap(&other->master_type_);
  worker_type_.Swap(&other->worker_type_);
  parameter_server_type_.Swap(&other->parameter_server_type_);
  std::swap(worker_count_, other->worker_count_);
  std::swap(parameter_server_count_, other->parameter_server_count_);
  package_uris_.UnsafeArenaSwap(&other->package_uris_);
  python_module_.Swap(&other->python_module_);
  args_.UnsafeArenaSwap(&other->args_);
  std::swap(hyperparameters_, other->hyperparameters_);
  region_.Swap(&other->region_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainingInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainingInput_descriptor_;
  metadata.reflection = TrainingInput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainingInput

// optional .google.cloud.ml.v1beta1.TrainingInput.ScaleTier scale_tier = 1;
void TrainingInput::clear_scale_tier() {
  scale_tier_ = 0;
}
::google::cloud::ml::v1beta1::TrainingInput_ScaleTier TrainingInput::scale_tier() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.scale_tier)
  return static_cast< ::google::cloud::ml::v1beta1::TrainingInput_ScaleTier >(scale_tier_);
}
void TrainingInput::set_scale_tier(::google::cloud::ml::v1beta1::TrainingInput_ScaleTier value) {
  
  scale_tier_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.scale_tier)
}

// optional string master_type = 2;
void TrainingInput::clear_master_type() {
  master_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrainingInput::master_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.master_type)
  return master_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_master_type(const ::std::string& value) {
  
  master_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.master_type)
}
void TrainingInput::set_master_type(const char* value) {
  
  master_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.TrainingInput.master_type)
}
void TrainingInput::set_master_type(const char* value, size_t size) {
  
  master_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.TrainingInput.master_type)
}
::std::string* TrainingInput::mutable_master_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.master_type)
  return master_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrainingInput::release_master_type() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.TrainingInput.master_type)
  
  return master_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_allocated_master_type(::std::string* master_type) {
  if (master_type != NULL) {
    
  } else {
    
  }
  master_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.TrainingInput.master_type)
}

// optional string worker_type = 3;
void TrainingInput::clear_worker_type() {
  worker_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrainingInput::worker_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.worker_type)
  return worker_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_worker_type(const ::std::string& value) {
  
  worker_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.worker_type)
}
void TrainingInput::set_worker_type(const char* value) {
  
  worker_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.TrainingInput.worker_type)
}
void TrainingInput::set_worker_type(const char* value, size_t size) {
  
  worker_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.TrainingInput.worker_type)
}
::std::string* TrainingInput::mutable_worker_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.worker_type)
  return worker_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrainingInput::release_worker_type() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.TrainingInput.worker_type)
  
  return worker_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_allocated_worker_type(::std::string* worker_type) {
  if (worker_type != NULL) {
    
  } else {
    
  }
  worker_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), worker_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.TrainingInput.worker_type)
}

// optional string parameter_server_type = 4;
void TrainingInput::clear_parameter_server_type() {
  parameter_server_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrainingInput::parameter_server_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.parameter_server_type)
  return parameter_server_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_parameter_server_type(const ::std::string& value) {
  
  parameter_server_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.parameter_server_type)
}
void TrainingInput::set_parameter_server_type(const char* value) {
  
  parameter_server_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.TrainingInput.parameter_server_type)
}
void TrainingInput::set_parameter_server_type(const char* value, size_t size) {
  
  parameter_server_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.TrainingInput.parameter_server_type)
}
::std::string* TrainingInput::mutable_parameter_server_type() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.parameter_server_type)
  return parameter_server_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrainingInput::release_parameter_server_type() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.TrainingInput.parameter_server_type)
  
  return parameter_server_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_allocated_parameter_server_type(::std::string* parameter_server_type) {
  if (parameter_server_type != NULL) {
    
  } else {
    
  }
  parameter_server_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter_server_type);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.TrainingInput.parameter_server_type)
}

// optional int64 worker_count = 5;
void TrainingInput::clear_worker_count() {
  worker_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TrainingInput::worker_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.worker_count)
  return worker_count_;
}
void TrainingInput::set_worker_count(::google::protobuf::int64 value) {
  
  worker_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.worker_count)
}

// optional int64 parameter_server_count = 6;
void TrainingInput::clear_parameter_server_count() {
  parameter_server_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TrainingInput::parameter_server_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.parameter_server_count)
  return parameter_server_count_;
}
void TrainingInput::set_parameter_server_count(::google::protobuf::int64 value) {
  
  parameter_server_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.parameter_server_count)
}

// repeated string package_uris = 7;
int TrainingInput::package_uris_size() const {
  return package_uris_.size();
}
void TrainingInput::clear_package_uris() {
  package_uris_.Clear();
}
const ::std::string& TrainingInput::package_uris(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.package_uris)
  return package_uris_.Get(index);
}
::std::string* TrainingInput::mutable_package_uris(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.package_uris)
  return package_uris_.Mutable(index);
}
void TrainingInput::set_package_uris(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.package_uris)
  package_uris_.Mutable(index)->assign(value);
}
void TrainingInput::set_package_uris(int index, const char* value) {
  package_uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.TrainingInput.package_uris)
}
void TrainingInput::set_package_uris(int index, const char* value, size_t size) {
  package_uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.TrainingInput.package_uris)
}
::std::string* TrainingInput::add_package_uris() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1beta1.TrainingInput.package_uris)
  return package_uris_.Add();
}
void TrainingInput::add_package_uris(const ::std::string& value) {
  package_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.TrainingInput.package_uris)
}
void TrainingInput::add_package_uris(const char* value) {
  package_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1beta1.TrainingInput.package_uris)
}
void TrainingInput::add_package_uris(const char* value, size_t size) {
  package_uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1beta1.TrainingInput.package_uris)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrainingInput::package_uris() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.TrainingInput.package_uris)
  return package_uris_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TrainingInput::mutable_package_uris() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.TrainingInput.package_uris)
  return &package_uris_;
}

// optional string python_module = 8;
void TrainingInput::clear_python_module() {
  python_module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrainingInput::python_module() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.python_module)
  return python_module_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_python_module(const ::std::string& value) {
  
  python_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.python_module)
}
void TrainingInput::set_python_module(const char* value) {
  
  python_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.TrainingInput.python_module)
}
void TrainingInput::set_python_module(const char* value, size_t size) {
  
  python_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.TrainingInput.python_module)
}
::std::string* TrainingInput::mutable_python_module() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.python_module)
  return python_module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrainingInput::release_python_module() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.TrainingInput.python_module)
  
  return python_module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_allocated_python_module(::std::string* python_module) {
  if (python_module != NULL) {
    
  } else {
    
  }
  python_module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), python_module);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.TrainingInput.python_module)
}

// repeated string args = 10;
int TrainingInput::args_size() const {
  return args_.size();
}
void TrainingInput::clear_args() {
  args_.Clear();
}
const ::std::string& TrainingInput::args(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.args)
  return args_.Get(index);
}
::std::string* TrainingInput::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.args)
  return args_.Mutable(index);
}
void TrainingInput::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.args)
  args_.Mutable(index)->assign(value);
}
void TrainingInput::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.TrainingInput.args)
}
void TrainingInput::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.TrainingInput.args)
}
::std::string* TrainingInput::add_args() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1beta1.TrainingInput.args)
  return args_.Add();
}
void TrainingInput::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.TrainingInput.args)
}
void TrainingInput::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1beta1.TrainingInput.args)
}
void TrainingInput::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1beta1.TrainingInput.args)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TrainingInput::args() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.TrainingInput.args)
  return args_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TrainingInput::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.TrainingInput.args)
  return &args_;
}

// optional .google.cloud.ml.v1beta1.HyperparameterSpec hyperparameters = 12;
bool TrainingInput::has_hyperparameters() const {
  return this != internal_default_instance() && hyperparameters_ != NULL;
}
void TrainingInput::clear_hyperparameters() {
  if (GetArenaNoVirtual() == NULL && hyperparameters_ != NULL) delete hyperparameters_;
  hyperparameters_ = NULL;
}
const ::google::cloud::ml::v1beta1::HyperparameterSpec& TrainingInput::hyperparameters() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.hyperparameters)
  return hyperparameters_ != NULL ? *hyperparameters_
                         : *::google::cloud::ml::v1beta1::HyperparameterSpec::internal_default_instance();
}
::google::cloud::ml::v1beta1::HyperparameterSpec* TrainingInput::mutable_hyperparameters() {
  
  if (hyperparameters_ == NULL) {
    hyperparameters_ = new ::google::cloud::ml::v1beta1::HyperparameterSpec;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.hyperparameters)
  return hyperparameters_;
}
::google::cloud::ml::v1beta1::HyperparameterSpec* TrainingInput::release_hyperparameters() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.TrainingInput.hyperparameters)
  
  ::google::cloud::ml::v1beta1::HyperparameterSpec* temp = hyperparameters_;
  hyperparameters_ = NULL;
  return temp;
}
void TrainingInput::set_allocated_hyperparameters(::google::cloud::ml::v1beta1::HyperparameterSpec* hyperparameters) {
  delete hyperparameters_;
  hyperparameters_ = hyperparameters;
  if (hyperparameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.TrainingInput.hyperparameters)
}

// optional string region = 14;
void TrainingInput::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrainingInput::region() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingInput.region)
  return region_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingInput.region)
}
void TrainingInput::set_region(const char* value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.TrainingInput.region)
}
void TrainingInput::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.TrainingInput.region)
}
::std::string* TrainingInput::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingInput.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrainingInput::release_region() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.TrainingInput.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainingInput::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.TrainingInput.region)
}

inline const TrainingInput* TrainingInput::internal_default_instance() {
  return &TrainingInput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* HyperparameterSpec_GoalType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HyperparameterSpec_GoalType_descriptor_;
}
bool HyperparameterSpec_GoalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HyperparameterSpec_GoalType HyperparameterSpec::GOAL_TYPE_UNSPECIFIED;
const HyperparameterSpec_GoalType HyperparameterSpec::MAXIMIZE;
const HyperparameterSpec_GoalType HyperparameterSpec::MINIMIZE;
const HyperparameterSpec_GoalType HyperparameterSpec::GoalType_MIN;
const HyperparameterSpec_GoalType HyperparameterSpec::GoalType_MAX;
const int HyperparameterSpec::GoalType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HyperparameterSpec::kGoalFieldNumber;
const int HyperparameterSpec::kParamsFieldNumber;
const int HyperparameterSpec::kMaxTrialsFieldNumber;
const int HyperparameterSpec::kMaxParallelTrialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterSpec::HyperparameterSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.HyperparameterSpec)
}

void HyperparameterSpec::InitAsDefaultInstance() {
}

HyperparameterSpec::HyperparameterSpec(const HyperparameterSpec& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.HyperparameterSpec)
}

void HyperparameterSpec::SharedCtor() {
  ::memset(&goal_, 0, reinterpret_cast<char*>(&max_parallel_trials_) -
    reinterpret_cast<char*>(&goal_) + sizeof(max_parallel_trials_));
  _cached_size_ = 0;
}

HyperparameterSpec::~HyperparameterSpec() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.HyperparameterSpec)
  SharedDtor();
}

void HyperparameterSpec::SharedDtor() {
}

void HyperparameterSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HyperparameterSpec::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HyperparameterSpec_descriptor_;
}

const HyperparameterSpec& HyperparameterSpec::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HyperparameterSpec> HyperparameterSpec_default_instance_;

HyperparameterSpec* HyperparameterSpec::New(::google::protobuf::Arena* arena) const {
  HyperparameterSpec* n = new HyperparameterSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HyperparameterSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.HyperparameterSpec)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HyperparameterSpec, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HyperparameterSpec*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(goal_, max_parallel_trials_);

#undef ZR_HELPER_
#undef ZR_

  params_.Clear();
}

bool HyperparameterSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_goal(static_cast< ::google::cloud::ml::v1beta1::HyperparameterSpec_GoalType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_params;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_max_trials;
        break;
      }

      // optional int32 max_trials = 3;
      case 3: {
        if (tag == 24) {
         parse_max_trials:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_trials_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_max_parallel_trials;
        break;
      }

      // optional int32 max_parallel_trials = 4;
      case 4: {
        if (tag == 32) {
         parse_max_parallel_trials:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_parallel_trials_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.HyperparameterSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.HyperparameterSpec)
  return false;
#undef DO_
}

void HyperparameterSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  // optional .google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;
  if (this->goal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->goal(), output);
  }

  // repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // optional int32 max_trials = 3;
  if (this->max_trials() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_trials(), output);
  }

  // optional int32 max_parallel_trials = 4;
  if (this->max_parallel_trials() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_parallel_trials(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.HyperparameterSpec)
}

::google::protobuf::uint8* HyperparameterSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  // optional .google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;
  if (this->goal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->goal(), target);
  }

  // repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->params(i), false, target);
  }

  // optional int32 max_trials = 3;
  if (this->max_trials() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_trials(), target);
  }

  // optional int32 max_parallel_trials = 4;
  if (this->max_parallel_trials() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_parallel_trials(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.HyperparameterSpec)
  return target;
}

size_t HyperparameterSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  size_t total_size = 0;

  // optional .google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;
  if (this->goal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->goal());
  }

  // optional int32 max_trials = 3;
  if (this->max_trials() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_trials());
  }

  // optional int32 max_parallel_trials = 4;
  if (this->max_parallel_trials() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_parallel_trials());
  }

  // repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HyperparameterSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HyperparameterSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HyperparameterSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.HyperparameterSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.HyperparameterSpec)
    UnsafeMergeFrom(*source);
  }
}

void HyperparameterSpec::MergeFrom(const HyperparameterSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HyperparameterSpec::UnsafeMergeFrom(const HyperparameterSpec& from) {
  GOOGLE_DCHECK(&from != this);
  params_.MergeFrom(from.params_);
  if (from.goal() != 0) {
    set_goal(from.goal());
  }
  if (from.max_trials() != 0) {
    set_max_trials(from.max_trials());
  }
  if (from.max_parallel_trials() != 0) {
    set_max_parallel_trials(from.max_parallel_trials());
  }
}

void HyperparameterSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterSpec::CopyFrom(const HyperparameterSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.HyperparameterSpec)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HyperparameterSpec::IsInitialized() const {

  return true;
}

void HyperparameterSpec::Swap(HyperparameterSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterSpec::InternalSwap(HyperparameterSpec* other) {
  std::swap(goal_, other->goal_);
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(max_trials_, other->max_trials_);
  std::swap(max_parallel_trials_, other->max_parallel_trials_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HyperparameterSpec::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HyperparameterSpec_descriptor_;
  metadata.reflection = HyperparameterSpec_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HyperparameterSpec

// optional .google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;
void HyperparameterSpec::clear_goal() {
  goal_ = 0;
}
::google::cloud::ml::v1beta1::HyperparameterSpec_GoalType HyperparameterSpec::goal() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterSpec.goal)
  return static_cast< ::google::cloud::ml::v1beta1::HyperparameterSpec_GoalType >(goal_);
}
void HyperparameterSpec::set_goal(::google::cloud::ml::v1beta1::HyperparameterSpec_GoalType value) {
  
  goal_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.HyperparameterSpec.goal)
}

// repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;
int HyperparameterSpec::params_size() const {
  return params_.size();
}
void HyperparameterSpec::clear_params() {
  params_.Clear();
}
const ::google::cloud::ml::v1beta1::ParameterSpec& HyperparameterSpec::params(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterSpec.params)
  return params_.Get(index);
}
::google::cloud::ml::v1beta1::ParameterSpec* HyperparameterSpec::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.HyperparameterSpec.params)
  return params_.Mutable(index);
}
::google::cloud::ml::v1beta1::ParameterSpec* HyperparameterSpec::add_params() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.HyperparameterSpec.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::ParameterSpec >*
HyperparameterSpec::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.HyperparameterSpec.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::ParameterSpec >&
HyperparameterSpec::params() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.HyperparameterSpec.params)
  return params_;
}

// optional int32 max_trials = 3;
void HyperparameterSpec::clear_max_trials() {
  max_trials_ = 0;
}
::google::protobuf::int32 HyperparameterSpec::max_trials() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterSpec.max_trials)
  return max_trials_;
}
void HyperparameterSpec::set_max_trials(::google::protobuf::int32 value) {
  
  max_trials_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.HyperparameterSpec.max_trials)
}

// optional int32 max_parallel_trials = 4;
void HyperparameterSpec::clear_max_parallel_trials() {
  max_parallel_trials_ = 0;
}
::google::protobuf::int32 HyperparameterSpec::max_parallel_trials() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterSpec.max_parallel_trials)
  return max_parallel_trials_;
}
void HyperparameterSpec::set_max_parallel_trials(::google::protobuf::int32 value) {
  
  max_parallel_trials_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.HyperparameterSpec.max_parallel_trials)
}

inline const HyperparameterSpec* HyperparameterSpec::internal_default_instance() {
  return &HyperparameterSpec_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ParameterSpec_ParameterType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParameterSpec_ParameterType_descriptor_;
}
bool ParameterSpec_ParameterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ParameterSpec_ParameterType ParameterSpec::PARAMETER_TYPE_UNSPECIFIED;
const ParameterSpec_ParameterType ParameterSpec::DOUBLE;
const ParameterSpec_ParameterType ParameterSpec::INTEGER;
const ParameterSpec_ParameterType ParameterSpec::CATEGORICAL;
const ParameterSpec_ParameterType ParameterSpec::DISCRETE;
const ParameterSpec_ParameterType ParameterSpec::ParameterType_MIN;
const ParameterSpec_ParameterType ParameterSpec::ParameterType_MAX;
const int ParameterSpec::ParameterType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ParameterSpec_ScaleType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParameterSpec_ScaleType_descriptor_;
}
bool ParameterSpec_ScaleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ParameterSpec_ScaleType ParameterSpec::NONE;
const ParameterSpec_ScaleType ParameterSpec::UNIT_LINEAR_SCALE;
const ParameterSpec_ScaleType ParameterSpec::UNIT_LOG_SCALE;
const ParameterSpec_ScaleType ParameterSpec::UNIT_REVERSE_LOG_SCALE;
const ParameterSpec_ScaleType ParameterSpec::ScaleType_MIN;
const ParameterSpec_ScaleType ParameterSpec::ScaleType_MAX;
const int ParameterSpec::ScaleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterSpec::kParameterNameFieldNumber;
const int ParameterSpec::kTypeFieldNumber;
const int ParameterSpec::kMinValueFieldNumber;
const int ParameterSpec::kMaxValueFieldNumber;
const int ParameterSpec::kCategoricalValuesFieldNumber;
const int ParameterSpec::kDiscreteValuesFieldNumber;
const int ParameterSpec::kScaleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterSpec::ParameterSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.ParameterSpec)
}

void ParameterSpec::InitAsDefaultInstance() {
}

ParameterSpec::ParameterSpec(const ParameterSpec& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.ParameterSpec)
}

void ParameterSpec::SharedCtor() {
  parameter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&min_value_, 0, reinterpret_cast<char*>(&scale_type_) -
    reinterpret_cast<char*>(&min_value_) + sizeof(scale_type_));
  _cached_size_ = 0;
}

ParameterSpec::~ParameterSpec() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.ParameterSpec)
  SharedDtor();
}

void ParameterSpec::SharedDtor() {
  parameter_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParameterSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParameterSpec::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParameterSpec_descriptor_;
}

const ParameterSpec& ParameterSpec::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ParameterSpec> ParameterSpec_default_instance_;

ParameterSpec* ParameterSpec::New(::google::protobuf::Arena* arena) const {
  ParameterSpec* n = new ParameterSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParameterSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.ParameterSpec)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ParameterSpec, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ParameterSpec*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(min_value_, scale_type_);
  parameter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  categorical_values_.Clear();
  discrete_values_.Clear();
}

bool ParameterSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.ParameterSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string parameter_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameter_name().data(), this->parameter_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.ParameterSpec.parameter_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_min_value;
        break;
      }

      // optional double min_value = 2;
      case 2: {
        if (tag == 17) {
         parse_min_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_max_value;
        break;
      }

      // optional double max_value = 3;
      case 3: {
        if (tag == 25) {
         parse_max_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional .google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::ml::v1beta1::ParameterSpec_ParameterType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_categorical_values;
        break;
      }

      // repeated string categorical_values = 5;
      case 5: {
        if (tag == 42) {
         parse_categorical_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_categorical_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->categorical_values(this->categorical_values_size() - 1).data(),
            this->categorical_values(this->categorical_values_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.ParameterSpec.categorical_values"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_categorical_values;
        if (input->ExpectTag(50)) goto parse_discrete_values;
        break;
      }

      // repeated double discrete_values = 6;
      case 6: {
        if (tag == 50) {
         parse_discrete_values:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_discrete_values())));
        } else if (tag == 49) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 50, input, this->mutable_discrete_values())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_scale_type;
        break;
      }

      // optional .google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;
      case 7: {
        if (tag == 56) {
         parse_scale_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scale_type(static_cast< ::google::cloud::ml::v1beta1::ParameterSpec_ScaleType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.ParameterSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.ParameterSpec)
  return false;
#undef DO_
}

void ParameterSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.ParameterSpec)
  // optional string parameter_name = 1;
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), this->parameter_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ParameterSpec.parameter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parameter_name(), output);
  }

  // optional double min_value = 2;
  if (this->min_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->min_value(), output);
  }

  // optional double max_value = 3;
  if (this->max_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->max_value(), output);
  }

  // optional .google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // repeated string categorical_values = 5;
  for (int i = 0; i < this->categorical_values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->categorical_values(i).data(), this->categorical_values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ParameterSpec.categorical_values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->categorical_values(i), output);
  }

  // repeated double discrete_values = 6;
  if (this->discrete_values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_discrete_values_cached_byte_size_);
  }
  for (int i = 0; i < this->discrete_values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->discrete_values(i), output);
  }

  // optional .google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;
  if (this->scale_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->scale_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.ParameterSpec)
}

::google::protobuf::uint8* ParameterSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.ParameterSpec)
  // optional string parameter_name = 1;
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), this->parameter_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ParameterSpec.parameter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parameter_name(), target);
  }

  // optional double min_value = 2;
  if (this->min_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->min_value(), target);
  }

  // optional double max_value = 3;
  if (this->max_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->max_value(), target);
  }

  // optional .google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // repeated string categorical_values = 5;
  for (int i = 0; i < this->categorical_values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->categorical_values(i).data(), this->categorical_values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ParameterSpec.categorical_values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->categorical_values(i), target);
  }

  // repeated double discrete_values = 6;
  if (this->discrete_values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _discrete_values_cached_byte_size_, target);
  }
  for (int i = 0; i < this->discrete_values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->discrete_values(i), target);
  }

  // optional .google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;
  if (this->scale_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->scale_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.ParameterSpec)
  return target;
}

size_t ParameterSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.ParameterSpec)
  size_t total_size = 0;

  // optional string parameter_name = 1;
  if (this->parameter_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameter_name());
  }

  // optional .google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional double min_value = 2;
  if (this->min_value() != 0) {
    total_size += 1 + 8;
  }

  // optional double max_value = 3;
  if (this->max_value() != 0) {
    total_size += 1 + 8;
  }

  // optional .google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;
  if (this->scale_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scale_type());
  }

  // repeated string categorical_values = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->categorical_values_size());
  for (int i = 0; i < this->categorical_values_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->categorical_values(i));
  }

  // repeated double discrete_values = 6;
  {
    size_t data_size = 0;
    unsigned int count = this->discrete_values_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _discrete_values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParameterSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.ParameterSpec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ParameterSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParameterSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.ParameterSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.ParameterSpec)
    UnsafeMergeFrom(*source);
  }
}

void ParameterSpec::MergeFrom(const ParameterSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.ParameterSpec)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ParameterSpec::UnsafeMergeFrom(const ParameterSpec& from) {
  GOOGLE_DCHECK(&from != this);
  categorical_values_.UnsafeMergeFrom(from.categorical_values_);
  discrete_values_.UnsafeMergeFrom(from.discrete_values_);
  if (from.parameter_name().size() > 0) {

    parameter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.min_value() != 0) {
    set_min_value(from.min_value());
  }
  if (from.max_value() != 0) {
    set_max_value(from.max_value());
  }
  if (from.scale_type() != 0) {
    set_scale_type(from.scale_type());
  }
}

void ParameterSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.ParameterSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterSpec::CopyFrom(const ParameterSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.ParameterSpec)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ParameterSpec::IsInitialized() const {

  return true;
}

void ParameterSpec::Swap(ParameterSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterSpec::InternalSwap(ParameterSpec* other) {
  parameter_name_.Swap(&other->parameter_name_);
  std::swap(type_, other->type_);
  std::swap(min_value_, other->min_value_);
  std::swap(max_value_, other->max_value_);
  categorical_values_.UnsafeArenaSwap(&other->categorical_values_);
  discrete_values_.UnsafeArenaSwap(&other->discrete_values_);
  std::swap(scale_type_, other->scale_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParameterSpec::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParameterSpec_descriptor_;
  metadata.reflection = ParameterSpec_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParameterSpec

// optional string parameter_name = 1;
void ParameterSpec::clear_parameter_name() {
  parameter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParameterSpec::parameter_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ParameterSpec.parameter_name)
  return parameter_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParameterSpec::set_parameter_name(const ::std::string& value) {
  
  parameter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ParameterSpec.parameter_name)
}
void ParameterSpec::set_parameter_name(const char* value) {
  
  parameter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.ParameterSpec.parameter_name)
}
void ParameterSpec::set_parameter_name(const char* value, size_t size) {
  
  parameter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.ParameterSpec.parameter_name)
}
::std::string* ParameterSpec::mutable_parameter_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.ParameterSpec.parameter_name)
  return parameter_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParameterSpec::release_parameter_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.ParameterSpec.parameter_name)
  
  return parameter_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParameterSpec::set_allocated_parameter_name(::std::string* parameter_name) {
  if (parameter_name != NULL) {
    
  } else {
    
  }
  parameter_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.ParameterSpec.parameter_name)
}

// optional .google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;
void ParameterSpec::clear_type() {
  type_ = 0;
}
::google::cloud::ml::v1beta1::ParameterSpec_ParameterType ParameterSpec::type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ParameterSpec.type)
  return static_cast< ::google::cloud::ml::v1beta1::ParameterSpec_ParameterType >(type_);
}
void ParameterSpec::set_type(::google::cloud::ml::v1beta1::ParameterSpec_ParameterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ParameterSpec.type)
}

// optional double min_value = 2;
void ParameterSpec::clear_min_value() {
  min_value_ = 0;
}
double ParameterSpec::min_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ParameterSpec.min_value)
  return min_value_;
}
void ParameterSpec::set_min_value(double value) {
  
  min_value_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ParameterSpec.min_value)
}

// optional double max_value = 3;
void ParameterSpec::clear_max_value() {
  max_value_ = 0;
}
double ParameterSpec::max_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ParameterSpec.max_value)
  return max_value_;
}
void ParameterSpec::set_max_value(double value) {
  
  max_value_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ParameterSpec.max_value)
}

// repeated string categorical_values = 5;
int ParameterSpec::categorical_values_size() const {
  return categorical_values_.size();
}
void ParameterSpec::clear_categorical_values() {
  categorical_values_.Clear();
}
const ::std::string& ParameterSpec::categorical_values(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
  return categorical_values_.Get(index);
}
::std::string* ParameterSpec::mutable_categorical_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
  return categorical_values_.Mutable(index);
}
void ParameterSpec::set_categorical_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
  categorical_values_.Mutable(index)->assign(value);
}
void ParameterSpec::set_categorical_values(int index, const char* value) {
  categorical_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
}
void ParameterSpec::set_categorical_values(int index, const char* value, size_t size) {
  categorical_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
}
::std::string* ParameterSpec::add_categorical_values() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
  return categorical_values_.Add();
}
void ParameterSpec::add_categorical_values(const ::std::string& value) {
  categorical_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
}
void ParameterSpec::add_categorical_values(const char* value) {
  categorical_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
}
void ParameterSpec::add_categorical_values(const char* value, size_t size) {
  categorical_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ParameterSpec::categorical_values() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
  return categorical_values_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ParameterSpec::mutable_categorical_values() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.ParameterSpec.categorical_values)
  return &categorical_values_;
}

// repeated double discrete_values = 6;
int ParameterSpec::discrete_values_size() const {
  return discrete_values_.size();
}
void ParameterSpec::clear_discrete_values() {
  discrete_values_.Clear();
}
double ParameterSpec::discrete_values(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ParameterSpec.discrete_values)
  return discrete_values_.Get(index);
}
void ParameterSpec::set_discrete_values(int index, double value) {
  discrete_values_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ParameterSpec.discrete_values)
}
void ParameterSpec::add_discrete_values(double value) {
  discrete_values_.Add(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.ParameterSpec.discrete_values)
}
const ::google::protobuf::RepeatedField< double >&
ParameterSpec::discrete_values() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.ParameterSpec.discrete_values)
  return discrete_values_;
}
::google::protobuf::RepeatedField< double >*
ParameterSpec::mutable_discrete_values() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.ParameterSpec.discrete_values)
  return &discrete_values_;
}

// optional .google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;
void ParameterSpec::clear_scale_type() {
  scale_type_ = 0;
}
::google::cloud::ml::v1beta1::ParameterSpec_ScaleType ParameterSpec::scale_type() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ParameterSpec.scale_type)
  return static_cast< ::google::cloud::ml::v1beta1::ParameterSpec_ScaleType >(scale_type_);
}
void ParameterSpec::set_scale_type(::google::cloud::ml::v1beta1::ParameterSpec_ScaleType value) {
  
  scale_type_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ParameterSpec.scale_type)
}

inline const ParameterSpec* ParameterSpec::internal_default_instance() {
  return &ParameterSpec_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HyperparameterOutput_HyperparameterMetric::kTrainingStepFieldNumber;
const int HyperparameterOutput_HyperparameterMetric::kObjectiveValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterOutput_HyperparameterMetric::HyperparameterOutput_HyperparameterMetric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
}

void HyperparameterOutput_HyperparameterMetric::InitAsDefaultInstance() {
}

HyperparameterOutput_HyperparameterMetric::HyperparameterOutput_HyperparameterMetric(const HyperparameterOutput_HyperparameterMetric& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
}

void HyperparameterOutput_HyperparameterMetric::SharedCtor() {
  ::memset(&training_step_, 0, reinterpret_cast<char*>(&objective_value_) -
    reinterpret_cast<char*>(&training_step_) + sizeof(objective_value_));
  _cached_size_ = 0;
}

HyperparameterOutput_HyperparameterMetric::~HyperparameterOutput_HyperparameterMetric() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  SharedDtor();
}

void HyperparameterOutput_HyperparameterMetric::SharedDtor() {
}

void HyperparameterOutput_HyperparameterMetric::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HyperparameterOutput_HyperparameterMetric::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HyperparameterOutput_HyperparameterMetric_descriptor_;
}

const HyperparameterOutput_HyperparameterMetric& HyperparameterOutput_HyperparameterMetric::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HyperparameterOutput_HyperparameterMetric> HyperparameterOutput_HyperparameterMetric_default_instance_;

HyperparameterOutput_HyperparameterMetric* HyperparameterOutput_HyperparameterMetric::New(::google::protobuf::Arena* arena) const {
  HyperparameterOutput_HyperparameterMetric* n = new HyperparameterOutput_HyperparameterMetric;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HyperparameterOutput_HyperparameterMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HyperparameterOutput_HyperparameterMetric, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HyperparameterOutput_HyperparameterMetric*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(training_step_, objective_value_);

#undef ZR_HELPER_
#undef ZR_

}

bool HyperparameterOutput_HyperparameterMetric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 training_step = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &training_step_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_objective_value;
        break;
      }

      // optional double objective_value = 2;
      case 2: {
        if (tag == 17) {
         parse_objective_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objective_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  return false;
#undef DO_
}

void HyperparameterOutput_HyperparameterMetric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  // optional int64 training_step = 1;
  if (this->training_step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->training_step(), output);
  }

  // optional double objective_value = 2;
  if (this->objective_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->objective_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
}

::google::protobuf::uint8* HyperparameterOutput_HyperparameterMetric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  // optional int64 training_step = 1;
  if (this->training_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->training_step(), target);
  }

  // optional double objective_value = 2;
  if (this->objective_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->objective_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  return target;
}

size_t HyperparameterOutput_HyperparameterMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  size_t total_size = 0;

  // optional int64 training_step = 1;
  if (this->training_step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->training_step());
  }

  // optional double objective_value = 2;
  if (this->objective_value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HyperparameterOutput_HyperparameterMetric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HyperparameterOutput_HyperparameterMetric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HyperparameterOutput_HyperparameterMetric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
    UnsafeMergeFrom(*source);
  }
}

void HyperparameterOutput_HyperparameterMetric::MergeFrom(const HyperparameterOutput_HyperparameterMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HyperparameterOutput_HyperparameterMetric::UnsafeMergeFrom(const HyperparameterOutput_HyperparameterMetric& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.training_step() != 0) {
    set_training_step(from.training_step());
  }
  if (from.objective_value() != 0) {
    set_objective_value(from.objective_value());
  }
}

void HyperparameterOutput_HyperparameterMetric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterOutput_HyperparameterMetric::CopyFrom(const HyperparameterOutput_HyperparameterMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HyperparameterOutput_HyperparameterMetric::IsInitialized() const {

  return true;
}

void HyperparameterOutput_HyperparameterMetric::Swap(HyperparameterOutput_HyperparameterMetric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterOutput_HyperparameterMetric::InternalSwap(HyperparameterOutput_HyperparameterMetric* other) {
  std::swap(training_step_, other->training_step_);
  std::swap(objective_value_, other->objective_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HyperparameterOutput_HyperparameterMetric::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HyperparameterOutput_HyperparameterMetric_descriptor_;
  metadata.reflection = HyperparameterOutput_HyperparameterMetric_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HyperparameterOutput::kTrialIdFieldNumber;
const int HyperparameterOutput::kHyperparametersFieldNumber;
const int HyperparameterOutput::kFinalMetricFieldNumber;
const int HyperparameterOutput::kAllMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterOutput::HyperparameterOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.HyperparameterOutput)
}

void HyperparameterOutput::InitAsDefaultInstance() {
  final_metric_ = const_cast< ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric*>(
      ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric::internal_default_instance());
}

HyperparameterOutput::HyperparameterOutput(const HyperparameterOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.HyperparameterOutput)
}

void HyperparameterOutput::SharedCtor() {
  hyperparameters_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  hyperparameters_.SetEntryDescriptor(
      &::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparametersEntry_descriptor_);
  trial_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  final_metric_ = NULL;
  _cached_size_ = 0;
}

HyperparameterOutput::~HyperparameterOutput() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.HyperparameterOutput)
  SharedDtor();
}

void HyperparameterOutput::SharedDtor() {
  trial_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &HyperparameterOutput_default_instance_.get()) {
    delete final_metric_;
  }
}

void HyperparameterOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HyperparameterOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HyperparameterOutput_descriptor_;
}

const HyperparameterOutput& HyperparameterOutput::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HyperparameterOutput> HyperparameterOutput_default_instance_;

HyperparameterOutput* HyperparameterOutput::New(::google::protobuf::Arena* arena) const {
  HyperparameterOutput* n = new HyperparameterOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HyperparameterOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  trial_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && final_metric_ != NULL) delete final_metric_;
  final_metric_ = NULL;
  hyperparameters_.Clear();
  all_metrics_.Clear();
}

bool HyperparameterOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string trial_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trial_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trial_id().data(), this->trial_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.HyperparameterOutput.trial_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hyperparameters;
        break;
      }

      // map<string, string> hyperparameters = 2;
      case 2: {
        if (tag == 18) {
         parse_hyperparameters:
          DO_(input->IncrementRecursionDepth());
         parse_loop_hyperparameters:
          HyperparameterOutput_HyperparametersEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&hyperparameters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.HyperparameterOutput.HyperparametersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.HyperparameterOutput.HyperparametersEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_hyperparameters;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_final_metric;
        break;
      }

      // optional .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric final_metric = 3;
      case 3: {
        if (tag == 26) {
         parse_final_metric:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_final_metric()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_all_metrics;
        break;
      }

      // repeated .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric all_metrics = 4;
      case 4: {
        if (tag == 34) {
         parse_all_metrics:
          DO_(input->IncrementRecursionDepth());
         parse_loop_all_metrics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_all_metrics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_all_metrics;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.HyperparameterOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.HyperparameterOutput)
  return false;
#undef DO_
}

void HyperparameterOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  // optional string trial_id = 1;
  if (this->trial_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trial_id().data(), this->trial_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.HyperparameterOutput.trial_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trial_id(), output);
  }

  // map<string, string> hyperparameters = 2;
  if (!this->hyperparameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.ml.v1beta1.HyperparameterOutput.HyperparametersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.ml.v1beta1.HyperparameterOutput.HyperparametersEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->hyperparameters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hyperparameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->hyperparameters().begin();
          it != this->hyperparameters().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<HyperparameterOutput_HyperparametersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hyperparameters_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HyperparameterOutput_HyperparametersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->hyperparameters().begin();
          it != this->hyperparameters().end(); ++it) {
        entry.reset(hyperparameters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric final_metric = 3;
  if (this->has_final_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->final_metric_, output);
  }

  // repeated .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric all_metrics = 4;
  for (unsigned int i = 0, n = this->all_metrics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->all_metrics(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.HyperparameterOutput)
}

::google::protobuf::uint8* HyperparameterOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  // optional string trial_id = 1;
  if (this->trial_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trial_id().data(), this->trial_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.HyperparameterOutput.trial_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trial_id(), target);
  }

  // map<string, string> hyperparameters = 2;
  if (!this->hyperparameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.ml.v1beta1.HyperparameterOutput.HyperparametersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.ml.v1beta1.HyperparameterOutput.HyperparametersEntry.value");
      }
    };

    if (deterministic &&
        this->hyperparameters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hyperparameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->hyperparameters().begin();
          it != this->hyperparameters().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<HyperparameterOutput_HyperparametersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hyperparameters_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<HyperparameterOutput_HyperparametersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->hyperparameters().begin();
          it != this->hyperparameters().end(); ++it) {
        entry.reset(hyperparameters_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric final_metric = 3;
  if (this->has_final_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->final_metric_, false, target);
  }

  // repeated .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric all_metrics = 4;
  for (unsigned int i = 0, n = this->all_metrics_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->all_metrics(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.HyperparameterOutput)
  return target;
}

size_t HyperparameterOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  size_t total_size = 0;

  // optional string trial_id = 1;
  if (this->trial_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trial_id());
  }

  // optional .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric final_metric = 3;
  if (this->has_final_metric()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->final_metric_);
  }

  // map<string, string> hyperparameters = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hyperparameters_size());
  {
    ::google::protobuf::scoped_ptr<HyperparameterOutput_HyperparametersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->hyperparameters().begin();
        it != this->hyperparameters().end(); ++it) {
      entry.reset(hyperparameters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric all_metrics = 4;
  {
    unsigned int count = this->all_metrics_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->all_metrics(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HyperparameterOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HyperparameterOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HyperparameterOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.HyperparameterOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.HyperparameterOutput)
    UnsafeMergeFrom(*source);
  }
}

void HyperparameterOutput::MergeFrom(const HyperparameterOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HyperparameterOutput::UnsafeMergeFrom(const HyperparameterOutput& from) {
  GOOGLE_DCHECK(&from != this);
  hyperparameters_.MergeFrom(from.hyperparameters_);
  all_metrics_.MergeFrom(from.all_metrics_);
  if (from.trial_id().size() > 0) {

    trial_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trial_id_);
  }
  if (from.has_final_metric()) {
    mutable_final_metric()->::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric::MergeFrom(from.final_metric());
  }
}

void HyperparameterOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterOutput::CopyFrom(const HyperparameterOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.HyperparameterOutput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HyperparameterOutput::IsInitialized() const {

  return true;
}

void HyperparameterOutput::Swap(HyperparameterOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterOutput::InternalSwap(HyperparameterOutput* other) {
  trial_id_.Swap(&other->trial_id_);
  hyperparameters_.Swap(&other->hyperparameters_);
  std::swap(final_metric_, other->final_metric_);
  all_metrics_.UnsafeArenaSwap(&other->all_metrics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HyperparameterOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HyperparameterOutput_descriptor_;
  metadata.reflection = HyperparameterOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HyperparameterOutput_HyperparameterMetric

// optional int64 training_step = 1;
void HyperparameterOutput_HyperparameterMetric::clear_training_step() {
  training_step_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 HyperparameterOutput_HyperparameterMetric::training_step() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric.training_step)
  return training_step_;
}
void HyperparameterOutput_HyperparameterMetric::set_training_step(::google::protobuf::int64 value) {
  
  training_step_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric.training_step)
}

// optional double objective_value = 2;
void HyperparameterOutput_HyperparameterMetric::clear_objective_value() {
  objective_value_ = 0;
}
double HyperparameterOutput_HyperparameterMetric::objective_value() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric.objective_value)
  return objective_value_;
}
void HyperparameterOutput_HyperparameterMetric::set_objective_value(double value) {
  
  objective_value_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric.objective_value)
}

inline const HyperparameterOutput_HyperparameterMetric* HyperparameterOutput_HyperparameterMetric::internal_default_instance() {
  return &HyperparameterOutput_HyperparameterMetric_default_instance_.get();
}
// -------------------------------------------------------------------

// HyperparameterOutput

// optional string trial_id = 1;
void HyperparameterOutput::clear_trial_id() {
  trial_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HyperparameterOutput::trial_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterOutput.trial_id)
  return trial_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HyperparameterOutput::set_trial_id(const ::std::string& value) {
  
  trial_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.HyperparameterOutput.trial_id)
}
void HyperparameterOutput::set_trial_id(const char* value) {
  
  trial_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.HyperparameterOutput.trial_id)
}
void HyperparameterOutput::set_trial_id(const char* value, size_t size) {
  
  trial_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.HyperparameterOutput.trial_id)
}
::std::string* HyperparameterOutput::mutable_trial_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.HyperparameterOutput.trial_id)
  return trial_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HyperparameterOutput::release_trial_id() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.HyperparameterOutput.trial_id)
  
  return trial_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HyperparameterOutput::set_allocated_trial_id(::std::string* trial_id) {
  if (trial_id != NULL) {
    
  } else {
    
  }
  trial_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trial_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.HyperparameterOutput.trial_id)
}

// map<string, string> hyperparameters = 2;
int HyperparameterOutput::hyperparameters_size() const {
  return hyperparameters_.size();
}
void HyperparameterOutput::clear_hyperparameters() {
  hyperparameters_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
HyperparameterOutput::hyperparameters() const {
  // @@protoc_insertion_point(field_map:google.cloud.ml.v1beta1.HyperparameterOutput.hyperparameters)
  return hyperparameters_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
HyperparameterOutput::mutable_hyperparameters() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.ml.v1beta1.HyperparameterOutput.hyperparameters)
  return hyperparameters_.MutableMap();
}

// optional .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric final_metric = 3;
bool HyperparameterOutput::has_final_metric() const {
  return this != internal_default_instance() && final_metric_ != NULL;
}
void HyperparameterOutput::clear_final_metric() {
  if (GetArenaNoVirtual() == NULL && final_metric_ != NULL) delete final_metric_;
  final_metric_ = NULL;
}
const ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric& HyperparameterOutput::final_metric() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterOutput.final_metric)
  return final_metric_ != NULL ? *final_metric_
                         : *::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric::internal_default_instance();
}
::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::mutable_final_metric() {
  
  if (final_metric_ == NULL) {
    final_metric_ = new ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.HyperparameterOutput.final_metric)
  return final_metric_;
}
::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::release_final_metric() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.HyperparameterOutput.final_metric)
  
  ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric* temp = final_metric_;
  final_metric_ = NULL;
  return temp;
}
void HyperparameterOutput::set_allocated_final_metric(::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric* final_metric) {
  delete final_metric_;
  final_metric_ = final_metric;
  if (final_metric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.HyperparameterOutput.final_metric)
}

// repeated .google.cloud.ml.v1beta1.HyperparameterOutput.HyperparameterMetric all_metrics = 4;
int HyperparameterOutput::all_metrics_size() const {
  return all_metrics_.size();
}
void HyperparameterOutput::clear_all_metrics() {
  all_metrics_.Clear();
}
const ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric& HyperparameterOutput::all_metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.HyperparameterOutput.all_metrics)
  return all_metrics_.Get(index);
}
::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::mutable_all_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.HyperparameterOutput.all_metrics)
  return all_metrics_.Mutable(index);
}
::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric* HyperparameterOutput::add_all_metrics() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.HyperparameterOutput.all_metrics)
  return all_metrics_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric >*
HyperparameterOutput::mutable_all_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.HyperparameterOutput.all_metrics)
  return &all_metrics_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::HyperparameterOutput_HyperparameterMetric >&
HyperparameterOutput::all_metrics() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.HyperparameterOutput.all_metrics)
  return all_metrics_;
}

inline const HyperparameterOutput* HyperparameterOutput::internal_default_instance() {
  return &HyperparameterOutput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainingOutput::kCompletedTrialCountFieldNumber;
const int TrainingOutput::kTrialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingOutput::TrainingOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.TrainingOutput)
}

void TrainingOutput::InitAsDefaultInstance() {
}

TrainingOutput::TrainingOutput(const TrainingOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.TrainingOutput)
}

void TrainingOutput::SharedCtor() {
  completed_trial_count_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TrainingOutput::~TrainingOutput() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.TrainingOutput)
  SharedDtor();
}

void TrainingOutput::SharedDtor() {
}

void TrainingOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainingOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingOutput_descriptor_;
}

const TrainingOutput& TrainingOutput::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TrainingOutput> TrainingOutput_default_instance_;

TrainingOutput* TrainingOutput::New(::google::protobuf::Arena* arena) const {
  TrainingOutput* n = new TrainingOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainingOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.TrainingOutput)
  completed_trial_count_ = GOOGLE_LONGLONG(0);
  trials_.Clear();
}

bool TrainingOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.TrainingOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 completed_trial_count = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &completed_trial_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_trials;
        break;
      }

      // repeated .google.cloud.ml.v1beta1.HyperparameterOutput trials = 2;
      case 2: {
        if (tag == 18) {
         parse_trials:
          DO_(input->IncrementRecursionDepth());
         parse_loop_trials:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_trials()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_trials;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.TrainingOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.TrainingOutput)
  return false;
#undef DO_
}

void TrainingOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.TrainingOutput)
  // optional int64 completed_trial_count = 1;
  if (this->completed_trial_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->completed_trial_count(), output);
  }

  // repeated .google.cloud.ml.v1beta1.HyperparameterOutput trials = 2;
  for (unsigned int i = 0, n = this->trials_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->trials(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.TrainingOutput)
}

::google::protobuf::uint8* TrainingOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.TrainingOutput)
  // optional int64 completed_trial_count = 1;
  if (this->completed_trial_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->completed_trial_count(), target);
  }

  // repeated .google.cloud.ml.v1beta1.HyperparameterOutput trials = 2;
  for (unsigned int i = 0, n = this->trials_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->trials(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.TrainingOutput)
  return target;
}

size_t TrainingOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.TrainingOutput)
  size_t total_size = 0;

  // optional int64 completed_trial_count = 1;
  if (this->completed_trial_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->completed_trial_count());
  }

  // repeated .google.cloud.ml.v1beta1.HyperparameterOutput trials = 2;
  {
    unsigned int count = this->trials_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->trials(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainingOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.TrainingOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrainingOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainingOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.TrainingOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.TrainingOutput)
    UnsafeMergeFrom(*source);
  }
}

void TrainingOutput::MergeFrom(const TrainingOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.TrainingOutput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TrainingOutput::UnsafeMergeFrom(const TrainingOutput& from) {
  GOOGLE_DCHECK(&from != this);
  trials_.MergeFrom(from.trials_);
  if (from.completed_trial_count() != 0) {
    set_completed_trial_count(from.completed_trial_count());
  }
}

void TrainingOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.TrainingOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingOutput::CopyFrom(const TrainingOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.TrainingOutput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TrainingOutput::IsInitialized() const {

  return true;
}

void TrainingOutput::Swap(TrainingOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingOutput::InternalSwap(TrainingOutput* other) {
  std::swap(completed_trial_count_, other->completed_trial_count_);
  trials_.UnsafeArenaSwap(&other->trials_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainingOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainingOutput_descriptor_;
  metadata.reflection = TrainingOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainingOutput

// optional int64 completed_trial_count = 1;
void TrainingOutput::clear_completed_trial_count() {
  completed_trial_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TrainingOutput::completed_trial_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingOutput.completed_trial_count)
  return completed_trial_count_;
}
void TrainingOutput::set_completed_trial_count(::google::protobuf::int64 value) {
  
  completed_trial_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.TrainingOutput.completed_trial_count)
}

// repeated .google.cloud.ml.v1beta1.HyperparameterOutput trials = 2;
int TrainingOutput::trials_size() const {
  return trials_.size();
}
void TrainingOutput::clear_trials() {
  trials_.Clear();
}
const ::google::cloud::ml::v1beta1::HyperparameterOutput& TrainingOutput::trials(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.TrainingOutput.trials)
  return trials_.Get(index);
}
::google::cloud::ml::v1beta1::HyperparameterOutput* TrainingOutput::mutable_trials(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.TrainingOutput.trials)
  return trials_.Mutable(index);
}
::google::cloud::ml::v1beta1::HyperparameterOutput* TrainingOutput::add_trials() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.TrainingOutput.trials)
  return trials_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::HyperparameterOutput >*
TrainingOutput::mutable_trials() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.TrainingOutput.trials)
  return &trials_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::HyperparameterOutput >&
TrainingOutput::trials() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.TrainingOutput.trials)
  return trials_;
}

inline const TrainingOutput* TrainingOutput::internal_default_instance() {
  return &TrainingOutput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* PredictionInput_DataFormat_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PredictionInput_DataFormat_descriptor_;
}
bool PredictionInput_DataFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PredictionInput_DataFormat PredictionInput::DATA_FORMAT_UNSPECIFIED;
const PredictionInput_DataFormat PredictionInput::TEXT;
const PredictionInput_DataFormat PredictionInput::TF_RECORD;
const PredictionInput_DataFormat PredictionInput::TF_RECORD_GZIP;
const PredictionInput_DataFormat PredictionInput::DataFormat_MIN;
const PredictionInput_DataFormat PredictionInput::DataFormat_MAX;
const int PredictionInput::DataFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionInput::kModelNameFieldNumber;
const int PredictionInput::kVersionNameFieldNumber;
const int PredictionInput::kDataFormatFieldNumber;
const int PredictionInput::kInputPathsFieldNumber;
const int PredictionInput::kOutputPathFieldNumber;
const int PredictionInput::kMaxWorkerCountFieldNumber;
const int PredictionInput::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionInput::PredictionInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.PredictionInput)
}

void PredictionInput::InitAsDefaultInstance() {
  PredictionInput_default_oneof_instance_->model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  PredictionInput_default_oneof_instance_->version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PredictionInput::PredictionInput(const PredictionInput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.PredictionInput)
}

void PredictionInput::SharedCtor() {
  output_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_worker_count_, 0, reinterpret_cast<char*>(&data_format_) -
    reinterpret_cast<char*>(&max_worker_count_) + sizeof(data_format_));
  clear_has_model_version();
  _cached_size_ = 0;
}

PredictionInput::~PredictionInput() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.PredictionInput)
  SharedDtor();
}

void PredictionInput::SharedDtor() {
  output_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_model_version()) {
    clear_model_version();
  }
}

void PredictionInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PredictionInput_descriptor_;
}

const PredictionInput& PredictionInput::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PredictionInput> PredictionInput_default_instance_;

PredictionInput* PredictionInput::New(::google::protobuf::Arena* arena) const {
  PredictionInput* n = new PredictionInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionInput::clear_model_version() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.ml.v1beta1.PredictionInput)
  switch (model_version_case()) {
    case kModelName: {
      model_version_.model_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kVersionName: {
      model_version_.version_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case MODEL_VERSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODEL_VERSION_NOT_SET;
}


void PredictionInput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.PredictionInput)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PredictionInput, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PredictionInput*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(max_worker_count_, data_format_);
  output_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  input_paths_.Clear();
  clear_model_version();
}

bool PredictionInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.PredictionInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string model_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model_name().data(), this->model_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.PredictionInput.model_name"));
        } else {
          goto handle_unusual;
        }
        goto after_version_name;
        break;
      }

      // optional string version_name = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_name().data(), this->version_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.PredictionInput.version_name"));
        } else {
          goto handle_unusual;
        }
       after_version_name:
        if (input->ExpectTag(24)) goto parse_data_format;
        break;
      }

      // optional .google.cloud.ml.v1beta1.PredictionInput.DataFormat data_format = 3;
      case 3: {
        if (tag == 24) {
         parse_data_format:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_format(static_cast< ::google::cloud::ml::v1beta1::PredictionInput_DataFormat >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_input_paths;
        break;
      }

      // repeated string input_paths = 4;
      case 4: {
        if (tag == 34) {
         parse_input_paths:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input_paths()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_paths(this->input_paths_size() - 1).data(),
            this->input_paths(this->input_paths_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.PredictionInput.input_paths"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_input_paths;
        if (input->ExpectTag(42)) goto parse_output_path;
        break;
      }

      // optional string output_path = 5;
      case 5: {
        if (tag == 42) {
         parse_output_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_path().data(), this->output_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.PredictionInput.output_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_max_worker_count;
        break;
      }

      // optional int64 max_worker_count = 6;
      case 6: {
        if (tag == 48) {
         parse_max_worker_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_worker_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_region;
        break;
      }

      // optional string region = 7;
      case 7: {
        if (tag == 58) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.PredictionInput.region"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.PredictionInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.PredictionInput)
  return false;
#undef DO_
}

void PredictionInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.PredictionInput)
  // optional string model_name = 1;
  if (has_model_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_name().data(), this->model_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.model_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->model_name(), output);
  }

  // optional string version_name = 2;
  if (has_version_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_name().data(), this->version_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.version_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version_name(), output);
  }

  // optional .google.cloud.ml.v1beta1.PredictionInput.DataFormat data_format = 3;
  if (this->data_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->data_format(), output);
  }

  // repeated string input_paths = 4;
  for (int i = 0; i < this->input_paths_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_paths(i).data(), this->input_paths(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.input_paths");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->input_paths(i), output);
  }

  // optional string output_path = 5;
  if (this->output_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_path().data(), this->output_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.output_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->output_path(), output);
  }

  // optional int64 max_worker_count = 6;
  if (this->max_worker_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->max_worker_count(), output);
  }

  // optional string region = 7;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->region(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.PredictionInput)
}

::google::protobuf::uint8* PredictionInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.PredictionInput)
  // optional string model_name = 1;
  if (has_model_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_name().data(), this->model_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.model_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->model_name(), target);
  }

  // optional string version_name = 2;
  if (has_version_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_name().data(), this->version_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.version_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version_name(), target);
  }

  // optional .google.cloud.ml.v1beta1.PredictionInput.DataFormat data_format = 3;
  if (this->data_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->data_format(), target);
  }

  // repeated string input_paths = 4;
  for (int i = 0; i < this->input_paths_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_paths(i).data(), this->input_paths(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.input_paths");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->input_paths(i), target);
  }

  // optional string output_path = 5;
  if (this->output_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_path().data(), this->output_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.output_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->output_path(), target);
  }

  // optional int64 max_worker_count = 6;
  if (this->max_worker_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->max_worker_count(), target);
  }

  // optional string region = 7;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionInput.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->region(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.PredictionInput)
  return target;
}

size_t PredictionInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.PredictionInput)
  size_t total_size = 0;

  // optional .google.cloud.ml.v1beta1.PredictionInput.DataFormat data_format = 3;
  if (this->data_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_format());
  }

  // optional string output_path = 5;
  if (this->output_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_path());
  }

  // optional int64 max_worker_count = 6;
  if (this->max_worker_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_worker_count());
  }

  // optional string region = 7;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // repeated string input_paths = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_paths_size());
  for (int i = 0; i < this->input_paths_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input_paths(i));
  }

  switch (model_version_case()) {
    // optional string model_name = 1;
    case kModelName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_name());
      break;
    }
    // optional string version_name = 2;
    case kVersionName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version_name());
      break;
    }
    case MODEL_VERSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.PredictionInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PredictionInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.PredictionInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.PredictionInput)
    UnsafeMergeFrom(*source);
  }
}

void PredictionInput::MergeFrom(const PredictionInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.PredictionInput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PredictionInput::UnsafeMergeFrom(const PredictionInput& from) {
  GOOGLE_DCHECK(&from != this);
  input_paths_.UnsafeMergeFrom(from.input_paths_);
  switch (from.model_version_case()) {
    case kModelName: {
      set_model_name(from.model_name());
      break;
    }
    case kVersionName: {
      set_version_name(from.version_name());
      break;
    }
    case MODEL_VERSION_NOT_SET: {
      break;
    }
  }
  if (from.data_format() != 0) {
    set_data_format(from.data_format());
  }
  if (from.output_path().size() > 0) {

    output_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_path_);
  }
  if (from.max_worker_count() != 0) {
    set_max_worker_count(from.max_worker_count());
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
}

void PredictionInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.PredictionInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionInput::CopyFrom(const PredictionInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.PredictionInput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PredictionInput::IsInitialized() const {

  return true;
}

void PredictionInput::Swap(PredictionInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionInput::InternalSwap(PredictionInput* other) {
  std::swap(data_format_, other->data_format_);
  input_paths_.UnsafeArenaSwap(&other->input_paths_);
  output_path_.Swap(&other->output_path_);
  std::swap(max_worker_count_, other->max_worker_count_);
  region_.Swap(&other->region_);
  std::swap(model_version_, other->model_version_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PredictionInput_descriptor_;
  metadata.reflection = PredictionInput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PredictionInput

// optional string model_name = 1;
bool PredictionInput::has_model_name() const {
  return model_version_case() == kModelName;
}
void PredictionInput::set_has_model_name() {
  _oneof_case_[0] = kModelName;
}
void PredictionInput::clear_model_name() {
  if (has_model_name()) {
    model_version_.model_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_model_version();
  }
}
const ::std::string& PredictionInput::model_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionInput.model_name)
  if (has_model_name()) {
    return model_version_.model_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void PredictionInput::set_model_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.model_name)
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.model_name)
}
void PredictionInput::set_model_name(const char* value) {
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.PredictionInput.model_name)
}
void PredictionInput::set_model_name(const char* value, size_t size) {
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.PredictionInput.model_name)
}
::std::string* PredictionInput::mutable_model_name() {
  if (!has_model_name()) {
    clear_model_version();
    set_has_model_name();
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.PredictionInput.model_name)
  return model_version_.model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PredictionInput::release_model_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.PredictionInput.model_name)
  if (has_model_name()) {
    clear_has_model_version();
    return model_version_.model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void PredictionInput::set_allocated_model_name(::std::string* model_name) {
  if (!has_model_name()) {
    model_version_.model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_model_version();
  if (model_name != NULL) {
    set_has_model_name();
    model_version_.model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        model_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.PredictionInput.model_name)
}

// optional string version_name = 2;
bool PredictionInput::has_version_name() const {
  return model_version_case() == kVersionName;
}
void PredictionInput::set_has_version_name() {
  _oneof_case_[0] = kVersionName;
}
void PredictionInput::clear_version_name() {
  if (has_version_name()) {
    model_version_.version_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_model_version();
  }
}
const ::std::string& PredictionInput::version_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionInput.version_name)
  if (has_version_name()) {
    return model_version_.version_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void PredictionInput::set_version_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.version_name)
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.version_name)
}
void PredictionInput::set_version_name(const char* value) {
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.PredictionInput.version_name)
}
void PredictionInput::set_version_name(const char* value, size_t size) {
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  model_version_.version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.PredictionInput.version_name)
}
::std::string* PredictionInput::mutable_version_name() {
  if (!has_version_name()) {
    clear_model_version();
    set_has_version_name();
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.PredictionInput.version_name)
  return model_version_.version_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PredictionInput::release_version_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.PredictionInput.version_name)
  if (has_version_name()) {
    clear_has_model_version();
    return model_version_.version_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void PredictionInput::set_allocated_version_name(::std::string* version_name) {
  if (!has_version_name()) {
    model_version_.version_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_model_version();
  if (version_name != NULL) {
    set_has_version_name();
    model_version_.version_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        version_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.PredictionInput.version_name)
}

// optional .google.cloud.ml.v1beta1.PredictionInput.DataFormat data_format = 3;
void PredictionInput::clear_data_format() {
  data_format_ = 0;
}
::google::cloud::ml::v1beta1::PredictionInput_DataFormat PredictionInput::data_format() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionInput.data_format)
  return static_cast< ::google::cloud::ml::v1beta1::PredictionInput_DataFormat >(data_format_);
}
void PredictionInput::set_data_format(::google::cloud::ml::v1beta1::PredictionInput_DataFormat value) {
  
  data_format_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.data_format)
}

// repeated string input_paths = 4;
int PredictionInput::input_paths_size() const {
  return input_paths_.size();
}
void PredictionInput::clear_input_paths() {
  input_paths_.Clear();
}
const ::std::string& PredictionInput::input_paths(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionInput.input_paths)
  return input_paths_.Get(index);
}
::std::string* PredictionInput::mutable_input_paths(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.PredictionInput.input_paths)
  return input_paths_.Mutable(index);
}
void PredictionInput::set_input_paths(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.input_paths)
  input_paths_.Mutable(index)->assign(value);
}
void PredictionInput::set_input_paths(int index, const char* value) {
  input_paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.PredictionInput.input_paths)
}
void PredictionInput::set_input_paths(int index, const char* value, size_t size) {
  input_paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.PredictionInput.input_paths)
}
::std::string* PredictionInput::add_input_paths() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.ml.v1beta1.PredictionInput.input_paths)
  return input_paths_.Add();
}
void PredictionInput::add_input_paths(const ::std::string& value) {
  input_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.PredictionInput.input_paths)
}
void PredictionInput::add_input_paths(const char* value) {
  input_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.ml.v1beta1.PredictionInput.input_paths)
}
void PredictionInput::add_input_paths(const char* value, size_t size) {
  input_paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.ml.v1beta1.PredictionInput.input_paths)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PredictionInput::input_paths() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.PredictionInput.input_paths)
  return input_paths_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PredictionInput::mutable_input_paths() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.PredictionInput.input_paths)
  return &input_paths_;
}

// optional string output_path = 5;
void PredictionInput::clear_output_path() {
  output_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PredictionInput::output_path() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionInput.output_path)
  return output_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PredictionInput::set_output_path(const ::std::string& value) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.output_path)
}
void PredictionInput::set_output_path(const char* value) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.PredictionInput.output_path)
}
void PredictionInput::set_output_path(const char* value, size_t size) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.PredictionInput.output_path)
}
::std::string* PredictionInput::mutable_output_path() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.PredictionInput.output_path)
  return output_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PredictionInput::release_output_path() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.PredictionInput.output_path)
  
  return output_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PredictionInput::set_allocated_output_path(::std::string* output_path) {
  if (output_path != NULL) {
    
  } else {
    
  }
  output_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_path);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.PredictionInput.output_path)
}

// optional int64 max_worker_count = 6;
void PredictionInput::clear_max_worker_count() {
  max_worker_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PredictionInput::max_worker_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionInput.max_worker_count)
  return max_worker_count_;
}
void PredictionInput::set_max_worker_count(::google::protobuf::int64 value) {
  
  max_worker_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.max_worker_count)
}

// optional string region = 7;
void PredictionInput::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PredictionInput::region() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionInput.region)
  return region_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PredictionInput::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionInput.region)
}
void PredictionInput::set_region(const char* value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.PredictionInput.region)
}
void PredictionInput::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.PredictionInput.region)
}
::std::string* PredictionInput::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.PredictionInput.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PredictionInput::release_region() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.PredictionInput.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PredictionInput::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.PredictionInput.region)
}

bool PredictionInput::has_model_version() const {
  return model_version_case() != MODEL_VERSION_NOT_SET;
}
void PredictionInput::clear_has_model_version() {
  _oneof_case_[0] = MODEL_VERSION_NOT_SET;
}
PredictionInput::ModelVersionCase PredictionInput::model_version_case() const {
  return PredictionInput::ModelVersionCase(_oneof_case_[0]);
}
inline const PredictionInput* PredictionInput::internal_default_instance() {
  return &PredictionInput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionOutput::kOutputPathFieldNumber;
const int PredictionOutput::kPredictionCountFieldNumber;
const int PredictionOutput::kErrorCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionOutput::PredictionOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.PredictionOutput)
}

void PredictionOutput::InitAsDefaultInstance() {
}

PredictionOutput::PredictionOutput(const PredictionOutput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.PredictionOutput)
}

void PredictionOutput::SharedCtor() {
  output_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prediction_count_, 0, reinterpret_cast<char*>(&error_count_) -
    reinterpret_cast<char*>(&prediction_count_) + sizeof(error_count_));
  _cached_size_ = 0;
}

PredictionOutput::~PredictionOutput() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.PredictionOutput)
  SharedDtor();
}

void PredictionOutput::SharedDtor() {
  output_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PredictionOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PredictionOutput_descriptor_;
}

const PredictionOutput& PredictionOutput::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PredictionOutput> PredictionOutput_default_instance_;

PredictionOutput* PredictionOutput::New(::google::protobuf::Arena* arena) const {
  PredictionOutput* n = new PredictionOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.PredictionOutput)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PredictionOutput, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PredictionOutput*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(prediction_count_, error_count_);
  output_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PredictionOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.PredictionOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string output_path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_path().data(), this->output_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.PredictionOutput.output_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_prediction_count;
        break;
      }

      // optional int64 prediction_count = 2;
      case 2: {
        if (tag == 16) {
         parse_prediction_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &prediction_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_error_count;
        break;
      }

      // optional int64 error_count = 3;
      case 3: {
        if (tag == 24) {
         parse_error_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.PredictionOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.PredictionOutput)
  return false;
#undef DO_
}

void PredictionOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.PredictionOutput)
  // optional string output_path = 1;
  if (this->output_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_path().data(), this->output_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionOutput.output_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->output_path(), output);
  }

  // optional int64 prediction_count = 2;
  if (this->prediction_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->prediction_count(), output);
  }

  // optional int64 error_count = 3;
  if (this->error_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->error_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.PredictionOutput)
}

::google::protobuf::uint8* PredictionOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.PredictionOutput)
  // optional string output_path = 1;
  if (this->output_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_path().data(), this->output_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.PredictionOutput.output_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->output_path(), target);
  }

  // optional int64 prediction_count = 2;
  if (this->prediction_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->prediction_count(), target);
  }

  // optional int64 error_count = 3;
  if (this->error_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->error_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.PredictionOutput)
  return target;
}

size_t PredictionOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.PredictionOutput)
  size_t total_size = 0;

  // optional string output_path = 1;
  if (this->output_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_path());
  }

  // optional int64 prediction_count = 2;
  if (this->prediction_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->prediction_count());
  }

  // optional int64 error_count = 3;
  if (this->error_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.PredictionOutput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PredictionOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.PredictionOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.PredictionOutput)
    UnsafeMergeFrom(*source);
  }
}

void PredictionOutput::MergeFrom(const PredictionOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.PredictionOutput)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PredictionOutput::UnsafeMergeFrom(const PredictionOutput& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.output_path().size() > 0) {

    output_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_path_);
  }
  if (from.prediction_count() != 0) {
    set_prediction_count(from.prediction_count());
  }
  if (from.error_count() != 0) {
    set_error_count(from.error_count());
  }
}

void PredictionOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.PredictionOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionOutput::CopyFrom(const PredictionOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.PredictionOutput)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PredictionOutput::IsInitialized() const {

  return true;
}

void PredictionOutput::Swap(PredictionOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionOutput::InternalSwap(PredictionOutput* other) {
  output_path_.Swap(&other->output_path_);
  std::swap(prediction_count_, other->prediction_count_);
  std::swap(error_count_, other->error_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PredictionOutput_descriptor_;
  metadata.reflection = PredictionOutput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PredictionOutput

// optional string output_path = 1;
void PredictionOutput::clear_output_path() {
  output_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PredictionOutput::output_path() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionOutput.output_path)
  return output_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PredictionOutput::set_output_path(const ::std::string& value) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionOutput.output_path)
}
void PredictionOutput::set_output_path(const char* value) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.PredictionOutput.output_path)
}
void PredictionOutput::set_output_path(const char* value, size_t size) {
  
  output_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.PredictionOutput.output_path)
}
::std::string* PredictionOutput::mutable_output_path() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.PredictionOutput.output_path)
  return output_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PredictionOutput::release_output_path() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.PredictionOutput.output_path)
  
  return output_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PredictionOutput::set_allocated_output_path(::std::string* output_path) {
  if (output_path != NULL) {
    
  } else {
    
  }
  output_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_path);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.PredictionOutput.output_path)
}

// optional int64 prediction_count = 2;
void PredictionOutput::clear_prediction_count() {
  prediction_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PredictionOutput::prediction_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionOutput.prediction_count)
  return prediction_count_;
}
void PredictionOutput::set_prediction_count(::google::protobuf::int64 value) {
  
  prediction_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionOutput.prediction_count)
}

// optional int64 error_count = 3;
void PredictionOutput::clear_error_count() {
  error_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PredictionOutput::error_count() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.PredictionOutput.error_count)
  return error_count_;
}
void PredictionOutput::set_error_count(::google::protobuf::int64 value) {
  
  error_count_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.PredictionOutput.error_count)
}

inline const PredictionOutput* PredictionOutput::internal_default_instance() {
  return &PredictionOutput_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Job_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Job_State_descriptor_;
}
bool Job_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Job_State Job::STATE_UNSPECIFIED;
const Job_State Job::QUEUED;
const Job_State Job::PREPARING;
const Job_State Job::RUNNING;
const Job_State Job::SUCCEEDED;
const Job_State Job::FAILED;
const Job_State Job::CANCELLING;
const Job_State Job::CANCELLED;
const Job_State Job::State_MIN;
const Job_State Job::State_MAX;
const int Job::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job::kJobIdFieldNumber;
const int Job::kTrainingInputFieldNumber;
const int Job::kPredictionInputFieldNumber;
const int Job::kCreateTimeFieldNumber;
const int Job::kStartTimeFieldNumber;
const int Job::kEndTimeFieldNumber;
const int Job::kStateFieldNumber;
const int Job::kErrorMessageFieldNumber;
const int Job::kTrainingOutputFieldNumber;
const int Job::kPredictionOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job::Job()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.Job)
}

void Job::InitAsDefaultInstance() {
  Job_default_oneof_instance_->training_input_ = const_cast< ::google::cloud::ml::v1beta1::TrainingInput*>(
      ::google::cloud::ml::v1beta1::TrainingInput::internal_default_instance());
  Job_default_oneof_instance_->prediction_input_ = const_cast< ::google::cloud::ml::v1beta1::PredictionInput*>(
      ::google::cloud::ml::v1beta1::PredictionInput::internal_default_instance());
  create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  Job_default_oneof_instance_->training_output_ = const_cast< ::google::cloud::ml::v1beta1::TrainingOutput*>(
      ::google::cloud::ml::v1beta1::TrainingOutput::internal_default_instance());
  Job_default_oneof_instance_->prediction_output_ = const_cast< ::google::cloud::ml::v1beta1::PredictionOutput*>(
      ::google::cloud::ml::v1beta1::PredictionOutput::internal_default_instance());
}

Job::Job(const Job& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.Job)
}

void Job::SharedCtor() {
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_ = NULL;
  start_time_ = NULL;
  end_time_ = NULL;
  state_ = 0;
  clear_has_input();
  clear_has_output();
  _cached_size_ = 0;
}

Job::~Job() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.Job)
  SharedDtor();
}

void Job::SharedDtor() {
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_input()) {
    clear_input();
  }
  if (has_output()) {
    clear_output();
  }
  if (this != &Job_default_instance_.get()) {
    delete create_time_;
    delete start_time_;
    delete end_time_;
  }
}

void Job::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Job::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Job_descriptor_;
}

const Job& Job::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Job> Job_default_instance_;

Job* Job::New(::google::protobuf::Arena* arena) const {
  Job* n = new Job;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Job::clear_input() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.ml.v1beta1.Job)
  switch (input_case()) {
    case kTrainingInput: {
      delete input_.training_input_;
      break;
    }
    case kPredictionInput: {
      delete input_.prediction_input_;
      break;
    }
    case INPUT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INPUT_NOT_SET;
}

void Job::clear_output() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.ml.v1beta1.Job)
  switch (output_case()) {
    case kTrainingOutput: {
      delete output_.training_output_;
      break;
    }
    case kPredictionOutput: {
      delete output_.prediction_output_;
      break;
    }
    case OUTPUT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = OUTPUT_NOT_SET;
}


void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.Job)
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
  state_ = 0;
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_input();
  clear_output();
}

bool Job::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.Job)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string job_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), this->job_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.Job.job_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_training_input;
        break;
      }

      // optional .google.cloud.ml.v1beta1.TrainingInput training_input = 2;
      case 2: {
        if (tag == 18) {
         parse_training_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_training_input()));
        } else {
          goto handle_unusual;
        }
        goto after_prediction_input;
        break;
      }

      // optional .google.cloud.ml.v1beta1.PredictionInput prediction_input = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prediction_input()));
        } else {
          goto handle_unusual;
        }
       after_prediction_input:
        if (input->ExpectTag(34)) goto parse_create_time;
        break;
      }

      // optional .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (tag == 34) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 5;
      case 5: {
        if (tag == 42) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_end_time;
        break;
      }

      // optional .google.protobuf.Timestamp end_time = 6;
      case 6: {
        if (tag == 50) {
         parse_end_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_state;
        break;
      }

      // optional .google.cloud.ml.v1beta1.Job.State state = 7;
      case 7: {
        if (tag == 56) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::ml::v1beta1::Job_State >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_error_message;
        break;
      }

      // optional string error_message = 8;
      case 8: {
        if (tag == 66) {
         parse_error_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), this->error_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.Job.error_message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_training_output;
        break;
      }

      // optional .google.cloud.ml.v1beta1.TrainingOutput training_output = 9;
      case 9: {
        if (tag == 74) {
         parse_training_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_training_output()));
        } else {
          goto handle_unusual;
        }
        goto after_prediction_output;
        break;
      }

      // optional .google.cloud.ml.v1beta1.PredictionOutput prediction_output = 10;
      case 10: {
        if (tag == 82) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prediction_output()));
        } else {
          goto handle_unusual;
        }
       after_prediction_output:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.Job)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.Job)
  return false;
#undef DO_
}

void Job::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.Job)
  // optional string job_id = 1;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), this->job_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.Job.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->job_id(), output);
  }

  // optional .google.cloud.ml.v1beta1.TrainingInput training_input = 2;
  if (has_training_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *input_.training_input_, output);
  }

  // optional .google.cloud.ml.v1beta1.PredictionInput prediction_input = 3;
  if (has_prediction_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *input_.prediction_input_, output);
  }

  // optional .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->create_time_, output);
  }

  // optional .google.protobuf.Timestamp start_time = 5;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp end_time = 6;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->end_time_, output);
  }

  // optional .google.cloud.ml.v1beta1.Job.State state = 7;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->state(), output);
  }

  // optional string error_message = 8;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.Job.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->error_message(), output);
  }

  // optional .google.cloud.ml.v1beta1.TrainingOutput training_output = 9;
  if (has_training_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *output_.training_output_, output);
  }

  // optional .google.cloud.ml.v1beta1.PredictionOutput prediction_output = 10;
  if (has_prediction_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *output_.prediction_output_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.Job)
}

::google::protobuf::uint8* Job::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.Job)
  // optional string job_id = 1;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), this->job_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.Job.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->job_id(), target);
  }

  // optional .google.cloud.ml.v1beta1.TrainingInput training_input = 2;
  if (has_training_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *input_.training_input_, false, target);
  }

  // optional .google.cloud.ml.v1beta1.PredictionInput prediction_input = 3;
  if (has_prediction_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *input_.prediction_input_, false, target);
  }

  // optional .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->create_time_, false, target);
  }

  // optional .google.protobuf.Timestamp start_time = 5;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp end_time = 6;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->end_time_, false, target);
  }

  // optional .google.cloud.ml.v1beta1.Job.State state = 7;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->state(), target);
  }

  // optional string error_message = 8;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.Job.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->error_message(), target);
  }

  // optional .google.cloud.ml.v1beta1.TrainingOutput training_output = 9;
  if (has_training_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *output_.training_output_, false, target);
  }

  // optional .google.cloud.ml.v1beta1.PredictionOutput prediction_output = 10;
  if (has_prediction_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *output_.prediction_output_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.Job)
  return target;
}

size_t Job::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.Job)
  size_t total_size = 0;

  // optional string job_id = 1;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  // optional .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  // optional .google.protobuf.Timestamp start_time = 5;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp end_time = 6;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->end_time_);
  }

  // optional .google.cloud.ml.v1beta1.Job.State state = 7;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional string error_message = 8;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  switch (input_case()) {
    // optional .google.cloud.ml.v1beta1.TrainingInput training_input = 2;
    case kTrainingInput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *input_.training_input_);
      break;
    }
    // optional .google.cloud.ml.v1beta1.PredictionInput prediction_input = 3;
    case kPredictionInput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *input_.prediction_input_);
      break;
    }
    case INPUT_NOT_SET: {
      break;
    }
  }
  switch (output_case()) {
    // optional .google.cloud.ml.v1beta1.TrainingOutput training_output = 9;
    case kTrainingOutput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *output_.training_output_);
      break;
    }
    // optional .google.cloud.ml.v1beta1.PredictionOutput prediction_output = 10;
    case kPredictionOutput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *output_.prediction_output_);
      break;
    }
    case OUTPUT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Job::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.Job)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Job* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.Job)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.Job)
    UnsafeMergeFrom(*source);
  }
}

void Job::MergeFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.Job)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Job::UnsafeMergeFrom(const Job& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.input_case()) {
    case kTrainingInput: {
      mutable_training_input()->::google::cloud::ml::v1beta1::TrainingInput::MergeFrom(from.training_input());
      break;
    }
    case kPredictionInput: {
      mutable_prediction_input()->::google::cloud::ml::v1beta1::PredictionInput::MergeFrom(from.prediction_input());
      break;
    }
    case INPUT_NOT_SET: {
      break;
    }
  }
  switch (from.output_case()) {
    case kTrainingOutput: {
      mutable_training_output()->::google::cloud::ml::v1beta1::TrainingOutput::MergeFrom(from.training_output());
      break;
    }
    case kPredictionOutput: {
      mutable_prediction_output()->::google::cloud::ml::v1beta1::PredictionOutput::MergeFrom(from.prediction_output());
      break;
    }
    case OUTPUT_NOT_SET: {
      break;
    }
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
}

void Job::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.Job)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Job::IsInitialized() const {

  return true;
}

void Job::Swap(Job* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job::InternalSwap(Job* other) {
  job_id_.Swap(&other->job_id_);
  std::swap(create_time_, other->create_time_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(state_, other->state_);
  error_message_.Swap(&other->error_message_);
  std::swap(input_, other->input_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(output_, other->output_);
  std::swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Job::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Job_descriptor_;
  metadata.reflection = Job_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Job

// optional string job_id = 1;
void Job::clear_job_id() {
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Job::job_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.job_id)
  return job_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Job::set_job_id(const ::std::string& value) {
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.Job.job_id)
}
void Job::set_job_id(const char* value) {
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.Job.job_id)
}
void Job::set_job_id(const char* value, size_t size) {
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.Job.job_id)
}
::std::string* Job::mutable_job_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.job_id)
  return job_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Job::release_job_id() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.job_id)
  
  return job_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Job::set_allocated_job_id(::std::string* job_id) {
  if (job_id != NULL) {
    
  } else {
    
  }
  job_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.job_id)
}

// optional .google.cloud.ml.v1beta1.TrainingInput training_input = 2;
bool Job::has_training_input() const {
  return input_case() == kTrainingInput;
}
void Job::set_has_training_input() {
  _oneof_case_[0] = kTrainingInput;
}
void Job::clear_training_input() {
  if (has_training_input()) {
    delete input_.training_input_;
    clear_has_input();
  }
}
 const ::google::cloud::ml::v1beta1::TrainingInput& Job::training_input() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.training_input)
  return has_training_input()
      ? *input_.training_input_
      : ::google::cloud::ml::v1beta1::TrainingInput::default_instance();
}
::google::cloud::ml::v1beta1::TrainingInput* Job::mutable_training_input() {
  if (!has_training_input()) {
    clear_input();
    set_has_training_input();
    input_.training_input_ = new ::google::cloud::ml::v1beta1::TrainingInput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.training_input)
  return input_.training_input_;
}
::google::cloud::ml::v1beta1::TrainingInput* Job::release_training_input() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.training_input)
  if (has_training_input()) {
    clear_has_input();
    ::google::cloud::ml::v1beta1::TrainingInput* temp = input_.training_input_;
    input_.training_input_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Job::set_allocated_training_input(::google::cloud::ml::v1beta1::TrainingInput* training_input) {
  clear_input();
  if (training_input) {
    set_has_training_input();
    input_.training_input_ = training_input;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.training_input)
}

// optional .google.cloud.ml.v1beta1.PredictionInput prediction_input = 3;
bool Job::has_prediction_input() const {
  return input_case() == kPredictionInput;
}
void Job::set_has_prediction_input() {
  _oneof_case_[0] = kPredictionInput;
}
void Job::clear_prediction_input() {
  if (has_prediction_input()) {
    delete input_.prediction_input_;
    clear_has_input();
  }
}
 const ::google::cloud::ml::v1beta1::PredictionInput& Job::prediction_input() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.prediction_input)
  return has_prediction_input()
      ? *input_.prediction_input_
      : ::google::cloud::ml::v1beta1::PredictionInput::default_instance();
}
::google::cloud::ml::v1beta1::PredictionInput* Job::mutable_prediction_input() {
  if (!has_prediction_input()) {
    clear_input();
    set_has_prediction_input();
    input_.prediction_input_ = new ::google::cloud::ml::v1beta1::PredictionInput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.prediction_input)
  return input_.prediction_input_;
}
::google::cloud::ml::v1beta1::PredictionInput* Job::release_prediction_input() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.prediction_input)
  if (has_prediction_input()) {
    clear_has_input();
    ::google::cloud::ml::v1beta1::PredictionInput* temp = input_.prediction_input_;
    input_.prediction_input_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Job::set_allocated_prediction_input(::google::cloud::ml::v1beta1::PredictionInput* prediction_input) {
  clear_input();
  if (prediction_input) {
    set_has_prediction_input();
    input_.prediction_input_ = prediction_input;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.prediction_input)
}

// optional .google.protobuf.Timestamp create_time = 4;
bool Job::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
void Job::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& Job::create_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Job::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* Job::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void Job::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.create_time)
}

// optional .google.protobuf.Timestamp start_time = 5;
bool Job::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void Job::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& Job::start_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Job::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* Job::release_start_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void Job::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.start_time)
}

// optional .google.protobuf.Timestamp end_time = 6;
bool Job::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
void Job::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
const ::google::protobuf::Timestamp& Job::end_time() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Job::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.end_time)
  return end_time_;
}
::google::protobuf::Timestamp* Job::release_end_time() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
void Job::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.end_time)
}

// optional .google.cloud.ml.v1beta1.Job.State state = 7;
void Job::clear_state() {
  state_ = 0;
}
::google::cloud::ml::v1beta1::Job_State Job::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.state)
  return static_cast< ::google::cloud::ml::v1beta1::Job_State >(state_);
}
void Job::set_state(::google::cloud::ml::v1beta1::Job_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.Job.state)
}

// optional string error_message = 8;
void Job::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Job::error_message() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.error_message)
  return error_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Job::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.Job.error_message)
}
void Job::set_error_message(const char* value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.Job.error_message)
}
void Job::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.Job.error_message)
}
::std::string* Job::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Job::release_error_message() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Job::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.error_message)
}

// optional .google.cloud.ml.v1beta1.TrainingOutput training_output = 9;
bool Job::has_training_output() const {
  return output_case() == kTrainingOutput;
}
void Job::set_has_training_output() {
  _oneof_case_[1] = kTrainingOutput;
}
void Job::clear_training_output() {
  if (has_training_output()) {
    delete output_.training_output_;
    clear_has_output();
  }
}
 const ::google::cloud::ml::v1beta1::TrainingOutput& Job::training_output() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.training_output)
  return has_training_output()
      ? *output_.training_output_
      : ::google::cloud::ml::v1beta1::TrainingOutput::default_instance();
}
::google::cloud::ml::v1beta1::TrainingOutput* Job::mutable_training_output() {
  if (!has_training_output()) {
    clear_output();
    set_has_training_output();
    output_.training_output_ = new ::google::cloud::ml::v1beta1::TrainingOutput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.training_output)
  return output_.training_output_;
}
::google::cloud::ml::v1beta1::TrainingOutput* Job::release_training_output() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.training_output)
  if (has_training_output()) {
    clear_has_output();
    ::google::cloud::ml::v1beta1::TrainingOutput* temp = output_.training_output_;
    output_.training_output_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Job::set_allocated_training_output(::google::cloud::ml::v1beta1::TrainingOutput* training_output) {
  clear_output();
  if (training_output) {
    set_has_training_output();
    output_.training_output_ = training_output;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.training_output)
}

// optional .google.cloud.ml.v1beta1.PredictionOutput prediction_output = 10;
bool Job::has_prediction_output() const {
  return output_case() == kPredictionOutput;
}
void Job::set_has_prediction_output() {
  _oneof_case_[1] = kPredictionOutput;
}
void Job::clear_prediction_output() {
  if (has_prediction_output()) {
    delete output_.prediction_output_;
    clear_has_output();
  }
}
 const ::google::cloud::ml::v1beta1::PredictionOutput& Job::prediction_output() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.Job.prediction_output)
  return has_prediction_output()
      ? *output_.prediction_output_
      : ::google::cloud::ml::v1beta1::PredictionOutput::default_instance();
}
::google::cloud::ml::v1beta1::PredictionOutput* Job::mutable_prediction_output() {
  if (!has_prediction_output()) {
    clear_output();
    set_has_prediction_output();
    output_.prediction_output_ = new ::google::cloud::ml::v1beta1::PredictionOutput;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.Job.prediction_output)
  return output_.prediction_output_;
}
::google::cloud::ml::v1beta1::PredictionOutput* Job::release_prediction_output() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.Job.prediction_output)
  if (has_prediction_output()) {
    clear_has_output();
    ::google::cloud::ml::v1beta1::PredictionOutput* temp = output_.prediction_output_;
    output_.prediction_output_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Job::set_allocated_prediction_output(::google::cloud::ml::v1beta1::PredictionOutput* prediction_output) {
  clear_output();
  if (prediction_output) {
    set_has_prediction_output();
    output_.prediction_output_ = prediction_output;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.Job.prediction_output)
}

bool Job::has_input() const {
  return input_case() != INPUT_NOT_SET;
}
void Job::clear_has_input() {
  _oneof_case_[0] = INPUT_NOT_SET;
}
bool Job::has_output() const {
  return output_case() != OUTPUT_NOT_SET;
}
void Job::clear_has_output() {
  _oneof_case_[1] = OUTPUT_NOT_SET;
}
Job::InputCase Job::input_case() const {
  return Job::InputCase(_oneof_case_[0]);
}
Job::OutputCase Job::output_case() const {
  return Job::OutputCase(_oneof_case_[1]);
}
inline const Job* Job::internal_default_instance() {
  return &Job_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateJobRequest::kParentFieldNumber;
const int CreateJobRequest::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateJobRequest::CreateJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.CreateJobRequest)
}

void CreateJobRequest::InitAsDefaultInstance() {
  job_ = const_cast< ::google::cloud::ml::v1beta1::Job*>(
      ::google::cloud::ml::v1beta1::Job::internal_default_instance());
}

CreateJobRequest::CreateJobRequest(const CreateJobRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.CreateJobRequest)
}

void CreateJobRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_ = NULL;
  _cached_size_ = 0;
}

CreateJobRequest::~CreateJobRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.CreateJobRequest)
  SharedDtor();
}

void CreateJobRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CreateJobRequest_default_instance_.get()) {
    delete job_;
  }
}

void CreateJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateJobRequest_descriptor_;
}

const CreateJobRequest& CreateJobRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateJobRequest> CreateJobRequest_default_instance_;

CreateJobRequest* CreateJobRequest::New(::google::protobuf::Arena* arena) const {
  CreateJobRequest* n = new CreateJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.CreateJobRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && job_ != NULL) delete job_;
  job_ = NULL;
}

bool CreateJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.CreateJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string parent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.CreateJobRequest.parent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_job;
        break;
      }

      // optional .google.cloud.ml.v1beta1.Job job = 2;
      case 2: {
        if (tag == 18) {
         parse_job:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.CreateJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.CreateJobRequest)
  return false;
#undef DO_
}

void CreateJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.CreateJobRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.CreateJobRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // optional .google.cloud.ml.v1beta1.Job job = 2;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.CreateJobRequest)
}

::google::protobuf::uint8* CreateJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.CreateJobRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.CreateJobRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // optional .google.cloud.ml.v1beta1.Job job = 2;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->job_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.CreateJobRequest)
  return target;
}

size_t CreateJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.CreateJobRequest)
  size_t total_size = 0;

  // optional string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // optional .google.cloud.ml.v1beta1.Job job = 2;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->job_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.CreateJobRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.CreateJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.CreateJobRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateJobRequest::MergeFrom(const CreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.CreateJobRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateJobRequest::UnsafeMergeFrom(const CreateJobRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_job()) {
    mutable_job()->::google::cloud::ml::v1beta1::Job::MergeFrom(from.job());
  }
}

void CreateJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.CreateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateJobRequest::CopyFrom(const CreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.CreateJobRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateJobRequest::IsInitialized() const {

  return true;
}

void CreateJobRequest::Swap(CreateJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateJobRequest::InternalSwap(CreateJobRequest* other) {
  parent_.Swap(&other->parent_);
  std::swap(job_, other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateJobRequest_descriptor_;
  metadata.reflection = CreateJobRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateJobRequest

// optional string parent = 1;
void CreateJobRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateJobRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.CreateJobRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateJobRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.CreateJobRequest.parent)
}
void CreateJobRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.CreateJobRequest.parent)
}
void CreateJobRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.CreateJobRequest.parent)
}
::std::string* CreateJobRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.CreateJobRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateJobRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.CreateJobRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateJobRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.CreateJobRequest.parent)
}

// optional .google.cloud.ml.v1beta1.Job job = 2;
bool CreateJobRequest::has_job() const {
  return this != internal_default_instance() && job_ != NULL;
}
void CreateJobRequest::clear_job() {
  if (GetArenaNoVirtual() == NULL && job_ != NULL) delete job_;
  job_ = NULL;
}
const ::google::cloud::ml::v1beta1::Job& CreateJobRequest::job() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.CreateJobRequest.job)
  return job_ != NULL ? *job_
                         : *::google::cloud::ml::v1beta1::Job::internal_default_instance();
}
::google::cloud::ml::v1beta1::Job* CreateJobRequest::mutable_job() {
  
  if (job_ == NULL) {
    job_ = new ::google::cloud::ml::v1beta1::Job;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.CreateJobRequest.job)
  return job_;
}
::google::cloud::ml::v1beta1::Job* CreateJobRequest::release_job() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.CreateJobRequest.job)
  
  ::google::cloud::ml::v1beta1::Job* temp = job_;
  job_ = NULL;
  return temp;
}
void CreateJobRequest::set_allocated_job(::google::cloud::ml::v1beta1::Job* job) {
  delete job_;
  job_ = job;
  if (job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.CreateJobRequest.job)
}

inline const CreateJobRequest* CreateJobRequest::internal_default_instance() {
  return &CreateJobRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListJobsRequest::kParentFieldNumber;
const int ListJobsRequest::kFilterFieldNumber;
const int ListJobsRequest::kPageTokenFieldNumber;
const int ListJobsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListJobsRequest::ListJobsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.ListJobsRequest)
}

void ListJobsRequest::InitAsDefaultInstance() {
}

ListJobsRequest::ListJobsRequest(const ListJobsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.ListJobsRequest)
}

void ListJobsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListJobsRequest::~ListJobsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.ListJobsRequest)
  SharedDtor();
}

void ListJobsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListJobsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListJobsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListJobsRequest_descriptor_;
}

const ListJobsRequest& ListJobsRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListJobsRequest> ListJobsRequest_default_instance_;

ListJobsRequest* ListJobsRequest::New(::google::protobuf::Arena* arena) const {
  ListJobsRequest* n = new ListJobsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListJobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.ListJobsRequest)
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

bool ListJobsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.ListJobsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string parent = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.ListJobsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_filter;
        break;
      }

      // optional string filter = 2;
      case 2: {
        if (tag == 18) {
         parse_filter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.ListJobsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_page_token;
        break;
      }

      // optional string page_token = 4;
      case 4: {
        if (tag == 34) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.ListJobsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 5;
      case 5: {
        if (tag == 40) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.ListJobsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.ListJobsRequest)
  return false;
#undef DO_
}

void ListJobsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.ListJobsRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // optional int32 page_size = 5;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.ListJobsRequest)
}

::google::protobuf::uint8* ListJobsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.ListJobsRequest)
  // optional string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // optional int32 page_size = 5;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.ListJobsRequest)
  return target;
}

size_t ListJobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.ListJobsRequest)
  size_t total_size = 0;

  // optional string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // optional string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // optional int32 page_size = 5;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListJobsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.ListJobsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListJobsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListJobsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.ListJobsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.ListJobsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListJobsRequest::MergeFrom(const ListJobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.ListJobsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListJobsRequest::UnsafeMergeFrom(const ListJobsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListJobsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.ListJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListJobsRequest::CopyFrom(const ListJobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.ListJobsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListJobsRequest::IsInitialized() const {

  return true;
}

void ListJobsRequest::Swap(ListJobsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListJobsRequest::InternalSwap(ListJobsRequest* other) {
  parent_.Swap(&other->parent_);
  filter_.Swap(&other->filter_);
  page_token_.Swap(&other->page_token_);
  std::swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListJobsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListJobsRequest_descriptor_;
  metadata.reflection = ListJobsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListJobsRequest

// optional string parent = 1;
void ListJobsRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListJobsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ListJobsRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ListJobsRequest.parent)
}
void ListJobsRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.ListJobsRequest.parent)
}
void ListJobsRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.ListJobsRequest.parent)
}
::std::string* ListJobsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.ListJobsRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListJobsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.ListJobsRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.ListJobsRequest.parent)
}

// optional string filter = 2;
void ListJobsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListJobsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ListJobsRequest.filter)
  return filter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ListJobsRequest.filter)
}
void ListJobsRequest::set_filter(const char* value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.ListJobsRequest.filter)
}
void ListJobsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.ListJobsRequest.filter)
}
::std::string* ListJobsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.ListJobsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListJobsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.ListJobsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.ListJobsRequest.filter)
}

// optional string page_token = 4;
void ListJobsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListJobsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ListJobsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ListJobsRequest.page_token)
}
void ListJobsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.ListJobsRequest.page_token)
}
void ListJobsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.ListJobsRequest.page_token)
}
::std::string* ListJobsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.ListJobsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListJobsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.ListJobsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.ListJobsRequest.page_token)
}

// optional int32 page_size = 5;
void ListJobsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListJobsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ListJobsRequest.page_size)
  return page_size_;
}
void ListJobsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ListJobsRequest.page_size)
}

inline const ListJobsRequest* ListJobsRequest::internal_default_instance() {
  return &ListJobsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListJobsResponse::kJobsFieldNumber;
const int ListJobsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListJobsResponse::ListJobsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.ListJobsResponse)
}

void ListJobsResponse::InitAsDefaultInstance() {
}

ListJobsResponse::ListJobsResponse(const ListJobsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.ListJobsResponse)
}

void ListJobsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListJobsResponse::~ListJobsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.ListJobsResponse)
  SharedDtor();
}

void ListJobsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListJobsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListJobsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListJobsResponse_descriptor_;
}

const ListJobsResponse& ListJobsResponse::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListJobsResponse> ListJobsResponse_default_instance_;

ListJobsResponse* ListJobsResponse::New(::google::protobuf::Arena* arena) const {
  ListJobsResponse* n = new ListJobsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListJobsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.ListJobsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jobs_.Clear();
}

bool ListJobsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.ListJobsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.ml.v1beta1.Job jobs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_jobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_jobs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.ListJobsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.ListJobsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.ListJobsResponse)
  return false;
#undef DO_
}

void ListJobsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.ListJobsResponse)
  // repeated .google.cloud.ml.v1beta1.Job jobs = 1;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobs(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.ListJobsResponse)
}

::google::protobuf::uint8* ListJobsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.ListJobsResponse)
  // repeated .google.cloud.ml.v1beta1.Job jobs = 1;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->jobs(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.ListJobsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.ListJobsResponse)
  return target;
}

size_t ListJobsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.ListJobsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.cloud.ml.v1beta1.Job jobs = 1;
  {
    unsigned int count = this->jobs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->jobs(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListJobsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.ListJobsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListJobsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListJobsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.ListJobsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.ListJobsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListJobsResponse::MergeFrom(const ListJobsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.ListJobsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListJobsResponse::UnsafeMergeFrom(const ListJobsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  jobs_.MergeFrom(from.jobs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListJobsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.ListJobsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListJobsResponse::CopyFrom(const ListJobsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.ListJobsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListJobsResponse::IsInitialized() const {

  return true;
}

void ListJobsResponse::Swap(ListJobsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListJobsResponse::InternalSwap(ListJobsResponse* other) {
  jobs_.UnsafeArenaSwap(&other->jobs_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListJobsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListJobsResponse_descriptor_;
  metadata.reflection = ListJobsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListJobsResponse

// repeated .google.cloud.ml.v1beta1.Job jobs = 1;
int ListJobsResponse::jobs_size() const {
  return jobs_.size();
}
void ListJobsResponse::clear_jobs() {
  jobs_.Clear();
}
const ::google::cloud::ml::v1beta1::Job& ListJobsResponse::jobs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ListJobsResponse.jobs)
  return jobs_.Get(index);
}
::google::cloud::ml::v1beta1::Job* ListJobsResponse::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.ListJobsResponse.jobs)
  return jobs_.Mutable(index);
}
::google::cloud::ml::v1beta1::Job* ListJobsResponse::add_jobs() {
  // @@protoc_insertion_point(field_add:google.cloud.ml.v1beta1.ListJobsResponse.jobs)
  return jobs_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::Job >*
ListJobsResponse::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.ml.v1beta1.ListJobsResponse.jobs)
  return &jobs_;
}
const ::google::protobuf::RepeatedPtrField< ::google::cloud::ml::v1beta1::Job >&
ListJobsResponse::jobs() const {
  // @@protoc_insertion_point(field_list:google.cloud.ml.v1beta1.ListJobsResponse.jobs)
  return jobs_;
}

// optional string next_page_token = 2;
void ListJobsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListJobsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.ListJobsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.ListJobsResponse.next_page_token)
}
void ListJobsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.ListJobsResponse.next_page_token)
}
void ListJobsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.ListJobsResponse.next_page_token)
}
::std::string* ListJobsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.ListJobsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListJobsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.ListJobsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListJobsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.ListJobsResponse.next_page_token)
}

inline const ListJobsResponse* ListJobsResponse::internal_default_instance() {
  return &ListJobsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetJobRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJobRequest::GetJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.GetJobRequest)
}

void GetJobRequest::InitAsDefaultInstance() {
}

GetJobRequest::GetJobRequest(const GetJobRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.GetJobRequest)
}

void GetJobRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetJobRequest::~GetJobRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.GetJobRequest)
  SharedDtor();
}

void GetJobRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetJobRequest_descriptor_;
}

const GetJobRequest& GetJobRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetJobRequest> GetJobRequest_default_instance_;

GetJobRequest* GetJobRequest::New(::google::protobuf::Arena* arena) const {
  GetJobRequest* n = new GetJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.GetJobRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.GetJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.GetJobRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.GetJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.GetJobRequest)
  return false;
#undef DO_
}

void GetJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.GetJobRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.GetJobRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.GetJobRequest)
}

::google::protobuf::uint8* GetJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.GetJobRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.GetJobRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.GetJobRequest)
  return target;
}

size_t GetJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.GetJobRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.GetJobRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.GetJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.GetJobRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetJobRequest::MergeFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.GetJobRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetJobRequest::UnsafeMergeFrom(const GetJobRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobRequest::CopyFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.GetJobRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetJobRequest::IsInitialized() const {

  return true;
}

void GetJobRequest::Swap(GetJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJobRequest::InternalSwap(GetJobRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetJobRequest_descriptor_;
  metadata.reflection = GetJobRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetJobRequest

// optional string name = 1;
void GetJobRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetJobRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.GetJobRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetJobRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.GetJobRequest.name)
}
void GetJobRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.GetJobRequest.name)
}
void GetJobRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.GetJobRequest.name)
}
::std::string* GetJobRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.GetJobRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetJobRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.GetJobRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetJobRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.GetJobRequest.name)
}

inline const GetJobRequest* GetJobRequest::internal_default_instance() {
  return &GetJobRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelJobRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelJobRequest::CancelJobRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.ml.v1beta1.CancelJobRequest)
}

void CancelJobRequest::InitAsDefaultInstance() {
}

CancelJobRequest::CancelJobRequest(const CancelJobRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.cloud.ml.v1beta1.CancelJobRequest)
}

void CancelJobRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelJobRequest::~CancelJobRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.ml.v1beta1.CancelJobRequest)
  SharedDtor();
}

void CancelJobRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelJobRequest_descriptor_;
}

const CancelJobRequest& CancelJobRequest::default_instance() {
  protobuf_InitDefaults_google_2fcloud_2fml_2fv1beta1_2fjob_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CancelJobRequest> CancelJobRequest_default_instance_;

CancelJobRequest* CancelJobRequest::New(::google::protobuf::Arena* arena) const {
  CancelJobRequest* n = new CancelJobRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.ml.v1beta1.CancelJobRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CancelJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.ml.v1beta1.CancelJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.ml.v1beta1.CancelJobRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.ml.v1beta1.CancelJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.ml.v1beta1.CancelJobRequest)
  return false;
#undef DO_
}

void CancelJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.ml.v1beta1.CancelJobRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.CancelJobRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.cloud.ml.v1beta1.CancelJobRequest)
}

::google::protobuf::uint8* CancelJobRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.ml.v1beta1.CancelJobRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.ml.v1beta1.CancelJobRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.ml.v1beta1.CancelJobRequest)
  return target;
}

size_t CancelJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.ml.v1beta1.CancelJobRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.ml.v1beta1.CancelJobRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CancelJobRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelJobRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.ml.v1beta1.CancelJobRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.ml.v1beta1.CancelJobRequest)
    UnsafeMergeFrom(*source);
  }
}

void CancelJobRequest::MergeFrom(const CancelJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.ml.v1beta1.CancelJobRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CancelJobRequest::UnsafeMergeFrom(const CancelJobRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CancelJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.ml.v1beta1.CancelJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelJobRequest::CopyFrom(const CancelJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.ml.v1beta1.CancelJobRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CancelJobRequest::IsInitialized() const {

  return true;
}

void CancelJobRequest::Swap(CancelJobRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelJobRequest::InternalSwap(CancelJobRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CancelJobRequest_descriptor_;
  metadata.reflection = CancelJobRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelJobRequest

// optional string name = 1;
void CancelJobRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelJobRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.ml.v1beta1.CancelJobRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelJobRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.ml.v1beta1.CancelJobRequest.name)
}
void CancelJobRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.ml.v1beta1.CancelJobRequest.name)
}
void CancelJobRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.ml.v1beta1.CancelJobRequest.name)
}
::std::string* CancelJobRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.ml.v1beta1.CancelJobRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelJobRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.ml.v1beta1.CancelJobRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelJobRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.ml.v1beta1.CancelJobRequest.name)
}

inline const CancelJobRequest* CancelJobRequest::internal_default_instance() {
  return &CancelJobRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace ml
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)
