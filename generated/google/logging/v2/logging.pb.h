// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging.proto

#ifndef PROTOBUF_google_2flogging_2fv2_2flogging_2eproto__INCLUDED
#define PROTOBUF_google_2flogging_2fv2_2flogging_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/monitored_resource.pb.h"
#include "google/logging/v2/log_entry.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
class MonitoredResource;
class MonitoredResourceDefaultTypeInternal;
extern MonitoredResourceDefaultTypeInternal _MonitoredResource_default_instance_;
class MonitoredResourceDescriptor;
class MonitoredResourceDescriptorDefaultTypeInternal;
extern MonitoredResourceDescriptorDefaultTypeInternal _MonitoredResourceDescriptor_default_instance_;
}  // namespace api
namespace logging {
namespace v2 {
class DeleteLogRequest;
class DeleteLogRequestDefaultTypeInternal;
extern DeleteLogRequestDefaultTypeInternal _DeleteLogRequest_default_instance_;
class ListLogEntriesRequest;
class ListLogEntriesRequestDefaultTypeInternal;
extern ListLogEntriesRequestDefaultTypeInternal _ListLogEntriesRequest_default_instance_;
class ListLogEntriesResponse;
class ListLogEntriesResponseDefaultTypeInternal;
extern ListLogEntriesResponseDefaultTypeInternal _ListLogEntriesResponse_default_instance_;
class ListMonitoredResourceDescriptorsRequest;
class ListMonitoredResourceDescriptorsRequestDefaultTypeInternal;
extern ListMonitoredResourceDescriptorsRequestDefaultTypeInternal _ListMonitoredResourceDescriptorsRequest_default_instance_;
class ListMonitoredResourceDescriptorsResponse;
class ListMonitoredResourceDescriptorsResponseDefaultTypeInternal;
extern ListMonitoredResourceDescriptorsResponseDefaultTypeInternal _ListMonitoredResourceDescriptorsResponse_default_instance_;
class LogEntry;
class LogEntryDefaultTypeInternal;
extern LogEntryDefaultTypeInternal _LogEntry_default_instance_;
class LogEntryOperation;
class LogEntryOperationDefaultTypeInternal;
extern LogEntryOperationDefaultTypeInternal _LogEntryOperation_default_instance_;
class WriteLogEntriesRequest;
class WriteLogEntriesRequestDefaultTypeInternal;
extern WriteLogEntriesRequestDefaultTypeInternal _WriteLogEntriesRequest_default_instance_;
class WriteLogEntriesResponse;
class WriteLogEntriesResponseDefaultTypeInternal;
extern WriteLogEntriesResponseDefaultTypeInternal _WriteLogEntriesResponse_default_instance_;
}  // namespace v2
}  // namespace logging
namespace protobuf {
class Duration;
class DurationDefaultTypeInternal;
extern DurationDefaultTypeInternal _Duration_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
namespace rpc {
class Status;
class StatusDefaultTypeInternal;
extern StatusDefaultTypeInternal _Status_default_instance_;
}  // namespace rpc
}  // namespace google

namespace google {
namespace logging {
namespace v2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto();
void protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto();

// ===================================================================

class DeleteLogRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.logging.v2.DeleteLogRequest) */ {
 public:
  DeleteLogRequest();
  virtual ~DeleteLogRequest();

  DeleteLogRequest(const DeleteLogRequest& from);

  inline DeleteLogRequest& operator=(const DeleteLogRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteLogRequest& default_instance();

  static inline const DeleteLogRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteLogRequest*>(
               &_DeleteLogRequest_default_instance_);
  }

  void UnsafeArenaSwap(DeleteLogRequest* other);
  void Swap(DeleteLogRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteLogRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteLogRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteLogRequest& from);
  void MergeFrom(const DeleteLogRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteLogRequest* other);
  protected:
  explicit DeleteLogRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string log_name = 1;
  void clear_log_name();
  static const int kLogNameFieldNumber = 1;
  const ::std::string& log_name() const;
  void set_log_name(const ::std::string& value);
  void set_log_name(const char* value);
  void set_log_name(const char* value, size_t size);
  ::std::string* mutable_log_name();
  ::std::string* release_log_name();
  void set_allocated_log_name(::std::string* log_name);
  ::std::string* unsafe_arena_release_log_name();
  void unsafe_arena_set_allocated_log_name(
      ::std::string* log_name);

  // @@protoc_insertion_point(class_scope:google.logging.v2.DeleteLogRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr log_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto();

};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class WriteLogEntriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.logging.v2.WriteLogEntriesRequest) */ {
 public:
  WriteLogEntriesRequest();
  virtual ~WriteLogEntriesRequest();

  WriteLogEntriesRequest(const WriteLogEntriesRequest& from);

  inline WriteLogEntriesRequest& operator=(const WriteLogEntriesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteLogEntriesRequest& default_instance();

  static inline const WriteLogEntriesRequest* internal_default_instance() {
    return reinterpret_cast<const WriteLogEntriesRequest*>(
               &_WriteLogEntriesRequest_default_instance_);
  }

  void UnsafeArenaSwap(WriteLogEntriesRequest* other);
  void Swap(WriteLogEntriesRequest* other);

  // implements Message ----------------------------------------------

  inline WriteLogEntriesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteLogEntriesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteLogEntriesRequest& from);
  void MergeFrom(const WriteLogEntriesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteLogEntriesRequest* other);
  protected:
  explicit WriteLogEntriesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // string log_name = 1;
  void clear_log_name();
  static const int kLogNameFieldNumber = 1;
  const ::std::string& log_name() const;
  void set_log_name(const ::std::string& value);
  void set_log_name(const char* value);
  void set_log_name(const char* value, size_t size);
  ::std::string* mutable_log_name();
  ::std::string* release_log_name();
  void set_allocated_log_name(::std::string* log_name);
  ::std::string* unsafe_arena_release_log_name();
  void unsafe_arena_set_allocated_log_name(
      ::std::string* log_name);

  // .google.api.MonitoredResource resource = 2;
  bool has_resource() const;
  void clear_resource();
  static const int kResourceFieldNumber = 2;
  private:
  void _slow_mutable_resource();
  void _slow_set_allocated_resource(
      ::google::protobuf::Arena* message_arena, ::google::api::MonitoredResource** resource);
  ::google::api::MonitoredResource* _slow_release_resource();
  public:
  const ::google::api::MonitoredResource& resource() const;
  ::google::api::MonitoredResource* mutable_resource();
  ::google::api::MonitoredResource* release_resource();
  void set_allocated_resource(::google::api::MonitoredResource* resource);
  ::google::api::MonitoredResource* unsafe_arena_release_resource();
  void unsafe_arena_set_allocated_resource(
      ::google::api::MonitoredResource* resource);

  // map<string, string> labels = 3;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // repeated .google.logging.v2.LogEntry entries = 4;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 4;
  const ::google::logging::v2::LogEntry& entries(int index) const;
  ::google::logging::v2::LogEntry* mutable_entries(int index);
  ::google::logging::v2::LogEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >&
      entries() const;

  // bool partial_success = 5;
  void clear_partial_success();
  static const int kPartialSuccessFieldNumber = 5;
  bool partial_success() const;
  void set_partial_success(bool value);

  // @@protoc_insertion_point(class_scope:google.logging.v2.WriteLogEntriesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      WriteLogEntriesRequest_LabelsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry > entries_;
  ::google::protobuf::internal::ArenaStringPtr log_name_;
  ::google::api::MonitoredResource* resource_;
  bool partial_success_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto();

};
// -------------------------------------------------------------------

class WriteLogEntriesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.logging.v2.WriteLogEntriesResponse) */ {
 public:
  WriteLogEntriesResponse();
  virtual ~WriteLogEntriesResponse();

  WriteLogEntriesResponse(const WriteLogEntriesResponse& from);

  inline WriteLogEntriesResponse& operator=(const WriteLogEntriesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteLogEntriesResponse& default_instance();

  static inline const WriteLogEntriesResponse* internal_default_instance() {
    return reinterpret_cast<const WriteLogEntriesResponse*>(
               &_WriteLogEntriesResponse_default_instance_);
  }

  void UnsafeArenaSwap(WriteLogEntriesResponse* other);
  void Swap(WriteLogEntriesResponse* other);

  // implements Message ----------------------------------------------

  inline WriteLogEntriesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteLogEntriesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteLogEntriesResponse& from);
  void MergeFrom(const WriteLogEntriesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteLogEntriesResponse* other);
  protected:
  explicit WriteLogEntriesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.logging.v2.WriteLogEntriesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto();

};
// -------------------------------------------------------------------

class ListLogEntriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.logging.v2.ListLogEntriesRequest) */ {
 public:
  ListLogEntriesRequest();
  virtual ~ListLogEntriesRequest();

  ListLogEntriesRequest(const ListLogEntriesRequest& from);

  inline ListLogEntriesRequest& operator=(const ListLogEntriesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListLogEntriesRequest& default_instance();

  static inline const ListLogEntriesRequest* internal_default_instance() {
    return reinterpret_cast<const ListLogEntriesRequest*>(
               &_ListLogEntriesRequest_default_instance_);
  }

  void UnsafeArenaSwap(ListLogEntriesRequest* other);
  void Swap(ListLogEntriesRequest* other);

  // implements Message ----------------------------------------------

  inline ListLogEntriesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListLogEntriesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListLogEntriesRequest& from);
  void MergeFrom(const ListLogEntriesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListLogEntriesRequest* other);
  protected:
  explicit ListLogEntriesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string project_ids = 1;
  int project_ids_size() const;
  void clear_project_ids();
  static const int kProjectIdsFieldNumber = 1;
  const ::std::string& project_ids(int index) const;
  ::std::string* mutable_project_ids(int index);
  void set_project_ids(int index, const ::std::string& value);
  void set_project_ids(int index, const char* value);
  void set_project_ids(int index, const char* value, size_t size);
  ::std::string* add_project_ids();
  void add_project_ids(const ::std::string& value);
  void add_project_ids(const char* value);
  void add_project_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& project_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_project_ids();

  // repeated string resource_names = 8;
  int resource_names_size() const;
  void clear_resource_names();
  static const int kResourceNamesFieldNumber = 8;
  const ::std::string& resource_names(int index) const;
  ::std::string* mutable_resource_names(int index);
  void set_resource_names(int index, const ::std::string& value);
  void set_resource_names(int index, const char* value);
  void set_resource_names(int index, const char* value, size_t size);
  ::std::string* add_resource_names();
  void add_resource_names(const ::std::string& value);
  void add_resource_names(const char* value);
  void add_resource_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& resource_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resource_names();

  // string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);
  ::std::string* unsafe_arena_release_filter();
  void unsafe_arena_set_allocated_filter(
      ::std::string* filter);

  // string order_by = 3;
  void clear_order_by();
  static const int kOrderByFieldNumber = 3;
  const ::std::string& order_by() const;
  void set_order_by(const ::std::string& value);
  void set_order_by(const char* value);
  void set_order_by(const char* value, size_t size);
  ::std::string* mutable_order_by();
  ::std::string* release_order_by();
  void set_allocated_order_by(::std::string* order_by);
  ::std::string* unsafe_arena_release_order_by();
  void unsafe_arena_set_allocated_order_by(
      ::std::string* order_by);

  // int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 5;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 5;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.logging.v2.ListLogEntriesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> project_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resource_names_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::internal::ArenaStringPtr order_by_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto();

};
// -------------------------------------------------------------------

class ListLogEntriesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.logging.v2.ListLogEntriesResponse) */ {
 public:
  ListLogEntriesResponse();
  virtual ~ListLogEntriesResponse();

  ListLogEntriesResponse(const ListLogEntriesResponse& from);

  inline ListLogEntriesResponse& operator=(const ListLogEntriesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListLogEntriesResponse& default_instance();

  static inline const ListLogEntriesResponse* internal_default_instance() {
    return reinterpret_cast<const ListLogEntriesResponse*>(
               &_ListLogEntriesResponse_default_instance_);
  }

  void UnsafeArenaSwap(ListLogEntriesResponse* other);
  void Swap(ListLogEntriesResponse* other);

  // implements Message ----------------------------------------------

  inline ListLogEntriesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListLogEntriesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListLogEntriesResponse& from);
  void MergeFrom(const ListLogEntriesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListLogEntriesResponse* other);
  protected:
  explicit ListLogEntriesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.logging.v2.LogEntry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::google::logging::v2::LogEntry& entries(int index) const;
  ::google::logging::v2::LogEntry* mutable_entries(int index);
  ::google::logging::v2::LogEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >&
      entries() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.logging.v2.ListLogEntriesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry > entries_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto();

};
// -------------------------------------------------------------------

class ListMonitoredResourceDescriptorsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.logging.v2.ListMonitoredResourceDescriptorsRequest) */ {
 public:
  ListMonitoredResourceDescriptorsRequest();
  virtual ~ListMonitoredResourceDescriptorsRequest();

  ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from);

  inline ListMonitoredResourceDescriptorsRequest& operator=(const ListMonitoredResourceDescriptorsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListMonitoredResourceDescriptorsRequest& default_instance();

  static inline const ListMonitoredResourceDescriptorsRequest* internal_default_instance() {
    return reinterpret_cast<const ListMonitoredResourceDescriptorsRequest*>(
               &_ListMonitoredResourceDescriptorsRequest_default_instance_);
  }

  void UnsafeArenaSwap(ListMonitoredResourceDescriptorsRequest* other);
  void Swap(ListMonitoredResourceDescriptorsRequest* other);

  // implements Message ----------------------------------------------

  inline ListMonitoredResourceDescriptorsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListMonitoredResourceDescriptorsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListMonitoredResourceDescriptorsRequest& from);
  void MergeFrom(const ListMonitoredResourceDescriptorsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListMonitoredResourceDescriptorsRequest* other);
  protected:
  explicit ListMonitoredResourceDescriptorsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 page_size = 1;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 1;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto();

};
// -------------------------------------------------------------------

class ListMonitoredResourceDescriptorsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.logging.v2.ListMonitoredResourceDescriptorsResponse) */ {
 public:
  ListMonitoredResourceDescriptorsResponse();
  virtual ~ListMonitoredResourceDescriptorsResponse();

  ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from);

  inline ListMonitoredResourceDescriptorsResponse& operator=(const ListMonitoredResourceDescriptorsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListMonitoredResourceDescriptorsResponse& default_instance();

  static inline const ListMonitoredResourceDescriptorsResponse* internal_default_instance() {
    return reinterpret_cast<const ListMonitoredResourceDescriptorsResponse*>(
               &_ListMonitoredResourceDescriptorsResponse_default_instance_);
  }

  void UnsafeArenaSwap(ListMonitoredResourceDescriptorsResponse* other);
  void Swap(ListMonitoredResourceDescriptorsResponse* other);

  // implements Message ----------------------------------------------

  inline ListMonitoredResourceDescriptorsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListMonitoredResourceDescriptorsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListMonitoredResourceDescriptorsResponse& from);
  void MergeFrom(const ListMonitoredResourceDescriptorsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListMonitoredResourceDescriptorsResponse* other);
  protected:
  explicit ListMonitoredResourceDescriptorsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  int resource_descriptors_size() const;
  void clear_resource_descriptors();
  static const int kResourceDescriptorsFieldNumber = 1;
  const ::google::api::MonitoredResourceDescriptor& resource_descriptors(int index) const;
  ::google::api::MonitoredResourceDescriptor* mutable_resource_descriptors(int index);
  ::google::api::MonitoredResourceDescriptor* add_resource_descriptors();
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
      mutable_resource_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
      resource_descriptors() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor > resource_descriptors_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2flogging_2fv2_2flogging_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2flogging_2fv2_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2flogging_2fv2_2flogging_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteLogRequest

// string log_name = 1;
inline void DeleteLogRequest::clear_log_name() {
  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteLogRequest::log_name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.DeleteLogRequest.log_name)
  return log_name_.Get();
}
inline void DeleteLogRequest::set_log_name(const ::std::string& value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.DeleteLogRequest.log_name)
}
inline void DeleteLogRequest::set_log_name(const char* value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.DeleteLogRequest.log_name)
}
inline void DeleteLogRequest::set_log_name(const char* value,
    size_t size) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.DeleteLogRequest.log_name)
}
inline ::std::string* DeleteLogRequest::mutable_log_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.DeleteLogRequest.log_name)
  return log_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteLogRequest::release_log_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.DeleteLogRequest.log_name)
  
  return log_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteLogRequest::unsafe_arena_release_log_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.DeleteLogRequest.log_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return log_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteLogRequest::set_allocated_log_name(::std::string* log_name) {
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.DeleteLogRequest.log_name)
}
inline void DeleteLogRequest::unsafe_arena_set_allocated_log_name(
    ::std::string* log_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      log_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.DeleteLogRequest.log_name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WriteLogEntriesRequest

// string log_name = 1;
inline void WriteLogEntriesRequest::clear_log_name() {
  log_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& WriteLogEntriesRequest::log_name() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.log_name)
  return log_name_.Get();
}
inline void WriteLogEntriesRequest::set_log_name(const ::std::string& value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.WriteLogEntriesRequest.log_name)
}
inline void WriteLogEntriesRequest::set_log_name(const char* value) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.WriteLogEntriesRequest.log_name)
}
inline void WriteLogEntriesRequest::set_log_name(const char* value,
    size_t size) {
  
  log_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.WriteLogEntriesRequest.log_name)
}
inline ::std::string* WriteLogEntriesRequest::mutable_log_name() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.WriteLogEntriesRequest.log_name)
  return log_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* WriteLogEntriesRequest::release_log_name() {
  // @@protoc_insertion_point(field_release:google.logging.v2.WriteLogEntriesRequest.log_name)
  
  return log_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* WriteLogEntriesRequest::unsafe_arena_release_log_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.WriteLogEntriesRequest.log_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return log_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void WriteLogEntriesRequest::set_allocated_log_name(::std::string* log_name) {
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.WriteLogEntriesRequest.log_name)
}
inline void WriteLogEntriesRequest::unsafe_arena_set_allocated_log_name(
    ::std::string* log_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (log_name != NULL) {
    
  } else {
    
  }
  log_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      log_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.WriteLogEntriesRequest.log_name)
}

// .google.api.MonitoredResource resource = 2;
inline bool WriteLogEntriesRequest::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
inline void WriteLogEntriesRequest::clear_resource() {
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) delete resource_;
  resource_ = NULL;
}
inline const ::google::api::MonitoredResource& WriteLogEntriesRequest::resource() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.resource)
  return resource_ != NULL ? *resource_
                         : *::google::api::MonitoredResource::internal_default_instance();
}
inline ::google::api::MonitoredResource* WriteLogEntriesRequest::mutable_resource() {
  
  if (resource_ == NULL) {
    _slow_mutable_resource();
  }
  // @@protoc_insertion_point(field_mutable:google.logging.v2.WriteLogEntriesRequest.resource)
  return resource_;
}
inline ::google::api::MonitoredResource* WriteLogEntriesRequest::release_resource() {
  // @@protoc_insertion_point(field_release:google.logging.v2.WriteLogEntriesRequest.resource)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_resource();
  } else {
    ::google::api::MonitoredResource* temp = resource_;
    resource_ = NULL;
    return temp;
  }
}
inline  void WriteLogEntriesRequest::set_allocated_resource(::google::api::MonitoredResource* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resource_;
  }
  if (resource != NULL) {
    _slow_set_allocated_resource(message_arena, &resource);
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.WriteLogEntriesRequest.resource)
}

// map<string, string> labels = 3;
inline int WriteLogEntriesRequest::labels_size() const {
  return labels_.size();
}
inline void WriteLogEntriesRequest::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
WriteLogEntriesRequest::labels() const {
  // @@protoc_insertion_point(field_map:google.logging.v2.WriteLogEntriesRequest.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
WriteLogEntriesRequest::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.logging.v2.WriteLogEntriesRequest.labels)
  return labels_.MutableMap();
}

// repeated .google.logging.v2.LogEntry entries = 4;
inline int WriteLogEntriesRequest::entries_size() const {
  return entries_.size();
}
inline void WriteLogEntriesRequest::clear_entries() {
  entries_.Clear();
}
inline const ::google::logging::v2::LogEntry& WriteLogEntriesRequest::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_.Get(index);
}
inline ::google::logging::v2::LogEntry* WriteLogEntriesRequest::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_.Mutable(index);
}
inline ::google::logging::v2::LogEntry* WriteLogEntriesRequest::add_entries() {
  // @@protoc_insertion_point(field_add:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >*
WriteLogEntriesRequest::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.WriteLogEntriesRequest.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >&
WriteLogEntriesRequest::entries() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.WriteLogEntriesRequest.entries)
  return entries_;
}

// bool partial_success = 5;
inline void WriteLogEntriesRequest::clear_partial_success() {
  partial_success_ = false;
}
inline bool WriteLogEntriesRequest::partial_success() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.WriteLogEntriesRequest.partial_success)
  return partial_success_;
}
inline void WriteLogEntriesRequest::set_partial_success(bool value) {
  
  partial_success_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.WriteLogEntriesRequest.partial_success)
}

// -------------------------------------------------------------------

// WriteLogEntriesResponse

// -------------------------------------------------------------------

// ListLogEntriesRequest

// repeated string project_ids = 1;
inline int ListLogEntriesRequest::project_ids_size() const {
  return project_ids_.size();
}
inline void ListLogEntriesRequest::clear_project_ids() {
  project_ids_.Clear();
}
inline const ::std::string& ListLogEntriesRequest::project_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_.Get(index);
}
inline ::std::string* ListLogEntriesRequest::mutable_project_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_.Mutable(index);
}
inline void ListLogEntriesRequest::set_project_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.project_ids)
  project_ids_.Mutable(index)->assign(value);
}
inline void ListLogEntriesRequest::set_project_ids(int index, const char* value) {
  project_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.project_ids)
}
inline void ListLogEntriesRequest::set_project_ids(int index, const char* value, size_t size) {
  project_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.project_ids)
}
inline ::std::string* ListLogEntriesRequest::add_project_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_.Add();
}
inline void ListLogEntriesRequest::add_project_ids(const ::std::string& value) {
  project_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.logging.v2.ListLogEntriesRequest.project_ids)
}
inline void ListLogEntriesRequest::add_project_ids(const char* value) {
  project_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.logging.v2.ListLogEntriesRequest.project_ids)
}
inline void ListLogEntriesRequest::add_project_ids(const char* value, size_t size) {
  project_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.logging.v2.ListLogEntriesRequest.project_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListLogEntriesRequest::project_ids() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListLogEntriesRequest.project_ids)
  return project_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListLogEntriesRequest::mutable_project_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListLogEntriesRequest.project_ids)
  return &project_ids_;
}

// repeated string resource_names = 8;
inline int ListLogEntriesRequest::resource_names_size() const {
  return resource_names_.size();
}
inline void ListLogEntriesRequest::clear_resource_names() {
  resource_names_.Clear();
}
inline const ::std::string& ListLogEntriesRequest::resource_names(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_.Get(index);
}
inline ::std::string* ListLogEntriesRequest::mutable_resource_names(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_.Mutable(index);
}
inline void ListLogEntriesRequest::set_resource_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.resource_names)
  resource_names_.Mutable(index)->assign(value);
}
inline void ListLogEntriesRequest::set_resource_names(int index, const char* value) {
  resource_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.resource_names)
}
inline void ListLogEntriesRequest::set_resource_names(int index, const char* value, size_t size) {
  resource_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.resource_names)
}
inline ::std::string* ListLogEntriesRequest::add_resource_names() {
  // @@protoc_insertion_point(field_add_mutable:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_.Add();
}
inline void ListLogEntriesRequest::add_resource_names(const ::std::string& value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.logging.v2.ListLogEntriesRequest.resource_names)
}
inline void ListLogEntriesRequest::add_resource_names(const char* value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.logging.v2.ListLogEntriesRequest.resource_names)
}
inline void ListLogEntriesRequest::add_resource_names(const char* value, size_t size) {
  resource_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.logging.v2.ListLogEntriesRequest.resource_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListLogEntriesRequest::resource_names() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListLogEntriesRequest.resource_names)
  return resource_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListLogEntriesRequest::mutable_resource_names() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListLogEntriesRequest.resource_names)
  return &resource_names_;
}

// string filter = 2;
inline void ListLogEntriesRequest::clear_filter() {
  filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListLogEntriesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.filter)
  return filter_.Get();
}
inline void ListLogEntriesRequest::set_filter(const ::std::string& value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.filter)
}
inline void ListLogEntriesRequest::set_filter(const char* value) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.filter)
}
inline void ListLogEntriesRequest::set_filter(const char* value,
    size_t size) {
  
  filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.filter)
}
inline ::std::string* ListLogEntriesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.filter)
  return filter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesRequest.filter)
  
  return filter_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesRequest::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesRequest.filter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return filter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListLogEntriesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesRequest.filter)
}
inline void ListLogEntriesRequest::unsafe_arena_set_allocated_filter(
    ::std::string* filter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      filter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesRequest.filter)
}

// string order_by = 3;
inline void ListLogEntriesRequest::clear_order_by() {
  order_by_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListLogEntriesRequest::order_by() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.order_by)
  return order_by_.Get();
}
inline void ListLogEntriesRequest::set_order_by(const ::std::string& value) {
  
  order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.order_by)
}
inline void ListLogEntriesRequest::set_order_by(const char* value) {
  
  order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.order_by)
}
inline void ListLogEntriesRequest::set_order_by(const char* value,
    size_t size) {
  
  order_by_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.order_by)
}
inline ::std::string* ListLogEntriesRequest::mutable_order_by() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.order_by)
  return order_by_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesRequest::release_order_by() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesRequest.order_by)
  
  return order_by_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesRequest::unsafe_arena_release_order_by() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesRequest.order_by)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return order_by_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListLogEntriesRequest::set_allocated_order_by(::std::string* order_by) {
  if (order_by != NULL) {
    
  } else {
    
  }
  order_by_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_by,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesRequest.order_by)
}
inline void ListLogEntriesRequest::unsafe_arena_set_allocated_order_by(
    ::std::string* order_by) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (order_by != NULL) {
    
  } else {
    
  }
  order_by_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      order_by, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesRequest.order_by)
}

// int32 page_size = 4;
inline void ListLogEntriesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListLogEntriesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.page_size)
  return page_size_;
}
inline void ListLogEntriesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.page_size)
}

// string page_token = 5;
inline void ListLogEntriesRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListLogEntriesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesRequest.page_token)
  return page_token_.Get();
}
inline void ListLogEntriesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesRequest.page_token)
}
inline void ListLogEntriesRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesRequest.page_token)
}
inline void ListLogEntriesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesRequest.page_token)
}
inline ::std::string* ListLogEntriesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListLogEntriesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesRequest.page_token)
}
inline void ListLogEntriesRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesRequest.page_token)
}

// -------------------------------------------------------------------

// ListLogEntriesResponse

// repeated .google.logging.v2.LogEntry entries = 1;
inline int ListLogEntriesResponse::entries_size() const {
  return entries_.size();
}
inline void ListLogEntriesResponse::clear_entries() {
  entries_.Clear();
}
inline const ::google::logging::v2::LogEntry& ListLogEntriesResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_.Get(index);
}
inline ::google::logging::v2::LogEntry* ListLogEntriesResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_.Mutable(index);
}
inline ::google::logging::v2::LogEntry* ListLogEntriesResponse::add_entries() {
  // @@protoc_insertion_point(field_add:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >*
ListLogEntriesResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListLogEntriesResponse.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::logging::v2::LogEntry >&
ListLogEntriesResponse::entries() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListLogEntriesResponse.entries)
  return entries_;
}

// string next_page_token = 2;
inline void ListLogEntriesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListLogEntriesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListLogEntriesResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListLogEntriesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
inline void ListLogEntriesResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
inline void ListLogEntriesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
inline ::std::string* ListLogEntriesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListLogEntriesResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListLogEntriesResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListLogEntriesResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListLogEntriesResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListLogEntriesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListLogEntriesResponse.next_page_token)
}
inline void ListLogEntriesResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListLogEntriesResponse.next_page_token)
}

// -------------------------------------------------------------------

// ListMonitoredResourceDescriptorsRequest

// int32 page_size = 1;
inline void ListMonitoredResourceDescriptorsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListMonitoredResourceDescriptorsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_size)
  return page_size_;
}
inline void ListMonitoredResourceDescriptorsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_size)
}

// string page_token = 2;
inline void ListMonitoredResourceDescriptorsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListMonitoredResourceDescriptorsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.Get();
}
inline void ListMonitoredResourceDescriptorsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
inline void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
inline void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListMonitoredResourceDescriptorsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListMonitoredResourceDescriptorsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}
inline void ListMonitoredResourceDescriptorsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token)
}

// -------------------------------------------------------------------

// ListMonitoredResourceDescriptorsResponse

// repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
inline int ListMonitoredResourceDescriptorsResponse::resource_descriptors_size() const {
  return resource_descriptors_.size();
}
inline void ListMonitoredResourceDescriptorsResponse::clear_resource_descriptors() {
  resource_descriptors_.Clear();
}
inline const ::google::api::MonitoredResourceDescriptor& ListMonitoredResourceDescriptorsResponse::resource_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Get(index);
}
inline ::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Mutable(index);
}
inline ::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::add_resource_descriptors() {
  // @@protoc_insertion_point(field_add:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return &resource_descriptors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
ListMonitoredResourceDescriptorsResponse::resource_descriptors() const {
  // @@protoc_insertion_point(field_list:google.logging.v2.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_;
}

// string next_page_token = 2;
inline void ListMonitoredResourceDescriptorsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListMonitoredResourceDescriptorsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
inline void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
inline void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
inline ::std::string* ListMonitoredResourceDescriptorsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListMonitoredResourceDescriptorsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListMonitoredResourceDescriptorsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListMonitoredResourceDescriptorsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
inline void ListMonitoredResourceDescriptorsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v2
}  // namespace logging
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2flogging_2fv2_2flogging_2eproto__INCLUDED
