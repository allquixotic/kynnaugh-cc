// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudbuild/v1/cloudbuild.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/cloudbuild/v1/cloudbuild.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace cloudbuild {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* StorageSource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StorageSource_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepoSource_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepoSource_reflection_ = NULL;
struct RepoSourceOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr branch_name_;
  ::google::protobuf::internal::ArenaStringPtr tag_name_;
  ::google::protobuf::internal::ArenaStringPtr commit_sha_;
}* RepoSource_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Source_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Source_reflection_ = NULL;
struct SourceOneofInstance {
  const ::google::devtools::cloudbuild::v1::StorageSource* storage_source_;
  const ::google::devtools::cloudbuild::v1::RepoSource* repo_source_;
}* Source_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* BuiltImage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuiltImage_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildStep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildStep_reflection_ = NULL;
const ::google::protobuf::Descriptor* Results_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Results_reflection_ = NULL;
const ::google::protobuf::Descriptor* Build_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Build_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Build_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BuildOperationMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildOperationMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* SourceProvenance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SourceProvenance_reflection_ = NULL;
const ::google::protobuf::Descriptor* SourceProvenance_FileHashesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* FileHashes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileHashes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Hash_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Hash_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Hash_HashType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CreateBuildRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateBuildRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBuildRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBuildRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListBuildsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListBuildsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListBuildsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListBuildsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CancelBuildRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CancelBuildRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildTrigger_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildTrigger_reflection_ = NULL;
struct BuildTriggerOneofInstance {
  const ::google::devtools::cloudbuild::v1::Build* build_;
}* BuildTrigger_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* CreateBuildTriggerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateBuildTriggerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBuildTriggerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBuildTriggerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListBuildTriggersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListBuildTriggersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListBuildTriggersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListBuildTriggersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteBuildTriggerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteBuildTriggerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateBuildTriggerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateBuildTriggerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuildOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuildOptions_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BuildOptions_VerifyOption_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto() {
  protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/devtools/cloudbuild/v1/cloudbuild.proto");
  GOOGLE_CHECK(file != NULL);
  StorageSource_descriptor_ = file->message_type(0);
  static const int StorageSource_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, bucket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, generation_),
  };
  StorageSource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StorageSource_descriptor_,
      StorageSource::default_instance_,
      StorageSource_offsets_,
      -1,
      -1,
      -1,
      sizeof(StorageSource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StorageSource, _is_default_instance_));
  RepoSource_descriptor_ = file->message_type(1);
  static const int RepoSource_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, repo_name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(RepoSource_default_oneof_instance_, branch_name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(RepoSource_default_oneof_instance_, tag_name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(RepoSource_default_oneof_instance_, commit_sha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, revision_),
  };
  RepoSource_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RepoSource_descriptor_,
      RepoSource::default_instance_,
      RepoSource_offsets_,
      -1,
      -1,
      -1,
      RepoSource_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, _oneof_case_[0]),
      sizeof(RepoSource),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepoSource, _is_default_instance_));
  Source_descriptor_ = file->message_type(2);
  static const int Source_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Source_default_oneof_instance_, storage_source_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Source_default_oneof_instance_, repo_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Source, source_),
  };
  Source_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Source_descriptor_,
      Source::default_instance_,
      Source_offsets_,
      -1,
      -1,
      -1,
      Source_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Source, _oneof_case_[0]),
      sizeof(Source),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Source, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Source, _is_default_instance_));
  BuiltImage_descriptor_ = file->message_type(3);
  static const int BuiltImage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuiltImage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuiltImage, digest_),
  };
  BuiltImage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BuiltImage_descriptor_,
      BuiltImage::default_instance_,
      BuiltImage_offsets_,
      -1,
      -1,
      -1,
      sizeof(BuiltImage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuiltImage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuiltImage, _is_default_instance_));
  BuildStep_descriptor_ = file->message_type(4);
  static const int BuildStep_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, env_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, wait_for_),
  };
  BuildStep_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BuildStep_descriptor_,
      BuildStep::default_instance_,
      BuildStep_offsets_,
      -1,
      -1,
      -1,
      sizeof(BuildStep),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildStep, _is_default_instance_));
  Results_descriptor_ = file->message_type(5);
  static const int Results_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, images_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, build_step_images_),
  };
  Results_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Results_descriptor_,
      Results::default_instance_,
      Results_offsets_,
      -1,
      -1,
      -1,
      sizeof(Results),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, _is_default_instance_));
  Build_descriptor_ = file->message_type(6);
  static const int Build_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, status_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, steps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, finish_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, timeout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, images_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, logs_bucket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, source_provenance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, log_url_),
  };
  Build_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Build_descriptor_,
      Build::default_instance_,
      Build_offsets_,
      -1,
      -1,
      -1,
      sizeof(Build),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Build, _is_default_instance_));
  Build_Status_descriptor_ = Build_descriptor_->enum_type(0);
  BuildOperationMetadata_descriptor_ = file->message_type(7);
  static const int BuildOperationMetadata_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOperationMetadata, build_),
  };
  BuildOperationMetadata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BuildOperationMetadata_descriptor_,
      BuildOperationMetadata::default_instance_,
      BuildOperationMetadata_offsets_,
      -1,
      -1,
      -1,
      sizeof(BuildOperationMetadata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOperationMetadata, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOperationMetadata, _is_default_instance_));
  SourceProvenance_descriptor_ = file->message_type(8);
  static const int SourceProvenance_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, resolved_storage_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, resolved_repo_source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, file_hashes_),
  };
  SourceProvenance_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SourceProvenance_descriptor_,
      SourceProvenance::default_instance_,
      SourceProvenance_offsets_,
      -1,
      -1,
      -1,
      sizeof(SourceProvenance),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceProvenance, _is_default_instance_));
  SourceProvenance_FileHashesEntry_descriptor_ = SourceProvenance_descriptor_->nested_type(0);
  FileHashes_descriptor_ = file->message_type(9);
  static const int FileHashes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHashes, file_hash_),
  };
  FileHashes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileHashes_descriptor_,
      FileHashes::default_instance_,
      FileHashes_offsets_,
      -1,
      -1,
      -1,
      sizeof(FileHashes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHashes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileHashes, _is_default_instance_));
  Hash_descriptor_ = file->message_type(10);
  static const int Hash_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hash, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hash, value_),
  };
  Hash_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Hash_descriptor_,
      Hash::default_instance_,
      Hash_offsets_,
      -1,
      -1,
      -1,
      sizeof(Hash),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hash, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Hash, _is_default_instance_));
  Hash_HashType_descriptor_ = Hash_descriptor_->enum_type(0);
  CreateBuildRequest_descriptor_ = file->message_type(11);
  static const int CreateBuildRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildRequest, build_),
  };
  CreateBuildRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateBuildRequest_descriptor_,
      CreateBuildRequest::default_instance_,
      CreateBuildRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateBuildRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildRequest, _is_default_instance_));
  GetBuildRequest_descriptor_ = file->message_type(12);
  static const int GetBuildRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildRequest, id_),
  };
  GetBuildRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBuildRequest_descriptor_,
      GetBuildRequest::default_instance_,
      GetBuildRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBuildRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildRequest, _is_default_instance_));
  ListBuildsRequest_descriptor_ = file->message_type(13);
  static const int ListBuildsRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, page_token_),
  };
  ListBuildsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListBuildsRequest_descriptor_,
      ListBuildsRequest::default_instance_,
      ListBuildsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListBuildsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsRequest, _is_default_instance_));
  ListBuildsResponse_descriptor_ = file->message_type(14);
  static const int ListBuildsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsResponse, builds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsResponse, next_page_token_),
  };
  ListBuildsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListBuildsResponse_descriptor_,
      ListBuildsResponse::default_instance_,
      ListBuildsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListBuildsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildsResponse, _is_default_instance_));
  CancelBuildRequest_descriptor_ = file->message_type(15);
  static const int CancelBuildRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelBuildRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelBuildRequest, id_),
  };
  CancelBuildRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CancelBuildRequest_descriptor_,
      CancelBuildRequest::default_instance_,
      CancelBuildRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CancelBuildRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelBuildRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelBuildRequest, _is_default_instance_));
  BuildTrigger_descriptor_ = file->message_type(16);
  static const int BuildTrigger_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, trigger_template_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(BuildTrigger_default_oneof_instance_, build_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, build_template_),
  };
  BuildTrigger_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BuildTrigger_descriptor_,
      BuildTrigger::default_instance_,
      BuildTrigger_offsets_,
      -1,
      -1,
      -1,
      BuildTrigger_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, _oneof_case_[0]),
      sizeof(BuildTrigger),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildTrigger, _is_default_instance_));
  CreateBuildTriggerRequest_descriptor_ = file->message_type(17);
  static const int CreateBuildTriggerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildTriggerRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildTriggerRequest, trigger_),
  };
  CreateBuildTriggerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateBuildTriggerRequest_descriptor_,
      CreateBuildTriggerRequest::default_instance_,
      CreateBuildTriggerRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateBuildTriggerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildTriggerRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateBuildTriggerRequest, _is_default_instance_));
  GetBuildTriggerRequest_descriptor_ = file->message_type(18);
  static const int GetBuildTriggerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildTriggerRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildTriggerRequest, trigger_id_),
  };
  GetBuildTriggerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBuildTriggerRequest_descriptor_,
      GetBuildTriggerRequest::default_instance_,
      GetBuildTriggerRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBuildTriggerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildTriggerRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBuildTriggerRequest, _is_default_instance_));
  ListBuildTriggersRequest_descriptor_ = file->message_type(19);
  static const int ListBuildTriggersRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersRequest, project_id_),
  };
  ListBuildTriggersRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListBuildTriggersRequest_descriptor_,
      ListBuildTriggersRequest::default_instance_,
      ListBuildTriggersRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListBuildTriggersRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersRequest, _is_default_instance_));
  ListBuildTriggersResponse_descriptor_ = file->message_type(20);
  static const int ListBuildTriggersResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersResponse, triggers_),
  };
  ListBuildTriggersResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListBuildTriggersResponse_descriptor_,
      ListBuildTriggersResponse::default_instance_,
      ListBuildTriggersResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListBuildTriggersResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBuildTriggersResponse, _is_default_instance_));
  DeleteBuildTriggerRequest_descriptor_ = file->message_type(21);
  static const int DeleteBuildTriggerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBuildTriggerRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBuildTriggerRequest, trigger_id_),
  };
  DeleteBuildTriggerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteBuildTriggerRequest_descriptor_,
      DeleteBuildTriggerRequest::default_instance_,
      DeleteBuildTriggerRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteBuildTriggerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBuildTriggerRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBuildTriggerRequest, _is_default_instance_));
  UpdateBuildTriggerRequest_descriptor_ = file->message_type(22);
  static const int UpdateBuildTriggerRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, trigger_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, trigger_),
  };
  UpdateBuildTriggerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateBuildTriggerRequest_descriptor_,
      UpdateBuildTriggerRequest::default_instance_,
      UpdateBuildTriggerRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateBuildTriggerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateBuildTriggerRequest, _is_default_instance_));
  BuildOptions_descriptor_ = file->message_type(23);
  static const int BuildOptions_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, source_provenance_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, requested_verify_option_),
  };
  BuildOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BuildOptions_descriptor_,
      BuildOptions::default_instance_,
      BuildOptions_offsets_,
      -1,
      -1,
      -1,
      sizeof(BuildOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuildOptions, _is_default_instance_));
  BuildOptions_VerifyOption_descriptor_ = BuildOptions_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StorageSource_descriptor_, &StorageSource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RepoSource_descriptor_, &RepoSource::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Source_descriptor_, &Source::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BuiltImage_descriptor_, &BuiltImage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BuildStep_descriptor_, &BuildStep::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Results_descriptor_, &Results::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Build_descriptor_, &Build::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BuildOperationMetadata_descriptor_, &BuildOperationMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SourceProvenance_descriptor_, &SourceProvenance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SourceProvenance_FileHashesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::devtools::cloudbuild::v1::FileHashes,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SourceProvenance_FileHashesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileHashes_descriptor_, &FileHashes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Hash_descriptor_, &Hash::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateBuildRequest_descriptor_, &CreateBuildRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBuildRequest_descriptor_, &GetBuildRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListBuildsRequest_descriptor_, &ListBuildsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListBuildsResponse_descriptor_, &ListBuildsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CancelBuildRequest_descriptor_, &CancelBuildRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BuildTrigger_descriptor_, &BuildTrigger::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateBuildTriggerRequest_descriptor_, &CreateBuildTriggerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBuildTriggerRequest_descriptor_, &GetBuildTriggerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListBuildTriggersRequest_descriptor_, &ListBuildTriggersRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListBuildTriggersResponse_descriptor_, &ListBuildTriggersResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteBuildTriggerRequest_descriptor_, &DeleteBuildTriggerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateBuildTriggerRequest_descriptor_, &UpdateBuildTriggerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BuildOptions_descriptor_, &BuildOptions::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto() {
  delete StorageSource::default_instance_;
  delete StorageSource_reflection_;
  delete RepoSource::default_instance_;
  delete RepoSource_default_oneof_instance_;
  delete RepoSource_reflection_;
  delete Source::default_instance_;
  delete Source_default_oneof_instance_;
  delete Source_reflection_;
  delete BuiltImage::default_instance_;
  delete BuiltImage_reflection_;
  delete BuildStep::default_instance_;
  delete BuildStep_reflection_;
  delete Results::default_instance_;
  delete Results_reflection_;
  delete Build::default_instance_;
  delete Build_reflection_;
  delete BuildOperationMetadata::default_instance_;
  delete BuildOperationMetadata_reflection_;
  delete SourceProvenance::default_instance_;
  delete SourceProvenance_reflection_;
  delete FileHashes::default_instance_;
  delete FileHashes_reflection_;
  delete Hash::default_instance_;
  delete Hash_reflection_;
  delete CreateBuildRequest::default_instance_;
  delete CreateBuildRequest_reflection_;
  delete GetBuildRequest::default_instance_;
  delete GetBuildRequest_reflection_;
  delete ListBuildsRequest::default_instance_;
  delete ListBuildsRequest_reflection_;
  delete ListBuildsResponse::default_instance_;
  delete ListBuildsResponse_reflection_;
  delete CancelBuildRequest::default_instance_;
  delete CancelBuildRequest_reflection_;
  delete BuildTrigger::default_instance_;
  delete BuildTrigger_default_oneof_instance_;
  delete BuildTrigger_reflection_;
  delete CreateBuildTriggerRequest::default_instance_;
  delete CreateBuildTriggerRequest_reflection_;
  delete GetBuildTriggerRequest::default_instance_;
  delete GetBuildTriggerRequest_reflection_;
  delete ListBuildTriggersRequest::default_instance_;
  delete ListBuildTriggersRequest_reflection_;
  delete ListBuildTriggersResponse::default_instance_;
  delete ListBuildTriggersResponse_reflection_;
  delete DeleteBuildTriggerRequest::default_instance_;
  delete DeleteBuildTriggerRequest_reflection_;
  delete UpdateBuildTriggerRequest::default_instance_;
  delete UpdateBuildTriggerRequest_reflection_;
  delete BuildOptions::default_instance_;
  delete BuildOptions_reflection_;
}

void protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::devtools::source::v1::protobuf_AddDesc_google_2fdevtools_2fsource_2fv1_2fsource_5fcontext_2eproto();
  ::google::longrunning::protobuf_AddDesc_google_2flongrunning_2foperations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.google/devtools/cloudbuild/v1/cloudbui"
    "ld.proto\022\035google.devtools.cloudbuild.v1\032"
    "\034google/api/annotations.proto\032.google/de"
    "vtools/source/v1/source_context.proto\032#g"
    "oogle/longrunning/operations.proto\032\036goog"
    "le/protobuf/duration.proto\032\033google/proto"
    "buf/empty.proto\032\037google/protobuf/timesta"
    "mp.proto\"C\n\rStorageSource\022\016\n\006bucket\030\001 \001("
    "\t\022\016\n\006object\030\002 \001(\t\022\022\n\ngeneration\030\003 \001(\003\"\200\001"
    "\n\nRepoSource\022\022\n\nproject_id\030\001 \001(\t\022\021\n\trepo"
    "_name\030\002 \001(\t\022\025\n\013branch_name\030\003 \001(\tH\000\022\022\n\010ta"
    "g_name\030\004 \001(\tH\000\022\024\n\ncommit_sha\030\005 \001(\tH\000B\n\n\010"
    "revision\"\234\001\n\006Source\022F\n\016storage_source\030\002 "
    "\001(\0132,.google.devtools.cloudbuild.v1.Stor"
    "ageSourceH\000\022@\n\013repo_source\030\003 \001(\0132).googl"
    "e.devtools.cloudbuild.v1.RepoSourceH\000B\010\n"
    "\006source\"*\n\nBuiltImage\022\014\n\004name\030\001 \001(\t\022\016\n\006d"
    "igest\030\003 \001(\t\"_\n\tBuildStep\022\014\n\004name\030\001 \001(\t\022\013"
    "\n\003env\030\002 \003(\t\022\014\n\004args\030\003 \003(\t\022\013\n\003dir\030\004 \001(\t\022\n"
    "\n\002id\030\005 \001(\t\022\020\n\010wait_for\030\006 \003(\t\"_\n\007Results\022"
    "9\n\006images\030\002 \003(\0132).google.devtools.cloudb"
    "uild.v1.BuiltImage\022\031\n\021build_step_images\030"
    "\003 \003(\t\"\261\006\n\005Build\022\n\n\002id\030\001 \001(\t\022\022\n\nproject_i"
    "d\030\020 \001(\t\022;\n\006status\030\002 \001(\0162+.google.devtool"
    "s.cloudbuild.v1.Build.Status\022\025\n\rstatus_d"
    "etail\030\030 \001(\t\0225\n\006source\030\003 \001(\0132%.google.dev"
    "tools.cloudbuild.v1.Source\0227\n\005steps\030\013 \003("
    "\0132(.google.devtools.cloudbuild.v1.BuildS"
    "tep\0227\n\007results\030\n \001(\0132&.google.devtools.c"
    "loudbuild.v1.Results\022/\n\013create_time\030\006 \001("
    "\0132\032.google.protobuf.Timestamp\022.\n\nstart_t"
    "ime\030\007 \001(\0132\032.google.protobuf.Timestamp\022/\n"
    "\013finish_time\030\010 \001(\0132\032.google.protobuf.Tim"
    "estamp\022*\n\007timeout\030\014 \001(\0132\031.google.protobu"
    "f.Duration\022\016\n\006images\030\r \003(\t\022\023\n\013logs_bucke"
    "t\030\023 \001(\t\022J\n\021source_provenance\030\025 \001(\0132/.goo"
    "gle.devtools.cloudbuild.v1.SourceProvena"
    "nce\022<\n\007options\030\027 \001(\0132+.google.devtools.c"
    "loudbuild.v1.BuildOptions\022\017\n\007log_url\030\031 \001"
    "(\t\"\214\001\n\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\013\n\007QUE"
    "UING\020\010\022\n\n\006QUEUED\020\001\022\013\n\007WORKING\020\002\022\013\n\007SUCCE"
    "SS\020\003\022\013\n\007FAILURE\020\004\022\022\n\016INTERNAL_ERROR\020\005\022\013\n"
    "\007TIMEOUT\020\006\022\r\n\tCANCELLED\020\007\"M\n\026BuildOperat"
    "ionMetadata\0223\n\005build\030\001 \001(\0132$.google.devt"
    "ools.cloudbuild.v1.Build\"\336\002\n\020SourceProve"
    "nance\022M\n\027resolved_storage_source\030\003 \001(\0132,"
    ".google.devtools.cloudbuild.v1.StorageSo"
    "urce\022G\n\024resolved_repo_source\030\006 \001(\0132).goo"
    "gle.devtools.cloudbuild.v1.RepoSource\022T\n"
    "\013file_hashes\030\004 \003(\0132\?.google.devtools.clo"
    "udbuild.v1.SourceProvenance.FileHashesEn"
    "try\032\\\n\017FileHashesEntry\022\013\n\003key\030\001 \001(\t\0228\n\005v"
    "alue\030\002 \001(\0132).google.devtools.cloudbuild."
    "v1.FileHashes:\0028\001\"D\n\nFileHashes\0226\n\tfile_"
    "hash\030\001 \003(\0132#.google.devtools.cloudbuild."
    "v1.Hash\"s\n\004Hash\022:\n\004type\030\001 \001(\0162,.google.d"
    "evtools.cloudbuild.v1.Hash.HashType\022\r\n\005v"
    "alue\030\002 \001(\014\" \n\010HashType\022\010\n\004NONE\020\000\022\n\n\006SHA2"
    "56\020\001\"]\n\022CreateBuildRequest\022\022\n\nproject_id"
    "\030\001 \001(\t\0223\n\005build\030\002 \001(\0132$.google.devtools."
    "cloudbuild.v1.Build\"1\n\017GetBuildRequest\022\022"
    "\n\nproject_id\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"N\n\021ListBu"
    "ildsRequest\022\022\n\nproject_id\030\001 \001(\t\022\021\n\tpage_"
    "size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"c\n\022ListBu"
    "ildsResponse\0224\n\006builds\030\001 \003(\0132$.google.de"
    "vtools.cloudbuild.v1.Build\022\027\n\017next_page_"
    "token\030\002 \001(\t\"4\n\022CancelBuildRequest\022\022\n\npro"
    "ject_id\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"\331\001\n\014BuildTrigg"
    "er\022\n\n\002id\030\001 \001(\t\022C\n\020trigger_template\030\007 \001(\013"
    "2).google.devtools.cloudbuild.v1.RepoSou"
    "rce\0225\n\005build\030\004 \001(\0132$.google.devtools.clo"
    "udbuild.v1.BuildH\000\022/\n\013create_time\030\005 \001(\0132"
    "\032.google.protobuf.TimestampB\020\n\016build_tem"
    "plate\"m\n\031CreateBuildTriggerRequest\022\022\n\npr"
    "oject_id\030\001 \001(\t\022<\n\007trigger\030\002 \001(\0132+.google"
    ".devtools.cloudbuild.v1.BuildTrigger\"@\n\026"
    "GetBuildTriggerRequest\022\022\n\nproject_id\030\001 \001"
    "(\t\022\022\n\ntrigger_id\030\002 \001(\t\".\n\030ListBuildTrigg"
    "ersRequest\022\022\n\nproject_id\030\001 \001(\t\"Z\n\031ListBu"
    "ildTriggersResponse\022=\n\010triggers\030\001 \003(\0132+."
    "google.devtools.cloudbuild.v1.BuildTrigg"
    "er\"C\n\031DeleteBuildTriggerRequest\022\022\n\nproje"
    "ct_id\030\001 \001(\t\022\022\n\ntrigger_id\030\002 \001(\t\"\201\001\n\031Upda"
    "teBuildTriggerRequest\022\022\n\nproject_id\030\001 \001("
    "\t\022\022\n\ntrigger_id\030\002 \001(\t\022<\n\007trigger\030\003 \001(\0132+"
    ".google.devtools.cloudbuild.v1.BuildTrig"
    "ger\"\347\001\n\014BuildOptions\022L\n\026source_provenanc"
    "e_hash\030\001 \003(\0162,.google.devtools.cloudbuil"
    "d.v1.Hash.HashType\022Y\n\027requested_verify_o"
    "ption\030\002 \001(\01628.google.devtools.cloudbuild"
    ".v1.BuildOptions.VerifyOption\".\n\014VerifyO"
    "ption\022\020\n\014NOT_VERIFIED\020\000\022\014\n\010VERIFIED\020\0012\354\013"
    "\n\nCloudBuild\022\220\001\n\013CreateBuild\0221.google.de"
    "vtools.cloudbuild.v1.CreateBuildRequest\032"
    "\035.google.longrunning.Operation\"/\202\323\344\223\002)\" "
    "/v1/projects/{project_id}/builds:\005build\022"
    "\217\001\n\010GetBuild\022..google.devtools.cloudbuil"
    "d.v1.GetBuildRequest\032$.google.devtools.c"
    "loudbuild.v1.Build\"-\202\323\344\223\002\'\022%/v1/projects"
    "/{project_id}/builds/{id}\022\233\001\n\nListBuilds"
    "\0220.google.devtools.cloudbuild.v1.ListBui"
    "ldsRequest\0321.google.devtools.cloudbuild."
    "v1.ListBuildsResponse\"(\202\323\344\223\002\"\022 /v1/proje"
    "cts/{project_id}/builds\022\237\001\n\013CancelBuild\022"
    "1.google.devtools.cloudbuild.v1.CancelBu"
    "ildRequest\032$.google.devtools.cloudbuild."
    "v1.Build\"7\202\323\344\223\0021\",/v1/projects/{project_"
    "id}/builds/{id}:cancel:\001*\022\260\001\n\022CreateBuil"
    "dTrigger\0228.google.devtools.cloudbuild.v1"
    ".CreateBuildTriggerRequest\032+.google.devt"
    "ools.cloudbuild.v1.BuildTrigger\"3\202\323\344\223\002-\""
    "\"/v1/projects/{project_id}/triggers:\007tri"
    "gger\022\256\001\n\017GetBuildTrigger\0225.google.devtoo"
    "ls.cloudbuild.v1.GetBuildTriggerRequest\032"
    "+.google.devtools.cloudbuild.v1.BuildTri"
    "gger\"7\202\323\344\223\0021\022//v1/projects/{project_id}/"
    "triggers/{trigger_id}\022\262\001\n\021ListBuildTrigg"
    "ers\0227.google.devtools.cloudbuild.v1.List"
    "BuildTriggersRequest\0328.google.devtools.c"
    "loudbuild.v1.ListBuildTriggersResponse\"*"
    "\202\323\344\223\002$\022\"/v1/projects/{project_id}/trigge"
    "rs\022\237\001\n\022DeleteBuildTrigger\0228.google.devto"
    "ols.cloudbuild.v1.DeleteBuildTriggerRequ"
    "est\032\026.google.protobuf.Empty\"7\202\323\344\223\0021*//v1"
    "/projects/{project_id}/triggers/{trigger"
    "_id}\022\275\001\n\022UpdateBuildTrigger\0228.google.dev"
    "tools.cloudbuild.v1.UpdateBuildTriggerRe"
    "quest\032+.google.devtools.cloudbuild.v1.Bu"
    "ildTrigger\"@\202\323\344\223\002:2//v1/projects/{projec"
    "t_id}/triggers/{trigger_id}:\007triggerB\"\n\030"
    "com.google.cloudbuild.v1P\001\242\002\003GCBb\006proto3", 5240);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/cloudbuild/v1/cloudbuild.proto", &protobuf_RegisterTypes);
  StorageSource::default_instance_ = new StorageSource();
  RepoSource::default_instance_ = new RepoSource();
  RepoSource_default_oneof_instance_ = new RepoSourceOneofInstance();
  Source::default_instance_ = new Source();
  Source_default_oneof_instance_ = new SourceOneofInstance();
  BuiltImage::default_instance_ = new BuiltImage();
  BuildStep::default_instance_ = new BuildStep();
  Results::default_instance_ = new Results();
  Build::default_instance_ = new Build();
  BuildOperationMetadata::default_instance_ = new BuildOperationMetadata();
  SourceProvenance::default_instance_ = new SourceProvenance();
  FileHashes::default_instance_ = new FileHashes();
  Hash::default_instance_ = new Hash();
  CreateBuildRequest::default_instance_ = new CreateBuildRequest();
  GetBuildRequest::default_instance_ = new GetBuildRequest();
  ListBuildsRequest::default_instance_ = new ListBuildsRequest();
  ListBuildsResponse::default_instance_ = new ListBuildsResponse();
  CancelBuildRequest::default_instance_ = new CancelBuildRequest();
  BuildTrigger::default_instance_ = new BuildTrigger();
  BuildTrigger_default_oneof_instance_ = new BuildTriggerOneofInstance();
  CreateBuildTriggerRequest::default_instance_ = new CreateBuildTriggerRequest();
  GetBuildTriggerRequest::default_instance_ = new GetBuildTriggerRequest();
  ListBuildTriggersRequest::default_instance_ = new ListBuildTriggersRequest();
  ListBuildTriggersResponse::default_instance_ = new ListBuildTriggersResponse();
  DeleteBuildTriggerRequest::default_instance_ = new DeleteBuildTriggerRequest();
  UpdateBuildTriggerRequest::default_instance_ = new UpdateBuildTriggerRequest();
  BuildOptions::default_instance_ = new BuildOptions();
  StorageSource::default_instance_->InitAsDefaultInstance();
  RepoSource::default_instance_->InitAsDefaultInstance();
  Source::default_instance_->InitAsDefaultInstance();
  BuiltImage::default_instance_->InitAsDefaultInstance();
  BuildStep::default_instance_->InitAsDefaultInstance();
  Results::default_instance_->InitAsDefaultInstance();
  Build::default_instance_->InitAsDefaultInstance();
  BuildOperationMetadata::default_instance_->InitAsDefaultInstance();
  SourceProvenance::default_instance_->InitAsDefaultInstance();
  FileHashes::default_instance_->InitAsDefaultInstance();
  Hash::default_instance_->InitAsDefaultInstance();
  CreateBuildRequest::default_instance_->InitAsDefaultInstance();
  GetBuildRequest::default_instance_->InitAsDefaultInstance();
  ListBuildsRequest::default_instance_->InitAsDefaultInstance();
  ListBuildsResponse::default_instance_->InitAsDefaultInstance();
  CancelBuildRequest::default_instance_->InitAsDefaultInstance();
  BuildTrigger::default_instance_->InitAsDefaultInstance();
  CreateBuildTriggerRequest::default_instance_->InitAsDefaultInstance();
  GetBuildTriggerRequest::default_instance_->InitAsDefaultInstance();
  ListBuildTriggersRequest::default_instance_->InitAsDefaultInstance();
  ListBuildTriggersResponse::default_instance_->InitAsDefaultInstance();
  DeleteBuildTriggerRequest::default_instance_->InitAsDefaultInstance();
  UpdateBuildTriggerRequest::default_instance_->InitAsDefaultInstance();
  BuildOptions::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto {
  StaticDescriptorInitializer_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto() {
    protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  }
} static_descriptor_initializer_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageSource::kBucketFieldNumber;
const int StorageSource::kObjectFieldNumber;
const int StorageSource::kGenerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageSource::StorageSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.StorageSource)
}

void StorageSource::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StorageSource::StorageSource(const StorageSource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.StorageSource)
}

void StorageSource::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = GOOGLE_LONGLONG(0);
}

StorageSource::~StorageSource() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.StorageSource)
  SharedDtor();
}

void StorageSource::SharedDtor() {
  bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StorageSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageSource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StorageSource_descriptor_;
}

const StorageSource& StorageSource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

StorageSource* StorageSource::default_instance_ = NULL;

StorageSource* StorageSource::New(::google::protobuf::Arena* arena) const {
  StorageSource* n = new StorageSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.StorageSource)
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generation_ = GOOGLE_LONGLONG(0);
}

bool StorageSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.StorageSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bucket = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket().data(), this->bucket().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.StorageSource.bucket"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_object;
        break;
      }

      // optional string object = 2;
      case 2: {
        if (tag == 18) {
         parse_object:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object().data(), this->object().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.StorageSource.object"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_generation;
        break;
      }

      // optional int64 generation = 3;
      case 3: {
        if (tag == 24) {
         parse_generation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &generation_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.StorageSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.StorageSource)
  return false;
#undef DO_
}

void StorageSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.StorageSource)
  // optional string bucket = 1;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bucket(), output);
  }

  // optional string object = 2;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object().data(), this->object().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.object");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object(), output);
  }

  // optional int64 generation = 3;
  if (this->generation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->generation(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.StorageSource)
}

::google::protobuf::uint8* StorageSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.StorageSource)
  // optional string bucket = 1;
  if (this->bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket().data(), this->bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket(), target);
  }

  // optional string object = 2;
  if (this->object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object().data(), this->object().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.StorageSource.object");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object(), target);
  }

  // optional int64 generation = 3;
  if (this->generation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->generation(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.StorageSource)
  return target;
}

int StorageSource::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.StorageSource)
  int total_size = 0;

  // optional string bucket = 1;
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket());
  }

  // optional string object = 2;
  if (this->object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object());
  }

  // optional int64 generation = 3;
  if (this->generation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->generation());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.StorageSource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StorageSource* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.StorageSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.StorageSource)
    MergeFrom(*source);
  }
}

void StorageSource::MergeFrom(const StorageSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.StorageSource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.bucket().size() > 0) {

    bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  if (from.object().size() > 0) {

    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  if (from.generation() != 0) {
    set_generation(from.generation());
  }
}

void StorageSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.StorageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageSource::CopyFrom(const StorageSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.StorageSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageSource::IsInitialized() const {

  return true;
}

void StorageSource::Swap(StorageSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageSource::InternalSwap(StorageSource* other) {
  bucket_.Swap(&other->bucket_);
  object_.Swap(&other->object_);
  std::swap(generation_, other->generation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageSource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StorageSource_descriptor_;
  metadata.reflection = StorageSource_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StorageSource

// optional string bucket = 1;
void StorageSource::clear_bucket() {
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StorageSource::bucket() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.bucket)
  return bucket_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageSource::set_bucket(const ::std::string& value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
 void StorageSource::set_bucket(const char* value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
 void StorageSource::set_bucket(const char* value, size_t size) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.StorageSource.bucket)
}
 ::std::string* StorageSource::mutable_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.StorageSource.bucket)
  return bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StorageSource::release_bucket() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.StorageSource.bucket)
  
  return bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageSource::set_allocated_bucket(::std::string* bucket) {
  if (bucket != NULL) {
    
  } else {
    
  }
  bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.StorageSource.bucket)
}

// optional string object = 2;
void StorageSource::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StorageSource::object() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.object)
  return object_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageSource::set_object(const ::std::string& value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.object)
}
 void StorageSource::set_object(const char* value) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.StorageSource.object)
}
 void StorageSource::set_object(const char* value, size_t size) {
  
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.StorageSource.object)
}
 ::std::string* StorageSource::mutable_object() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.StorageSource.object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StorageSource::release_object() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.StorageSource.object)
  
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StorageSource::set_allocated_object(::std::string* object) {
  if (object != NULL) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.StorageSource.object)
}

// optional int64 generation = 3;
void StorageSource::clear_generation() {
  generation_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 StorageSource::generation() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.StorageSource.generation)
  return generation_;
}
 void StorageSource::set_generation(::google::protobuf::int64 value) {
  
  generation_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.StorageSource.generation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepoSource::kProjectIdFieldNumber;
const int RepoSource::kRepoNameFieldNumber;
const int RepoSource::kBranchNameFieldNumber;
const int RepoSource::kTagNameFieldNumber;
const int RepoSource::kCommitShaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepoSource::RepoSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.RepoSource)
}

void RepoSource::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  RepoSource_default_oneof_instance_->branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  RepoSource_default_oneof_instance_->tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  RepoSource_default_oneof_instance_->commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RepoSource::RepoSource(const RepoSource& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.RepoSource)
}

void RepoSource::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_revision();
}

RepoSource::~RepoSource() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.RepoSource)
  SharedDtor();
}

void RepoSource::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_revision()) {
    clear_revision();
  }
  if (this != default_instance_) {
  }
}

void RepoSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepoSource::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepoSource_descriptor_;
}

const RepoSource& RepoSource::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

RepoSource* RepoSource::default_instance_ = NULL;

RepoSource* RepoSource::New(::google::protobuf::Arena* arena) const {
  RepoSource* n = new RepoSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepoSource::clear_revision() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.cloudbuild.v1.RepoSource)
  switch(revision_case()) {
    case kBranchName: {
      revision_.branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTagName: {
      revision_.tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kCommitSha: {
      revision_.commit_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REVISION_NOT_SET;
}


void RepoSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.RepoSource)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_revision();
}

bool RepoSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.RepoSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repo_name;
        break;
      }

      // optional string repo_name = 2;
      case 2: {
        if (tag == 18) {
         parse_repo_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repo_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_name().data(), this->repo_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.repo_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_branch_name;
        break;
      }

      // optional string branch_name = 3;
      case 3: {
        if (tag == 26) {
         parse_branch_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->branch_name().data(), this->branch_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.branch_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tag_name;
        break;
      }

      // optional string tag_name = 4;
      case 4: {
        if (tag == 34) {
         parse_tag_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag_name().data(), this->tag_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.tag_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_commit_sha;
        break;
      }

      // optional string commit_sha = 5;
      case 5: {
        if (tag == 42) {
         parse_commit_sha:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commit_sha()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commit_sha().data(), this->commit_sha().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.RepoSource.commit_sha"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.RepoSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.RepoSource)
  return false;
#undef DO_
}

void RepoSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.RepoSource)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional string repo_name = 2;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), this->repo_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.repo_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->repo_name(), output);
  }

  // optional string branch_name = 3;
  if (has_branch_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), this->branch_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->branch_name(), output);
  }

  // optional string tag_name = 4;
  if (has_tag_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), this->tag_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tag_name(), output);
  }

  // optional string commit_sha = 5;
  if (has_commit_sha()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commit_sha().data(), this->commit_sha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.commit_sha");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->commit_sha(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.RepoSource)
}

::google::protobuf::uint8* RepoSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.RepoSource)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional string repo_name = 2;
  if (this->repo_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_name().data(), this->repo_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.repo_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->repo_name(), target);
  }

  // optional string branch_name = 3;
  if (has_branch_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->branch_name().data(), this->branch_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->branch_name(), target);
  }

  // optional string tag_name = 4;
  if (has_tag_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag_name().data(), this->tag_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tag_name(), target);
  }

  // optional string commit_sha = 5;
  if (has_commit_sha()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commit_sha().data(), this->commit_sha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.RepoSource.commit_sha");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->commit_sha(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.RepoSource)
  return target;
}

int RepoSource::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.RepoSource)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional string repo_name = 2;
  if (this->repo_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->repo_name());
  }

  switch (revision_case()) {
    // optional string branch_name = 3;
    case kBranchName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch_name());
      break;
    }
    // optional string tag_name = 4;
    case kTagName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_name());
      break;
    }
    // optional string commit_sha = 5;
    case kCommitSha: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepoSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.RepoSource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RepoSource* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RepoSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.RepoSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.RepoSource)
    MergeFrom(*source);
  }
}

void RepoSource::MergeFrom(const RepoSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.RepoSource)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.revision_case()) {
    case kBranchName: {
      set_branch_name(from.branch_name());
      break;
    }
    case kTagName: {
      set_tag_name(from.tag_name());
      break;
    }
    case kCommitSha: {
      set_commit_sha(from.commit_sha());
      break;
    }
    case REVISION_NOT_SET: {
      break;
    }
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.repo_name().size() > 0) {

    repo_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.repo_name_);
  }
}

void RepoSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.RepoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepoSource::CopyFrom(const RepoSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.RepoSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepoSource::IsInitialized() const {

  return true;
}

void RepoSource::Swap(RepoSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepoSource::InternalSwap(RepoSource* other) {
  project_id_.Swap(&other->project_id_);
  repo_name_.Swap(&other->repo_name_);
  std::swap(revision_, other->revision_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepoSource::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepoSource_descriptor_;
  metadata.reflection = RepoSource_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepoSource

// optional string project_id = 1;
void RepoSource::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RepoSource::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepoSource::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
 void RepoSource::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
 void RepoSource::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.project_id)
}
 ::std::string* RepoSource::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RepoSource::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepoSource::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.project_id)
}

// optional string repo_name = 2;
void RepoSource::clear_repo_name() {
  repo_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RepoSource::repo_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  return repo_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepoSource::set_repo_name(const ::std::string& value) {
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
 void RepoSource::set_repo_name(const char* value) {
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
 void RepoSource::set_repo_name(const char* value, size_t size) {
  
  repo_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}
 ::std::string* RepoSource::mutable_repo_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  return repo_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RepoSource::release_repo_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.repo_name)
  
  return repo_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RepoSource::set_allocated_repo_name(::std::string* repo_name) {
  if (repo_name != NULL) {
    
  } else {
    
  }
  repo_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), repo_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.repo_name)
}

// optional string branch_name = 3;
bool RepoSource::has_branch_name() const {
  return revision_case() == kBranchName;
}
void RepoSource::set_has_branch_name() {
  _oneof_case_[0] = kBranchName;
}
void RepoSource::clear_branch_name() {
  if (has_branch_name()) {
    revision_.branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
 const ::std::string& RepoSource::branch_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (has_branch_name()) {
    return revision_.branch_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void RepoSource::set_branch_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
 void RepoSource::set_branch_name(const char* value) {
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
 void RepoSource::set_branch_name(const char* value, size_t size) {
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}
 ::std::string* RepoSource::mutable_branch_name() {
  if (!has_branch_name()) {
    clear_revision();
    set_has_branch_name();
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  return revision_.branch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RepoSource::release_branch_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.branch_name)
  if (has_branch_name()) {
    clear_has_revision();
    return revision_.branch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void RepoSource::set_allocated_branch_name(::std::string* branch_name) {
  if (!has_branch_name()) {
    revision_.branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (branch_name != NULL) {
    set_has_branch_name();
    revision_.branch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        branch_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.branch_name)
}

// optional string tag_name = 4;
bool RepoSource::has_tag_name() const {
  return revision_case() == kTagName;
}
void RepoSource::set_has_tag_name() {
  _oneof_case_[0] = kTagName;
}
void RepoSource::clear_tag_name() {
  if (has_tag_name()) {
    revision_.tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
 const ::std::string& RepoSource::tag_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (has_tag_name()) {
    return revision_.tag_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void RepoSource::set_tag_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
 void RepoSource::set_tag_name(const char* value) {
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
 void RepoSource::set_tag_name(const char* value, size_t size) {
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}
 ::std::string* RepoSource::mutable_tag_name() {
  if (!has_tag_name()) {
    clear_revision();
    set_has_tag_name();
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  return revision_.tag_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RepoSource::release_tag_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.tag_name)
  if (has_tag_name()) {
    clear_has_revision();
    return revision_.tag_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void RepoSource::set_allocated_tag_name(::std::string* tag_name) {
  if (!has_tag_name()) {
    revision_.tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (tag_name != NULL) {
    set_has_tag_name();
    revision_.tag_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        tag_name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.tag_name)
}

// optional string commit_sha = 5;
bool RepoSource::has_commit_sha() const {
  return revision_case() == kCommitSha;
}
void RepoSource::set_has_commit_sha() {
  _oneof_case_[0] = kCommitSha;
}
void RepoSource::clear_commit_sha() {
  if (has_commit_sha()) {
    revision_.commit_sha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_revision();
  }
}
 const ::std::string& RepoSource::commit_sha() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (has_commit_sha()) {
    return revision_.commit_sha_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void RepoSource::set_commit_sha(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
 void RepoSource::set_commit_sha(const char* value) {
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
 void RepoSource::set_commit_sha(const char* value, size_t size) {
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  revision_.commit_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}
 ::std::string* RepoSource::mutable_commit_sha() {
  if (!has_commit_sha()) {
    clear_revision();
    set_has_commit_sha();
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  return revision_.commit_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RepoSource::release_commit_sha() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
  if (has_commit_sha()) {
    clear_has_revision();
    return revision_.commit_sha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void RepoSource::set_allocated_commit_sha(::std::string* commit_sha) {
  if (!has_commit_sha()) {
    revision_.commit_sha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_revision();
  if (commit_sha != NULL) {
    set_has_commit_sha();
    revision_.commit_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        commit_sha);
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.RepoSource.commit_sha)
}

bool RepoSource::has_revision() const {
  return revision_case() != REVISION_NOT_SET;
}
void RepoSource::clear_has_revision() {
  _oneof_case_[0] = REVISION_NOT_SET;
}
RepoSource::RevisionCase RepoSource::revision_case() const {
  return RepoSource::RevisionCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Source::kStorageSourceFieldNumber;
const int Source::kRepoSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Source::Source()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Source)
}

void Source::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Source_default_oneof_instance_->storage_source_ = const_cast< ::google::devtools::cloudbuild::v1::StorageSource*>(&::google::devtools::cloudbuild::v1::StorageSource::default_instance());
  Source_default_oneof_instance_->repo_source_ = const_cast< ::google::devtools::cloudbuild::v1::RepoSource*>(&::google::devtools::cloudbuild::v1::RepoSource::default_instance());
}

Source::Source(const Source& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Source)
}

void Source::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_source();
}

Source::~Source() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Source)
  SharedDtor();
}

void Source::SharedDtor() {
  if (has_source()) {
    clear_source();
  }
  if (this != default_instance_) {
  }
}

void Source::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Source::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Source_descriptor_;
}

const Source& Source::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

Source* Source::default_instance_ = NULL;

Source* Source::New(::google::protobuf::Arena* arena) const {
  Source* n = new Source;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Source::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.cloudbuild.v1.Source)
  switch(source_case()) {
    case kStorageSource: {
      delete source_.storage_source_;
      break;
    }
    case kRepoSource: {
      delete source_.repo_source_;
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void Source::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Source)
  clear_source();
}

bool Source::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Source)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_storage_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_repo_source;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
      case 3: {
        if (tag == 26) {
         parse_repo_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_repo_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Source)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Source)
  return false;
#undef DO_
}

void Source::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Source)
  // optional .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
  if (has_storage_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *source_.storage_source_, output);
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
  if (has_repo_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *source_.repo_source_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Source)
}

::google::protobuf::uint8* Source::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Source)
  // optional .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
  if (has_storage_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *source_.storage_source_, false, target);
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
  if (has_repo_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *source_.repo_source_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Source)
  return target;
}

int Source::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Source)
  int total_size = 0;

  switch (source_case()) {
    // optional .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
    case kStorageSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *source_.storage_source_);
      break;
    }
    // optional .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
    case kRepoSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *source_.repo_source_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Source::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Source)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Source* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Source>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Source)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Source)
    MergeFrom(*source);
  }
}

void Source::MergeFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Source)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.source_case()) {
    case kStorageSource: {
      mutable_storage_source()->::google::devtools::cloudbuild::v1::StorageSource::MergeFrom(from.storage_source());
      break;
    }
    case kRepoSource: {
      mutable_repo_source()->::google::devtools::cloudbuild::v1::RepoSource::MergeFrom(from.repo_source());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void Source::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Source::CopyFrom(const Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Source::IsInitialized() const {

  return true;
}

void Source::Swap(Source* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Source::InternalSwap(Source* other) {
  std::swap(source_, other->source_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Source::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Source_descriptor_;
  metadata.reflection = Source_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Source

// optional .google.devtools.cloudbuild.v1.StorageSource storage_source = 2;
bool Source::has_storage_source() const {
  return source_case() == kStorageSource;
}
void Source::set_has_storage_source() {
  _oneof_case_[0] = kStorageSource;
}
void Source::clear_storage_source() {
  if (has_storage_source()) {
    delete source_.storage_source_;
    clear_has_source();
  }
}
 const ::google::devtools::cloudbuild::v1::StorageSource& Source::storage_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Source.storage_source)
  return has_storage_source()
      ? *source_.storage_source_
      : ::google::devtools::cloudbuild::v1::StorageSource::default_instance();
}
::google::devtools::cloudbuild::v1::StorageSource* Source::mutable_storage_source() {
  if (!has_storage_source()) {
    clear_source();
    set_has_storage_source();
    source_.storage_source_ = new ::google::devtools::cloudbuild::v1::StorageSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Source.storage_source)
  return source_.storage_source_;
}
::google::devtools::cloudbuild::v1::StorageSource* Source::release_storage_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Source.storage_source)
  if (has_storage_source()) {
    clear_has_source();
    ::google::devtools::cloudbuild::v1::StorageSource* temp = source_.storage_source_;
    source_.storage_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Source::set_allocated_storage_source(::google::devtools::cloudbuild::v1::StorageSource* storage_source) {
  clear_source();
  if (storage_source) {
    set_has_storage_source();
    source_.storage_source_ = storage_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Source.storage_source)
}

// optional .google.devtools.cloudbuild.v1.RepoSource repo_source = 3;
bool Source::has_repo_source() const {
  return source_case() == kRepoSource;
}
void Source::set_has_repo_source() {
  _oneof_case_[0] = kRepoSource;
}
void Source::clear_repo_source() {
  if (has_repo_source()) {
    delete source_.repo_source_;
    clear_has_source();
  }
}
 const ::google::devtools::cloudbuild::v1::RepoSource& Source::repo_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Source.repo_source)
  return has_repo_source()
      ? *source_.repo_source_
      : ::google::devtools::cloudbuild::v1::RepoSource::default_instance();
}
::google::devtools::cloudbuild::v1::RepoSource* Source::mutable_repo_source() {
  if (!has_repo_source()) {
    clear_source();
    set_has_repo_source();
    source_.repo_source_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Source.repo_source)
  return source_.repo_source_;
}
::google::devtools::cloudbuild::v1::RepoSource* Source::release_repo_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Source.repo_source)
  if (has_repo_source()) {
    clear_has_source();
    ::google::devtools::cloudbuild::v1::RepoSource* temp = source_.repo_source_;
    source_.repo_source_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Source::set_allocated_repo_source(::google::devtools::cloudbuild::v1::RepoSource* repo_source) {
  clear_source();
  if (repo_source) {
    set_has_repo_source();
    source_.repo_source_ = repo_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Source.repo_source)
}

bool Source::has_source() const {
  return source_case() != SOURCE_NOT_SET;
}
void Source::clear_has_source() {
  _oneof_case_[0] = SOURCE_NOT_SET;
}
Source::SourceCase Source::source_case() const {
  return Source::SourceCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuiltImage::kNameFieldNumber;
const int BuiltImage::kDigestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuiltImage::BuiltImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuiltImage)
}

void BuiltImage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BuiltImage::BuiltImage(const BuiltImage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuiltImage)
}

void BuiltImage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BuiltImage::~BuiltImage() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuiltImage)
  SharedDtor();
}

void BuiltImage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BuiltImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuiltImage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuiltImage_descriptor_;
}

const BuiltImage& BuiltImage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

BuiltImage* BuiltImage::default_instance_ = NULL;

BuiltImage* BuiltImage::New(::google::protobuf::Arena* arena) const {
  BuiltImage* n = new BuiltImage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuiltImage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuiltImage)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BuiltImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuiltImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuiltImage.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_digest;
        break;
      }

      // optional string digest = 3;
      case 3: {
        if (tag == 26) {
         parse_digest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_digest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->digest().data(), this->digest().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuiltImage.digest"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuiltImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuiltImage)
  return false;
#undef DO_
}

void BuiltImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuiltImage)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string digest = 3;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->digest().data(), this->digest().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.digest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->digest(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuiltImage)
}

::google::protobuf::uint8* BuiltImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuiltImage)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string digest = 3;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->digest().data(), this->digest().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuiltImage.digest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->digest(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuiltImage)
  return target;
}

int BuiltImage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuiltImage)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string digest = 3;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->digest());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuiltImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BuiltImage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BuiltImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuiltImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuiltImage)
    MergeFrom(*source);
  }
}

void BuiltImage::MergeFrom(const BuiltImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.digest().size() > 0) {

    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
}

void BuiltImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuiltImage::CopyFrom(const BuiltImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuiltImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuiltImage::IsInitialized() const {

  return true;
}

void BuiltImage::Swap(BuiltImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuiltImage::InternalSwap(BuiltImage* other) {
  name_.Swap(&other->name_);
  digest_.Swap(&other->digest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuiltImage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuiltImage_descriptor_;
  metadata.reflection = BuiltImage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuiltImage

// optional string name = 1;
void BuiltImage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BuiltImage::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuiltImage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuiltImage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuiltImage.name)
}
 void BuiltImage::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuiltImage.name)
}
 void BuiltImage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuiltImage.name)
}
 ::std::string* BuiltImage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuiltImage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BuiltImage::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuiltImage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuiltImage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuiltImage.name)
}

// optional string digest = 3;
void BuiltImage::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BuiltImage::digest() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuiltImage.digest)
  return digest_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuiltImage::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
 void BuiltImage::set_digest(const char* value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
 void BuiltImage::set_digest(const char* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuiltImage.digest)
}
 ::std::string* BuiltImage::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuiltImage.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BuiltImage::release_digest() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuiltImage.digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuiltImage::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuiltImage.digest)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildStep::kNameFieldNumber;
const int BuildStep::kEnvFieldNumber;
const int BuildStep::kArgsFieldNumber;
const int BuildStep::kDirFieldNumber;
const int BuildStep::kIdFieldNumber;
const int BuildStep::kWaitForFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildStep::BuildStep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildStep)
}

void BuildStep::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BuildStep::BuildStep(const BuildStep& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildStep)
}

void BuildStep::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BuildStep::~BuildStep() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildStep)
  SharedDtor();
}

void BuildStep::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BuildStep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildStep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildStep_descriptor_;
}

const BuildStep& BuildStep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

BuildStep* BuildStep::default_instance_ = NULL;

BuildStep* BuildStep::New(::google::protobuf::Arena* arena) const {
  BuildStep* n = new BuildStep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildStep::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildStep)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  env_.Clear();
  args_.Clear();
  wait_for_.Clear();
}

bool BuildStep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildStep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_env;
        break;
      }

      // repeated string env = 2;
      case 2: {
        if (tag == 18) {
         parse_env:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_env()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->env(this->env_size() - 1).data(),
            this->env(this->env_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.env"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_env;
        if (input->ExpectTag(26)) goto parse_args;
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (tag == 26) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            this->args(this->args_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.args"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_args;
        if (input->ExpectTag(34)) goto parse_dir;
        break;
      }

      // optional string dir = 4;
      case 4: {
        if (tag == 34) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dir().data(), this->dir().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.dir"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_id;
        break;
      }

      // optional string id = 5;
      case 5: {
        if (tag == 42) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_wait_for;
        break;
      }

      // repeated string wait_for = 6;
      case 6: {
        if (tag == 50) {
         parse_wait_for:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_wait_for()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wait_for(this->wait_for_size() - 1).data(),
            this->wait_for(this->wait_for_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildStep.wait_for"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_wait_for;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildStep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildStep)
  return false;
#undef DO_
}

void BuildStep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildStep)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string env = 2;
  for (int i = 0; i < this->env_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env(i).data(), this->env(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.env");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->env(i), output);
  }

  // repeated string args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  // optional string dir = 4;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), this->dir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->dir(), output);
  }

  // optional string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->id(), output);
  }

  // repeated string wait_for = 6;
  for (int i = 0; i < this->wait_for_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_for(i).data(), this->wait_for(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.wait_for");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->wait_for(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildStep)
}

::google::protobuf::uint8* BuildStep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildStep)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string env = 2;
  for (int i = 0; i < this->env_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->env(i).data(), this->env(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.env");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->env(i), target);
  }

  // repeated string args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  // optional string dir = 4;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), this->dir().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->dir(), target);
  }

  // optional string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->id(), target);
  }

  // repeated string wait_for = 6;
  for (int i = 0; i < this->wait_for_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_for(i).data(), this->wait_for(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildStep.wait_for");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->wait_for(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildStep)
  return target;
}

int BuildStep::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildStep)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string dir = 4;
  if (this->dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir());
  }

  // optional string id = 5;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // repeated string env = 2;
  total_size += 1 * this->env_size();
  for (int i = 0; i < this->env_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->env(i));
  }

  // repeated string args = 3;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated string wait_for = 6;
  total_size += 1 * this->wait_for_size();
  for (int i = 0; i < this->wait_for_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->wait_for(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildStep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildStep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BuildStep* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildStep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildStep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildStep)
    MergeFrom(*source);
  }
}

void BuildStep::MergeFrom(const BuildStep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildStep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  env_.MergeFrom(from.env_);
  args_.MergeFrom(from.args_);
  wait_for_.MergeFrom(from.wait_for_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.dir().size() > 0) {

    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void BuildStep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildStep::CopyFrom(const BuildStep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildStep::IsInitialized() const {

  return true;
}

void BuildStep::Swap(BuildStep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildStep::InternalSwap(BuildStep* other) {
  name_.Swap(&other->name_);
  env_.UnsafeArenaSwap(&other->env_);
  args_.UnsafeArenaSwap(&other->args_);
  dir_.Swap(&other->dir_);
  id_.Swap(&other->id_);
  wait_for_.UnsafeArenaSwap(&other->wait_for_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildStep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildStep_descriptor_;
  metadata.reflection = BuildStep_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildStep

// optional string name = 1;
void BuildStep::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BuildStep::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildStep::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.name)
}
 void BuildStep::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.name)
}
 void BuildStep::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.name)
}
 ::std::string* BuildStep::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BuildStep::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildStep::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.name)
}

// repeated string env = 2;
int BuildStep::env_size() const {
  return env_.size();
}
void BuildStep::clear_env() {
  env_.Clear();
}
 const ::std::string& BuildStep::env(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Get(index);
}
 ::std::string* BuildStep::mutable_env(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Mutable(index);
}
 void BuildStep::set_env(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.env)
  env_.Mutable(index)->assign(value);
}
 void BuildStep::set_env(int index, const char* value) {
  env_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.env)
}
 void BuildStep::set_env(int index, const char* value, size_t size) {
  env_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.env)
}
 ::std::string* BuildStep::add_env() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_.Add();
}
 void BuildStep::add_env(const ::std::string& value) {
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.env)
}
 void BuildStep::add_env(const char* value) {
  env_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.env)
}
 void BuildStep::add_env(const char* value, size_t size) {
  env_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.env)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::env() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.env)
  return env_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_env() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.env)
  return &env_;
}

// repeated string args = 3;
int BuildStep::args_size() const {
  return args_.size();
}
void BuildStep::clear_args() {
  args_.Clear();
}
 const ::std::string& BuildStep::args(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Get(index);
}
 ::std::string* BuildStep::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Mutable(index);
}
 void BuildStep::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.args)
  args_.Mutable(index)->assign(value);
}
 void BuildStep::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.args)
}
 void BuildStep::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.args)
}
 ::std::string* BuildStep::add_args() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_.Add();
}
 void BuildStep::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.args)
}
 void BuildStep::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.args)
}
 void BuildStep::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.args)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::args() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.args)
  return args_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.args)
  return &args_;
}

// optional string dir = 4;
void BuildStep::clear_dir() {
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BuildStep::dir() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.dir)
  return dir_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildStep::set_dir(const ::std::string& value) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.dir)
}
 void BuildStep::set_dir(const char* value) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.dir)
}
 void BuildStep::set_dir(const char* value, size_t size) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.dir)
}
 ::std::string* BuildStep::mutable_dir() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.dir)
  return dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BuildStep::release_dir() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.dir)
  
  return dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildStep::set_allocated_dir(::std::string* dir) {
  if (dir != NULL) {
    
  } else {
    
  }
  dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.dir)
}

// optional string id = 5;
void BuildStep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BuildStep::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildStep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.id)
}
 void BuildStep::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.id)
}
 void BuildStep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.id)
}
 ::std::string* BuildStep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BuildStep::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildStep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildStep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildStep.id)
}

// repeated string wait_for = 6;
int BuildStep::wait_for_size() const {
  return wait_for_.size();
}
void BuildStep::clear_wait_for() {
  wait_for_.Clear();
}
 const ::std::string& BuildStep::wait_for(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Get(index);
}
 ::std::string* BuildStep::mutable_wait_for(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Mutable(index);
}
 void BuildStep::set_wait_for(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  wait_for_.Mutable(index)->assign(value);
}
 void BuildStep::set_wait_for(int index, const char* value) {
  wait_for_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
 void BuildStep::set_wait_for(int index, const char* value, size_t size) {
  wait_for_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
 ::std::string* BuildStep::add_wait_for() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_.Add();
}
 void BuildStep::add_wait_for(const ::std::string& value) {
  wait_for_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
 void BuildStep::add_wait_for(const char* value) {
  wait_for_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
 void BuildStep::add_wait_for(const char* value, size_t size) {
  wait_for_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.BuildStep.wait_for)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildStep::wait_for() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return wait_for_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildStep::mutable_wait_for() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildStep.wait_for)
  return &wait_for_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Results::kImagesFieldNumber;
const int Results::kBuildStepImagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Results::Results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Results)
}

void Results::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Results::Results(const Results& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Results)
}

void Results::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

Results::~Results() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Results)
  SharedDtor();
}

void Results::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Results::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Results_descriptor_;
}

const Results& Results::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

Results* Results::default_instance_ = NULL;

Results* Results::New(::google::protobuf::Arena* arena) const {
  Results* n = new Results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Results::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Results)
  images_.Clear();
  build_step_images_.Clear();
}

bool Results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_images:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_images;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_build_step_images;
        break;
      }

      // repeated string build_step_images = 3;
      case 3: {
        if (tag == 26) {
         parse_build_step_images:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_build_step_images()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_step_images(this->build_step_images_size() - 1).data(),
            this->build_step_images(this->build_step_images_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Results.build_step_images"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_build_step_images;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Results)
  return false;
#undef DO_
}

void Results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Results)
  // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->images(i), output);
  }

  // repeated string build_step_images = 3;
  for (int i = 0; i < this->build_step_images_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_step_images(i).data(), this->build_step_images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Results.build_step_images");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->build_step_images(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Results)
}

::google::protobuf::uint8* Results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Results)
  // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->images(i), false, target);
  }

  // repeated string build_step_images = 3;
  for (int i = 0; i < this->build_step_images_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_step_images(i).data(), this->build_step_images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Results.build_step_images");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->build_step_images(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Results)
  return target;
}

int Results::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Results)
  int total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
  total_size += 1 * this->images_size();
  for (int i = 0; i < this->images_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->images(i));
  }

  // repeated string build_step_images = 3;
  total_size += 1 * this->build_step_images_size();
  for (int i = 0; i < this->build_step_images_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->build_step_images(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Results)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Results* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Results)
    MergeFrom(*source);
  }
}

void Results::MergeFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Results)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  images_.MergeFrom(from.images_);
  build_step_images_.MergeFrom(from.build_step_images_);
}

void Results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Results::CopyFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Results::IsInitialized() const {

  return true;
}

void Results::Swap(Results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Results::InternalSwap(Results* other) {
  images_.UnsafeArenaSwap(&other->images_);
  build_step_images_.UnsafeArenaSwap(&other->build_step_images_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Results::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Results_descriptor_;
  metadata.reflection = Results_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Results

// repeated .google.devtools.cloudbuild.v1.BuiltImage images = 2;
int Results::images_size() const {
  return images_.size();
}
void Results::clear_images() {
  images_.Clear();
}
const ::google::devtools::cloudbuild::v1::BuiltImage& Results::images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Results.images)
  return images_.Get(index);
}
::google::devtools::cloudbuild::v1::BuiltImage* Results::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Results.images)
  return images_.Mutable(index);
}
::google::devtools::cloudbuild::v1::BuiltImage* Results::add_images() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.images)
  return images_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >*
Results::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Results.images)
  return &images_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuiltImage >&
Results::images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Results.images)
  return images_;
}

// repeated string build_step_images = 3;
int Results::build_step_images_size() const {
  return build_step_images_.size();
}
void Results::clear_build_step_images() {
  build_step_images_.Clear();
}
 const ::std::string& Results::build_step_images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Get(index);
}
 ::std::string* Results::mutable_build_step_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Mutable(index);
}
 void Results::set_build_step_images(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Results.build_step_images)
  build_step_images_.Mutable(index)->assign(value);
}
 void Results::set_build_step_images(int index, const char* value) {
  build_step_images_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Results.build_step_images)
}
 void Results::set_build_step_images(int index, const char* value, size_t size) {
  build_step_images_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Results.build_step_images)
}
 ::std::string* Results::add_build_step_images() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_.Add();
}
 void Results::add_build_step_images(const ::std::string& value) {
  build_step_images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Results.build_step_images)
}
 void Results::add_build_step_images(const char* value) {
  build_step_images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Results.build_step_images)
}
 void Results::add_build_step_images(const char* value, size_t size) {
  build_step_images_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Results.build_step_images)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Results::build_step_images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Results.build_step_images)
  return build_step_images_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Results::mutable_build_step_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Results.build_step_images)
  return &build_step_images_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Build_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Build_Status_descriptor_;
}
bool Build_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Build_Status Build::STATUS_UNKNOWN;
const Build_Status Build::QUEUING;
const Build_Status Build::QUEUED;
const Build_Status Build::WORKING;
const Build_Status Build::SUCCESS;
const Build_Status Build::FAILURE;
const Build_Status Build::INTERNAL_ERROR;
const Build_Status Build::TIMEOUT;
const Build_Status Build::CANCELLED;
const Build_Status Build::Status_MIN;
const Build_Status Build::Status_MAX;
const int Build::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Build::kIdFieldNumber;
const int Build::kProjectIdFieldNumber;
const int Build::kStatusFieldNumber;
const int Build::kStatusDetailFieldNumber;
const int Build::kSourceFieldNumber;
const int Build::kStepsFieldNumber;
const int Build::kResultsFieldNumber;
const int Build::kCreateTimeFieldNumber;
const int Build::kStartTimeFieldNumber;
const int Build::kFinishTimeFieldNumber;
const int Build::kTimeoutFieldNumber;
const int Build::kImagesFieldNumber;
const int Build::kLogsBucketFieldNumber;
const int Build::kSourceProvenanceFieldNumber;
const int Build::kOptionsFieldNumber;
const int Build::kLogUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Build::Build()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Build)
}

void Build::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  source_ = const_cast< ::google::devtools::cloudbuild::v1::Source*>(&::google::devtools::cloudbuild::v1::Source::default_instance());
  results_ = const_cast< ::google::devtools::cloudbuild::v1::Results*>(&::google::devtools::cloudbuild::v1::Results::default_instance());
  create_time_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  finish_time_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  timeout_ = const_cast< ::google::protobuf::Duration*>(&::google::protobuf::Duration::default_instance());
  source_provenance_ = const_cast< ::google::devtools::cloudbuild::v1::SourceProvenance*>(&::google::devtools::cloudbuild::v1::SourceProvenance::default_instance());
  options_ = const_cast< ::google::devtools::cloudbuild::v1::BuildOptions*>(&::google::devtools::cloudbuild::v1::BuildOptions::default_instance());
}

Build::Build(const Build& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Build)
}

void Build::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  status_detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ = NULL;
  results_ = NULL;
  create_time_ = NULL;
  start_time_ = NULL;
  finish_time_ = NULL;
  timeout_ = NULL;
  logs_bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_provenance_ = NULL;
  options_ = NULL;
  log_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Build::~Build() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Build)
  SharedDtor();
}

void Build::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logs_bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete source_;
    delete results_;
    delete create_time_;
    delete start_time_;
    delete finish_time_;
    delete timeout_;
    delete source_provenance_;
    delete options_;
  }
}

void Build::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Build::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Build_descriptor_;
}

const Build& Build::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

Build* Build::default_instance_ = NULL;

Build* Build::New(::google::protobuf::Arena* arena) const {
  Build* n = new Build;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Build::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Build)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  status_detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && results_ != NULL) delete results_;
  results_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;
  logs_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_provenance_ != NULL) delete source_provenance_;
  source_provenance_ = NULL;
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
  log_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steps_.Clear();
  images_.Clear();
}

bool Build::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Build)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.Build.Status status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::devtools::cloudbuild::v1::Build_Status >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_source;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.Source source = 3;
      case 3: {
        if (tag == 26) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_create_time;
        break;
      }

      // optional .google.protobuf.Timestamp create_time = 6;
      case 6: {
        if (tag == 50) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 7;
      case 7: {
        if (tag == 58) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_finish_time;
        break;
      }

      // optional .google.protobuf.Timestamp finish_time = 8;
      case 8: {
        if (tag == 66) {
         parse_finish_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_results;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.Results results = 10;
      case 10: {
        if (tag == 82) {
         parse_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_steps;
        break;
      }

      // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
      case 11: {
        if (tag == 90) {
         parse_steps:
          DO_(input->IncrementRecursionDepth());
         parse_loop_steps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_steps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_steps;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(98)) goto parse_timeout;
        break;
      }

      // optional .google.protobuf.Duration timeout = 12;
      case 12: {
        if (tag == 98) {
         parse_timeout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_images;
        break;
      }

      // repeated string images = 13;
      case 13: {
        if (tag == 106) {
         parse_images:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_images()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->images(this->images_size() - 1).data(),
            this->images(this->images_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.images"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_images;
        if (input->ExpectTag(130)) goto parse_project_id;
        break;
      }

      // optional string project_id = 16;
      case 16: {
        if (tag == 130) {
         parse_project_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_logs_bucket;
        break;
      }

      // optional string logs_bucket = 19;
      case 19: {
        if (tag == 154) {
         parse_logs_bucket:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logs_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logs_bucket().data(), this->logs_bucket().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.logs_bucket"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_source_provenance;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
      case 21: {
        if (tag == 170) {
         parse_source_provenance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source_provenance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_options;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.BuildOptions options = 23;
      case 23: {
        if (tag == 186) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_status_detail;
        break;
      }

      // optional string status_detail = 24;
      case 24: {
        if (tag == 194) {
         parse_status_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_detail().data(), this->status_detail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.status_detail"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_log_url;
        break;
      }

      // optional string log_url = 25;
      case 25: {
        if (tag == 202) {
         parse_log_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_url().data(), this->log_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.Build.log_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Build)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Build)
  return false;
#undef DO_
}

void Build::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Build)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .google.devtools.cloudbuild.v1.Build.Status status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional .google.devtools.cloudbuild.v1.Source source = 3;
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->source_, output);
  }

  // optional .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->create_time_, output);
  }

  // optional .google.protobuf.Timestamp start_time = 7;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->start_time_, output);
  }

  // optional .google.protobuf.Timestamp finish_time = 8;
  if (this->has_finish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->finish_time_, output);
  }

  // optional .google.devtools.cloudbuild.v1.Results results = 10;
  if (this->has_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->results_, output);
  }

  // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
  for (unsigned int i = 0, n = this->steps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->steps(i), output);
  }

  // optional .google.protobuf.Duration timeout = 12;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->timeout_, output);
  }

  // repeated string images = 13;
  for (int i = 0; i < this->images_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->images(i).data(), this->images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.images");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->images(i), output);
  }

  // optional string project_id = 16;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->project_id(), output);
  }

  // optional string logs_bucket = 19;
  if (this->logs_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs_bucket().data(), this->logs_bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.logs_bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->logs_bucket(), output);
  }

  // optional .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
  if (this->has_source_provenance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->source_provenance_, output);
  }

  // optional .google.devtools.cloudbuild.v1.BuildOptions options = 23;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->options_, output);
  }

  // optional string status_detail = 24;
  if (this->status_detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_detail().data(), this->status_detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.status_detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->status_detail(), output);
  }

  // optional string log_url = 25;
  if (this->log_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_url().data(), this->log_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.log_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->log_url(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Build)
}

::google::protobuf::uint8* Build::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Build)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .google.devtools.cloudbuild.v1.Build.Status status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional .google.devtools.cloudbuild.v1.Source source = 3;
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->source_, false, target);
  }

  // optional .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->create_time_, false, target);
  }

  // optional .google.protobuf.Timestamp start_time = 7;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->start_time_, false, target);
  }

  // optional .google.protobuf.Timestamp finish_time = 8;
  if (this->has_finish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->finish_time_, false, target);
  }

  // optional .google.devtools.cloudbuild.v1.Results results = 10;
  if (this->has_results()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->results_, false, target);
  }

  // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
  for (unsigned int i = 0, n = this->steps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->steps(i), false, target);
  }

  // optional .google.protobuf.Duration timeout = 12;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->timeout_, false, target);
  }

  // repeated string images = 13;
  for (int i = 0; i < this->images_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->images(i).data(), this->images(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.images");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->images(i), target);
  }

  // optional string project_id = 16;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->project_id(), target);
  }

  // optional string logs_bucket = 19;
  if (this->logs_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logs_bucket().data(), this->logs_bucket().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.logs_bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->logs_bucket(), target);
  }

  // optional .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
  if (this->has_source_provenance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->source_provenance_, false, target);
  }

  // optional .google.devtools.cloudbuild.v1.BuildOptions options = 23;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->options_, false, target);
  }

  // optional string status_detail = 24;
  if (this->status_detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_detail().data(), this->status_detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.status_detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->status_detail(), target);
  }

  // optional string log_url = 25;
  if (this->log_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_url().data(), this->log_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.Build.log_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->log_url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Build)
  return target;
}

int Build::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Build)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string project_id = 16;
  if (this->project_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional .google.devtools.cloudbuild.v1.Build.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional string status_detail = 24;
  if (this->status_detail().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_detail());
  }

  // optional .google.devtools.cloudbuild.v1.Source source = 3;
  if (this->has_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_);
  }

  // optional .google.devtools.cloudbuild.v1.Results results = 10;
  if (this->has_results()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->results_);
  }

  // optional .google.protobuf.Timestamp create_time = 6;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  // optional .google.protobuf.Timestamp start_time = 7;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional .google.protobuf.Timestamp finish_time = 8;
  if (this->has_finish_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->finish_time_);
  }

  // optional .google.protobuf.Duration timeout = 12;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timeout_);
  }

  // optional string logs_bucket = 19;
  if (this->logs_bucket().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logs_bucket());
  }

  // optional .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
  if (this->has_source_provenance()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_provenance_);
  }

  // optional .google.devtools.cloudbuild.v1.BuildOptions options = 23;
  if (this->has_options()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  // optional string log_url = 25;
  if (this->log_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_url());
  }

  // repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
  total_size += 1 * this->steps_size();
  for (int i = 0; i < this->steps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->steps(i));
  }

  // repeated string images = 13;
  total_size += 1 * this->images_size();
  for (int i = 0; i < this->images_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->images(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Build::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Build)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Build* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Build>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Build)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Build)
    MergeFrom(*source);
  }
}

void Build::MergeFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Build)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  steps_.MergeFrom(from.steps_);
  images_.MergeFrom(from.images_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.status_detail().size() > 0) {

    status_detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_detail_);
  }
  if (from.has_source()) {
    mutable_source()->::google::devtools::cloudbuild::v1::Source::MergeFrom(from.source());
  }
  if (from.has_results()) {
    mutable_results()->::google::devtools::cloudbuild::v1::Results::MergeFrom(from.results());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_finish_time()) {
    mutable_finish_time()->::google::protobuf::Timestamp::MergeFrom(from.finish_time());
  }
  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  if (from.logs_bucket().size() > 0) {

    logs_bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_bucket_);
  }
  if (from.has_source_provenance()) {
    mutable_source_provenance()->::google::devtools::cloudbuild::v1::SourceProvenance::MergeFrom(from.source_provenance());
  }
  if (from.has_options()) {
    mutable_options()->::google::devtools::cloudbuild::v1::BuildOptions::MergeFrom(from.options());
  }
  if (from.log_url().size() > 0) {

    log_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_url_);
  }
}

void Build::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Build::CopyFrom(const Build& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Build)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Build::IsInitialized() const {

  return true;
}

void Build::Swap(Build* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Build::InternalSwap(Build* other) {
  id_.Swap(&other->id_);
  project_id_.Swap(&other->project_id_);
  std::swap(status_, other->status_);
  status_detail_.Swap(&other->status_detail_);
  std::swap(source_, other->source_);
  steps_.UnsafeArenaSwap(&other->steps_);
  std::swap(results_, other->results_);
  std::swap(create_time_, other->create_time_);
  std::swap(start_time_, other->start_time_);
  std::swap(finish_time_, other->finish_time_);
  std::swap(timeout_, other->timeout_);
  images_.UnsafeArenaSwap(&other->images_);
  logs_bucket_.Swap(&other->logs_bucket_);
  std::swap(source_provenance_, other->source_provenance_);
  std::swap(options_, other->options_);
  log_url_.Swap(&other->log_url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Build::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Build_descriptor_;
  metadata.reflection = Build_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Build

// optional string id = 1;
void Build::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Build::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.id)
}
 void Build::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.id)
}
 void Build::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.id)
}
 ::std::string* Build::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Build::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.id)
}

// optional string project_id = 16;
void Build::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Build::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.project_id)
}
 void Build::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.project_id)
}
 void Build::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.project_id)
}
 ::std::string* Build::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Build::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.project_id)
}

// optional .google.devtools.cloudbuild.v1.Build.Status status = 2;
void Build::clear_status() {
  status_ = 0;
}
 ::google::devtools::cloudbuild::v1::Build_Status Build::status() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.status)
  return static_cast< ::google::devtools::cloudbuild::v1::Build_Status >(status_);
}
 void Build::set_status(::google::devtools::cloudbuild::v1::Build_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.status)
}

// optional string status_detail = 24;
void Build::clear_status_detail() {
  status_detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Build::status_detail() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.status_detail)
  return status_detail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_status_detail(const ::std::string& value) {
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.status_detail)
}
 void Build::set_status_detail(const char* value) {
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.status_detail)
}
 void Build::set_status_detail(const char* value, size_t size) {
  
  status_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.status_detail)
}
 ::std::string* Build::mutable_status_detail() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.status_detail)
  return status_detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Build::release_status_detail() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.status_detail)
  
  return status_detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_allocated_status_detail(::std::string* status_detail) {
  if (status_detail != NULL) {
    
  } else {
    
  }
  status_detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_detail);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.status_detail)
}

// optional .google.devtools.cloudbuild.v1.Source source = 3;
bool Build::has_source() const {
  return !_is_default_instance_ && source_ != NULL;
}
void Build::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) delete source_;
  source_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Source& Build::source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.source)
  return source_ != NULL ? *source_ : *default_instance_->source_;
}
::google::devtools::cloudbuild::v1::Source* Build::mutable_source() {
  
  if (source_ == NULL) {
    source_ = new ::google::devtools::cloudbuild::v1::Source;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.source)
  return source_;
}
::google::devtools::cloudbuild::v1::Source* Build::release_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.source)
  
  ::google::devtools::cloudbuild::v1::Source* temp = source_;
  source_ = NULL;
  return temp;
}
void Build::set_allocated_source(::google::devtools::cloudbuild::v1::Source* source) {
  delete source_;
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.source)
}

// repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;
int Build::steps_size() const {
  return steps_.size();
}
void Build::clear_steps() {
  steps_.Clear();
}
const ::google::devtools::cloudbuild::v1::BuildStep& Build::steps(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Get(index);
}
::google::devtools::cloudbuild::v1::BuildStep* Build::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Mutable(index);
}
::google::devtools::cloudbuild::v1::BuildStep* Build::add_steps() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.steps)
  return steps_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >*
Build::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.steps)
  return &steps_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildStep >&
Build::steps() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.steps)
  return steps_;
}

// optional .google.devtools.cloudbuild.v1.Results results = 10;
bool Build::has_results() const {
  return !_is_default_instance_ && results_ != NULL;
}
void Build::clear_results() {
  if (GetArenaNoVirtual() == NULL && results_ != NULL) delete results_;
  results_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Results& Build::results() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.results)
  return results_ != NULL ? *results_ : *default_instance_->results_;
}
::google::devtools::cloudbuild::v1::Results* Build::mutable_results() {
  
  if (results_ == NULL) {
    results_ = new ::google::devtools::cloudbuild::v1::Results;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.results)
  return results_;
}
::google::devtools::cloudbuild::v1::Results* Build::release_results() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.results)
  
  ::google::devtools::cloudbuild::v1::Results* temp = results_;
  results_ = NULL;
  return temp;
}
void Build::set_allocated_results(::google::devtools::cloudbuild::v1::Results* results) {
  delete results_;
  results_ = results;
  if (results) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.results)
}

// optional .google.protobuf.Timestamp create_time = 6;
bool Build::has_create_time() const {
  return !_is_default_instance_ && create_time_ != NULL;
}
void Build::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& Build::create_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.create_time)
  return create_time_ != NULL ? *create_time_ : *default_instance_->create_time_;
}
::google::protobuf::Timestamp* Build::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* Build::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void Build::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.create_time)
}

// optional .google.protobuf.Timestamp start_time = 7;
bool Build::has_start_time() const {
  return !_is_default_instance_ && start_time_ != NULL;
}
void Build::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& Build::start_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.start_time)
  return start_time_ != NULL ? *start_time_ : *default_instance_->start_time_;
}
::google::protobuf::Timestamp* Build::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* Build::release_start_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void Build::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.start_time)
}

// optional .google.protobuf.Timestamp finish_time = 8;
bool Build::has_finish_time() const {
  return !_is_default_instance_ && finish_time_ != NULL;
}
void Build::clear_finish_time() {
  if (GetArenaNoVirtual() == NULL && finish_time_ != NULL) delete finish_time_;
  finish_time_ = NULL;
}
const ::google::protobuf::Timestamp& Build::finish_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.finish_time)
  return finish_time_ != NULL ? *finish_time_ : *default_instance_->finish_time_;
}
::google::protobuf::Timestamp* Build::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    finish_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.finish_time)
  return finish_time_;
}
::google::protobuf::Timestamp* Build::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
void Build::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  delete finish_time_;
  if (finish_time != NULL && finish_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_finish_time = new ::google::protobuf::Timestamp;
    new_finish_time->CopyFrom(*finish_time);
    finish_time = new_finish_time;
  }
  finish_time_ = finish_time;
  if (finish_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.finish_time)
}

// optional .google.protobuf.Duration timeout = 12;
bool Build::has_timeout() const {
  return !_is_default_instance_ && timeout_ != NULL;
}
void Build::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) delete timeout_;
  timeout_ = NULL;
}
const ::google::protobuf::Duration& Build::timeout() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.timeout)
  return timeout_ != NULL ? *timeout_ : *default_instance_->timeout_;
}
::google::protobuf::Duration* Build::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.timeout)
  return timeout_;
}
::google::protobuf::Duration* Build::release_timeout() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.timeout)
  
  ::google::protobuf::Duration* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
void Build::set_allocated_timeout(::google::protobuf::Duration* timeout) {
  delete timeout_;
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.timeout)
}

// repeated string images = 13;
int Build::images_size() const {
  return images_.size();
}
void Build::clear_images() {
  images_.Clear();
}
 const ::std::string& Build::images(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.images)
  return images_.Get(index);
}
 ::std::string* Build::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.images)
  return images_.Mutable(index);
}
 void Build::set_images(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.images)
  images_.Mutable(index)->assign(value);
}
 void Build::set_images(int index, const char* value) {
  images_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.images)
}
 void Build::set_images(int index, const char* value, size_t size) {
  images_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.images)
}
 ::std::string* Build::add_images() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.cloudbuild.v1.Build.images)
  return images_.Add();
}
 void Build::add_images(const ::std::string& value) {
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.Build.images)
}
 void Build::add_images(const char* value) {
  images_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.cloudbuild.v1.Build.images)
}
 void Build::add_images(const char* value, size_t size) {
  images_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.cloudbuild.v1.Build.images)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Build::images() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.Build.images)
  return images_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Build::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.Build.images)
  return &images_;
}

// optional string logs_bucket = 19;
void Build::clear_logs_bucket() {
  logs_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Build::logs_bucket() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.logs_bucket)
  return logs_bucket_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_logs_bucket(const ::std::string& value) {
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
 void Build::set_logs_bucket(const char* value) {
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
 void Build::set_logs_bucket(const char* value, size_t size) {
  
  logs_bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.logs_bucket)
}
 ::std::string* Build::mutable_logs_bucket() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.logs_bucket)
  return logs_bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Build::release_logs_bucket() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.logs_bucket)
  
  return logs_bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_allocated_logs_bucket(::std::string* logs_bucket) {
  if (logs_bucket != NULL) {
    
  } else {
    
  }
  logs_bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logs_bucket);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.logs_bucket)
}

// optional .google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;
bool Build::has_source_provenance() const {
  return !_is_default_instance_ && source_provenance_ != NULL;
}
void Build::clear_source_provenance() {
  if (GetArenaNoVirtual() == NULL && source_provenance_ != NULL) delete source_provenance_;
  source_provenance_ = NULL;
}
const ::google::devtools::cloudbuild::v1::SourceProvenance& Build::source_provenance() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.source_provenance)
  return source_provenance_ != NULL ? *source_provenance_ : *default_instance_->source_provenance_;
}
::google::devtools::cloudbuild::v1::SourceProvenance* Build::mutable_source_provenance() {
  
  if (source_provenance_ == NULL) {
    source_provenance_ = new ::google::devtools::cloudbuild::v1::SourceProvenance;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.source_provenance)
  return source_provenance_;
}
::google::devtools::cloudbuild::v1::SourceProvenance* Build::release_source_provenance() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.source_provenance)
  
  ::google::devtools::cloudbuild::v1::SourceProvenance* temp = source_provenance_;
  source_provenance_ = NULL;
  return temp;
}
void Build::set_allocated_source_provenance(::google::devtools::cloudbuild::v1::SourceProvenance* source_provenance) {
  delete source_provenance_;
  source_provenance_ = source_provenance;
  if (source_provenance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.source_provenance)
}

// optional .google.devtools.cloudbuild.v1.BuildOptions options = 23;
bool Build::has_options() const {
  return !_is_default_instance_ && options_ != NULL;
}
void Build::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::google::devtools::cloudbuild::v1::BuildOptions& Build::options() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
::google::devtools::cloudbuild::v1::BuildOptions* Build::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::google::devtools::cloudbuild::v1::BuildOptions;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.options)
  return options_;
}
::google::devtools::cloudbuild::v1::BuildOptions* Build::release_options() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.options)
  
  ::google::devtools::cloudbuild::v1::BuildOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void Build::set_allocated_options(::google::devtools::cloudbuild::v1::BuildOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.options)
}

// optional string log_url = 25;
void Build::clear_log_url() {
  log_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Build::log_url() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Build.log_url)
  return log_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_log_url(const ::std::string& value) {
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Build.log_url)
}
 void Build::set_log_url(const char* value) {
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Build.log_url)
}
 void Build::set_log_url(const char* value, size_t size) {
  
  log_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Build.log_url)
}
 ::std::string* Build::mutable_log_url() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Build.log_url)
  return log_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Build::release_log_url() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Build.log_url)
  
  return log_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Build::set_allocated_log_url(::std::string* log_url) {
  if (log_url != NULL) {
    
  } else {
    
  }
  log_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_url);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Build.log_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildOperationMetadata::kBuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildOperationMetadata::BuildOperationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildOperationMetadata)
}

void BuildOperationMetadata::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  build_ = const_cast< ::google::devtools::cloudbuild::v1::Build*>(&::google::devtools::cloudbuild::v1::Build::default_instance());
}

BuildOperationMetadata::BuildOperationMetadata(const BuildOperationMetadata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildOperationMetadata)
}

void BuildOperationMetadata::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  build_ = NULL;
}

BuildOperationMetadata::~BuildOperationMetadata() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  SharedDtor();
}

void BuildOperationMetadata::SharedDtor() {
  if (this != default_instance_) {
    delete build_;
  }
}

void BuildOperationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildOperationMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildOperationMetadata_descriptor_;
}

const BuildOperationMetadata& BuildOperationMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

BuildOperationMetadata* BuildOperationMetadata::default_instance_ = NULL;

BuildOperationMetadata* BuildOperationMetadata::New(::google::protobuf::Arena* arena) const {
  BuildOperationMetadata* n = new BuildOperationMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildOperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (GetArenaNoVirtual() == NULL && build_ != NULL) delete build_;
  build_ = NULL;
}

bool BuildOperationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.cloudbuild.v1.Build build = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  return false;
#undef DO_
}

void BuildOperationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  // optional .google.devtools.cloudbuild.v1.Build build = 1;
  if (this->has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->build_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildOperationMetadata)
}

::google::protobuf::uint8* BuildOperationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  // optional .google.devtools.cloudbuild.v1.Build build = 1;
  if (this->has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->build_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  return target;
}

int BuildOperationMetadata::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  int total_size = 0;

  // optional .google.devtools.cloudbuild.v1.Build build = 1;
  if (this->has_build()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->build_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildOperationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BuildOperationMetadata* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildOperationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildOperationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildOperationMetadata)
    MergeFrom(*source);
  }
}

void BuildOperationMetadata::MergeFrom(const BuildOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_build()) {
    mutable_build()->::google::devtools::cloudbuild::v1::Build::MergeFrom(from.build());
  }
}

void BuildOperationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildOperationMetadata::CopyFrom(const BuildOperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildOperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildOperationMetadata::IsInitialized() const {

  return true;
}

void BuildOperationMetadata::Swap(BuildOperationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildOperationMetadata::InternalSwap(BuildOperationMetadata* other) {
  std::swap(build_, other->build_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildOperationMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildOperationMetadata_descriptor_;
  metadata.reflection = BuildOperationMetadata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildOperationMetadata

// optional .google.devtools.cloudbuild.v1.Build build = 1;
bool BuildOperationMetadata::has_build() const {
  return !_is_default_instance_ && build_ != NULL;
}
void BuildOperationMetadata::clear_build() {
  if (GetArenaNoVirtual() == NULL && build_ != NULL) delete build_;
  build_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Build& BuildOperationMetadata::build() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  return build_ != NULL ? *build_ : *default_instance_->build_;
}
::google::devtools::cloudbuild::v1::Build* BuildOperationMetadata::mutable_build() {
  
  if (build_ == NULL) {
    build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  return build_;
}
::google::devtools::cloudbuild::v1::Build* BuildOperationMetadata::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
  
  ::google::devtools::cloudbuild::v1::Build* temp = build_;
  build_ = NULL;
  return temp;
}
void BuildOperationMetadata::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  delete build_;
  build_ = build;
  if (build) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildOperationMetadata.build)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceProvenance::kResolvedStorageSourceFieldNumber;
const int SourceProvenance::kResolvedRepoSourceFieldNumber;
const int SourceProvenance::kFileHashesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceProvenance::SourceProvenance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.SourceProvenance)
}

void SourceProvenance::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  resolved_storage_source_ = const_cast< ::google::devtools::cloudbuild::v1::StorageSource*>(&::google::devtools::cloudbuild::v1::StorageSource::default_instance());
  resolved_repo_source_ = const_cast< ::google::devtools::cloudbuild::v1::RepoSource*>(&::google::devtools::cloudbuild::v1::RepoSource::default_instance());
}

SourceProvenance::SourceProvenance(const SourceProvenance& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.SourceProvenance)
}

void SourceProvenance::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resolved_storage_source_ = NULL;
  resolved_repo_source_ = NULL;
  file_hashes_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  file_hashes_.SetEntryDescriptor(
      &::google::devtools::cloudbuild::v1::SourceProvenance_FileHashesEntry_descriptor_);
}

SourceProvenance::~SourceProvenance() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.SourceProvenance)
  SharedDtor();
}

void SourceProvenance::SharedDtor() {
  if (this != default_instance_) {
    delete resolved_storage_source_;
    delete resolved_repo_source_;
  }
}

void SourceProvenance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceProvenance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SourceProvenance_descriptor_;
}

const SourceProvenance& SourceProvenance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

SourceProvenance* SourceProvenance::default_instance_ = NULL;

SourceProvenance* SourceProvenance::New(::google::protobuf::Arena* arena) const {
  SourceProvenance* n = new SourceProvenance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceProvenance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.SourceProvenance)
  if (GetArenaNoVirtual() == NULL && resolved_storage_source_ != NULL) delete resolved_storage_source_;
  resolved_storage_source_ = NULL;
  if (GetArenaNoVirtual() == NULL && resolved_repo_source_ != NULL) delete resolved_repo_source_;
  resolved_repo_source_ = NULL;
  file_hashes_.Clear();
}

bool SourceProvenance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.SourceProvenance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolved_storage_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_file_hashes;
        break;
      }

      // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
      case 4: {
        if (tag == 34) {
         parse_file_hashes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_file_hashes:
          SourceProvenance_FileHashesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::devtools::cloudbuild::v1::FileHashes,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes > > parser(&file_hashes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.SourceProvenance.FileHashesEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_file_hashes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_resolved_repo_source;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
      case 6: {
        if (tag == 50) {
         parse_resolved_repo_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolved_repo_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.SourceProvenance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.SourceProvenance)
  return false;
#undef DO_
}

void SourceProvenance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.SourceProvenance)
  // optional .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
  if (this->has_resolved_storage_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->resolved_storage_source_, output);
  }

  // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
  if (!this->file_hashes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.SourceProvenance.FileHashesEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->file_hashes().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->file_hashes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_hashes_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it) {
        entry.reset(file_hashes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
  if (this->has_resolved_repo_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->resolved_repo_source_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.SourceProvenance)
}

::google::protobuf::uint8* SourceProvenance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.SourceProvenance)
  // optional .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
  if (this->has_resolved_storage_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->resolved_storage_source_, false, target);
  }

  // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
  if (!this->file_hashes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.cloudbuild.v1.SourceProvenance.FileHashesEntry.key");
      }
    };

    if (deterministic &&
        this->file_hashes().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->file_hashes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_hashes_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
          it = this->file_hashes().begin();
          it != this->file_hashes().end(); ++it) {
        entry.reset(file_hashes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
  if (this->has_resolved_repo_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->resolved_repo_source_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.SourceProvenance)
  return target;
}

int SourceProvenance::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.SourceProvenance)
  int total_size = 0;

  // optional .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
  if (this->has_resolved_storage_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resolved_storage_source_);
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
  if (this->has_resolved_repo_source()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resolved_repo_source_);
  }

  // map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
  total_size += 1 * this->file_hashes_size();
  {
    ::google::protobuf::scoped_ptr<SourceProvenance_FileHashesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >::const_iterator
        it = this->file_hashes().begin();
        it != this->file_hashes().end(); ++it) {
      entry.reset(file_hashes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceProvenance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SourceProvenance* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceProvenance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.SourceProvenance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.SourceProvenance)
    MergeFrom(*source);
  }
}

void SourceProvenance::MergeFrom(const SourceProvenance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  file_hashes_.MergeFrom(from.file_hashes_);
  if (from.has_resolved_storage_source()) {
    mutable_resolved_storage_source()->::google::devtools::cloudbuild::v1::StorageSource::MergeFrom(from.resolved_storage_source());
  }
  if (from.has_resolved_repo_source()) {
    mutable_resolved_repo_source()->::google::devtools::cloudbuild::v1::RepoSource::MergeFrom(from.resolved_repo_source());
  }
}

void SourceProvenance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceProvenance::CopyFrom(const SourceProvenance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.SourceProvenance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceProvenance::IsInitialized() const {

  return true;
}

void SourceProvenance::Swap(SourceProvenance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceProvenance::InternalSwap(SourceProvenance* other) {
  std::swap(resolved_storage_source_, other->resolved_storage_source_);
  std::swap(resolved_repo_source_, other->resolved_repo_source_);
  file_hashes_.Swap(&other->file_hashes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceProvenance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SourceProvenance_descriptor_;
  metadata.reflection = SourceProvenance_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceProvenance

// optional .google.devtools.cloudbuild.v1.StorageSource resolved_storage_source = 3;
bool SourceProvenance::has_resolved_storage_source() const {
  return !_is_default_instance_ && resolved_storage_source_ != NULL;
}
void SourceProvenance::clear_resolved_storage_source() {
  if (GetArenaNoVirtual() == NULL && resolved_storage_source_ != NULL) delete resolved_storage_source_;
  resolved_storage_source_ = NULL;
}
const ::google::devtools::cloudbuild::v1::StorageSource& SourceProvenance::resolved_storage_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  return resolved_storage_source_ != NULL ? *resolved_storage_source_ : *default_instance_->resolved_storage_source_;
}
::google::devtools::cloudbuild::v1::StorageSource* SourceProvenance::mutable_resolved_storage_source() {
  
  if (resolved_storage_source_ == NULL) {
    resolved_storage_source_ = new ::google::devtools::cloudbuild::v1::StorageSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  return resolved_storage_source_;
}
::google::devtools::cloudbuild::v1::StorageSource* SourceProvenance::release_resolved_storage_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
  
  ::google::devtools::cloudbuild::v1::StorageSource* temp = resolved_storage_source_;
  resolved_storage_source_ = NULL;
  return temp;
}
void SourceProvenance::set_allocated_resolved_storage_source(::google::devtools::cloudbuild::v1::StorageSource* resolved_storage_source) {
  delete resolved_storage_source_;
  resolved_storage_source_ = resolved_storage_source;
  if (resolved_storage_source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.SourceProvenance.resolved_storage_source)
}

// optional .google.devtools.cloudbuild.v1.RepoSource resolved_repo_source = 6;
bool SourceProvenance::has_resolved_repo_source() const {
  return !_is_default_instance_ && resolved_repo_source_ != NULL;
}
void SourceProvenance::clear_resolved_repo_source() {
  if (GetArenaNoVirtual() == NULL && resolved_repo_source_ != NULL) delete resolved_repo_source_;
  resolved_repo_source_ = NULL;
}
const ::google::devtools::cloudbuild::v1::RepoSource& SourceProvenance::resolved_repo_source() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  return resolved_repo_source_ != NULL ? *resolved_repo_source_ : *default_instance_->resolved_repo_source_;
}
::google::devtools::cloudbuild::v1::RepoSource* SourceProvenance::mutable_resolved_repo_source() {
  
  if (resolved_repo_source_ == NULL) {
    resolved_repo_source_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  return resolved_repo_source_;
}
::google::devtools::cloudbuild::v1::RepoSource* SourceProvenance::release_resolved_repo_source() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
  
  ::google::devtools::cloudbuild::v1::RepoSource* temp = resolved_repo_source_;
  resolved_repo_source_ = NULL;
  return temp;
}
void SourceProvenance::set_allocated_resolved_repo_source(::google::devtools::cloudbuild::v1::RepoSource* resolved_repo_source) {
  delete resolved_repo_source_;
  resolved_repo_source_ = resolved_repo_source;
  if (resolved_repo_source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.SourceProvenance.resolved_repo_source)
}

// map<string, .google.devtools.cloudbuild.v1.FileHashes> file_hashes = 4;
int SourceProvenance::file_hashes_size() const {
  return file_hashes_.size();
}
void SourceProvenance::clear_file_hashes() {
  file_hashes_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >&
SourceProvenance::file_hashes() const {
  // @@protoc_insertion_point(field_map:google.devtools.cloudbuild.v1.SourceProvenance.file_hashes)
  return file_hashes_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::devtools::cloudbuild::v1::FileHashes >*
SourceProvenance::mutable_file_hashes() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.cloudbuild.v1.SourceProvenance.file_hashes)
  return file_hashes_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileHashes::kFileHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileHashes::FileHashes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.FileHashes)
}

void FileHashes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FileHashes::FileHashes(const FileHashes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.FileHashes)
}

void FileHashes::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

FileHashes::~FileHashes() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.FileHashes)
  SharedDtor();
}

void FileHashes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileHashes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileHashes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileHashes_descriptor_;
}

const FileHashes& FileHashes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

FileHashes* FileHashes::default_instance_ = NULL;

FileHashes* FileHashes::New(::google::protobuf::Arena* arena) const {
  FileHashes* n = new FileHashes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileHashes::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.FileHashes)
  file_hash_.Clear();
}

bool FileHashes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.FileHashes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_file_hash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_file_hash()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_file_hash;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.FileHashes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.FileHashes)
  return false;
#undef DO_
}

void FileHashes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.FileHashes)
  // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
  for (unsigned int i = 0, n = this->file_hash_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->file_hash(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.FileHashes)
}

::google::protobuf::uint8* FileHashes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.FileHashes)
  // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
  for (unsigned int i = 0, n = this->file_hash_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->file_hash(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.FileHashes)
  return target;
}

int FileHashes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.FileHashes)
  int total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
  total_size += 1 * this->file_hash_size();
  for (int i = 0; i < this->file_hash_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->file_hash(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileHashes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.FileHashes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FileHashes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FileHashes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.FileHashes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.FileHashes)
    MergeFrom(*source);
  }
}

void FileHashes::MergeFrom(const FileHashes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.FileHashes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  file_hash_.MergeFrom(from.file_hash_);
}

void FileHashes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.FileHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileHashes::CopyFrom(const FileHashes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.FileHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileHashes::IsInitialized() const {

  return true;
}

void FileHashes::Swap(FileHashes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileHashes::InternalSwap(FileHashes* other) {
  file_hash_.UnsafeArenaSwap(&other->file_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileHashes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileHashes_descriptor_;
  metadata.reflection = FileHashes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileHashes

// repeated .google.devtools.cloudbuild.v1.Hash file_hash = 1;
int FileHashes::file_hash_size() const {
  return file_hash_.size();
}
void FileHashes::clear_file_hash() {
  file_hash_.Clear();
}
const ::google::devtools::cloudbuild::v1::Hash& FileHashes::file_hash(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Get(index);
}
::google::devtools::cloudbuild::v1::Hash* FileHashes::mutable_file_hash(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Mutable(index);
}
::google::devtools::cloudbuild::v1::Hash* FileHashes::add_file_hash() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >*
FileHashes::mutable_file_hash() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return &file_hash_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Hash >&
FileHashes::file_hash() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.FileHashes.file_hash)
  return file_hash_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Hash_HashType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Hash_HashType_descriptor_;
}
bool Hash_HashType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Hash_HashType Hash::NONE;
const Hash_HashType Hash::SHA256;
const Hash_HashType Hash::HashType_MIN;
const Hash_HashType Hash::HashType_MAX;
const int Hash::HashType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hash::kTypeFieldNumber;
const int Hash::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hash::Hash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.Hash)
}

void Hash::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Hash::Hash(const Hash& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.Hash)
}

void Hash::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Hash::~Hash() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.Hash)
  SharedDtor();
}

void Hash::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Hash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Hash::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Hash_descriptor_;
}

const Hash& Hash::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

Hash* Hash::default_instance_ = NULL;

Hash* Hash::New(::google::protobuf::Arena* arena) const {
  Hash* n = new Hash;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Hash::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.Hash)
  type_ = 0;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Hash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.Hash)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.Hash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.Hash)
  return false;
#undef DO_
}

void Hash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.Hash)
  // optional .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.Hash)
}

::google::protobuf::uint8* Hash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.Hash)
  // optional .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.Hash)
  return target;
}

int Hash::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.Hash)
  int total_size = 0;

  // optional .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.Hash)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Hash* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Hash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.Hash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.Hash)
    MergeFrom(*source);
  }
}

void Hash::MergeFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.Hash)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Hash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hash::CopyFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hash::IsInitialized() const {

  return true;
}

void Hash::Swap(Hash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hash::InternalSwap(Hash* other) {
  std::swap(type_, other->type_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Hash::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Hash_descriptor_;
  metadata.reflection = Hash_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Hash

// optional .google.devtools.cloudbuild.v1.Hash.HashType type = 1;
void Hash::clear_type() {
  type_ = 0;
}
 ::google::devtools::cloudbuild::v1::Hash_HashType Hash::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Hash.type)
  return static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(type_);
}
 void Hash::set_type(::google::devtools::cloudbuild::v1::Hash_HashType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Hash.type)
}

// optional bytes value = 2;
void Hash::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Hash::value() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.Hash.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Hash::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.Hash.value)
}
 void Hash::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.Hash.value)
}
 void Hash::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.Hash.value)
}
 ::std::string* Hash::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.Hash.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Hash::release_value() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.Hash.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Hash::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.Hash.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBuildRequest::kProjectIdFieldNumber;
const int CreateBuildRequest::kBuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBuildRequest::CreateBuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.CreateBuildRequest)
}

void CreateBuildRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  build_ = const_cast< ::google::devtools::cloudbuild::v1::Build*>(&::google::devtools::cloudbuild::v1::Build::default_instance());
}

CreateBuildRequest::CreateBuildRequest(const CreateBuildRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.CreateBuildRequest)
}

void CreateBuildRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_ = NULL;
}

CreateBuildRequest::~CreateBuildRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.CreateBuildRequest)
  SharedDtor();
}

void CreateBuildRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete build_;
  }
}

void CreateBuildRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBuildRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBuildRequest_descriptor_;
}

const CreateBuildRequest& CreateBuildRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

CreateBuildRequest* CreateBuildRequest::default_instance_ = NULL;

CreateBuildRequest* CreateBuildRequest::New(::google::protobuf::Arena* arena) const {
  CreateBuildRequest* n = new CreateBuildRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && build_ != NULL) delete build_;
  build_ = NULL;
}

bool CreateBuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CreateBuildRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_build;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.Build build = 2;
      case 2: {
        if (tag == 18) {
         parse_build:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.CreateBuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.CreateBuildRequest)
  return false;
#undef DO_
}

void CreateBuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional .google.devtools.cloudbuild.v1.Build build = 2;
  if (this->has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->build_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.CreateBuildRequest)
}

::google::protobuf::uint8* CreateBuildRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional .google.devtools.cloudbuild.v1.Build build = 2;
  if (this->has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->build_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.CreateBuildRequest)
  return target;
}

int CreateBuildRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional .google.devtools.cloudbuild.v1.Build build = 2;
  if (this->has_build()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->build_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateBuildRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBuildRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.CreateBuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.CreateBuildRequest)
    MergeFrom(*source);
  }
}

void CreateBuildRequest::MergeFrom(const CreateBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_build()) {
    mutable_build()->::google::devtools::cloudbuild::v1::Build::MergeFrom(from.build());
  }
}

void CreateBuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBuildRequest::CopyFrom(const CreateBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBuildRequest::IsInitialized() const {

  return true;
}

void CreateBuildRequest::Swap(CreateBuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBuildRequest::InternalSwap(CreateBuildRequest* other) {
  project_id_.Swap(&other->project_id_);
  std::swap(build_, other->build_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateBuildRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateBuildRequest_descriptor_;
  metadata.reflection = CreateBuildRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateBuildRequest

// optional string project_id = 1;
void CreateBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
 void CreateBuildRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
 void CreateBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}
 ::std::string* CreateBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildRequest.project_id)
}

// optional .google.devtools.cloudbuild.v1.Build build = 2;
bool CreateBuildRequest::has_build() const {
  return !_is_default_instance_ && build_ != NULL;
}
void CreateBuildRequest::clear_build() {
  if (GetArenaNoVirtual() == NULL && build_ != NULL) delete build_;
  build_ = NULL;
}
const ::google::devtools::cloudbuild::v1::Build& CreateBuildRequest::build() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  return build_ != NULL ? *build_ : *default_instance_->build_;
}
::google::devtools::cloudbuild::v1::Build* CreateBuildRequest::mutable_build() {
  
  if (build_ == NULL) {
    build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  return build_;
}
::google::devtools::cloudbuild::v1::Build* CreateBuildRequest::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
  
  ::google::devtools::cloudbuild::v1::Build* temp = build_;
  build_ = NULL;
  return temp;
}
void CreateBuildRequest::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  delete build_;
  build_ = build;
  if (build) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildRequest.build)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBuildRequest::kProjectIdFieldNumber;
const int GetBuildRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBuildRequest::GetBuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.GetBuildRequest)
}

void GetBuildRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetBuildRequest::GetBuildRequest(const GetBuildRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.GetBuildRequest)
}

void GetBuildRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBuildRequest::~GetBuildRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.GetBuildRequest)
  SharedDtor();
}

void GetBuildRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetBuildRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBuildRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBuildRequest_descriptor_;
}

const GetBuildRequest& GetBuildRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

GetBuildRequest* GetBuildRequest::default_instance_ = NULL;

GetBuildRequest* GetBuildRequest::New(::google::protobuf::Arena* arena) const {
  GetBuildRequest* n = new GetBuildRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildRequest.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.GetBuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.GetBuildRequest)
  return false;
#undef DO_
}

void GetBuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.GetBuildRequest)
}

::google::protobuf::uint8* GetBuildRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.GetBuildRequest)
  return target;
}

int GetBuildRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBuildRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBuildRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.GetBuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.GetBuildRequest)
    MergeFrom(*source);
  }
}

void GetBuildRequest::MergeFrom(const GetBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void GetBuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBuildRequest::CopyFrom(const GetBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.GetBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBuildRequest::IsInitialized() const {

  return true;
}

void GetBuildRequest::Swap(GetBuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBuildRequest::InternalSwap(GetBuildRequest* other) {
  project_id_.Swap(&other->project_id_);
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBuildRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBuildRequest_descriptor_;
  metadata.reflection = GetBuildRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBuildRequest

// optional string project_id = 1;
void GetBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
 void GetBuildRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
 void GetBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}
 ::std::string* GetBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildRequest.project_id)
}

// optional string id = 2;
void GetBuildRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetBuildRequest::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
 void GetBuildRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
 void GetBuildRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}
 ::std::string* GetBuildRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBuildRequest::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildsRequest::kProjectIdFieldNumber;
const int ListBuildsRequest::kPageSizeFieldNumber;
const int ListBuildsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildsRequest::ListBuildsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildsRequest)
}

void ListBuildsRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListBuildsRequest::ListBuildsRequest(const ListBuildsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildsRequest)
}

void ListBuildsRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListBuildsRequest::~ListBuildsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildsRequest)
  SharedDtor();
}

void ListBuildsRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ListBuildsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListBuildsRequest_descriptor_;
}

const ListBuildsRequest& ListBuildsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

ListBuildsRequest* ListBuildsRequest::default_instance_ = NULL;

ListBuildsRequest* ListBuildsRequest::New(::google::protobuf::Arena* arena) const {
  ListBuildsRequest* n = new ListBuildsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListBuildsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildsRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 2;
      case 2: {
        if (tag == 16) {
         parse_page_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_page_token;
        break;
      }

      // optional string page_token = 3;
      case 3: {
        if (tag == 26) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildsRequest)
  return false;
#undef DO_
}

void ListBuildsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildsRequest)
}

::google::protobuf::uint8* ListBuildsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildsRequest)
  return target;
}

int ListBuildsRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListBuildsRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildsRequest)
    MergeFrom(*source);
  }
}

void ListBuildsRequest::MergeFrom(const ListBuildsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListBuildsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildsRequest::CopyFrom(const ListBuildsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildsRequest::IsInitialized() const {

  return true;
}

void ListBuildsRequest::Swap(ListBuildsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildsRequest::InternalSwap(ListBuildsRequest* other) {
  project_id_.Swap(&other->project_id_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListBuildsRequest_descriptor_;
  metadata.reflection = ListBuildsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildsRequest

// optional string project_id = 1;
void ListBuildsRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListBuildsRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildsRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
 void ListBuildsRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
 void ListBuildsRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}
 ::std::string* ListBuildsRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListBuildsRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildsRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.project_id)
}

// optional int32 page_size = 2;
void ListBuildsRequest::clear_page_size() {
  page_size_ = 0;
}
 ::google::protobuf::int32 ListBuildsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.page_size)
  return page_size_;
}
 void ListBuildsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.page_size)
}

// optional string page_token = 3;
void ListBuildsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListBuildsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
 void ListBuildsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
 void ListBuildsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}
 ::std::string* ListBuildsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListBuildsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsRequest.page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildsResponse::kBuildsFieldNumber;
const int ListBuildsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildsResponse::ListBuildsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildsResponse)
}

void ListBuildsResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListBuildsResponse::ListBuildsResponse(const ListBuildsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildsResponse)
}

void ListBuildsResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListBuildsResponse::~ListBuildsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildsResponse)
  SharedDtor();
}

void ListBuildsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ListBuildsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListBuildsResponse_descriptor_;
}

const ListBuildsResponse& ListBuildsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

ListBuildsResponse* ListBuildsResponse::default_instance_ = NULL;

ListBuildsResponse* ListBuildsResponse::New(::google::protobuf::Arena* arena) const {
  ListBuildsResponse* n = new ListBuildsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builds_.Clear();
}

bool ListBuildsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_builds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_builds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_builds;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildsResponse)
  return false;
#undef DO_
}

void ListBuildsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
  for (unsigned int i = 0, n = this->builds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->builds(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildsResponse)
}

::google::protobuf::uint8* ListBuildsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
  for (unsigned int i = 0, n = this->builds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->builds(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildsResponse)
  return target;
}

int ListBuildsResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  int total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.devtools.cloudbuild.v1.Build builds = 1;
  total_size += 1 * this->builds_size();
  for (int i = 0; i < this->builds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->builds(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListBuildsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildsResponse)
    MergeFrom(*source);
  }
}

void ListBuildsResponse::MergeFrom(const ListBuildsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  builds_.MergeFrom(from.builds_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListBuildsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildsResponse::CopyFrom(const ListBuildsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildsResponse::IsInitialized() const {

  return true;
}

void ListBuildsResponse::Swap(ListBuildsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildsResponse::InternalSwap(ListBuildsResponse* other) {
  builds_.UnsafeArenaSwap(&other->builds_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListBuildsResponse_descriptor_;
  metadata.reflection = ListBuildsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildsResponse

// repeated .google.devtools.cloudbuild.v1.Build builds = 1;
int ListBuildsResponse::builds_size() const {
  return builds_.size();
}
void ListBuildsResponse::clear_builds() {
  builds_.Clear();
}
const ::google::devtools::cloudbuild::v1::Build& ListBuildsResponse::builds(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Get(index);
}
::google::devtools::cloudbuild::v1::Build* ListBuildsResponse::mutable_builds(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Mutable(index);
}
::google::devtools::cloudbuild::v1::Build* ListBuildsResponse::add_builds() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >*
ListBuildsResponse::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return &builds_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::Build >&
ListBuildsResponse::builds() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.ListBuildsResponse.builds)
  return builds_;
}

// optional string next_page_token = 2;
void ListBuildsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListBuildsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
 void ListBuildsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
 void ListBuildsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}
 ::std::string* ListBuildsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListBuildsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildsResponse.next_page_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelBuildRequest::kProjectIdFieldNumber;
const int CancelBuildRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelBuildRequest::CancelBuildRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.CancelBuildRequest)
}

void CancelBuildRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CancelBuildRequest::CancelBuildRequest(const CancelBuildRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.CancelBuildRequest)
}

void CancelBuildRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CancelBuildRequest::~CancelBuildRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.CancelBuildRequest)
  SharedDtor();
}

void CancelBuildRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CancelBuildRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelBuildRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelBuildRequest_descriptor_;
}

const CancelBuildRequest& CancelBuildRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

CancelBuildRequest* CancelBuildRequest::default_instance_ = NULL;

CancelBuildRequest* CancelBuildRequest::New(::google::protobuf::Arena* arena) const {
  CancelBuildRequest* n = new CancelBuildRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CancelBuildRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CancelBuildRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CancelBuildRequest.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.CancelBuildRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.CancelBuildRequest)
  return false;
#undef DO_
}

void CancelBuildRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.CancelBuildRequest)
}

::google::protobuf::uint8* CancelBuildRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CancelBuildRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.CancelBuildRequest)
  return target;
}

int CancelBuildRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelBuildRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CancelBuildRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelBuildRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.CancelBuildRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.CancelBuildRequest)
    MergeFrom(*source);
  }
}

void CancelBuildRequest::MergeFrom(const CancelBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void CancelBuildRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelBuildRequest::CopyFrom(const CancelBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.CancelBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelBuildRequest::IsInitialized() const {

  return true;
}

void CancelBuildRequest::Swap(CancelBuildRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelBuildRequest::InternalSwap(CancelBuildRequest* other) {
  project_id_.Swap(&other->project_id_);
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelBuildRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CancelBuildRequest_descriptor_;
  metadata.reflection = CancelBuildRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelBuildRequest

// optional string project_id = 1;
void CancelBuildRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CancelBuildRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CancelBuildRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
 void CancelBuildRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
 void CancelBuildRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}
 ::std::string* CancelBuildRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CancelBuildRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CancelBuildRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CancelBuildRequest.project_id)
}

// optional string id = 2;
void CancelBuildRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CancelBuildRequest::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CancelBuildRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
 void CancelBuildRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
 void CancelBuildRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}
 ::std::string* CancelBuildRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CancelBuildRequest::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CancelBuildRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CancelBuildRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildTrigger::kIdFieldNumber;
const int BuildTrigger::kTriggerTemplateFieldNumber;
const int BuildTrigger::kBuildFieldNumber;
const int BuildTrigger::kCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildTrigger::BuildTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildTrigger)
}

void BuildTrigger::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  trigger_template_ = const_cast< ::google::devtools::cloudbuild::v1::RepoSource*>(&::google::devtools::cloudbuild::v1::RepoSource::default_instance());
  BuildTrigger_default_oneof_instance_->build_ = const_cast< ::google::devtools::cloudbuild::v1::Build*>(&::google::devtools::cloudbuild::v1::Build::default_instance());
  create_time_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
}

BuildTrigger::BuildTrigger(const BuildTrigger& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildTrigger)
}

void BuildTrigger::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_template_ = NULL;
  create_time_ = NULL;
  clear_has_build_template();
}

BuildTrigger::~BuildTrigger() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildTrigger)
  SharedDtor();
}

void BuildTrigger::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_build_template()) {
    clear_build_template();
  }
  if (this != default_instance_) {
    delete trigger_template_;
    delete create_time_;
  }
}

void BuildTrigger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildTrigger::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildTrigger_descriptor_;
}

const BuildTrigger& BuildTrigger::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

BuildTrigger* BuildTrigger::default_instance_ = NULL;

BuildTrigger* BuildTrigger::New(::google::protobuf::Arena* arena) const {
  BuildTrigger* n = new BuildTrigger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildTrigger::clear_build_template() {
// @@protoc_insertion_point(one_of_clear_start:google.devtools.cloudbuild.v1.BuildTrigger)
  switch(build_template_case()) {
    case kBuild: {
      delete build_template_.build_;
      break;
    }
    case BUILD_TEMPLATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BUILD_TEMPLATE_NOT_SET;
}


void BuildTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildTrigger)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && trigger_template_ != NULL) delete trigger_template_;
  trigger_template_ = NULL;
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
  clear_build_template();
}

bool BuildTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildTrigger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.BuildTrigger.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_build;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.Build build = 4;
      case 4: {
        if (tag == 34) {
         parse_build:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_build()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_create_time;
        break;
      }

      // optional .google.protobuf.Timestamp create_time = 5;
      case 5: {
        if (tag == 42) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_trigger_template;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
      case 7: {
        if (tag == 58) {
         parse_trigger_template:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trigger_template()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildTrigger)
  return false;
#undef DO_
}

void BuildTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildTrigger)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .google.devtools.cloudbuild.v1.Build build = 4;
  if (has_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *build_template_.build_, output);
  }

  // optional .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->create_time_, output);
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
  if (this->has_trigger_template()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->trigger_template_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildTrigger)
}

::google::protobuf::uint8* BuildTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildTrigger)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.BuildTrigger.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .google.devtools.cloudbuild.v1.Build build = 4;
  if (has_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *build_template_.build_, false, target);
  }

  // optional .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->create_time_, false, target);
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
  if (this->has_trigger_template()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->trigger_template_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildTrigger)
  return target;
}

int BuildTrigger::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildTrigger)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
  if (this->has_trigger_template()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trigger_template_);
  }

  // optional .google.protobuf.Timestamp create_time = 5;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  switch (build_template_case()) {
    // optional .google.devtools.cloudbuild.v1.Build build = 4;
    case kBuild: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *build_template_.build_);
      break;
    }
    case BUILD_TEMPLATE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BuildTrigger* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildTrigger)
    MergeFrom(*source);
  }
}

void BuildTrigger::MergeFrom(const BuildTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.build_template_case()) {
    case kBuild: {
      mutable_build()->::google::devtools::cloudbuild::v1::Build::MergeFrom(from.build());
      break;
    }
    case BUILD_TEMPLATE_NOT_SET: {
      break;
    }
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_trigger_template()) {
    mutable_trigger_template()->::google::devtools::cloudbuild::v1::RepoSource::MergeFrom(from.trigger_template());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
}

void BuildTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildTrigger::CopyFrom(const BuildTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildTrigger::IsInitialized() const {

  return true;
}

void BuildTrigger::Swap(BuildTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildTrigger::InternalSwap(BuildTrigger* other) {
  id_.Swap(&other->id_);
  std::swap(trigger_template_, other->trigger_template_);
  std::swap(create_time_, other->create_time_);
  std::swap(build_template_, other->build_template_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildTrigger::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildTrigger_descriptor_;
  metadata.reflection = BuildTrigger_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildTrigger

// optional string id = 1;
void BuildTrigger::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BuildTrigger::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildTrigger::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
 void BuildTrigger::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
 void BuildTrigger::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.BuildTrigger.id)
}
 ::std::string* BuildTrigger::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BuildTrigger::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BuildTrigger::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.id)
}

// optional .google.devtools.cloudbuild.v1.RepoSource trigger_template = 7;
bool BuildTrigger::has_trigger_template() const {
  return !_is_default_instance_ && trigger_template_ != NULL;
}
void BuildTrigger::clear_trigger_template() {
  if (GetArenaNoVirtual() == NULL && trigger_template_ != NULL) delete trigger_template_;
  trigger_template_ = NULL;
}
const ::google::devtools::cloudbuild::v1::RepoSource& BuildTrigger::trigger_template() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  return trigger_template_ != NULL ? *trigger_template_ : *default_instance_->trigger_template_;
}
::google::devtools::cloudbuild::v1::RepoSource* BuildTrigger::mutable_trigger_template() {
  
  if (trigger_template_ == NULL) {
    trigger_template_ = new ::google::devtools::cloudbuild::v1::RepoSource;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  return trigger_template_;
}
::google::devtools::cloudbuild::v1::RepoSource* BuildTrigger::release_trigger_template() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
  
  ::google::devtools::cloudbuild::v1::RepoSource* temp = trigger_template_;
  trigger_template_ = NULL;
  return temp;
}
void BuildTrigger::set_allocated_trigger_template(::google::devtools::cloudbuild::v1::RepoSource* trigger_template) {
  delete trigger_template_;
  trigger_template_ = trigger_template;
  if (trigger_template) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.trigger_template)
}

// optional .google.devtools.cloudbuild.v1.Build build = 4;
bool BuildTrigger::has_build() const {
  return build_template_case() == kBuild;
}
void BuildTrigger::set_has_build() {
  _oneof_case_[0] = kBuild;
}
void BuildTrigger::clear_build() {
  if (has_build()) {
    delete build_template_.build_;
    clear_has_build_template();
  }
}
 const ::google::devtools::cloudbuild::v1::Build& BuildTrigger::build() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.build)
  return has_build()
      ? *build_template_.build_
      : ::google::devtools::cloudbuild::v1::Build::default_instance();
}
::google::devtools::cloudbuild::v1::Build* BuildTrigger::mutable_build() {
  if (!has_build()) {
    clear_build_template();
    set_has_build();
    build_template_.build_ = new ::google::devtools::cloudbuild::v1::Build;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.build)
  return build_template_.build_;
}
::google::devtools::cloudbuild::v1::Build* BuildTrigger::release_build() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.build)
  if (has_build()) {
    clear_has_build_template();
    ::google::devtools::cloudbuild::v1::Build* temp = build_template_.build_;
    build_template_.build_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void BuildTrigger::set_allocated_build(::google::devtools::cloudbuild::v1::Build* build) {
  clear_build_template();
  if (build) {
    set_has_build();
    build_template_.build_ = build;
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.build)
}

// optional .google.protobuf.Timestamp create_time = 5;
bool BuildTrigger::has_create_time() const {
  return !_is_default_instance_ && create_time_ != NULL;
}
void BuildTrigger::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& BuildTrigger::create_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  return create_time_ != NULL ? *create_time_ : *default_instance_->create_time_;
}
::google::protobuf::Timestamp* BuildTrigger::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* BuildTrigger::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void BuildTrigger::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.BuildTrigger.create_time)
}

bool BuildTrigger::has_build_template() const {
  return build_template_case() != BUILD_TEMPLATE_NOT_SET;
}
void BuildTrigger::clear_has_build_template() {
  _oneof_case_[0] = BUILD_TEMPLATE_NOT_SET;
}
BuildTrigger::BuildTemplateCase BuildTrigger::build_template_case() const {
  return BuildTrigger::BuildTemplateCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBuildTriggerRequest::kProjectIdFieldNumber;
const int CreateBuildTriggerRequest::kTriggerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBuildTriggerRequest::CreateBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
}

void CreateBuildTriggerRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  trigger_ = const_cast< ::google::devtools::cloudbuild::v1::BuildTrigger*>(&::google::devtools::cloudbuild::v1::BuildTrigger::default_instance());
}

CreateBuildTriggerRequest::CreateBuildTriggerRequest(const CreateBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
}

void CreateBuildTriggerRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_ = NULL;
}

CreateBuildTriggerRequest::~CreateBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  SharedDtor();
}

void CreateBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete trigger_;
  }
}

void CreateBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBuildTriggerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateBuildTriggerRequest_descriptor_;
}

const CreateBuildTriggerRequest& CreateBuildTriggerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

CreateBuildTriggerRequest* CreateBuildTriggerRequest::default_instance_ = NULL;

CreateBuildTriggerRequest* CreateBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  CreateBuildTriggerRequest* n = new CreateBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) delete trigger_;
  trigger_ = NULL;
}

bool CreateBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_trigger;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
      case 2: {
        if (tag == 18) {
         parse_trigger:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trigger()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  return false;
#undef DO_
}

void CreateBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
  if (this->has_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->trigger_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
}

::google::protobuf::uint8* CreateBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
  if (this->has_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->trigger_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  return target;
}

int CreateBuildTriggerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
  if (this->has_trigger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trigger_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateBuildTriggerRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void CreateBuildTriggerRequest::MergeFrom(const CreateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.has_trigger()) {
    mutable_trigger()->::google::devtools::cloudbuild::v1::BuildTrigger::MergeFrom(from.trigger());
  }
}

void CreateBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBuildTriggerRequest::CopyFrom(const CreateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBuildTriggerRequest::IsInitialized() const {

  return true;
}

void CreateBuildTriggerRequest::Swap(CreateBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBuildTriggerRequest::InternalSwap(CreateBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  std::swap(trigger_, other->trigger_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateBuildTriggerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateBuildTriggerRequest_descriptor_;
  metadata.reflection = CreateBuildTriggerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateBuildTriggerRequest

// optional string project_id = 1;
void CreateBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
 void CreateBuildTriggerRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
 void CreateBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}
 ::std::string* CreateBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.project_id)
}

// optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 2;
bool CreateBuildTriggerRequest::has_trigger() const {
  return !_is_default_instance_ && trigger_ != NULL;
}
void CreateBuildTriggerRequest::clear_trigger() {
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) delete trigger_;
  trigger_ = NULL;
}
const ::google::devtools::cloudbuild::v1::BuildTrigger& CreateBuildTriggerRequest::trigger() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  return trigger_ != NULL ? *trigger_ : *default_instance_->trigger_;
}
::google::devtools::cloudbuild::v1::BuildTrigger* CreateBuildTriggerRequest::mutable_trigger() {
  
  if (trigger_ == NULL) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  return trigger_;
}
::google::devtools::cloudbuild::v1::BuildTrigger* CreateBuildTriggerRequest::release_trigger() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
  
  ::google::devtools::cloudbuild::v1::BuildTrigger* temp = trigger_;
  trigger_ = NULL;
  return temp;
}
void CreateBuildTriggerRequest::set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger) {
  delete trigger_;
  trigger_ = trigger;
  if (trigger) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBuildTriggerRequest::kProjectIdFieldNumber;
const int GetBuildTriggerRequest::kTriggerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBuildTriggerRequest::GetBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
}

void GetBuildTriggerRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetBuildTriggerRequest::GetBuildTriggerRequest(const GetBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
}

void GetBuildTriggerRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBuildTriggerRequest::~GetBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  SharedDtor();
}

void GetBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBuildTriggerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBuildTriggerRequest_descriptor_;
}

const GetBuildTriggerRequest& GetBuildTriggerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

GetBuildTriggerRequest* GetBuildTriggerRequest::default_instance_ = NULL;

GetBuildTriggerRequest* GetBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  GetBuildTriggerRequest* n = new GetBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_trigger_id;
        break;
      }

      // optional string trigger_id = 2;
      case 2: {
        if (tag == 18) {
         parse_trigger_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_id().data(), this->trigger_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  return false;
#undef DO_
}

void GetBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trigger_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
}

::google::protobuf::uint8* GetBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trigger_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  return target;
}

int GetBuildTriggerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBuildTriggerRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void GetBuildTriggerRequest::MergeFrom(const GetBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.trigger_id().size() > 0) {

    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
}

void GetBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBuildTriggerRequest::CopyFrom(const GetBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBuildTriggerRequest::IsInitialized() const {

  return true;
}

void GetBuildTriggerRequest::Swap(GetBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBuildTriggerRequest::InternalSwap(GetBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  trigger_id_.Swap(&other->trigger_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBuildTriggerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBuildTriggerRequest_descriptor_;
  metadata.reflection = GetBuildTriggerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBuildTriggerRequest

// optional string project_id = 1;
void GetBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
 void GetBuildTriggerRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
 void GetBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}
 ::std::string* GetBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.project_id)
}

// optional string trigger_id = 2;
void GetBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
 void GetBuildTriggerRequest::set_trigger_id(const char* value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
 void GetBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}
 ::std::string* GetBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.GetBuildTriggerRequest.trigger_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildTriggersRequest::kProjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildTriggersRequest::ListBuildTriggersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
}

void ListBuildTriggersRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListBuildTriggersRequest::ListBuildTriggersRequest(const ListBuildTriggersRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
}

void ListBuildTriggersRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListBuildTriggersRequest::~ListBuildTriggersRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  SharedDtor();
}

void ListBuildTriggersRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ListBuildTriggersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildTriggersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListBuildTriggersRequest_descriptor_;
}

const ListBuildTriggersRequest& ListBuildTriggersRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

ListBuildTriggersRequest* ListBuildTriggersRequest::default_instance_ = NULL;

ListBuildTriggersRequest* ListBuildTriggersRequest::New(::google::protobuf::Arena* arena) const {
  ListBuildTriggersRequest* n = new ListBuildTriggersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildTriggersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListBuildTriggersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  return false;
#undef DO_
}

void ListBuildTriggersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
}

::google::protobuf::uint8* ListBuildTriggersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  return target;
}

int ListBuildTriggersRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildTriggersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListBuildTriggersRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildTriggersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
    MergeFrom(*source);
  }
}

void ListBuildTriggersRequest::MergeFrom(const ListBuildTriggersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
}

void ListBuildTriggersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildTriggersRequest::CopyFrom(const ListBuildTriggersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildTriggersRequest::IsInitialized() const {

  return true;
}

void ListBuildTriggersRequest::Swap(ListBuildTriggersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildTriggersRequest::InternalSwap(ListBuildTriggersRequest* other) {
  project_id_.Swap(&other->project_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildTriggersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListBuildTriggersRequest_descriptor_;
  metadata.reflection = ListBuildTriggersRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildTriggersRequest

// optional string project_id = 1;
void ListBuildTriggersRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ListBuildTriggersRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildTriggersRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
 void ListBuildTriggersRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
 void ListBuildTriggersRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}
 ::std::string* ListBuildTriggersRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ListBuildTriggersRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ListBuildTriggersRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.ListBuildTriggersRequest.project_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBuildTriggersResponse::kTriggersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBuildTriggersResponse::ListBuildTriggersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
}

void ListBuildTriggersResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListBuildTriggersResponse::ListBuildTriggersResponse(const ListBuildTriggersResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
}

void ListBuildTriggersResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ListBuildTriggersResponse::~ListBuildTriggersResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  SharedDtor();
}

void ListBuildTriggersResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListBuildTriggersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBuildTriggersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListBuildTriggersResponse_descriptor_;
}

const ListBuildTriggersResponse& ListBuildTriggersResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

ListBuildTriggersResponse* ListBuildTriggersResponse::default_instance_ = NULL;

ListBuildTriggersResponse* ListBuildTriggersResponse::New(::google::protobuf::Arena* arena) const {
  ListBuildTriggersResponse* n = new ListBuildTriggersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBuildTriggersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  triggers_.Clear();
}

bool ListBuildTriggersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_triggers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_triggers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_triggers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  return false;
#undef DO_
}

void ListBuildTriggersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
  for (unsigned int i = 0, n = this->triggers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->triggers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
}

::google::protobuf::uint8* ListBuildTriggersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
  for (unsigned int i = 0, n = this->triggers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->triggers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  return target;
}

int ListBuildTriggersResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  int total_size = 0;

  // repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
  total_size += 1 * this->triggers_size();
  for (int i = 0; i < this->triggers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->triggers(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBuildTriggersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ListBuildTriggersResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBuildTriggersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
    MergeFrom(*source);
  }
}

void ListBuildTriggersResponse::MergeFrom(const ListBuildTriggersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  triggers_.MergeFrom(from.triggers_);
}

void ListBuildTriggersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBuildTriggersResponse::CopyFrom(const ListBuildTriggersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBuildTriggersResponse::IsInitialized() const {

  return true;
}

void ListBuildTriggersResponse::Swap(ListBuildTriggersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBuildTriggersResponse::InternalSwap(ListBuildTriggersResponse* other) {
  triggers_.UnsafeArenaSwap(&other->triggers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBuildTriggersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListBuildTriggersResponse_descriptor_;
  metadata.reflection = ListBuildTriggersResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBuildTriggersResponse

// repeated .google.devtools.cloudbuild.v1.BuildTrigger triggers = 1;
int ListBuildTriggersResponse::triggers_size() const {
  return triggers_.size();
}
void ListBuildTriggersResponse::clear_triggers() {
  triggers_.Clear();
}
const ::google::devtools::cloudbuild::v1::BuildTrigger& ListBuildTriggersResponse::triggers(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Get(index);
}
::google::devtools::cloudbuild::v1::BuildTrigger* ListBuildTriggersResponse::mutable_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Mutable(index);
}
::google::devtools::cloudbuild::v1::BuildTrigger* ListBuildTriggersResponse::add_triggers() {
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >*
ListBuildTriggersResponse::mutable_triggers() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return &triggers_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::cloudbuild::v1::BuildTrigger >&
ListBuildTriggersResponse::triggers() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers)
  return triggers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteBuildTriggerRequest::kProjectIdFieldNumber;
const int DeleteBuildTriggerRequest::kTriggerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteBuildTriggerRequest::DeleteBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
}

void DeleteBuildTriggerRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteBuildTriggerRequest::DeleteBuildTriggerRequest(const DeleteBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
}

void DeleteBuildTriggerRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteBuildTriggerRequest::~DeleteBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  SharedDtor();
}

void DeleteBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DeleteBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteBuildTriggerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteBuildTriggerRequest_descriptor_;
}

const DeleteBuildTriggerRequest& DeleteBuildTriggerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

DeleteBuildTriggerRequest* DeleteBuildTriggerRequest::default_instance_ = NULL;

DeleteBuildTriggerRequest* DeleteBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  DeleteBuildTriggerRequest* n = new DeleteBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_trigger_id;
        break;
      }

      // optional string trigger_id = 2;
      case 2: {
        if (tag == 18) {
         parse_trigger_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_id().data(), this->trigger_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  return false;
#undef DO_
}

void DeleteBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trigger_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
}

::google::protobuf::uint8* DeleteBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trigger_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  return target;
}

int DeleteBuildTriggerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteBuildTriggerRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void DeleteBuildTriggerRequest::MergeFrom(const DeleteBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.trigger_id().size() > 0) {

    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
}

void DeleteBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBuildTriggerRequest::CopyFrom(const DeleteBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBuildTriggerRequest::IsInitialized() const {

  return true;
}

void DeleteBuildTriggerRequest::Swap(DeleteBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteBuildTriggerRequest::InternalSwap(DeleteBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  trigger_id_.Swap(&other->trigger_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteBuildTriggerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteBuildTriggerRequest_descriptor_;
  metadata.reflection = DeleteBuildTriggerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteBuildTriggerRequest

// optional string project_id = 1;
void DeleteBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
 void DeleteBuildTriggerRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
 void DeleteBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}
 ::std::string* DeleteBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.project_id)
}

// optional string trigger_id = 2;
void DeleteBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
 void DeleteBuildTriggerRequest::set_trigger_id(const char* value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
 void DeleteBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}
 ::std::string* DeleteBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.trigger_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateBuildTriggerRequest::kProjectIdFieldNumber;
const int UpdateBuildTriggerRequest::kTriggerIdFieldNumber;
const int UpdateBuildTriggerRequest::kTriggerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateBuildTriggerRequest::UpdateBuildTriggerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
}

void UpdateBuildTriggerRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  trigger_ = const_cast< ::google::devtools::cloudbuild::v1::BuildTrigger*>(&::google::devtools::cloudbuild::v1::BuildTrigger::default_instance());
}

UpdateBuildTriggerRequest::UpdateBuildTriggerRequest(const UpdateBuildTriggerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
}

void UpdateBuildTriggerRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_ = NULL;
}

UpdateBuildTriggerRequest::~UpdateBuildTriggerRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  SharedDtor();
}

void UpdateBuildTriggerRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete trigger_;
  }
}

void UpdateBuildTriggerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateBuildTriggerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateBuildTriggerRequest_descriptor_;
}

const UpdateBuildTriggerRequest& UpdateBuildTriggerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

UpdateBuildTriggerRequest* UpdateBuildTriggerRequest::default_instance_ = NULL;

UpdateBuildTriggerRequest* UpdateBuildTriggerRequest::New(::google::protobuf::Arena* arena) const {
  UpdateBuildTriggerRequest* n = new UpdateBuildTriggerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateBuildTriggerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) delete trigger_;
  trigger_ = NULL;
}

bool UpdateBuildTriggerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_trigger_id;
        break;
      }

      // optional string trigger_id = 2;
      case 2: {
        if (tag == 18) {
         parse_trigger_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trigger_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trigger_id().data(), this->trigger_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_trigger;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
      case 3: {
        if (tag == 26) {
         parse_trigger:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trigger()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  return false;
#undef DO_
}

void UpdateBuildTriggerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trigger_id(), output);
  }

  // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
  if (this->has_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->trigger_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
}

::google::protobuf::uint8* UpdateBuildTriggerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trigger_id().data(), this->trigger_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trigger_id(), target);
  }

  // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
  if (this->has_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->trigger_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  return target;
}

int UpdateBuildTriggerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  int total_size = 0;

  // optional string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional string trigger_id = 2;
  if (this->trigger_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trigger_id());
  }

  // optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
  if (this->has_trigger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trigger_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateBuildTriggerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateBuildTriggerRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateBuildTriggerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
    MergeFrom(*source);
  }
}

void UpdateBuildTriggerRequest::MergeFrom(const UpdateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.trigger_id().size() > 0) {

    trigger_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trigger_id_);
  }
  if (from.has_trigger()) {
    mutable_trigger()->::google::devtools::cloudbuild::v1::BuildTrigger::MergeFrom(from.trigger());
  }
}

void UpdateBuildTriggerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateBuildTriggerRequest::CopyFrom(const UpdateBuildTriggerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBuildTriggerRequest::IsInitialized() const {

  return true;
}

void UpdateBuildTriggerRequest::Swap(UpdateBuildTriggerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateBuildTriggerRequest::InternalSwap(UpdateBuildTriggerRequest* other) {
  project_id_.Swap(&other->project_id_);
  trigger_id_.Swap(&other->trigger_id_);
  std::swap(trigger_, other->trigger_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateBuildTriggerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateBuildTriggerRequest_descriptor_;
  metadata.reflection = UpdateBuildTriggerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateBuildTriggerRequest

// optional string project_id = 1;
void UpdateBuildTriggerRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UpdateBuildTriggerRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateBuildTriggerRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
 void UpdateBuildTriggerRequest::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
 void UpdateBuildTriggerRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}
 ::std::string* UpdateBuildTriggerRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UpdateBuildTriggerRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateBuildTriggerRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.project_id)
}

// optional string trigger_id = 2;
void UpdateBuildTriggerRequest::clear_trigger_id() {
  trigger_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UpdateBuildTriggerRequest::trigger_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  return trigger_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateBuildTriggerRequest::set_trigger_id(const ::std::string& value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
 void UpdateBuildTriggerRequest::set_trigger_id(const char* value) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
 void UpdateBuildTriggerRequest::set_trigger_id(const char* value, size_t size) {
  
  trigger_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}
 ::std::string* UpdateBuildTriggerRequest::mutable_trigger_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  return trigger_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UpdateBuildTriggerRequest::release_trigger_id() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
  
  return trigger_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateBuildTriggerRequest::set_allocated_trigger_id(::std::string* trigger_id) {
  if (trigger_id != NULL) {
    
  } else {
    
  }
  trigger_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger_id)
}

// optional .google.devtools.cloudbuild.v1.BuildTrigger trigger = 3;
bool UpdateBuildTriggerRequest::has_trigger() const {
  return !_is_default_instance_ && trigger_ != NULL;
}
void UpdateBuildTriggerRequest::clear_trigger() {
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) delete trigger_;
  trigger_ = NULL;
}
const ::google::devtools::cloudbuild::v1::BuildTrigger& UpdateBuildTriggerRequest::trigger() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  return trigger_ != NULL ? *trigger_ : *default_instance_->trigger_;
}
::google::devtools::cloudbuild::v1::BuildTrigger* UpdateBuildTriggerRequest::mutable_trigger() {
  
  if (trigger_ == NULL) {
    trigger_ = new ::google::devtools::cloudbuild::v1::BuildTrigger;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  return trigger_;
}
::google::devtools::cloudbuild::v1::BuildTrigger* UpdateBuildTriggerRequest::release_trigger() {
  // @@protoc_insertion_point(field_release:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
  
  ::google::devtools::cloudbuild::v1::BuildTrigger* temp = trigger_;
  trigger_ = NULL;
  return temp;
}
void UpdateBuildTriggerRequest::set_allocated_trigger(::google::devtools::cloudbuild::v1::BuildTrigger* trigger) {
  delete trigger_;
  trigger_ = trigger;
  if (trigger) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BuildOptions_VerifyOption_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildOptions_VerifyOption_descriptor_;
}
bool BuildOptions_VerifyOption_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BuildOptions_VerifyOption BuildOptions::NOT_VERIFIED;
const BuildOptions_VerifyOption BuildOptions::VERIFIED;
const BuildOptions_VerifyOption BuildOptions::VerifyOption_MIN;
const BuildOptions_VerifyOption BuildOptions::VerifyOption_MAX;
const int BuildOptions::VerifyOption_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuildOptions::kSourceProvenanceHashFieldNumber;
const int BuildOptions::kRequestedVerifyOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuildOptions::BuildOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.cloudbuild.v1.BuildOptions)
}

void BuildOptions::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BuildOptions::BuildOptions(const BuildOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.cloudbuild.v1.BuildOptions)
}

void BuildOptions::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  requested_verify_option_ = 0;
}

BuildOptions::~BuildOptions() {
  // @@protoc_insertion_point(destructor:google.devtools.cloudbuild.v1.BuildOptions)
  SharedDtor();
}

void BuildOptions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuildOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuildOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuildOptions_descriptor_;
}

const BuildOptions& BuildOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fdevtools_2fcloudbuild_2fv1_2fcloudbuild_2eproto();
  return *default_instance_;
}

BuildOptions* BuildOptions::default_instance_ = NULL;

BuildOptions* BuildOptions::New(::google::protobuf::Arena* arena) const {
  BuildOptions* n = new BuildOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuildOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.cloudbuild.v1.BuildOptions)
  requested_verify_option_ = 0;
  source_provenance_hash_.Clear();
}

bool BuildOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.cloudbuild.v1.BuildOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
      case 1: {
        if (tag == 10) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_source_provenance_hash(static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(value));
          }
          input->PopLimit(limit);
        } else if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_source_provenance_hash(static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_requested_verify_option;
        break;
      }

      // optional .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
      case 2: {
        if (tag == 16) {
         parse_requested_verify_option:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_requested_verify_option(static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.cloudbuild.v1.BuildOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.cloudbuild.v1.BuildOptions)
  return false;
#undef DO_
}

void BuildOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.cloudbuild.v1.BuildOptions)
  // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
  if (this->source_provenance_hash_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_source_provenance_hash_cached_byte_size_);
  }
  for (int i = 0; i < this->source_provenance_hash_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->source_provenance_hash(i), output);
  }

  // optional .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
  if (this->requested_verify_option() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->requested_verify_option(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.cloudbuild.v1.BuildOptions)
}

::google::protobuf::uint8* BuildOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.cloudbuild.v1.BuildOptions)
  // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
  if (this->source_provenance_hash_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _source_provenance_hash_cached_byte_size_, target);
  }
  for (int i = 0; i < this->source_provenance_hash_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->source_provenance_hash(i), target);
  }

  // optional .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
  if (this->requested_verify_option() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->requested_verify_option(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.cloudbuild.v1.BuildOptions)
  return target;
}

int BuildOptions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.cloudbuild.v1.BuildOptions)
  int total_size = 0;

  // optional .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
  if (this->requested_verify_option() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->requested_verify_option());
  }

  // repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->source_provenance_hash_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->source_provenance_hash(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _source_provenance_hash_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuildOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BuildOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BuildOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.cloudbuild.v1.BuildOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.cloudbuild.v1.BuildOptions)
    MergeFrom(*source);
  }
}

void BuildOptions::MergeFrom(const BuildOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  source_provenance_hash_.MergeFrom(from.source_provenance_hash_);
  if (from.requested_verify_option() != 0) {
    set_requested_verify_option(from.requested_verify_option());
  }
}

void BuildOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuildOptions::CopyFrom(const BuildOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.cloudbuild.v1.BuildOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuildOptions::IsInitialized() const {

  return true;
}

void BuildOptions::Swap(BuildOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuildOptions::InternalSwap(BuildOptions* other) {
  source_provenance_hash_.UnsafeArenaSwap(&other->source_provenance_hash_);
  std::swap(requested_verify_option_, other->requested_verify_option_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuildOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuildOptions_descriptor_;
  metadata.reflection = BuildOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuildOptions

// repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;
int BuildOptions::source_provenance_hash_size() const {
  return source_provenance_hash_.size();
}
void BuildOptions::clear_source_provenance_hash() {
  source_provenance_hash_.Clear();
}
 ::google::devtools::cloudbuild::v1::Hash_HashType BuildOptions::source_provenance_hash(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return static_cast< ::google::devtools::cloudbuild::v1::Hash_HashType >(source_provenance_hash_.Get(index));
}
 void BuildOptions::set_source_provenance_hash(int index, ::google::devtools::cloudbuild::v1::Hash_HashType value) {
  source_provenance_hash_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
}
 void BuildOptions::add_source_provenance_hash(::google::devtools::cloudbuild::v1::Hash_HashType value) {
  source_provenance_hash_.Add(value);
  // @@protoc_insertion_point(field_add:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
}
 const ::google::protobuf::RepeatedField<int>&
BuildOptions::source_provenance_hash() const {
  // @@protoc_insertion_point(field_list:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return source_provenance_hash_;
}
 ::google::protobuf::RepeatedField<int>*
BuildOptions::mutable_source_provenance_hash() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.cloudbuild.v1.BuildOptions.source_provenance_hash)
  return &source_provenance_hash_;
}

// optional .google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;
void BuildOptions::clear_requested_verify_option() {
  requested_verify_option_ = 0;
}
 ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption BuildOptions::requested_verify_option() const {
  // @@protoc_insertion_point(field_get:google.devtools.cloudbuild.v1.BuildOptions.requested_verify_option)
  return static_cast< ::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption >(requested_verify_option_);
}
 void BuildOptions::set_requested_verify_option(::google::devtools::cloudbuild::v1::BuildOptions_VerifyOption value) {
  
  requested_verify_option_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.cloudbuild.v1.BuildOptions.requested_verify_option)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace cloudbuild
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
