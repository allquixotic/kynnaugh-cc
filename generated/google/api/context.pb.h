// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/context.proto

#ifndef PROTOBUF_google_2fapi_2fcontext_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fcontext_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
class Context;
class ContextDefaultTypeInternal;
extern ContextDefaultTypeInternal _Context_default_instance_;
class ContextRule;
class ContextRuleDefaultTypeInternal;
extern ContextRuleDefaultTypeInternal _ContextRule_default_instance_;
}  // namespace api
}  // namespace google

namespace google {
namespace api {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fcontext_2eproto();
void protobuf_InitDefaults_google_2fapi_2fcontext_2eproto();

// ===================================================================

class Context : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Context) */ {
 public:
  Context();
  virtual ~Context();

  Context(const Context& from);

  inline Context& operator=(const Context& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Context& default_instance();

  static inline const Context* internal_default_instance() {
    return reinterpret_cast<const Context*>(
               &_Context_default_instance_);
  }

  void Swap(Context* other);

  // implements Message ----------------------------------------------

  inline Context* New() const PROTOBUF_FINAL { return New(NULL); }

  Context* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Context& from);
  void MergeFrom(const Context& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Context* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.ContextRule rules = 1;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 1;
  const ::google::api::ContextRule& rules(int index) const;
  ::google::api::ContextRule* mutable_rules(int index);
  ::google::api::ContextRule* add_rules();
  ::google::protobuf::RepeatedPtrField< ::google::api::ContextRule >*
      mutable_rules();
  const ::google::protobuf::RepeatedPtrField< ::google::api::ContextRule >&
      rules() const;

  // @@protoc_insertion_point(class_scope:google.api.Context)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::ContextRule > rules_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fcontext_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fcontext_2eproto();

};
// -------------------------------------------------------------------

class ContextRule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.ContextRule) */ {
 public:
  ContextRule();
  virtual ~ContextRule();

  ContextRule(const ContextRule& from);

  inline ContextRule& operator=(const ContextRule& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContextRule& default_instance();

  static inline const ContextRule* internal_default_instance() {
    return reinterpret_cast<const ContextRule*>(
               &_ContextRule_default_instance_);
  }

  void Swap(ContextRule* other);

  // implements Message ----------------------------------------------

  inline ContextRule* New() const PROTOBUF_FINAL { return New(NULL); }

  ContextRule* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContextRule& from);
  void MergeFrom(const ContextRule& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContextRule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string selector = 1;
  void clear_selector();
  static const int kSelectorFieldNumber = 1;
  const ::std::string& selector() const;
  void set_selector(const ::std::string& value);
  void set_selector(const char* value);
  void set_selector(const char* value, size_t size);
  ::std::string* mutable_selector();
  ::std::string* release_selector();
  void set_allocated_selector(::std::string* selector);

  // repeated string requested = 2;
  int requested_size() const;
  void clear_requested();
  static const int kRequestedFieldNumber = 2;
  const ::std::string& requested(int index) const;
  ::std::string* mutable_requested(int index);
  void set_requested(int index, const ::std::string& value);
  void set_requested(int index, const char* value);
  void set_requested(int index, const char* value, size_t size);
  ::std::string* add_requested();
  void add_requested(const ::std::string& value);
  void add_requested(const char* value);
  void add_requested(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& requested() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_requested();

  // repeated string provided = 3;
  int provided_size() const;
  void clear_provided();
  static const int kProvidedFieldNumber = 3;
  const ::std::string& provided(int index) const;
  ::std::string* mutable_provided(int index);
  void set_provided(int index, const ::std::string& value);
  void set_provided(int index, const char* value);
  void set_provided(int index, const char* value, size_t size);
  ::std::string* add_provided();
  void add_provided(const ::std::string& value);
  void add_provided(const char* value);
  void add_provided(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& provided() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_provided();

  // @@protoc_insertion_point(class_scope:google.api.ContextRule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> requested_;
  ::google::protobuf::RepeatedPtrField< ::std::string> provided_;
  ::google::protobuf::internal::ArenaStringPtr selector_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fcontext_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fcontext_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fcontext_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fcontext_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Context

// repeated .google.api.ContextRule rules = 1;
inline int Context::rules_size() const {
  return rules_.size();
}
inline void Context::clear_rules() {
  rules_.Clear();
}
inline const ::google::api::ContextRule& Context::rules(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Context.rules)
  return rules_.Get(index);
}
inline ::google::api::ContextRule* Context::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Context.rules)
  return rules_.Mutable(index);
}
inline ::google::api::ContextRule* Context::add_rules() {
  // @@protoc_insertion_point(field_add:google.api.Context.rules)
  return rules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::ContextRule >*
Context::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Context.rules)
  return &rules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::ContextRule >&
Context::rules() const {
  // @@protoc_insertion_point(field_list:google.api.Context.rules)
  return rules_;
}

// -------------------------------------------------------------------

// ContextRule

// string selector = 1;
inline void ContextRule::clear_selector() {
  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContextRule::selector() const {
  // @@protoc_insertion_point(field_get:google.api.ContextRule.selector)
  return selector_.GetNoArena();
}
inline void ContextRule::set_selector(const ::std::string& value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.ContextRule.selector)
}
inline void ContextRule::set_selector(const char* value) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.ContextRule.selector)
}
inline void ContextRule::set_selector(const char* value, size_t size) {
  
  selector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.ContextRule.selector)
}
inline ::std::string* ContextRule::mutable_selector() {
  
  // @@protoc_insertion_point(field_mutable:google.api.ContextRule.selector)
  return selector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContextRule::release_selector() {
  // @@protoc_insertion_point(field_release:google.api.ContextRule.selector)
  
  return selector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContextRule::set_allocated_selector(::std::string* selector) {
  if (selector != NULL) {
    
  } else {
    
  }
  selector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selector);
  // @@protoc_insertion_point(field_set_allocated:google.api.ContextRule.selector)
}

// repeated string requested = 2;
inline int ContextRule::requested_size() const {
  return requested_.size();
}
inline void ContextRule::clear_requested() {
  requested_.Clear();
}
inline const ::std::string& ContextRule::requested(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ContextRule.requested)
  return requested_.Get(index);
}
inline ::std::string* ContextRule::mutable_requested(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.ContextRule.requested)
  return requested_.Mutable(index);
}
inline void ContextRule::set_requested(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.ContextRule.requested)
  requested_.Mutable(index)->assign(value);
}
inline void ContextRule::set_requested(int index, const char* value) {
  requested_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.ContextRule.requested)
}
inline void ContextRule::set_requested(int index, const char* value, size_t size) {
  requested_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.ContextRule.requested)
}
inline ::std::string* ContextRule::add_requested() {
  // @@protoc_insertion_point(field_add_mutable:google.api.ContextRule.requested)
  return requested_.Add();
}
inline void ContextRule::add_requested(const ::std::string& value) {
  requested_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.ContextRule.requested)
}
inline void ContextRule::add_requested(const char* value) {
  requested_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.ContextRule.requested)
}
inline void ContextRule::add_requested(const char* value, size_t size) {
  requested_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.ContextRule.requested)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ContextRule::requested() const {
  // @@protoc_insertion_point(field_list:google.api.ContextRule.requested)
  return requested_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ContextRule::mutable_requested() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ContextRule.requested)
  return &requested_;
}

// repeated string provided = 3;
inline int ContextRule::provided_size() const {
  return provided_.size();
}
inline void ContextRule::clear_provided() {
  provided_.Clear();
}
inline const ::std::string& ContextRule::provided(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ContextRule.provided)
  return provided_.Get(index);
}
inline ::std::string* ContextRule::mutable_provided(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.ContextRule.provided)
  return provided_.Mutable(index);
}
inline void ContextRule::set_provided(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.ContextRule.provided)
  provided_.Mutable(index)->assign(value);
}
inline void ContextRule::set_provided(int index, const char* value) {
  provided_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.ContextRule.provided)
}
inline void ContextRule::set_provided(int index, const char* value, size_t size) {
  provided_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.ContextRule.provided)
}
inline ::std::string* ContextRule::add_provided() {
  // @@protoc_insertion_point(field_add_mutable:google.api.ContextRule.provided)
  return provided_.Add();
}
inline void ContextRule::add_provided(const ::std::string& value) {
  provided_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.ContextRule.provided)
}
inline void ContextRule::add_provided(const char* value) {
  provided_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.ContextRule.provided)
}
inline void ContextRule::add_provided(const char* value, size_t size) {
  provided_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.ContextRule.provided)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ContextRule::provided() const {
  // @@protoc_insertion_point(field_list:google.api.ContextRule.provided)
  return provided_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ContextRule::mutable_provided() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ContextRule.provided)
  return &provided_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fcontext_2eproto__INCLUDED
