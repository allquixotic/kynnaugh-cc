// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: google/cloud/ml/v1beta1/model_service.proto

#include "google/cloud/ml/v1beta1/model_service.pb.h"
#include "google/cloud/ml/v1beta1/model_service.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace ml {
namespace v1beta1 {

static const char* ModelService_method_names[] = {
  "/google.cloud.ml.v1beta1.ModelService/CreateModel",
  "/google.cloud.ml.v1beta1.ModelService/ListModels",
  "/google.cloud.ml.v1beta1.ModelService/GetModel",
  "/google.cloud.ml.v1beta1.ModelService/DeleteModel",
  "/google.cloud.ml.v1beta1.ModelService/CreateVersion",
  "/google.cloud.ml.v1beta1.ModelService/ListVersions",
  "/google.cloud.ml.v1beta1.ModelService/GetVersion",
  "/google.cloud.ml.v1beta1.ModelService/DeleteVersion",
  "/google.cloud.ml.v1beta1.ModelService/SetDefaultVersion",
};

std::unique_ptr< ModelService::Stub> ModelService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< ModelService::Stub> stub(new ModelService::Stub(channel));
  return stub;
}

ModelService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreateModel_(ModelService_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListModels_(ModelService_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetModel_(ModelService_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteModel_(ModelService_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateVersion_(ModelService_method_names[4], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListVersions_(ModelService_method_names[5], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVersion_(ModelService_method_names[6], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteVersion_(ModelService_method_names[7], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetDefaultVersion_(ModelService_method_names[8], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ModelService::Stub::CreateModel(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::CreateModelRequest& request, ::google::cloud::ml::v1beta1::Model* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_CreateModel_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Model>* ModelService::Stub::AsyncCreateModelRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::CreateModelRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Model>(channel_.get(), cq, rpcmethod_CreateModel_, context, request);
}

::grpc::Status ModelService::Stub::ListModels(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::ListModelsRequest& request, ::google::cloud::ml::v1beta1::ListModelsResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ListModels_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::ListModelsResponse>* ModelService::Stub::AsyncListModelsRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::ListModelsRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::ListModelsResponse>(channel_.get(), cq, rpcmethod_ListModels_, context, request);
}

::grpc::Status ModelService::Stub::GetModel(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::GetModelRequest& request, ::google::cloud::ml::v1beta1::Model* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_GetModel_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Model>* ModelService::Stub::AsyncGetModelRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::GetModelRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Model>(channel_.get(), cq, rpcmethod_GetModel_, context, request);
}

::grpc::Status ModelService::Stub::DeleteModel(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::DeleteModelRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteModel_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ModelService::Stub::AsyncDeleteModelRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::DeleteModelRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>(channel_.get(), cq, rpcmethod_DeleteModel_, context, request);
}

::grpc::Status ModelService::Stub::CreateVersion(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::CreateVersionRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_CreateVersion_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ModelService::Stub::AsyncCreateVersionRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::CreateVersionRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>(channel_.get(), cq, rpcmethod_CreateVersion_, context, request);
}

::grpc::Status ModelService::Stub::ListVersions(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::ListVersionsRequest& request, ::google::cloud::ml::v1beta1::ListVersionsResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ListVersions_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::ListVersionsResponse>* ModelService::Stub::AsyncListVersionsRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::ListVersionsRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::ListVersionsResponse>(channel_.get(), cq, rpcmethod_ListVersions_, context, request);
}

::grpc::Status ModelService::Stub::GetVersion(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::GetVersionRequest& request, ::google::cloud::ml::v1beta1::Version* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_GetVersion_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Version>* ModelService::Stub::AsyncGetVersionRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::GetVersionRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Version>(channel_.get(), cq, rpcmethod_GetVersion_, context, request);
}

::grpc::Status ModelService::Stub::DeleteVersion(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::DeleteVersionRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteVersion_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ModelService::Stub::AsyncDeleteVersionRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::DeleteVersionRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>(channel_.get(), cq, rpcmethod_DeleteVersion_, context, request);
}

::grpc::Status ModelService::Stub::SetDefaultVersion(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::SetDefaultVersionRequest& request, ::google::cloud::ml::v1beta1::Version* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_SetDefaultVersion_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Version>* ModelService::Stub::AsyncSetDefaultVersionRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::SetDefaultVersionRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::cloud::ml::v1beta1::Version>(channel_.get(), cq, rpcmethod_SetDefaultVersion_, context, request);
}

ModelService::Service::Service() {
  (void)ModelService_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::CreateModelRequest, ::google::cloud::ml::v1beta1::Model>(
          std::mem_fn(&ModelService::Service::CreateModel), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::ListModelsRequest, ::google::cloud::ml::v1beta1::ListModelsResponse>(
          std::mem_fn(&ModelService::Service::ListModels), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::GetModelRequest, ::google::cloud::ml::v1beta1::Model>(
          std::mem_fn(&ModelService::Service::GetModel), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::DeleteModelRequest, ::google::longrunning::Operation>(
          std::mem_fn(&ModelService::Service::DeleteModel), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[4],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::CreateVersionRequest, ::google::longrunning::Operation>(
          std::mem_fn(&ModelService::Service::CreateVersion), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[5],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::ListVersionsRequest, ::google::cloud::ml::v1beta1::ListVersionsResponse>(
          std::mem_fn(&ModelService::Service::ListVersions), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[6],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::GetVersionRequest, ::google::cloud::ml::v1beta1::Version>(
          std::mem_fn(&ModelService::Service::GetVersion), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[7],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::DeleteVersionRequest, ::google::longrunning::Operation>(
          std::mem_fn(&ModelService::Service::DeleteVersion), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ModelService_method_names[8],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ModelService::Service, ::google::cloud::ml::v1beta1::SetDefaultVersionRequest, ::google::cloud::ml::v1beta1::Version>(
          std::mem_fn(&ModelService::Service::SetDefaultVersion), this)));
}

ModelService::Service::~Service() {
}

::grpc::Status ModelService::Service::CreateModel(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::CreateModelRequest* request, ::google::cloud::ml::v1beta1::Model* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::ListModels(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::ListModelsRequest* request, ::google::cloud::ml::v1beta1::ListModelsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::GetModel(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::GetModelRequest* request, ::google::cloud::ml::v1beta1::Model* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::DeleteModel(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::DeleteModelRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::CreateVersion(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::CreateVersionRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::ListVersions(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::ListVersionsRequest* request, ::google::cloud::ml::v1beta1::ListVersionsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::GetVersion(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::GetVersionRequest* request, ::google::cloud::ml::v1beta1::Version* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::DeleteVersion(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::DeleteVersionRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ModelService::Service::SetDefaultVersion(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::SetDefaultVersionRequest* request, ::google::cloud::ml::v1beta1::Version* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace ml
}  // namespace v1beta1

