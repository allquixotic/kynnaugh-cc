// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: google/bigtable/admin/table/v1/bigtable_table_service.proto

#include "google/bigtable/admin/table/v1/bigtable_table_service.pb.h"
#include "google/bigtable/admin/table/v1/bigtable_table_service.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace bigtable {
namespace admin {
namespace table {
namespace v1 {

static const char* BigtableTableService_method_names[] = {
  "/google.bigtable.admin.table.v1.BigtableTableService/CreateTable",
  "/google.bigtable.admin.table.v1.BigtableTableService/ListTables",
  "/google.bigtable.admin.table.v1.BigtableTableService/GetTable",
  "/google.bigtable.admin.table.v1.BigtableTableService/DeleteTable",
  "/google.bigtable.admin.table.v1.BigtableTableService/RenameTable",
  "/google.bigtable.admin.table.v1.BigtableTableService/CreateColumnFamily",
  "/google.bigtable.admin.table.v1.BigtableTableService/UpdateColumnFamily",
  "/google.bigtable.admin.table.v1.BigtableTableService/DeleteColumnFamily",
  "/google.bigtable.admin.table.v1.BigtableTableService/BulkDeleteRows",
};

std::unique_ptr< BigtableTableService::Stub> BigtableTableService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< BigtableTableService::Stub> stub(new BigtableTableService::Stub(channel));
  return stub;
}

BigtableTableService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreateTable_(BigtableTableService_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListTables_(BigtableTableService_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetTable_(BigtableTableService_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteTable_(BigtableTableService_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RenameTable_(BigtableTableService_method_names[4], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateColumnFamily_(BigtableTableService_method_names[5], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateColumnFamily_(BigtableTableService_method_names[6], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteColumnFamily_(BigtableTableService_method_names[7], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_BulkDeleteRows_(BigtableTableService_method_names[8], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status BigtableTableService::Stub::CreateTable(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::CreateTableRequest& request, ::google::bigtable::admin::table::v1::Table* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_CreateTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::Table>* BigtableTableService::Stub::AsyncCreateTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::Table>(channel_.get(), cq, rpcmethod_CreateTable_, context, request);
}

::grpc::Status BigtableTableService::Stub::ListTables(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::ListTablesRequest& request, ::google::bigtable::admin::table::v1::ListTablesResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ListTables_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::ListTablesResponse>* BigtableTableService::Stub::AsyncListTablesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::ListTablesRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::ListTablesResponse>(channel_.get(), cq, rpcmethod_ListTables_, context, request);
}

::grpc::Status BigtableTableService::Stub::GetTable(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::GetTableRequest& request, ::google::bigtable::admin::table::v1::Table* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_GetTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::Table>* BigtableTableService::Stub::AsyncGetTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::Table>(channel_.get(), cq, rpcmethod_GetTable_, context, request);
}

::grpc::Status BigtableTableService::Stub::DeleteTable(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::DeleteTableRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableService::Stub::AsyncDeleteTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::DeleteTableRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_DeleteTable_, context, request);
}

::grpc::Status BigtableTableService::Stub::RenameTable(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::RenameTableRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_RenameTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableService::Stub::AsyncRenameTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::RenameTableRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_RenameTable_, context, request);
}

::grpc::Status BigtableTableService::Stub::CreateColumnFamily(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::CreateColumnFamilyRequest& request, ::google::bigtable::admin::table::v1::ColumnFamily* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_CreateColumnFamily_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::ColumnFamily>* BigtableTableService::Stub::AsyncCreateColumnFamilyRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::CreateColumnFamilyRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::ColumnFamily>(channel_.get(), cq, rpcmethod_CreateColumnFamily_, context, request);
}

::grpc::Status BigtableTableService::Stub::UpdateColumnFamily(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::ColumnFamily& request, ::google::bigtable::admin::table::v1::ColumnFamily* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateColumnFamily_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::ColumnFamily>* BigtableTableService::Stub::AsyncUpdateColumnFamilyRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::ColumnFamily& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::table::v1::ColumnFamily>(channel_.get(), cq, rpcmethod_UpdateColumnFamily_, context, request);
}

::grpc::Status BigtableTableService::Stub::DeleteColumnFamily(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteColumnFamily_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableService::Stub::AsyncDeleteColumnFamilyRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_DeleteColumnFamily_, context, request);
}

::grpc::Status BigtableTableService::Stub::BulkDeleteRows(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::BulkDeleteRowsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_BulkDeleteRows_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableService::Stub::AsyncBulkDeleteRowsRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::table::v1::BulkDeleteRowsRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_BulkDeleteRows_, context, request);
}

BigtableTableService::Service::Service() {
  (void)BigtableTableService_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::CreateTableRequest, ::google::bigtable::admin::table::v1::Table>(
          std::mem_fn(&BigtableTableService::Service::CreateTable), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::ListTablesRequest, ::google::bigtable::admin::table::v1::ListTablesResponse>(
          std::mem_fn(&BigtableTableService::Service::ListTables), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::GetTableRequest, ::google::bigtable::admin::table::v1::Table>(
          std::mem_fn(&BigtableTableService::Service::GetTable), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::DeleteTableRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableTableService::Service::DeleteTable), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[4],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::RenameTableRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableTableService::Service::RenameTable), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[5],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::CreateColumnFamilyRequest, ::google::bigtable::admin::table::v1::ColumnFamily>(
          std::mem_fn(&BigtableTableService::Service::CreateColumnFamily), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[6],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::ColumnFamily, ::google::bigtable::admin::table::v1::ColumnFamily>(
          std::mem_fn(&BigtableTableService::Service::UpdateColumnFamily), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[7],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableTableService::Service::DeleteColumnFamily), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      BigtableTableService_method_names[8],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< BigtableTableService::Service, ::google::bigtable::admin::table::v1::BulkDeleteRowsRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableTableService::Service::BulkDeleteRows), this)));
}

BigtableTableService::Service::~Service() {
}

::grpc::Status BigtableTableService::Service::CreateTable(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::CreateTableRequest* request, ::google::bigtable::admin::table::v1::Table* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::ListTables(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::ListTablesRequest* request, ::google::bigtable::admin::table::v1::ListTablesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::GetTable(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::GetTableRequest* request, ::google::bigtable::admin::table::v1::Table* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::DeleteTable(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::DeleteTableRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::RenameTable(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::RenameTableRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::CreateColumnFamily(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::CreateColumnFamilyRequest* request, ::google::bigtable::admin::table::v1::ColumnFamily* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::UpdateColumnFamily(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::ColumnFamily* request, ::google::bigtable::admin::table::v1::ColumnFamily* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::DeleteColumnFamily(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::DeleteColumnFamilyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableService::Service::BulkDeleteRows(::grpc::ServerContext* context, const ::google::bigtable::admin::table::v1::BulkDeleteRowsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace bigtable
}  // namespace admin
}  // namespace table
}  // namespace v1

