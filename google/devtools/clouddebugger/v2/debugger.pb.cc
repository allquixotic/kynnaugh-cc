// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouddebugger/v2/debugger.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/clouddebugger/v2/debugger.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouddebugger {
namespace v2 {

namespace {

const ::google::protobuf::Descriptor* SetBreakpointRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetBreakpointRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetBreakpointResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetBreakpointResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBreakpointRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBreakpointRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBreakpointResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBreakpointResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteBreakpointRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteBreakpointRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListBreakpointsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListBreakpointsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListBreakpointsRequest_BreakpointActionValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListBreakpointsRequest_BreakpointActionValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListBreakpointsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListBreakpointsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListDebuggeesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListDebuggeesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListDebuggeesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListDebuggeesResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto() {
  protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/devtools/clouddebugger/v2/debugger.proto");
  GOOGLE_CHECK(file != NULL);
  SetBreakpointRequest_descriptor_ = file->message_type(0);
  static const int SetBreakpointRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBreakpointRequest, debuggee_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBreakpointRequest, breakpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBreakpointRequest, client_version_),
  };
  SetBreakpointRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetBreakpointRequest_descriptor_,
      SetBreakpointRequest::internal_default_instance(),
      SetBreakpointRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetBreakpointRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBreakpointRequest, _internal_metadata_));
  SetBreakpointResponse_descriptor_ = file->message_type(1);
  static const int SetBreakpointResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBreakpointResponse, breakpoint_),
  };
  SetBreakpointResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetBreakpointResponse_descriptor_,
      SetBreakpointResponse::internal_default_instance(),
      SetBreakpointResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetBreakpointResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetBreakpointResponse, _internal_metadata_));
  GetBreakpointRequest_descriptor_ = file->message_type(2);
  static const int GetBreakpointRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBreakpointRequest, debuggee_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBreakpointRequest, breakpoint_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBreakpointRequest, client_version_),
  };
  GetBreakpointRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBreakpointRequest_descriptor_,
      GetBreakpointRequest::internal_default_instance(),
      GetBreakpointRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBreakpointRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBreakpointRequest, _internal_metadata_));
  GetBreakpointResponse_descriptor_ = file->message_type(3);
  static const int GetBreakpointResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBreakpointResponse, breakpoint_),
  };
  GetBreakpointResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBreakpointResponse_descriptor_,
      GetBreakpointResponse::internal_default_instance(),
      GetBreakpointResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBreakpointResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBreakpointResponse, _internal_metadata_));
  DeleteBreakpointRequest_descriptor_ = file->message_type(4);
  static const int DeleteBreakpointRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBreakpointRequest, debuggee_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBreakpointRequest, breakpoint_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBreakpointRequest, client_version_),
  };
  DeleteBreakpointRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteBreakpointRequest_descriptor_,
      DeleteBreakpointRequest::internal_default_instance(),
      DeleteBreakpointRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteBreakpointRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteBreakpointRequest, _internal_metadata_));
  ListBreakpointsRequest_descriptor_ = file->message_type(5);
  static const int ListBreakpointsRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, debuggee_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, include_all_users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, include_inactive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, strip_results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, wait_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, client_version_),
  };
  ListBreakpointsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListBreakpointsRequest_descriptor_,
      ListBreakpointsRequest::internal_default_instance(),
      ListBreakpointsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListBreakpointsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest, _internal_metadata_));
  ListBreakpointsRequest_BreakpointActionValue_descriptor_ = ListBreakpointsRequest_descriptor_->nested_type(0);
  static const int ListBreakpointsRequest_BreakpointActionValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest_BreakpointActionValue, value_),
  };
  ListBreakpointsRequest_BreakpointActionValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListBreakpointsRequest_BreakpointActionValue_descriptor_,
      ListBreakpointsRequest_BreakpointActionValue::internal_default_instance(),
      ListBreakpointsRequest_BreakpointActionValue_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListBreakpointsRequest_BreakpointActionValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsRequest_BreakpointActionValue, _internal_metadata_));
  ListBreakpointsResponse_descriptor_ = file->message_type(6);
  static const int ListBreakpointsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsResponse, breakpoints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsResponse, next_wait_token_),
  };
  ListBreakpointsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListBreakpointsResponse_descriptor_,
      ListBreakpointsResponse::internal_default_instance(),
      ListBreakpointsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListBreakpointsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListBreakpointsResponse, _internal_metadata_));
  ListDebuggeesRequest_descriptor_ = file->message_type(7);
  static const int ListDebuggeesRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDebuggeesRequest, project_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDebuggeesRequest, include_inactive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDebuggeesRequest, client_version_),
  };
  ListDebuggeesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListDebuggeesRequest_descriptor_,
      ListDebuggeesRequest::internal_default_instance(),
      ListDebuggeesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListDebuggeesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDebuggeesRequest, _internal_metadata_));
  ListDebuggeesResponse_descriptor_ = file->message_type(8);
  static const int ListDebuggeesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDebuggeesResponse, debuggees_),
  };
  ListDebuggeesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListDebuggeesResponse_descriptor_,
      ListDebuggeesResponse::internal_default_instance(),
      ListDebuggeesResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListDebuggeesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDebuggeesResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetBreakpointRequest_descriptor_, SetBreakpointRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetBreakpointResponse_descriptor_, SetBreakpointResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBreakpointRequest_descriptor_, GetBreakpointRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBreakpointResponse_descriptor_, GetBreakpointResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteBreakpointRequest_descriptor_, DeleteBreakpointRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListBreakpointsRequest_descriptor_, ListBreakpointsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListBreakpointsRequest_BreakpointActionValue_descriptor_, ListBreakpointsRequest_BreakpointActionValue::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListBreakpointsResponse_descriptor_, ListBreakpointsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListDebuggeesRequest_descriptor_, ListDebuggeesRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListDebuggeesResponse_descriptor_, ListDebuggeesResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto() {
  SetBreakpointRequest_default_instance_.Shutdown();
  delete SetBreakpointRequest_reflection_;
  SetBreakpointResponse_default_instance_.Shutdown();
  delete SetBreakpointResponse_reflection_;
  GetBreakpointRequest_default_instance_.Shutdown();
  delete GetBreakpointRequest_reflection_;
  GetBreakpointResponse_default_instance_.Shutdown();
  delete GetBreakpointResponse_reflection_;
  DeleteBreakpointRequest_default_instance_.Shutdown();
  delete DeleteBreakpointRequest_reflection_;
  ListBreakpointsRequest_default_instance_.Shutdown();
  delete ListBreakpointsRequest_reflection_;
  ListBreakpointsRequest_BreakpointActionValue_default_instance_.Shutdown();
  delete ListBreakpointsRequest_BreakpointActionValue_reflection_;
  ListBreakpointsResponse_default_instance_.Shutdown();
  delete ListBreakpointsResponse_reflection_;
  ListDebuggeesRequest_default_instance_.Shutdown();
  delete ListDebuggeesRequest_reflection_;
  ListDebuggeesResponse_default_instance_.Shutdown();
  delete ListDebuggeesResponse_reflection_;
}

void protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::devtools::clouddebugger::v2::protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  SetBreakpointRequest_default_instance_.DefaultConstruct();
  SetBreakpointResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetBreakpointRequest_default_instance_.DefaultConstruct();
  GetBreakpointResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeleteBreakpointRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListBreakpointsRequest_default_instance_.DefaultConstruct();
  ListBreakpointsRequest_BreakpointActionValue_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListBreakpointsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListDebuggeesRequest_default_instance_.DefaultConstruct();
  ListDebuggeesResponse_default_instance_.DefaultConstruct();
  SetBreakpointRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SetBreakpointResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetBreakpointRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetBreakpointResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteBreakpointRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListBreakpointsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListBreakpointsRequest_BreakpointActionValue_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListBreakpointsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListDebuggeesRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListDebuggeesResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_once_);
void protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_once_,
                 &protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_impl);
}
void protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/google/devtools/clouddebugger/v2/debug"
    "ger.proto\022 google.devtools.clouddebugger"
    ".v2\032\034google/api/annotations.proto\032+googl"
    "e/devtools/clouddebugger/v2/data.proto\032\033"
    "google/protobuf/empty.proto\"\205\001\n\024SetBreak"
    "pointRequest\022\023\n\013debuggee_id\030\001 \001(\t\022@\n\nbre"
    "akpoint\030\002 \001(\0132,.google.devtools.clouddeb"
    "ugger.v2.Breakpoint\022\026\n\016client_version\030\004 "
    "\001(\t\"Y\n\025SetBreakpointResponse\022@\n\nbreakpoi"
    "nt\030\001 \001(\0132,.google.devtools.clouddebugger"
    ".v2.Breakpoint\"Z\n\024GetBreakpointRequest\022\023"
    "\n\013debuggee_id\030\001 \001(\t\022\025\n\rbreakpoint_id\030\002 \001"
    "(\t\022\026\n\016client_version\030\004 \001(\t\"Y\n\025GetBreakpo"
    "intResponse\022@\n\nbreakpoint\030\001 \001(\0132,.google"
    ".devtools.clouddebugger.v2.Breakpoint\"]\n"
    "\027DeleteBreakpointRequest\022\023\n\013debuggee_id\030"
    "\001 \001(\t\022\025\n\rbreakpoint_id\030\002 \001(\t\022\026\n\016client_v"
    "ersion\030\003 \001(\t\"\346\002\n\026ListBreakpointsRequest\022"
    "\023\n\013debuggee_id\030\001 \001(\t\022\031\n\021include_all_user"
    "s\030\002 \001(\010\022\030\n\020include_inactive\030\003 \001(\010\022^\n\006act"
    "ion\030\004 \001(\0132N.google.devtools.clouddebugge"
    "r.v2.ListBreakpointsRequest.BreakpointAc"
    "tionValue\022\031\n\rstrip_results\030\005 \001(\010B\002\030\001\022\022\n\n"
    "wait_token\030\006 \001(\t\022\026\n\016client_version\030\010 \001(\t"
    "\032[\n\025BreakpointActionValue\022B\n\005value\030\001 \001(\016"
    "23.google.devtools.clouddebugger.v2.Brea"
    "kpoint.Action\"u\n\027ListBreakpointsResponse"
    "\022A\n\013breakpoints\030\001 \003(\0132,.google.devtools."
    "clouddebugger.v2.Breakpoint\022\027\n\017next_wait"
    "_token\030\002 \001(\t\"Y\n\024ListDebuggeesRequest\022\017\n\007"
    "project\030\002 \001(\t\022\030\n\020include_inactive\030\003 \001(\010\022"
    "\026\n\016client_version\030\004 \001(\t\"V\n\025ListDebuggees"
    "Response\022=\n\tdebuggees\030\001 \003(\0132*.google.dev"
    "tools.clouddebugger.v2.Debuggee2\275\007\n\tDebu"
    "gger2\022\312\001\n\rSetBreakpoint\0226.google.devtool"
    "s.clouddebugger.v2.SetBreakpointRequest\032"
    "7.google.devtools.clouddebugger.v2.SetBr"
    "eakpointResponse\"H\202\323\344\223\002B\"4/v2/debugger/d"
    "ebuggees/{debuggee_id}/breakpoints/set:\n"
    "breakpoint\022\312\001\n\rGetBreakpoint\0226.google.de"
    "vtools.clouddebugger.v2.GetBreakpointReq"
    "uest\0327.google.devtools.clouddebugger.v2."
    "GetBreakpointResponse\"H\202\323\344\223\002B\022@/v2/debug"
    "ger/debuggees/{debuggee_id}/breakpoints/"
    "{breakpoint_id}\022\257\001\n\020DeleteBreakpoint\0229.g"
    "oogle.devtools.clouddebugger.v2.DeleteBr"
    "eakpointRequest\032\026.google.protobuf.Empty\""
    "H\202\323\344\223\002B*@/v2/debugger/debuggees/{debugge"
    "e_id}/breakpoints/{breakpoint_id}\022\300\001\n\017Li"
    "stBreakpoints\0228.google.devtools.clouddeb"
    "ugger.v2.ListBreakpointsRequest\0329.google"
    ".devtools.clouddebugger.v2.ListBreakpoin"
    "tsResponse\"8\202\323\344\223\0022\0220/v2/debugger/debugge"
    "es/{debuggee_id}/breakpoints\022\240\001\n\rListDeb"
    "uggees\0226.google.devtools.clouddebugger.v"
    "2.ListDebuggeesRequest\0327.google.devtools"
    ".clouddebugger.v2.ListDebuggeesResponse\""
    "\036\202\323\344\223\002\030\022\026/v2/debugger/debuggeesB\206\001\n$com."
    "google.devtools.clouddebugger.v2B\rDebugg"
    "erProtoP\001ZMgoogle.golang.org/genproto/go"
    "ogleapis/devtools/clouddebugger/v2;cloud"
    "debuggerb\006proto3", 2456);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouddebugger/v2/debugger.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::devtools::clouddebugger::v2::protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_once_);
void protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_once_,
                 &protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto {
  StaticDescriptorInitializer_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto() {
    protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  }
} static_descriptor_initializer_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBreakpointRequest::kDebuggeeIdFieldNumber;
const int SetBreakpointRequest::kBreakpointFieldNumber;
const int SetBreakpointRequest::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBreakpointRequest::SetBreakpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.SetBreakpointRequest)
}

void SetBreakpointRequest::InitAsDefaultInstance() {
  breakpoint_ = const_cast< ::google::devtools::clouddebugger::v2::Breakpoint*>(
      ::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance());
}

SetBreakpointRequest::SetBreakpointRequest(const SetBreakpointRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.SetBreakpointRequest)
}

void SetBreakpointRequest::SharedCtor() {
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_ = NULL;
  _cached_size_ = 0;
}

SetBreakpointRequest::~SetBreakpointRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  SharedDtor();
}

void SetBreakpointRequest::SharedDtor() {
  debuggee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SetBreakpointRequest_default_instance_.get()) {
    delete breakpoint_;
  }
}

void SetBreakpointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetBreakpointRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetBreakpointRequest_descriptor_;
}

const SetBreakpointRequest& SetBreakpointRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SetBreakpointRequest> SetBreakpointRequest_default_instance_;

SetBreakpointRequest* SetBreakpointRequest::New(::google::protobuf::Arena* arena) const {
  SetBreakpointRequest* n = new SetBreakpointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetBreakpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) delete breakpoint_;
  breakpoint_ = NULL;
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetBreakpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string debuggee_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debuggee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debuggee_id().data(), this->debuggee_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_breakpoint;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
      case 2: {
        if (tag == 18) {
         parse_breakpoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_breakpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_client_version;
        break;
      }

      // optional string client_version = 4;
      case 4: {
        if (tag == 34) {
         parse_client_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version().data(), this->client_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  return false;
#undef DO_
}

void SetBreakpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->debuggee_id(), output);
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
  if (this->has_breakpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->breakpoint_, output);
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->client_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.SetBreakpointRequest)
}

::google::protobuf::uint8* SetBreakpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->debuggee_id(), target);
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
  if (this->has_breakpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->breakpoint_, false, target);
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->client_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  return target;
}

size_t SetBreakpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  size_t total_size = 0;

  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debuggee_id());
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
  if (this->has_breakpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->breakpoint_);
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetBreakpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SetBreakpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBreakpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.SetBreakpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.SetBreakpointRequest)
    UnsafeMergeFrom(*source);
  }
}

void SetBreakpointRequest::MergeFrom(const SetBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SetBreakpointRequest::UnsafeMergeFrom(const SetBreakpointRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.debuggee_id().size() > 0) {

    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  if (from.has_breakpoint()) {
    mutable_breakpoint()->::google::devtools::clouddebugger::v2::Breakpoint::MergeFrom(from.breakpoint());
  }
  if (from.client_version().size() > 0) {

    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
}

void SetBreakpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBreakpointRequest::CopyFrom(const SetBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.SetBreakpointRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SetBreakpointRequest::IsInitialized() const {

  return true;
}

void SetBreakpointRequest::Swap(SetBreakpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBreakpointRequest::InternalSwap(SetBreakpointRequest* other) {
  debuggee_id_.Swap(&other->debuggee_id_);
  std::swap(breakpoint_, other->breakpoint_);
  client_version_.Swap(&other->client_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetBreakpointRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetBreakpointRequest_descriptor_;
  metadata.reflection = SetBreakpointRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetBreakpointRequest

// optional string debuggee_id = 1;
void SetBreakpointRequest::clear_debuggee_id() {
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetBreakpointRequest::debuggee_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id)
  return debuggee_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetBreakpointRequest::set_debuggee_id(const ::std::string& value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id)
}
void SetBreakpointRequest::set_debuggee_id(const char* value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id)
}
void SetBreakpointRequest::set_debuggee_id(const char* value, size_t size) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id)
}
::std::string* SetBreakpointRequest::mutable_debuggee_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id)
  return debuggee_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetBreakpointRequest::release_debuggee_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id)
  
  return debuggee_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetBreakpointRequest::set_allocated_debuggee_id(::std::string* debuggee_id) {
  if (debuggee_id != NULL) {
    
  } else {
    
  }
  debuggee_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debuggee_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.SetBreakpointRequest.debuggee_id)
}

// optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 2;
bool SetBreakpointRequest::has_breakpoint() const {
  return this != internal_default_instance() && breakpoint_ != NULL;
}
void SetBreakpointRequest::clear_breakpoint() {
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) delete breakpoint_;
  breakpoint_ = NULL;
}
const ::google::devtools::clouddebugger::v2::Breakpoint& SetBreakpointRequest::breakpoint() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.SetBreakpointRequest.breakpoint)
  return breakpoint_ != NULL ? *breakpoint_
                         : *::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance();
}
::google::devtools::clouddebugger::v2::Breakpoint* SetBreakpointRequest::mutable_breakpoint() {
  
  if (breakpoint_ == NULL) {
    breakpoint_ = new ::google::devtools::clouddebugger::v2::Breakpoint;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.SetBreakpointRequest.breakpoint)
  return breakpoint_;
}
::google::devtools::clouddebugger::v2::Breakpoint* SetBreakpointRequest::release_breakpoint() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.SetBreakpointRequest.breakpoint)
  
  ::google::devtools::clouddebugger::v2::Breakpoint* temp = breakpoint_;
  breakpoint_ = NULL;
  return temp;
}
void SetBreakpointRequest::set_allocated_breakpoint(::google::devtools::clouddebugger::v2::Breakpoint* breakpoint) {
  delete breakpoint_;
  breakpoint_ = breakpoint;
  if (breakpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.SetBreakpointRequest.breakpoint)
}

// optional string client_version = 4;
void SetBreakpointRequest::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetBreakpointRequest::client_version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version)
  return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetBreakpointRequest::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version)
}
void SetBreakpointRequest::set_client_version(const char* value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version)
}
void SetBreakpointRequest::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version)
}
::std::string* SetBreakpointRequest::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetBreakpointRequest::release_client_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetBreakpointRequest::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.SetBreakpointRequest.client_version)
}

inline const SetBreakpointRequest* SetBreakpointRequest::internal_default_instance() {
  return &SetBreakpointRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBreakpointResponse::kBreakpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBreakpointResponse::SetBreakpointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.SetBreakpointResponse)
}

void SetBreakpointResponse::InitAsDefaultInstance() {
  breakpoint_ = const_cast< ::google::devtools::clouddebugger::v2::Breakpoint*>(
      ::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance());
}

SetBreakpointResponse::SetBreakpointResponse(const SetBreakpointResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.SetBreakpointResponse)
}

void SetBreakpointResponse::SharedCtor() {
  breakpoint_ = NULL;
  _cached_size_ = 0;
}

SetBreakpointResponse::~SetBreakpointResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  SharedDtor();
}

void SetBreakpointResponse::SharedDtor() {
  if (this != &SetBreakpointResponse_default_instance_.get()) {
    delete breakpoint_;
  }
}

void SetBreakpointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetBreakpointResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetBreakpointResponse_descriptor_;
}

const SetBreakpointResponse& SetBreakpointResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SetBreakpointResponse> SetBreakpointResponse_default_instance_;

SetBreakpointResponse* SetBreakpointResponse::New(::google::protobuf::Arena* arena) const {
  SetBreakpointResponse* n = new SetBreakpointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetBreakpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) delete breakpoint_;
  breakpoint_ = NULL;
}

bool SetBreakpointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_breakpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  return false;
#undef DO_
}

void SetBreakpointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
  if (this->has_breakpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->breakpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.SetBreakpointResponse)
}

::google::protobuf::uint8* SetBreakpointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
  if (this->has_breakpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->breakpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  return target;
}

size_t SetBreakpointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  size_t total_size = 0;

  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
  if (this->has_breakpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->breakpoint_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetBreakpointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SetBreakpointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBreakpointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.SetBreakpointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.SetBreakpointResponse)
    UnsafeMergeFrom(*source);
  }
}

void SetBreakpointResponse::MergeFrom(const SetBreakpointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SetBreakpointResponse::UnsafeMergeFrom(const SetBreakpointResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_breakpoint()) {
    mutable_breakpoint()->::google::devtools::clouddebugger::v2::Breakpoint::MergeFrom(from.breakpoint());
  }
}

void SetBreakpointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBreakpointResponse::CopyFrom(const SetBreakpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.SetBreakpointResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SetBreakpointResponse::IsInitialized() const {

  return true;
}

void SetBreakpointResponse::Swap(SetBreakpointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBreakpointResponse::InternalSwap(SetBreakpointResponse* other) {
  std::swap(breakpoint_, other->breakpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetBreakpointResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetBreakpointResponse_descriptor_;
  metadata.reflection = SetBreakpointResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetBreakpointResponse

// optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
bool SetBreakpointResponse::has_breakpoint() const {
  return this != internal_default_instance() && breakpoint_ != NULL;
}
void SetBreakpointResponse::clear_breakpoint() {
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) delete breakpoint_;
  breakpoint_ = NULL;
}
const ::google::devtools::clouddebugger::v2::Breakpoint& SetBreakpointResponse::breakpoint() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.SetBreakpointResponse.breakpoint)
  return breakpoint_ != NULL ? *breakpoint_
                         : *::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance();
}
::google::devtools::clouddebugger::v2::Breakpoint* SetBreakpointResponse::mutable_breakpoint() {
  
  if (breakpoint_ == NULL) {
    breakpoint_ = new ::google::devtools::clouddebugger::v2::Breakpoint;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.SetBreakpointResponse.breakpoint)
  return breakpoint_;
}
::google::devtools::clouddebugger::v2::Breakpoint* SetBreakpointResponse::release_breakpoint() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.SetBreakpointResponse.breakpoint)
  
  ::google::devtools::clouddebugger::v2::Breakpoint* temp = breakpoint_;
  breakpoint_ = NULL;
  return temp;
}
void SetBreakpointResponse::set_allocated_breakpoint(::google::devtools::clouddebugger::v2::Breakpoint* breakpoint) {
  delete breakpoint_;
  breakpoint_ = breakpoint;
  if (breakpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.SetBreakpointResponse.breakpoint)
}

inline const SetBreakpointResponse* SetBreakpointResponse::internal_default_instance() {
  return &SetBreakpointResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBreakpointRequest::kDebuggeeIdFieldNumber;
const int GetBreakpointRequest::kBreakpointIdFieldNumber;
const int GetBreakpointRequest::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBreakpointRequest::GetBreakpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.GetBreakpointRequest)
}

void GetBreakpointRequest::InitAsDefaultInstance() {
}

GetBreakpointRequest::GetBreakpointRequest(const GetBreakpointRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.GetBreakpointRequest)
}

void GetBreakpointRequest::SharedCtor() {
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetBreakpointRequest::~GetBreakpointRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  SharedDtor();
}

void GetBreakpointRequest::SharedDtor() {
  debuggee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBreakpointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBreakpointRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBreakpointRequest_descriptor_;
}

const GetBreakpointRequest& GetBreakpointRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetBreakpointRequest> GetBreakpointRequest_default_instance_;

GetBreakpointRequest* GetBreakpointRequest::New(::google::protobuf::Arena* arena) const {
  GetBreakpointRequest* n = new GetBreakpointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBreakpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetBreakpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string debuggee_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debuggee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debuggee_id().data(), this->debuggee_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_breakpoint_id;
        break;
      }

      // optional string breakpoint_id = 2;
      case 2: {
        if (tag == 18) {
         parse_breakpoint_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_breakpoint_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->breakpoint_id().data(), this->breakpoint_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_client_version;
        break;
      }

      // optional string client_version = 4;
      case 4: {
        if (tag == 34) {
         parse_client_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version().data(), this->client_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  return false;
#undef DO_
}

void GetBreakpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->debuggee_id(), output);
  }

  // optional string breakpoint_id = 2;
  if (this->breakpoint_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->breakpoint_id().data(), this->breakpoint_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->breakpoint_id(), output);
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->client_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.GetBreakpointRequest)
}

::google::protobuf::uint8* GetBreakpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->debuggee_id(), target);
  }

  // optional string breakpoint_id = 2;
  if (this->breakpoint_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->breakpoint_id().data(), this->breakpoint_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->breakpoint_id(), target);
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->client_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  return target;
}

size_t GetBreakpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  size_t total_size = 0;

  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debuggee_id());
  }

  // optional string breakpoint_id = 2;
  if (this->breakpoint_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->breakpoint_id());
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBreakpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetBreakpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBreakpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.GetBreakpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.GetBreakpointRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetBreakpointRequest::MergeFrom(const GetBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetBreakpointRequest::UnsafeMergeFrom(const GetBreakpointRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.debuggee_id().size() > 0) {

    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  if (from.breakpoint_id().size() > 0) {

    breakpoint_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.breakpoint_id_);
  }
  if (from.client_version().size() > 0) {

    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
}

void GetBreakpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBreakpointRequest::CopyFrom(const GetBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.GetBreakpointRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetBreakpointRequest::IsInitialized() const {

  return true;
}

void GetBreakpointRequest::Swap(GetBreakpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBreakpointRequest::InternalSwap(GetBreakpointRequest* other) {
  debuggee_id_.Swap(&other->debuggee_id_);
  breakpoint_id_.Swap(&other->breakpoint_id_);
  client_version_.Swap(&other->client_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBreakpointRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBreakpointRequest_descriptor_;
  metadata.reflection = GetBreakpointRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBreakpointRequest

// optional string debuggee_id = 1;
void GetBreakpointRequest::clear_debuggee_id() {
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBreakpointRequest::debuggee_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id)
  return debuggee_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBreakpointRequest::set_debuggee_id(const ::std::string& value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id)
}
void GetBreakpointRequest::set_debuggee_id(const char* value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id)
}
void GetBreakpointRequest::set_debuggee_id(const char* value, size_t size) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id)
}
::std::string* GetBreakpointRequest::mutable_debuggee_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id)
  return debuggee_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBreakpointRequest::release_debuggee_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id)
  
  return debuggee_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBreakpointRequest::set_allocated_debuggee_id(::std::string* debuggee_id) {
  if (debuggee_id != NULL) {
    
  } else {
    
  }
  debuggee_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debuggee_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.GetBreakpointRequest.debuggee_id)
}

// optional string breakpoint_id = 2;
void GetBreakpointRequest::clear_breakpoint_id() {
  breakpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBreakpointRequest::breakpoint_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id)
  return breakpoint_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBreakpointRequest::set_breakpoint_id(const ::std::string& value) {
  
  breakpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id)
}
void GetBreakpointRequest::set_breakpoint_id(const char* value) {
  
  breakpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id)
}
void GetBreakpointRequest::set_breakpoint_id(const char* value, size_t size) {
  
  breakpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id)
}
::std::string* GetBreakpointRequest::mutable_breakpoint_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id)
  return breakpoint_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBreakpointRequest::release_breakpoint_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id)
  
  return breakpoint_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBreakpointRequest::set_allocated_breakpoint_id(::std::string* breakpoint_id) {
  if (breakpoint_id != NULL) {
    
  } else {
    
  }
  breakpoint_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), breakpoint_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.GetBreakpointRequest.breakpoint_id)
}

// optional string client_version = 4;
void GetBreakpointRequest::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetBreakpointRequest::client_version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version)
  return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBreakpointRequest::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version)
}
void GetBreakpointRequest::set_client_version(const char* value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version)
}
void GetBreakpointRequest::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version)
}
::std::string* GetBreakpointRequest::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBreakpointRequest::release_client_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBreakpointRequest::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.GetBreakpointRequest.client_version)
}

inline const GetBreakpointRequest* GetBreakpointRequest::internal_default_instance() {
  return &GetBreakpointRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBreakpointResponse::kBreakpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBreakpointResponse::GetBreakpointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.GetBreakpointResponse)
}

void GetBreakpointResponse::InitAsDefaultInstance() {
  breakpoint_ = const_cast< ::google::devtools::clouddebugger::v2::Breakpoint*>(
      ::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance());
}

GetBreakpointResponse::GetBreakpointResponse(const GetBreakpointResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.GetBreakpointResponse)
}

void GetBreakpointResponse::SharedCtor() {
  breakpoint_ = NULL;
  _cached_size_ = 0;
}

GetBreakpointResponse::~GetBreakpointResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  SharedDtor();
}

void GetBreakpointResponse::SharedDtor() {
  if (this != &GetBreakpointResponse_default_instance_.get()) {
    delete breakpoint_;
  }
}

void GetBreakpointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBreakpointResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBreakpointResponse_descriptor_;
}

const GetBreakpointResponse& GetBreakpointResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetBreakpointResponse> GetBreakpointResponse_default_instance_;

GetBreakpointResponse* GetBreakpointResponse::New(::google::protobuf::Arena* arena) const {
  GetBreakpointResponse* n = new GetBreakpointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBreakpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) delete breakpoint_;
  breakpoint_ = NULL;
}

bool GetBreakpointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_breakpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  return false;
#undef DO_
}

void GetBreakpointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
  if (this->has_breakpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->breakpoint_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.GetBreakpointResponse)
}

::google::protobuf::uint8* GetBreakpointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
  if (this->has_breakpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->breakpoint_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  return target;
}

size_t GetBreakpointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  size_t total_size = 0;

  // optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
  if (this->has_breakpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->breakpoint_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBreakpointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetBreakpointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBreakpointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.GetBreakpointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.GetBreakpointResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetBreakpointResponse::MergeFrom(const GetBreakpointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetBreakpointResponse::UnsafeMergeFrom(const GetBreakpointResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_breakpoint()) {
    mutable_breakpoint()->::google::devtools::clouddebugger::v2::Breakpoint::MergeFrom(from.breakpoint());
  }
}

void GetBreakpointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBreakpointResponse::CopyFrom(const GetBreakpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.GetBreakpointResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetBreakpointResponse::IsInitialized() const {

  return true;
}

void GetBreakpointResponse::Swap(GetBreakpointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBreakpointResponse::InternalSwap(GetBreakpointResponse* other) {
  std::swap(breakpoint_, other->breakpoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBreakpointResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBreakpointResponse_descriptor_;
  metadata.reflection = GetBreakpointResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBreakpointResponse

// optional .google.devtools.clouddebugger.v2.Breakpoint breakpoint = 1;
bool GetBreakpointResponse::has_breakpoint() const {
  return this != internal_default_instance() && breakpoint_ != NULL;
}
void GetBreakpointResponse::clear_breakpoint() {
  if (GetArenaNoVirtual() == NULL && breakpoint_ != NULL) delete breakpoint_;
  breakpoint_ = NULL;
}
const ::google::devtools::clouddebugger::v2::Breakpoint& GetBreakpointResponse::breakpoint() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.GetBreakpointResponse.breakpoint)
  return breakpoint_ != NULL ? *breakpoint_
                         : *::google::devtools::clouddebugger::v2::Breakpoint::internal_default_instance();
}
::google::devtools::clouddebugger::v2::Breakpoint* GetBreakpointResponse::mutable_breakpoint() {
  
  if (breakpoint_ == NULL) {
    breakpoint_ = new ::google::devtools::clouddebugger::v2::Breakpoint;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.GetBreakpointResponse.breakpoint)
  return breakpoint_;
}
::google::devtools::clouddebugger::v2::Breakpoint* GetBreakpointResponse::release_breakpoint() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.GetBreakpointResponse.breakpoint)
  
  ::google::devtools::clouddebugger::v2::Breakpoint* temp = breakpoint_;
  breakpoint_ = NULL;
  return temp;
}
void GetBreakpointResponse::set_allocated_breakpoint(::google::devtools::clouddebugger::v2::Breakpoint* breakpoint) {
  delete breakpoint_;
  breakpoint_ = breakpoint;
  if (breakpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.GetBreakpointResponse.breakpoint)
}

inline const GetBreakpointResponse* GetBreakpointResponse::internal_default_instance() {
  return &GetBreakpointResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteBreakpointRequest::kDebuggeeIdFieldNumber;
const int DeleteBreakpointRequest::kBreakpointIdFieldNumber;
const int DeleteBreakpointRequest::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteBreakpointRequest::DeleteBreakpointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
}

void DeleteBreakpointRequest::InitAsDefaultInstance() {
}

DeleteBreakpointRequest::DeleteBreakpointRequest(const DeleteBreakpointRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
}

void DeleteBreakpointRequest::SharedCtor() {
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteBreakpointRequest::~DeleteBreakpointRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  SharedDtor();
}

void DeleteBreakpointRequest::SharedDtor() {
  debuggee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteBreakpointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteBreakpointRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteBreakpointRequest_descriptor_;
}

const DeleteBreakpointRequest& DeleteBreakpointRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteBreakpointRequest> DeleteBreakpointRequest_default_instance_;

DeleteBreakpointRequest* DeleteBreakpointRequest::New(::google::protobuf::Arena* arena) const {
  DeleteBreakpointRequest* n = new DeleteBreakpointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteBreakpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteBreakpointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string debuggee_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debuggee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debuggee_id().data(), this->debuggee_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_breakpoint_id;
        break;
      }

      // optional string breakpoint_id = 2;
      case 2: {
        if (tag == 18) {
         parse_breakpoint_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_breakpoint_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->breakpoint_id().data(), this->breakpoint_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_client_version;
        break;
      }

      // optional string client_version = 3;
      case 3: {
        if (tag == 26) {
         parse_client_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version().data(), this->client_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  return false;
#undef DO_
}

void DeleteBreakpointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->debuggee_id(), output);
  }

  // optional string breakpoint_id = 2;
  if (this->breakpoint_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->breakpoint_id().data(), this->breakpoint_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->breakpoint_id(), output);
  }

  // optional string client_version = 3;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
}

::google::protobuf::uint8* DeleteBreakpointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->debuggee_id(), target);
  }

  // optional string breakpoint_id = 2;
  if (this->breakpoint_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->breakpoint_id().data(), this->breakpoint_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->breakpoint_id(), target);
  }

  // optional string client_version = 3;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->client_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  return target;
}

size_t DeleteBreakpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  size_t total_size = 0;

  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debuggee_id());
  }

  // optional string breakpoint_id = 2;
  if (this->breakpoint_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->breakpoint_id());
  }

  // optional string client_version = 3;
  if (this->client_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteBreakpointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteBreakpointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteBreakpointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
    UnsafeMergeFrom(*source);
  }
}

void DeleteBreakpointRequest::MergeFrom(const DeleteBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteBreakpointRequest::UnsafeMergeFrom(const DeleteBreakpointRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.debuggee_id().size() > 0) {

    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  if (from.breakpoint_id().size() > 0) {

    breakpoint_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.breakpoint_id_);
  }
  if (from.client_version().size() > 0) {

    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
}

void DeleteBreakpointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBreakpointRequest::CopyFrom(const DeleteBreakpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.DeleteBreakpointRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteBreakpointRequest::IsInitialized() const {

  return true;
}

void DeleteBreakpointRequest::Swap(DeleteBreakpointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteBreakpointRequest::InternalSwap(DeleteBreakpointRequest* other) {
  debuggee_id_.Swap(&other->debuggee_id_);
  breakpoint_id_.Swap(&other->breakpoint_id_);
  client_version_.Swap(&other->client_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteBreakpointRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteBreakpointRequest_descriptor_;
  metadata.reflection = DeleteBreakpointRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteBreakpointRequest

// optional string debuggee_id = 1;
void DeleteBreakpointRequest::clear_debuggee_id() {
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteBreakpointRequest::debuggee_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id)
  return debuggee_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBreakpointRequest::set_debuggee_id(const ::std::string& value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id)
}
void DeleteBreakpointRequest::set_debuggee_id(const char* value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id)
}
void DeleteBreakpointRequest::set_debuggee_id(const char* value, size_t size) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id)
}
::std::string* DeleteBreakpointRequest::mutable_debuggee_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id)
  return debuggee_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteBreakpointRequest::release_debuggee_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id)
  
  return debuggee_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBreakpointRequest::set_allocated_debuggee_id(::std::string* debuggee_id) {
  if (debuggee_id != NULL) {
    
  } else {
    
  }
  debuggee_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debuggee_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.debuggee_id)
}

// optional string breakpoint_id = 2;
void DeleteBreakpointRequest::clear_breakpoint_id() {
  breakpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteBreakpointRequest::breakpoint_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id)
  return breakpoint_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBreakpointRequest::set_breakpoint_id(const ::std::string& value) {
  
  breakpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id)
}
void DeleteBreakpointRequest::set_breakpoint_id(const char* value) {
  
  breakpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id)
}
void DeleteBreakpointRequest::set_breakpoint_id(const char* value, size_t size) {
  
  breakpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id)
}
::std::string* DeleteBreakpointRequest::mutable_breakpoint_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id)
  return breakpoint_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteBreakpointRequest::release_breakpoint_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id)
  
  return breakpoint_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBreakpointRequest::set_allocated_breakpoint_id(::std::string* breakpoint_id) {
  if (breakpoint_id != NULL) {
    
  } else {
    
  }
  breakpoint_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), breakpoint_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.breakpoint_id)
}

// optional string client_version = 3;
void DeleteBreakpointRequest::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteBreakpointRequest::client_version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version)
  return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBreakpointRequest::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version)
}
void DeleteBreakpointRequest::set_client_version(const char* value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version)
}
void DeleteBreakpointRequest::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version)
}
::std::string* DeleteBreakpointRequest::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteBreakpointRequest::release_client_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteBreakpointRequest::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.DeleteBreakpointRequest.client_version)
}

inline const DeleteBreakpointRequest* DeleteBreakpointRequest::internal_default_instance() {
  return &DeleteBreakpointRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBreakpointsRequest_BreakpointActionValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBreakpointsRequest_BreakpointActionValue::ListBreakpointsRequest_BreakpointActionValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
}

void ListBreakpointsRequest_BreakpointActionValue::InitAsDefaultInstance() {
}

ListBreakpointsRequest_BreakpointActionValue::ListBreakpointsRequest_BreakpointActionValue(const ListBreakpointsRequest_BreakpointActionValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
}

void ListBreakpointsRequest_BreakpointActionValue::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

ListBreakpointsRequest_BreakpointActionValue::~ListBreakpointsRequest_BreakpointActionValue() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  SharedDtor();
}

void ListBreakpointsRequest_BreakpointActionValue::SharedDtor() {
}

void ListBreakpointsRequest_BreakpointActionValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBreakpointsRequest_BreakpointActionValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListBreakpointsRequest_BreakpointActionValue_descriptor_;
}

const ListBreakpointsRequest_BreakpointActionValue& ListBreakpointsRequest_BreakpointActionValue::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListBreakpointsRequest_BreakpointActionValue> ListBreakpointsRequest_BreakpointActionValue_default_instance_;

ListBreakpointsRequest_BreakpointActionValue* ListBreakpointsRequest_BreakpointActionValue::New(::google::protobuf::Arena* arena) const {
  ListBreakpointsRequest_BreakpointActionValue* n = new ListBreakpointsRequest_BreakpointActionValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBreakpointsRequest_BreakpointActionValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  value_ = 0;
}

bool ListBreakpointsRequest_BreakpointActionValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::devtools::clouddebugger::v2::Breakpoint_Action >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  return false;
#undef DO_
}

void ListBreakpointsRequest_BreakpointActionValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  // optional .google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
}

::google::protobuf::uint8* ListBreakpointsRequest_BreakpointActionValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  // optional .google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  return target;
}

size_t ListBreakpointsRequest_BreakpointActionValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  size_t total_size = 0;

  // optional .google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBreakpointsRequest_BreakpointActionValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListBreakpointsRequest_BreakpointActionValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBreakpointsRequest_BreakpointActionValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
    UnsafeMergeFrom(*source);
  }
}

void ListBreakpointsRequest_BreakpointActionValue::MergeFrom(const ListBreakpointsRequest_BreakpointActionValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListBreakpointsRequest_BreakpointActionValue::UnsafeMergeFrom(const ListBreakpointsRequest_BreakpointActionValue& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void ListBreakpointsRequest_BreakpointActionValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBreakpointsRequest_BreakpointActionValue::CopyFrom(const ListBreakpointsRequest_BreakpointActionValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListBreakpointsRequest_BreakpointActionValue::IsInitialized() const {

  return true;
}

void ListBreakpointsRequest_BreakpointActionValue::Swap(ListBreakpointsRequest_BreakpointActionValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBreakpointsRequest_BreakpointActionValue::InternalSwap(ListBreakpointsRequest_BreakpointActionValue* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBreakpointsRequest_BreakpointActionValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListBreakpointsRequest_BreakpointActionValue_descriptor_;
  metadata.reflection = ListBreakpointsRequest_BreakpointActionValue_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBreakpointsRequest::kDebuggeeIdFieldNumber;
const int ListBreakpointsRequest::kIncludeAllUsersFieldNumber;
const int ListBreakpointsRequest::kIncludeInactiveFieldNumber;
const int ListBreakpointsRequest::kActionFieldNumber;
const int ListBreakpointsRequest::kStripResultsFieldNumber;
const int ListBreakpointsRequest::kWaitTokenFieldNumber;
const int ListBreakpointsRequest::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBreakpointsRequest::ListBreakpointsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
}

void ListBreakpointsRequest::InitAsDefaultInstance() {
  action_ = const_cast< ::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue*>(
      ::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue::internal_default_instance());
}

ListBreakpointsRequest::ListBreakpointsRequest(const ListBreakpointsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
}

void ListBreakpointsRequest::SharedCtor() {
  debuggee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wait_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = NULL;
  ::memset(&include_all_users_, 0, reinterpret_cast<char*>(&strip_results_) -
    reinterpret_cast<char*>(&include_all_users_) + sizeof(strip_results_));
  _cached_size_ = 0;
}

ListBreakpointsRequest::~ListBreakpointsRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  SharedDtor();
}

void ListBreakpointsRequest::SharedDtor() {
  debuggee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wait_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ListBreakpointsRequest_default_instance_.get()) {
    delete action_;
  }
}

void ListBreakpointsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBreakpointsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListBreakpointsRequest_descriptor_;
}

const ListBreakpointsRequest& ListBreakpointsRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListBreakpointsRequest> ListBreakpointsRequest_default_instance_;

ListBreakpointsRequest* ListBreakpointsRequest::New(::google::protobuf::Arena* arena) const {
  ListBreakpointsRequest* n = new ListBreakpointsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBreakpointsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ListBreakpointsRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ListBreakpointsRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(include_all_users_, strip_results_);
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && action_ != NULL) delete action_;
  action_ = NULL;
  wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ListBreakpointsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string debuggee_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debuggee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->debuggee_id().data(), this->debuggee_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_include_all_users;
        break;
      }

      // optional bool include_all_users = 2;
      case 2: {
        if (tag == 16) {
         parse_include_all_users:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_all_users_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_include_inactive;
        break;
      }

      // optional bool include_inactive = 3;
      case 3: {
        if (tag == 24) {
         parse_include_inactive:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_inactive_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_action;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;
      case 4: {
        if (tag == 34) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_strip_results;
        break;
      }

      // optional bool strip_results = 5 [deprecated = true];
      case 5: {
        if (tag == 40) {
         parse_strip_results:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &strip_results_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_wait_token;
        break;
      }

      // optional string wait_token = 6;
      case 6: {
        if (tag == 50) {
         parse_wait_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wait_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wait_token().data(), this->wait_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_client_version;
        break;
      }

      // optional string client_version = 8;
      case 8: {
        if (tag == 66) {
         parse_client_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version().data(), this->client_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  return false;
#undef DO_
}

void ListBreakpointsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->debuggee_id(), output);
  }

  // optional bool include_all_users = 2;
  if (this->include_all_users() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->include_all_users(), output);
  }

  // optional bool include_inactive = 3;
  if (this->include_inactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->include_inactive(), output);
  }

  // optional .google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;
  if (this->has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->action_, output);
  }

  // optional bool strip_results = 5 [deprecated = true];
  if (this->strip_results() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->strip_results(), output);
  }

  // optional string wait_token = 6;
  if (this->wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_token().data(), this->wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->wait_token(), output);
  }

  // optional string client_version = 8;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->client_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
}

::google::protobuf::uint8* ListBreakpointsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->debuggee_id().data(), this->debuggee_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->debuggee_id(), target);
  }

  // optional bool include_all_users = 2;
  if (this->include_all_users() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->include_all_users(), target);
  }

  // optional bool include_inactive = 3;
  if (this->include_inactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->include_inactive(), target);
  }

  // optional .google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;
  if (this->has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->action_, false, target);
  }

  // optional bool strip_results = 5 [deprecated = true];
  if (this->strip_results() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->strip_results(), target);
  }

  // optional string wait_token = 6;
  if (this->wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wait_token().data(), this->wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->wait_token(), target);
  }

  // optional string client_version = 8;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->client_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  return target;
}

size_t ListBreakpointsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  size_t total_size = 0;

  // optional string debuggee_id = 1;
  if (this->debuggee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->debuggee_id());
  }

  // optional bool include_all_users = 2;
  if (this->include_all_users() != 0) {
    total_size += 1 + 1;
  }

  // optional bool include_inactive = 3;
  if (this->include_inactive() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;
  if (this->has_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->action_);
  }

  // optional bool strip_results = 5 [deprecated = true];
  if (this->strip_results() != 0) {
    total_size += 1 + 1;
  }

  // optional string wait_token = 6;
  if (this->wait_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wait_token());
  }

  // optional string client_version = 8;
  if (this->client_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBreakpointsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListBreakpointsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBreakpointsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListBreakpointsRequest::MergeFrom(const ListBreakpointsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListBreakpointsRequest::UnsafeMergeFrom(const ListBreakpointsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.debuggee_id().size() > 0) {

    debuggee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debuggee_id_);
  }
  if (from.include_all_users() != 0) {
    set_include_all_users(from.include_all_users());
  }
  if (from.include_inactive() != 0) {
    set_include_inactive(from.include_inactive());
  }
  if (from.has_action()) {
    mutable_action()->::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue::MergeFrom(from.action());
  }
  if (from.strip_results() != 0) {
    set_strip_results(from.strip_results());
  }
  if (from.wait_token().size() > 0) {

    wait_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wait_token_);
  }
  if (from.client_version().size() > 0) {

    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
}

void ListBreakpointsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBreakpointsRequest::CopyFrom(const ListBreakpointsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListBreakpointsRequest::IsInitialized() const {

  return true;
}

void ListBreakpointsRequest::Swap(ListBreakpointsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBreakpointsRequest::InternalSwap(ListBreakpointsRequest* other) {
  debuggee_id_.Swap(&other->debuggee_id_);
  std::swap(include_all_users_, other->include_all_users_);
  std::swap(include_inactive_, other->include_inactive_);
  std::swap(action_, other->action_);
  std::swap(strip_results_, other->strip_results_);
  wait_token_.Swap(&other->wait_token_);
  client_version_.Swap(&other->client_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBreakpointsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListBreakpointsRequest_descriptor_;
  metadata.reflection = ListBreakpointsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBreakpointsRequest_BreakpointActionValue

// optional .google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;
void ListBreakpointsRequest_BreakpointActionValue::clear_value() {
  value_ = 0;
}
::google::devtools::clouddebugger::v2::Breakpoint_Action ListBreakpointsRequest_BreakpointActionValue::value() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.value)
  return static_cast< ::google::devtools::clouddebugger::v2::Breakpoint_Action >(value_);
}
void ListBreakpointsRequest_BreakpointActionValue::set_value(::google::devtools::clouddebugger::v2::Breakpoint_Action value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.value)
}

inline const ListBreakpointsRequest_BreakpointActionValue* ListBreakpointsRequest_BreakpointActionValue::internal_default_instance() {
  return &ListBreakpointsRequest_BreakpointActionValue_default_instance_.get();
}
// -------------------------------------------------------------------

// ListBreakpointsRequest

// optional string debuggee_id = 1;
void ListBreakpointsRequest::clear_debuggee_id() {
  debuggee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBreakpointsRequest::debuggee_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id)
  return debuggee_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsRequest::set_debuggee_id(const ::std::string& value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id)
}
void ListBreakpointsRequest::set_debuggee_id(const char* value) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id)
}
void ListBreakpointsRequest::set_debuggee_id(const char* value, size_t size) {
  
  debuggee_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id)
}
::std::string* ListBreakpointsRequest::mutable_debuggee_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id)
  return debuggee_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBreakpointsRequest::release_debuggee_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id)
  
  return debuggee_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsRequest::set_allocated_debuggee_id(::std::string* debuggee_id) {
  if (debuggee_id != NULL) {
    
  } else {
    
  }
  debuggee_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debuggee_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListBreakpointsRequest.debuggee_id)
}

// optional bool include_all_users = 2;
void ListBreakpointsRequest::clear_include_all_users() {
  include_all_users_ = false;
}
bool ListBreakpointsRequest::include_all_users() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.include_all_users)
  return include_all_users_;
}
void ListBreakpointsRequest::set_include_all_users(bool value) {
  
  include_all_users_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsRequest.include_all_users)
}

// optional bool include_inactive = 3;
void ListBreakpointsRequest::clear_include_inactive() {
  include_inactive_ = false;
}
bool ListBreakpointsRequest::include_inactive() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.include_inactive)
  return include_inactive_;
}
void ListBreakpointsRequest::set_include_inactive(bool value) {
  
  include_inactive_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsRequest.include_inactive)
}

// optional .google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;
bool ListBreakpointsRequest::has_action() const {
  return this != internal_default_instance() && action_ != NULL;
}
void ListBreakpointsRequest::clear_action() {
  if (GetArenaNoVirtual() == NULL && action_ != NULL) delete action_;
  action_ = NULL;
}
const ::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue& ListBreakpointsRequest::action() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.action)
  return action_ != NULL ? *action_
                         : *::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue::internal_default_instance();
}
::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue* ListBreakpointsRequest::mutable_action() {
  
  if (action_ == NULL) {
    action_ = new ::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListBreakpointsRequest.action)
  return action_;
}
::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue* ListBreakpointsRequest::release_action() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListBreakpointsRequest.action)
  
  ::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue* temp = action_;
  action_ = NULL;
  return temp;
}
void ListBreakpointsRequest::set_allocated_action(::google::devtools::clouddebugger::v2::ListBreakpointsRequest_BreakpointActionValue* action) {
  delete action_;
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListBreakpointsRequest.action)
}

// optional bool strip_results = 5 [deprecated = true];
void ListBreakpointsRequest::clear_strip_results() {
  strip_results_ = false;
}
bool ListBreakpointsRequest::strip_results() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.strip_results)
  return strip_results_;
}
void ListBreakpointsRequest::set_strip_results(bool value) {
  
  strip_results_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsRequest.strip_results)
}

// optional string wait_token = 6;
void ListBreakpointsRequest::clear_wait_token() {
  wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBreakpointsRequest::wait_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token)
  return wait_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsRequest::set_wait_token(const ::std::string& value) {
  
  wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token)
}
void ListBreakpointsRequest::set_wait_token(const char* value) {
  
  wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token)
}
void ListBreakpointsRequest::set_wait_token(const char* value, size_t size) {
  
  wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token)
}
::std::string* ListBreakpointsRequest::mutable_wait_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token)
  return wait_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBreakpointsRequest::release_wait_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token)
  
  return wait_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsRequest::set_allocated_wait_token(::std::string* wait_token) {
  if (wait_token != NULL) {
    
  } else {
    
  }
  wait_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wait_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListBreakpointsRequest.wait_token)
}

// optional string client_version = 8;
void ListBreakpointsRequest::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBreakpointsRequest::client_version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version)
  return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsRequest::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version)
}
void ListBreakpointsRequest::set_client_version(const char* value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version)
}
void ListBreakpointsRequest::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version)
}
::std::string* ListBreakpointsRequest::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBreakpointsRequest::release_client_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsRequest::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListBreakpointsRequest.client_version)
}

inline const ListBreakpointsRequest* ListBreakpointsRequest::internal_default_instance() {
  return &ListBreakpointsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBreakpointsResponse::kBreakpointsFieldNumber;
const int ListBreakpointsResponse::kNextWaitTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBreakpointsResponse::ListBreakpointsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
}

void ListBreakpointsResponse::InitAsDefaultInstance() {
}

ListBreakpointsResponse::ListBreakpointsResponse(const ListBreakpointsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
}

void ListBreakpointsResponse::SharedCtor() {
  next_wait_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListBreakpointsResponse::~ListBreakpointsResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  SharedDtor();
}

void ListBreakpointsResponse::SharedDtor() {
  next_wait_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBreakpointsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBreakpointsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListBreakpointsResponse_descriptor_;
}

const ListBreakpointsResponse& ListBreakpointsResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListBreakpointsResponse> ListBreakpointsResponse_default_instance_;

ListBreakpointsResponse* ListBreakpointsResponse::New(::google::protobuf::Arena* arena) const {
  ListBreakpointsResponse* n = new ListBreakpointsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBreakpointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  next_wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breakpoints_.Clear();
}

bool ListBreakpointsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_breakpoints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_breakpoints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_breakpoints;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_wait_token;
        break;
      }

      // optional string next_wait_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_wait_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_wait_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_wait_token().data(), this->next_wait_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  return false;
#undef DO_
}

void ListBreakpointsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
  for (unsigned int i = 0, n = this->breakpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->breakpoints(i), output);
  }

  // optional string next_wait_token = 2;
  if (this->next_wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_wait_token().data(), this->next_wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_wait_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
}

::google::protobuf::uint8* ListBreakpointsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
  for (unsigned int i = 0, n = this->breakpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->breakpoints(i), false, target);
  }

  // optional string next_wait_token = 2;
  if (this->next_wait_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_wait_token().data(), this->next_wait_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_wait_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  return target;
}

size_t ListBreakpointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  size_t total_size = 0;

  // optional string next_wait_token = 2;
  if (this->next_wait_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_wait_token());
  }

  // repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
  {
    unsigned int count = this->breakpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->breakpoints(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBreakpointsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListBreakpointsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBreakpointsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListBreakpointsResponse::MergeFrom(const ListBreakpointsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListBreakpointsResponse::UnsafeMergeFrom(const ListBreakpointsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  breakpoints_.MergeFrom(from.breakpoints_);
  if (from.next_wait_token().size() > 0) {

    next_wait_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_wait_token_);
  }
}

void ListBreakpointsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBreakpointsResponse::CopyFrom(const ListBreakpointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.ListBreakpointsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListBreakpointsResponse::IsInitialized() const {

  return true;
}

void ListBreakpointsResponse::Swap(ListBreakpointsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBreakpointsResponse::InternalSwap(ListBreakpointsResponse* other) {
  breakpoints_.UnsafeArenaSwap(&other->breakpoints_);
  next_wait_token_.Swap(&other->next_wait_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBreakpointsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListBreakpointsResponse_descriptor_;
  metadata.reflection = ListBreakpointsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListBreakpointsResponse

// repeated .google.devtools.clouddebugger.v2.Breakpoint breakpoints = 1;
int ListBreakpointsResponse::breakpoints_size() const {
  return breakpoints_.size();
}
void ListBreakpointsResponse::clear_breakpoints() {
  breakpoints_.Clear();
}
const ::google::devtools::clouddebugger::v2::Breakpoint& ListBreakpointsResponse::breakpoints(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsResponse.breakpoints)
  return breakpoints_.Get(index);
}
::google::devtools::clouddebugger::v2::Breakpoint* ListBreakpointsResponse::mutable_breakpoints(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListBreakpointsResponse.breakpoints)
  return breakpoints_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Breakpoint* ListBreakpointsResponse::add_breakpoints() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.ListBreakpointsResponse.breakpoints)
  return breakpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Breakpoint >*
ListBreakpointsResponse::mutable_breakpoints() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.ListBreakpointsResponse.breakpoints)
  return &breakpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Breakpoint >&
ListBreakpointsResponse::breakpoints() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.ListBreakpointsResponse.breakpoints)
  return breakpoints_;
}

// optional string next_wait_token = 2;
void ListBreakpointsResponse::clear_next_wait_token() {
  next_wait_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListBreakpointsResponse::next_wait_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token)
  return next_wait_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsResponse::set_next_wait_token(const ::std::string& value) {
  
  next_wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token)
}
void ListBreakpointsResponse::set_next_wait_token(const char* value) {
  
  next_wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token)
}
void ListBreakpointsResponse::set_next_wait_token(const char* value, size_t size) {
  
  next_wait_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token)
}
::std::string* ListBreakpointsResponse::mutable_next_wait_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token)
  return next_wait_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListBreakpointsResponse::release_next_wait_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token)
  
  return next_wait_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListBreakpointsResponse::set_allocated_next_wait_token(::std::string* next_wait_token) {
  if (next_wait_token != NULL) {
    
  } else {
    
  }
  next_wait_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_wait_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListBreakpointsResponse.next_wait_token)
}

inline const ListBreakpointsResponse* ListBreakpointsResponse::internal_default_instance() {
  return &ListBreakpointsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDebuggeesRequest::kProjectFieldNumber;
const int ListDebuggeesRequest::kIncludeInactiveFieldNumber;
const int ListDebuggeesRequest::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDebuggeesRequest::ListDebuggeesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
}

void ListDebuggeesRequest::InitAsDefaultInstance() {
}

ListDebuggeesRequest::ListDebuggeesRequest(const ListDebuggeesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
}

void ListDebuggeesRequest::SharedCtor() {
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  include_inactive_ = false;
  _cached_size_ = 0;
}

ListDebuggeesRequest::~ListDebuggeesRequest() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  SharedDtor();
}

void ListDebuggeesRequest::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListDebuggeesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListDebuggeesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListDebuggeesRequest_descriptor_;
}

const ListDebuggeesRequest& ListDebuggeesRequest::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListDebuggeesRequest> ListDebuggeesRequest_default_instance_;

ListDebuggeesRequest* ListDebuggeesRequest::New(::google::protobuf::Arena* arena) const {
  ListDebuggeesRequest* n = new ListDebuggeesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListDebuggeesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  include_inactive_ = false;
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListDebuggeesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), this->project().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListDebuggeesRequest.project"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_include_inactive;
        break;
      }

      // optional bool include_inactive = 3;
      case 3: {
        if (tag == 24) {
         parse_include_inactive:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_inactive_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_client_version;
        break;
      }

      // optional string client_version = 4;
      case 4: {
        if (tag == 34) {
         parse_client_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version().data(), this->client_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  return false;
#undef DO_
}

void ListDebuggeesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  // optional string project = 2;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), this->project().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListDebuggeesRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project(), output);
  }

  // optional bool include_inactive = 3;
  if (this->include_inactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->include_inactive(), output);
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->client_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
}

::google::protobuf::uint8* ListDebuggeesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  // optional string project = 2;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), this->project().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListDebuggeesRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project(), target);
  }

  // optional bool include_inactive = 3;
  if (this->include_inactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->include_inactive(), target);
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version().data(), this->client_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->client_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  return target;
}

size_t ListDebuggeesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  size_t total_size = 0;

  // optional string project = 2;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // optional bool include_inactive = 3;
  if (this->include_inactive() != 0) {
    total_size += 1 + 1;
  }

  // optional string client_version = 4;
  if (this->client_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListDebuggeesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListDebuggeesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDebuggeesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListDebuggeesRequest::MergeFrom(const ListDebuggeesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListDebuggeesRequest::UnsafeMergeFrom(const ListDebuggeesRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.include_inactive() != 0) {
    set_include_inactive(from.include_inactive());
  }
  if (from.client_version().size() > 0) {

    client_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_);
  }
}

void ListDebuggeesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDebuggeesRequest::CopyFrom(const ListDebuggeesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.ListDebuggeesRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListDebuggeesRequest::IsInitialized() const {

  return true;
}

void ListDebuggeesRequest::Swap(ListDebuggeesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDebuggeesRequest::InternalSwap(ListDebuggeesRequest* other) {
  project_.Swap(&other->project_);
  std::swap(include_inactive_, other->include_inactive_);
  client_version_.Swap(&other->client_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListDebuggeesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListDebuggeesRequest_descriptor_;
  metadata.reflection = ListDebuggeesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListDebuggeesRequest

// optional string project = 2;
void ListDebuggeesRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListDebuggeesRequest::project() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListDebuggeesRequest.project)
  return project_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListDebuggeesRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListDebuggeesRequest.project)
}
void ListDebuggeesRequest::set_project(const char* value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListDebuggeesRequest.project)
}
void ListDebuggeesRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListDebuggeesRequest.project)
}
::std::string* ListDebuggeesRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListDebuggeesRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListDebuggeesRequest::release_project() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListDebuggeesRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListDebuggeesRequest::set_allocated_project(::std::string* project) {
  if (project != NULL) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListDebuggeesRequest.project)
}

// optional bool include_inactive = 3;
void ListDebuggeesRequest::clear_include_inactive() {
  include_inactive_ = false;
}
bool ListDebuggeesRequest::include_inactive() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListDebuggeesRequest.include_inactive)
  return include_inactive_;
}
void ListDebuggeesRequest::set_include_inactive(bool value) {
  
  include_inactive_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListDebuggeesRequest.include_inactive)
}

// optional string client_version = 4;
void ListDebuggeesRequest::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListDebuggeesRequest::client_version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version)
  return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListDebuggeesRequest::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version)
}
void ListDebuggeesRequest::set_client_version(const char* value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version)
}
void ListDebuggeesRequest::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version)
}
::std::string* ListDebuggeesRequest::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListDebuggeesRequest::release_client_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListDebuggeesRequest::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.ListDebuggeesRequest.client_version)
}

inline const ListDebuggeesRequest* ListDebuggeesRequest::internal_default_instance() {
  return &ListDebuggeesRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDebuggeesResponse::kDebuggeesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDebuggeesResponse::ListDebuggeesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
}

void ListDebuggeesResponse::InitAsDefaultInstance() {
}

ListDebuggeesResponse::ListDebuggeesResponse(const ListDebuggeesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
}

void ListDebuggeesResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListDebuggeesResponse::~ListDebuggeesResponse() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  SharedDtor();
}

void ListDebuggeesResponse::SharedDtor() {
}

void ListDebuggeesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListDebuggeesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListDebuggeesResponse_descriptor_;
}

const ListDebuggeesResponse& ListDebuggeesResponse::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdebugger_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListDebuggeesResponse> ListDebuggeesResponse_default_instance_;

ListDebuggeesResponse* ListDebuggeesResponse::New(::google::protobuf::Arena* arena) const {
  ListDebuggeesResponse* n = new ListDebuggeesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListDebuggeesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  debuggees_.Clear();
}

bool ListDebuggeesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.devtools.clouddebugger.v2.Debuggee debuggees = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_debuggees:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_debuggees()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_debuggees;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  return false;
#undef DO_
}

void ListDebuggeesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  // repeated .google.devtools.clouddebugger.v2.Debuggee debuggees = 1;
  for (unsigned int i = 0, n = this->debuggees_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->debuggees(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
}

::google::protobuf::uint8* ListDebuggeesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  // repeated .google.devtools.clouddebugger.v2.Debuggee debuggees = 1;
  for (unsigned int i = 0, n = this->debuggees_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->debuggees(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  return target;
}

size_t ListDebuggeesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  size_t total_size = 0;

  // repeated .google.devtools.clouddebugger.v2.Debuggee debuggees = 1;
  {
    unsigned int count = this->debuggees_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->debuggees(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListDebuggeesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListDebuggeesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDebuggeesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListDebuggeesResponse::MergeFrom(const ListDebuggeesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListDebuggeesResponse::UnsafeMergeFrom(const ListDebuggeesResponse& from) {
  GOOGLE_DCHECK(&from != this);
  debuggees_.MergeFrom(from.debuggees_);
}

void ListDebuggeesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDebuggeesResponse::CopyFrom(const ListDebuggeesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.ListDebuggeesResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListDebuggeesResponse::IsInitialized() const {

  return true;
}

void ListDebuggeesResponse::Swap(ListDebuggeesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDebuggeesResponse::InternalSwap(ListDebuggeesResponse* other) {
  debuggees_.UnsafeArenaSwap(&other->debuggees_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListDebuggeesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListDebuggeesResponse_descriptor_;
  metadata.reflection = ListDebuggeesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListDebuggeesResponse

// repeated .google.devtools.clouddebugger.v2.Debuggee debuggees = 1;
int ListDebuggeesResponse::debuggees_size() const {
  return debuggees_.size();
}
void ListDebuggeesResponse::clear_debuggees() {
  debuggees_.Clear();
}
const ::google::devtools::clouddebugger::v2::Debuggee& ListDebuggeesResponse::debuggees(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.ListDebuggeesResponse.debuggees)
  return debuggees_.Get(index);
}
::google::devtools::clouddebugger::v2::Debuggee* ListDebuggeesResponse::mutable_debuggees(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.ListDebuggeesResponse.debuggees)
  return debuggees_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Debuggee* ListDebuggeesResponse::add_debuggees() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.ListDebuggeesResponse.debuggees)
  return debuggees_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Debuggee >*
ListDebuggeesResponse::mutable_debuggees() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.ListDebuggeesResponse.debuggees)
  return &debuggees_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Debuggee >&
ListDebuggeesResponse::debuggees() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.ListDebuggeesResponse.debuggees)
  return debuggees_;
}

inline const ListDebuggeesResponse* ListDebuggeesResponse::internal_default_instance() {
  return &ListDebuggeesResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace clouddebugger
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
