// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/instance.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/appengine/v1/instance.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace appengine {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* Instance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Instance_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Instance_Availability_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fappengine_2fv1_2finstance_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fappengine_2fv1_2finstance_2eproto() {
  protobuf_AddDesc_google_2fappengine_2fv1_2finstance_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/appengine/v1/instance.proto");
  GOOGLE_CHECK(file != NULL);
  Instance_descriptor_ = file->message_type(0);
  static const int Instance_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, app_engine_release_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, availability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, vm_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, vm_zone_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, vm_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, requests_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, qps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, average_latency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, memory_usage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, vm_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, vm_debug_enabled_),
  };
  Instance_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Instance_descriptor_,
      Instance::internal_default_instance(),
      Instance_offsets_,
      -1,
      -1,
      -1,
      sizeof(Instance),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instance, _internal_metadata_));
  Instance_Availability_descriptor_ = Instance_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fappengine_2fv1_2finstance_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Instance_descriptor_, Instance::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fappengine_2fv1_2finstance_2eproto() {
  Instance_default_instance_.Shutdown();
  delete Instance_reflection_;
}

void protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  Instance_default_instance_.DefaultConstruct();
  Instance_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto_once_);
void protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto_once_,
                 &protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto_impl);
}
void protobuf_AddDesc_google_2fappengine_2fv1_2finstance_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"google/appengine/v1/instance.proto\022\023go"
    "ogle.appengine.v1\032\034google/api/annotation"
    "s.proto\032\037google/protobuf/timestamp.proto"
    "\"\257\003\n\010Instance\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022"
    "\032\n\022app_engine_release\030\003 \001(\t\022@\n\014availabil"
    "ity\030\004 \001(\0162*.google.appengine.v1.Instance"
    ".Availability\022\017\n\007vm_name\030\005 \001(\t\022\024\n\014vm_zon"
    "e_name\030\006 \001(\t\022\r\n\005vm_id\030\007 \001(\t\022.\n\nstart_tim"
    "e\030\010 \001(\0132\032.google.protobuf.Timestamp\022\020\n\010r"
    "equests\030\t \001(\005\022\016\n\006errors\030\n \001(\005\022\013\n\003qps\030\013 \001"
    "(\002\022\027\n\017average_latency\030\014 \001(\005\022\024\n\014memory_us"
    "age\030\r \001(\003\022\021\n\tvm_status\030\016 \001(\t\022\030\n\020vm_debug"
    "_enabled\030\017 \001(\010\":\n\014Availability\022\017\n\013UNSPEC"
    "IFIED\020\000\022\014\n\010RESIDENT\020\001\022\013\n\007DYNAMIC\020\002Bh\n\027co"
    "m.google.appengine.v1B\rInstanceProtoP\001Z<"
    "google.golang.org/genproto/googleapis/ap"
    "pengine/v1;appengineb\006proto3", 668);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/appengine/v1/instance.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fappengine_2fv1_2finstance_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fappengine_2fv1_2finstance_2eproto_once_);
void protobuf_AddDesc_google_2fappengine_2fv1_2finstance_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fappengine_2fv1_2finstance_2eproto_once_,
                 &protobuf_AddDesc_google_2fappengine_2fv1_2finstance_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fappengine_2fv1_2finstance_2eproto {
  StaticDescriptorInitializer_google_2fappengine_2fv1_2finstance_2eproto() {
    protobuf_AddDesc_google_2fappengine_2fv1_2finstance_2eproto();
  }
} static_descriptor_initializer_google_2fappengine_2fv1_2finstance_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Instance_Availability_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Instance_Availability_descriptor_;
}
bool Instance_Availability_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instance_Availability Instance::UNSPECIFIED;
const Instance_Availability Instance::RESIDENT;
const Instance_Availability Instance::DYNAMIC;
const Instance_Availability Instance::Availability_MIN;
const Instance_Availability Instance::Availability_MAX;
const int Instance::Availability_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instance::kNameFieldNumber;
const int Instance::kIdFieldNumber;
const int Instance::kAppEngineReleaseFieldNumber;
const int Instance::kAvailabilityFieldNumber;
const int Instance::kVmNameFieldNumber;
const int Instance::kVmZoneNameFieldNumber;
const int Instance::kVmIdFieldNumber;
const int Instance::kStartTimeFieldNumber;
const int Instance::kRequestsFieldNumber;
const int Instance::kErrorsFieldNumber;
const int Instance::kQpsFieldNumber;
const int Instance::kAverageLatencyFieldNumber;
const int Instance::kMemoryUsageFieldNumber;
const int Instance::kVmStatusFieldNumber;
const int Instance::kVmDebugEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instance::Instance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.appengine.v1.Instance)
}

void Instance::InitAsDefaultInstance() {
  start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

Instance::Instance(const Instance& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.appengine.v1.Instance)
}

void Instance::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_zone_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_ = NULL;
  ::memset(&availability_, 0, reinterpret_cast<char*>(&vm_debug_enabled_) -
    reinterpret_cast<char*>(&availability_) + sizeof(vm_debug_enabled_));
  _cached_size_ = 0;
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:google.appengine.v1.Instance)
  SharedDtor();
}

void Instance::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_zone_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Instance_default_instance_.get()) {
    delete start_time_;
  }
}

void Instance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Instance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Instance_descriptor_;
}

const Instance& Instance::default_instance() {
  protobuf_InitDefaults_google_2fappengine_2fv1_2finstance_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Instance> Instance_default_instance_;

Instance* Instance::New(::google::protobuf::Arena* arena) const {
  Instance* n = new Instance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.appengine.v1.Instance)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Instance, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Instance*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_engine_release_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  availability_ = 0;
  vm_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_zone_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vm_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
  ZR_(requests_, vm_debug_enabled_);
  vm_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.appengine.v1.Instance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_app_engine_release;
        break;
      }

      // optional string app_engine_release = 3;
      case 3: {
        if (tag == 26) {
         parse_app_engine_release:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_engine_release()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_engine_release().data(), this->app_engine_release().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.app_engine_release"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_availability;
        break;
      }

      // optional .google.appengine.v1.Instance.Availability availability = 4;
      case 4: {
        if (tag == 32) {
         parse_availability:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_availability(static_cast< ::google::appengine::v1::Instance_Availability >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_vm_name;
        break;
      }

      // optional string vm_name = 5;
      case 5: {
        if (tag == 42) {
         parse_vm_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_name().data(), this->vm_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_vm_zone_name;
        break;
      }

      // optional string vm_zone_name = 6;
      case 6: {
        if (tag == 50) {
         parse_vm_zone_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_zone_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_zone_name().data(), this->vm_zone_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_zone_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_vm_id;
        break;
      }

      // optional string vm_id = 7;
      case 7: {
        if (tag == 58) {
         parse_vm_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_id().data(), this->vm_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_start_time;
        break;
      }

      // optional .google.protobuf.Timestamp start_time = 8;
      case 8: {
        if (tag == 66) {
         parse_start_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_requests;
        break;
      }

      // optional int32 requests = 9;
      case 9: {
        if (tag == 72) {
         parse_requests:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requests_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_errors;
        break;
      }

      // optional int32 errors = 10;
      case 10: {
        if (tag == 80) {
         parse_errors:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errors_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_qps;
        break;
      }

      // optional float qps = 11;
      case 11: {
        if (tag == 93) {
         parse_qps:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qps_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_average_latency;
        break;
      }

      // optional int32 average_latency = 12;
      case 12: {
        if (tag == 96) {
         parse_average_latency:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &average_latency_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_memory_usage;
        break;
      }

      // optional int64 memory_usage = 13;
      case 13: {
        if (tag == 104) {
         parse_memory_usage:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &memory_usage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_vm_status;
        break;
      }

      // optional string vm_status = 14;
      case 14: {
        if (tag == 114) {
         parse_vm_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vm_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vm_status().data(), this->vm_status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.appengine.v1.Instance.vm_status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_vm_debug_enabled;
        break;
      }

      // optional bool vm_debug_enabled = 15;
      case 15: {
        if (tag == 120) {
         parse_vm_debug_enabled:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vm_debug_enabled_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.appengine.v1.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.appengine.v1.Instance)
  return false;
#undef DO_
}

void Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.appengine.v1.Instance)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // optional string app_engine_release = 3;
  if (this->app_engine_release().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_engine_release().data(), this->app_engine_release().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.app_engine_release");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->app_engine_release(), output);
  }

  // optional .google.appengine.v1.Instance.Availability availability = 4;
  if (this->availability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->availability(), output);
  }

  // optional string vm_name = 5;
  if (this->vm_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_name().data(), this->vm_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->vm_name(), output);
  }

  // optional string vm_zone_name = 6;
  if (this->vm_zone_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_zone_name().data(), this->vm_zone_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_zone_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->vm_zone_name(), output);
  }

  // optional string vm_id = 7;
  if (this->vm_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_id().data(), this->vm_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->vm_id(), output);
  }

  // optional .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->start_time_, output);
  }

  // optional int32 requests = 9;
  if (this->requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->requests(), output);
  }

  // optional int32 errors = 10;
  if (this->errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->errors(), output);
  }

  // optional float qps = 11;
  if (this->qps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->qps(), output);
  }

  // optional int32 average_latency = 12;
  if (this->average_latency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->average_latency(), output);
  }

  // optional int64 memory_usage = 13;
  if (this->memory_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->memory_usage(), output);
  }

  // optional string vm_status = 14;
  if (this->vm_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_status().data(), this->vm_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->vm_status(), output);
  }

  // optional bool vm_debug_enabled = 15;
  if (this->vm_debug_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->vm_debug_enabled(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.appengine.v1.Instance)
}

::google::protobuf::uint8* Instance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.appengine.v1.Instance)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // optional string app_engine_release = 3;
  if (this->app_engine_release().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_engine_release().data(), this->app_engine_release().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.app_engine_release");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->app_engine_release(), target);
  }

  // optional .google.appengine.v1.Instance.Availability availability = 4;
  if (this->availability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->availability(), target);
  }

  // optional string vm_name = 5;
  if (this->vm_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_name().data(), this->vm_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->vm_name(), target);
  }

  // optional string vm_zone_name = 6;
  if (this->vm_zone_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_zone_name().data(), this->vm_zone_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_zone_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->vm_zone_name(), target);
  }

  // optional string vm_id = 7;
  if (this->vm_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_id().data(), this->vm_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->vm_id(), target);
  }

  // optional .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->start_time_, false, target);
  }

  // optional int32 requests = 9;
  if (this->requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->requests(), target);
  }

  // optional int32 errors = 10;
  if (this->errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->errors(), target);
  }

  // optional float qps = 11;
  if (this->qps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->qps(), target);
  }

  // optional int32 average_latency = 12;
  if (this->average_latency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->average_latency(), target);
  }

  // optional int64 memory_usage = 13;
  if (this->memory_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->memory_usage(), target);
  }

  // optional string vm_status = 14;
  if (this->vm_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vm_status().data(), this->vm_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.appengine.v1.Instance.vm_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->vm_status(), target);
  }

  // optional bool vm_debug_enabled = 15;
  if (this->vm_debug_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->vm_debug_enabled(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.appengine.v1.Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.appengine.v1.Instance)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string app_engine_release = 3;
  if (this->app_engine_release().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_engine_release());
  }

  // optional .google.appengine.v1.Instance.Availability availability = 4;
  if (this->availability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->availability());
  }

  // optional string vm_name = 5;
  if (this->vm_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_name());
  }

  // optional string vm_zone_name = 6;
  if (this->vm_zone_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_zone_name());
  }

  // optional string vm_id = 7;
  if (this->vm_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_id());
  }

  // optional .google.protobuf.Timestamp start_time = 8;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_time_);
  }

  // optional int32 requests = 9;
  if (this->requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requests());
  }

  // optional int32 errors = 10;
  if (this->errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errors());
  }

  // optional float qps = 11;
  if (this->qps() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 average_latency = 12;
  if (this->average_latency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->average_latency());
  }

  // optional int64 memory_usage = 13;
  if (this->memory_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->memory_usage());
  }

  // optional string vm_status = 14;
  if (this->vm_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vm_status());
  }

  // optional bool vm_debug_enabled = 15;
  if (this->vm_debug_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Instance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.appengine.v1.Instance)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Instance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.appengine.v1.Instance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.appengine.v1.Instance)
    UnsafeMergeFrom(*source);
  }
}

void Instance::MergeFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.appengine.v1.Instance)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Instance::UnsafeMergeFrom(const Instance& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.app_engine_release().size() > 0) {

    app_engine_release_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_engine_release_);
  }
  if (from.availability() != 0) {
    set_availability(from.availability());
  }
  if (from.vm_name().size() > 0) {

    vm_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_name_);
  }
  if (from.vm_zone_name().size() > 0) {

    vm_zone_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_zone_name_);
  }
  if (from.vm_id().size() > 0) {

    vm_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_id_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.requests() != 0) {
    set_requests(from.requests());
  }
  if (from.errors() != 0) {
    set_errors(from.errors());
  }
  if (from.qps() != 0) {
    set_qps(from.qps());
  }
  if (from.average_latency() != 0) {
    set_average_latency(from.average_latency());
  }
  if (from.memory_usage() != 0) {
    set_memory_usage(from.memory_usage());
  }
  if (from.vm_status().size() > 0) {

    vm_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vm_status_);
  }
  if (from.vm_debug_enabled() != 0) {
    set_vm_debug_enabled(from.vm_debug_enabled());
  }
}

void Instance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.appengine.v1.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.appengine.v1.Instance)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Instance::IsInitialized() const {

  return true;
}

void Instance::Swap(Instance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instance::InternalSwap(Instance* other) {
  name_.Swap(&other->name_);
  id_.Swap(&other->id_);
  app_engine_release_.Swap(&other->app_engine_release_);
  std::swap(availability_, other->availability_);
  vm_name_.Swap(&other->vm_name_);
  vm_zone_name_.Swap(&other->vm_zone_name_);
  vm_id_.Swap(&other->vm_id_);
  std::swap(start_time_, other->start_time_);
  std::swap(requests_, other->requests_);
  std::swap(errors_, other->errors_);
  std::swap(qps_, other->qps_);
  std::swap(average_latency_, other->average_latency_);
  std::swap(memory_usage_, other->memory_usage_);
  vm_status_.Swap(&other->vm_status_);
  std::swap(vm_debug_enabled_, other->vm_debug_enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Instance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Instance_descriptor_;
  metadata.reflection = Instance_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Instance

// optional string name = 1;
void Instance::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.name)
}
void Instance::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Instance.name)
}
void Instance::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Instance.name)
}
::std::string* Instance::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.name)
}

// optional string id = 2;
void Instance::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::id() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.id)
}
void Instance::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Instance.id)
}
void Instance::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Instance.id)
}
::std::string* Instance::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_id() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.id)
}

// optional string app_engine_release = 3;
void Instance::clear_app_engine_release() {
  app_engine_release_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::app_engine_release() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.app_engine_release)
  return app_engine_release_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_app_engine_release(const ::std::string& value) {
  
  app_engine_release_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.app_engine_release)
}
void Instance::set_app_engine_release(const char* value) {
  
  app_engine_release_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Instance.app_engine_release)
}
void Instance::set_app_engine_release(const char* value, size_t size) {
  
  app_engine_release_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Instance.app_engine_release)
}
::std::string* Instance::mutable_app_engine_release() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.app_engine_release)
  return app_engine_release_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_app_engine_release() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.app_engine_release)
  
  return app_engine_release_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_app_engine_release(::std::string* app_engine_release) {
  if (app_engine_release != NULL) {
    
  } else {
    
  }
  app_engine_release_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_engine_release);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.app_engine_release)
}

// optional .google.appengine.v1.Instance.Availability availability = 4;
void Instance::clear_availability() {
  availability_ = 0;
}
::google::appengine::v1::Instance_Availability Instance::availability() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.availability)
  return static_cast< ::google::appengine::v1::Instance_Availability >(availability_);
}
void Instance::set_availability(::google::appengine::v1::Instance_Availability value) {
  
  availability_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.availability)
}

// optional string vm_name = 5;
void Instance::clear_vm_name() {
  vm_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::vm_name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.vm_name)
  return vm_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_vm_name(const ::std::string& value) {
  
  vm_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.vm_name)
}
void Instance::set_vm_name(const char* value) {
  
  vm_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Instance.vm_name)
}
void Instance::set_vm_name(const char* value, size_t size) {
  
  vm_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Instance.vm_name)
}
::std::string* Instance::mutable_vm_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.vm_name)
  return vm_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_vm_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.vm_name)
  
  return vm_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_vm_name(::std::string* vm_name) {
  if (vm_name != NULL) {
    
  } else {
    
  }
  vm_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vm_name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.vm_name)
}

// optional string vm_zone_name = 6;
void Instance::clear_vm_zone_name() {
  vm_zone_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::vm_zone_name() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.vm_zone_name)
  return vm_zone_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_vm_zone_name(const ::std::string& value) {
  
  vm_zone_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.vm_zone_name)
}
void Instance::set_vm_zone_name(const char* value) {
  
  vm_zone_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Instance.vm_zone_name)
}
void Instance::set_vm_zone_name(const char* value, size_t size) {
  
  vm_zone_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Instance.vm_zone_name)
}
::std::string* Instance::mutable_vm_zone_name() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.vm_zone_name)
  return vm_zone_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_vm_zone_name() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.vm_zone_name)
  
  return vm_zone_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_vm_zone_name(::std::string* vm_zone_name) {
  if (vm_zone_name != NULL) {
    
  } else {
    
  }
  vm_zone_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vm_zone_name);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.vm_zone_name)
}

// optional string vm_id = 7;
void Instance::clear_vm_id() {
  vm_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::vm_id() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.vm_id)
  return vm_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_vm_id(const ::std::string& value) {
  
  vm_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.vm_id)
}
void Instance::set_vm_id(const char* value) {
  
  vm_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Instance.vm_id)
}
void Instance::set_vm_id(const char* value, size_t size) {
  
  vm_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Instance.vm_id)
}
::std::string* Instance::mutable_vm_id() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.vm_id)
  return vm_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_vm_id() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.vm_id)
  
  return vm_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_vm_id(::std::string* vm_id) {
  if (vm_id != NULL) {
    
  } else {
    
  }
  vm_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vm_id);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.vm_id)
}

// optional .google.protobuf.Timestamp start_time = 8;
bool Instance::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
void Instance::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
const ::google::protobuf::Timestamp& Instance::start_time() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Instance::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.start_time)
  return start_time_;
}
::google::protobuf::Timestamp* Instance::release_start_time() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
void Instance::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.start_time)
}

// optional int32 requests = 9;
void Instance::clear_requests() {
  requests_ = 0;
}
::google::protobuf::int32 Instance::requests() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.requests)
  return requests_;
}
void Instance::set_requests(::google::protobuf::int32 value) {
  
  requests_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.requests)
}

// optional int32 errors = 10;
void Instance::clear_errors() {
  errors_ = 0;
}
::google::protobuf::int32 Instance::errors() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.errors)
  return errors_;
}
void Instance::set_errors(::google::protobuf::int32 value) {
  
  errors_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.errors)
}

// optional float qps = 11;
void Instance::clear_qps() {
  qps_ = 0;
}
float Instance::qps() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.qps)
  return qps_;
}
void Instance::set_qps(float value) {
  
  qps_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.qps)
}

// optional int32 average_latency = 12;
void Instance::clear_average_latency() {
  average_latency_ = 0;
}
::google::protobuf::int32 Instance::average_latency() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.average_latency)
  return average_latency_;
}
void Instance::set_average_latency(::google::protobuf::int32 value) {
  
  average_latency_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.average_latency)
}

// optional int64 memory_usage = 13;
void Instance::clear_memory_usage() {
  memory_usage_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Instance::memory_usage() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.memory_usage)
  return memory_usage_;
}
void Instance::set_memory_usage(::google::protobuf::int64 value) {
  
  memory_usage_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.memory_usage)
}

// optional string vm_status = 14;
void Instance::clear_vm_status() {
  vm_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Instance::vm_status() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.vm_status)
  return vm_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_vm_status(const ::std::string& value) {
  
  vm_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.vm_status)
}
void Instance::set_vm_status(const char* value) {
  
  vm_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.appengine.v1.Instance.vm_status)
}
void Instance::set_vm_status(const char* value, size_t size) {
  
  vm_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.appengine.v1.Instance.vm_status)
}
::std::string* Instance::mutable_vm_status() {
  
  // @@protoc_insertion_point(field_mutable:google.appengine.v1.Instance.vm_status)
  return vm_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instance::release_vm_status() {
  // @@protoc_insertion_point(field_release:google.appengine.v1.Instance.vm_status)
  
  return vm_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instance::set_allocated_vm_status(::std::string* vm_status) {
  if (vm_status != NULL) {
    
  } else {
    
  }
  vm_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vm_status);
  // @@protoc_insertion_point(field_set_allocated:google.appengine.v1.Instance.vm_status)
}

// optional bool vm_debug_enabled = 15;
void Instance::clear_vm_debug_enabled() {
  vm_debug_enabled_ = false;
}
bool Instance::vm_debug_enabled() const {
  // @@protoc_insertion_point(field_get:google.appengine.v1.Instance.vm_debug_enabled)
  return vm_debug_enabled_;
}
void Instance::set_vm_debug_enabled(bool value) {
  
  vm_debug_enabled_ = value;
  // @@protoc_insertion_point(field_set:google.appengine.v1.Instance.vm_debug_enabled)
}

inline const Instance* Instance::internal_default_instance() {
  return &Instance_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace appengine
}  // namespace google

// @@protoc_insertion_point(global_scope)
