// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/resources.proto

#ifndef PROTOBUF_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/config_change.pb.h"
#include "google/api/service.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
void protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

class ChangeReport;
class ConfigFile;
class ConfigRef;
class ConfigSource;
class Diagnostic;
class ManagedService;
class OperationMetadata;
class OperationMetadata_Step;
class Rollout;
class Rollout_DeleteServiceStrategy;
class Rollout_TrafficPercentStrategy;

enum OperationMetadata_Status {
  OperationMetadata_Status_STATUS_UNSPECIFIED = 0,
  OperationMetadata_Status_DONE = 1,
  OperationMetadata_Status_NOT_STARTED = 2,
  OperationMetadata_Status_IN_PROGRESS = 3,
  OperationMetadata_Status_FAILED = 4,
  OperationMetadata_Status_CANCELLED = 5,
  OperationMetadata_Status_OperationMetadata_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationMetadata_Status_OperationMetadata_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationMetadata_Status_IsValid(int value);
const OperationMetadata_Status OperationMetadata_Status_Status_MIN = OperationMetadata_Status_STATUS_UNSPECIFIED;
const OperationMetadata_Status OperationMetadata_Status_Status_MAX = OperationMetadata_Status_CANCELLED;
const int OperationMetadata_Status_Status_ARRAYSIZE = OperationMetadata_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationMetadata_Status_descriptor();
inline const ::std::string& OperationMetadata_Status_Name(OperationMetadata_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationMetadata_Status_descriptor(), value);
}
inline bool OperationMetadata_Status_Parse(
    const ::std::string& name, OperationMetadata_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationMetadata_Status>(
    OperationMetadata_Status_descriptor(), name, value);
}
enum Diagnostic_Kind {
  Diagnostic_Kind_WARNING = 0,
  Diagnostic_Kind_ERROR = 1,
  Diagnostic_Kind_Diagnostic_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Diagnostic_Kind_Diagnostic_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Diagnostic_Kind_IsValid(int value);
const Diagnostic_Kind Diagnostic_Kind_Kind_MIN = Diagnostic_Kind_WARNING;
const Diagnostic_Kind Diagnostic_Kind_Kind_MAX = Diagnostic_Kind_ERROR;
const int Diagnostic_Kind_Kind_ARRAYSIZE = Diagnostic_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* Diagnostic_Kind_descriptor();
inline const ::std::string& Diagnostic_Kind_Name(Diagnostic_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    Diagnostic_Kind_descriptor(), value);
}
inline bool Diagnostic_Kind_Parse(
    const ::std::string& name, Diagnostic_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Diagnostic_Kind>(
    Diagnostic_Kind_descriptor(), name, value);
}
enum ConfigFile_FileType {
  ConfigFile_FileType_FILE_TYPE_UNSPECIFIED = 0,
  ConfigFile_FileType_SERVICE_CONFIG_YAML = 1,
  ConfigFile_FileType_OPEN_API_JSON = 2,
  ConfigFile_FileType_OPEN_API_YAML = 3,
  ConfigFile_FileType_FILE_DESCRIPTOR_SET_PROTO = 4,
  ConfigFile_FileType_ConfigFile_FileType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfigFile_FileType_ConfigFile_FileType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfigFile_FileType_IsValid(int value);
const ConfigFile_FileType ConfigFile_FileType_FileType_MIN = ConfigFile_FileType_FILE_TYPE_UNSPECIFIED;
const ConfigFile_FileType ConfigFile_FileType_FileType_MAX = ConfigFile_FileType_FILE_DESCRIPTOR_SET_PROTO;
const int ConfigFile_FileType_FileType_ARRAYSIZE = ConfigFile_FileType_FileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfigFile_FileType_descriptor();
inline const ::std::string& ConfigFile_FileType_Name(ConfigFile_FileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfigFile_FileType_descriptor(), value);
}
inline bool ConfigFile_FileType_Parse(
    const ::std::string& name, ConfigFile_FileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfigFile_FileType>(
    ConfigFile_FileType_descriptor(), name, value);
}
enum Rollout_RolloutStatus {
  Rollout_RolloutStatus_ROLLOUT_STATUS_UNSPECIFIED = 0,
  Rollout_RolloutStatus_IN_PROGRESS = 1,
  Rollout_RolloutStatus_SUCCESS = 2,
  Rollout_RolloutStatus_CANCELLED = 3,
  Rollout_RolloutStatus_FAILED = 4,
  Rollout_RolloutStatus_PENDING = 5,
  Rollout_RolloutStatus_Rollout_RolloutStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Rollout_RolloutStatus_Rollout_RolloutStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Rollout_RolloutStatus_IsValid(int value);
const Rollout_RolloutStatus Rollout_RolloutStatus_RolloutStatus_MIN = Rollout_RolloutStatus_ROLLOUT_STATUS_UNSPECIFIED;
const Rollout_RolloutStatus Rollout_RolloutStatus_RolloutStatus_MAX = Rollout_RolloutStatus_PENDING;
const int Rollout_RolloutStatus_RolloutStatus_ARRAYSIZE = Rollout_RolloutStatus_RolloutStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* Rollout_RolloutStatus_descriptor();
inline const ::std::string& Rollout_RolloutStatus_Name(Rollout_RolloutStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    Rollout_RolloutStatus_descriptor(), value);
}
inline bool Rollout_RolloutStatus_Parse(
    const ::std::string& name, Rollout_RolloutStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Rollout_RolloutStatus>(
    Rollout_RolloutStatus_descriptor(), name, value);
}
// ===================================================================

class ManagedService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ManagedService) */ {
 public:
  ManagedService();
  virtual ~ManagedService();

  ManagedService(const ManagedService& from);

  inline ManagedService& operator=(const ManagedService& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManagedService& default_instance();

  static const ManagedService* internal_default_instance();

  void Swap(ManagedService* other);

  // implements Message ----------------------------------------------

  inline ManagedService* New() const { return New(NULL); }

  ManagedService* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManagedService& from);
  void MergeFrom(const ManagedService& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ManagedService* other);
  void UnsafeMergeFrom(const ManagedService& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 2;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 2;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // optional string producer_project_id = 3;
  void clear_producer_project_id();
  static const int kProducerProjectIdFieldNumber = 3;
  const ::std::string& producer_project_id() const;
  void set_producer_project_id(const ::std::string& value);
  void set_producer_project_id(const char* value);
  void set_producer_project_id(const char* value, size_t size);
  ::std::string* mutable_producer_project_id();
  ::std::string* release_producer_project_id();
  void set_allocated_producer_project_id(::std::string* producer_project_id);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ManagedService)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr producer_project_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ManagedService> ManagedService_default_instance_;

// -------------------------------------------------------------------

class OperationMetadata_Step : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.OperationMetadata.Step) */ {
 public:
  OperationMetadata_Step();
  virtual ~OperationMetadata_Step();

  OperationMetadata_Step(const OperationMetadata_Step& from);

  inline OperationMetadata_Step& operator=(const OperationMetadata_Step& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationMetadata_Step& default_instance();

  static const OperationMetadata_Step* internal_default_instance();

  void Swap(OperationMetadata_Step* other);

  // implements Message ----------------------------------------------

  inline OperationMetadata_Step* New() const { return New(NULL); }

  OperationMetadata_Step* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationMetadata_Step& from);
  void MergeFrom(const OperationMetadata_Step& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperationMetadata_Step* other);
  void UnsafeMergeFrom(const OperationMetadata_Step& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::api::servicemanagement::v1::OperationMetadata_Status status() const;
  void set_status(::google::api::servicemanagement::v1::OperationMetadata_Status value);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.OperationMetadata.Step)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperationMetadata_Step> OperationMetadata_Step_default_instance_;

// -------------------------------------------------------------------

class OperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.OperationMetadata) */ {
 public:
  OperationMetadata();
  virtual ~OperationMetadata();

  OperationMetadata(const OperationMetadata& from);

  inline OperationMetadata& operator=(const OperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationMetadata& default_instance();

  static const OperationMetadata* internal_default_instance();

  void Swap(OperationMetadata* other);

  // implements Message ----------------------------------------------

  inline OperationMetadata* New() const { return New(NULL); }

  OperationMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationMetadata& from);
  void MergeFrom(const OperationMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperationMetadata* other);
  void UnsafeMergeFrom(const OperationMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef OperationMetadata_Step Step;

  typedef OperationMetadata_Status Status;
  static const Status STATUS_UNSPECIFIED =
    OperationMetadata_Status_STATUS_UNSPECIFIED;
  static const Status DONE =
    OperationMetadata_Status_DONE;
  static const Status NOT_STARTED =
    OperationMetadata_Status_NOT_STARTED;
  static const Status IN_PROGRESS =
    OperationMetadata_Status_IN_PROGRESS;
  static const Status FAILED =
    OperationMetadata_Status_FAILED;
  static const Status CANCELLED =
    OperationMetadata_Status_CANCELLED;
  static inline bool Status_IsValid(int value) {
    return OperationMetadata_Status_IsValid(value);
  }
  static const Status Status_MIN =
    OperationMetadata_Status_Status_MIN;
  static const Status Status_MAX =
    OperationMetadata_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    OperationMetadata_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return OperationMetadata_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return OperationMetadata_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return OperationMetadata_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string resource_names = 1;
  int resource_names_size() const;
  void clear_resource_names();
  static const int kResourceNamesFieldNumber = 1;
  const ::std::string& resource_names(int index) const;
  ::std::string* mutable_resource_names(int index);
  void set_resource_names(int index, const ::std::string& value);
  void set_resource_names(int index, const char* value);
  void set_resource_names(int index, const char* value, size_t size);
  ::std::string* add_resource_names();
  void add_resource_names(const ::std::string& value);
  void add_resource_names(const char* value);
  void add_resource_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& resource_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resource_names();

  // repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
  int steps_size() const;
  void clear_steps();
  static const int kStepsFieldNumber = 2;
  const ::google::api::servicemanagement::v1::OperationMetadata_Step& steps(int index) const;
  ::google::api::servicemanagement::v1::OperationMetadata_Step* mutable_steps(int index);
  ::google::api::servicemanagement::v1::OperationMetadata_Step* add_steps();
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::OperationMetadata_Step >*
      mutable_steps();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::OperationMetadata_Step >&
      steps() const;

  // optional int32 progress_percentage = 3;
  void clear_progress_percentage();
  static const int kProgressPercentageFieldNumber = 3;
  ::google::protobuf::int32 progress_percentage() const;
  void set_progress_percentage(::google::protobuf::int32 value);

  // optional .google.protobuf.Timestamp start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.OperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resource_names_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::OperationMetadata_Step > steps_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::int32 progress_percentage_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperationMetadata> OperationMetadata_default_instance_;

// -------------------------------------------------------------------

class Diagnostic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.Diagnostic) */ {
 public:
  Diagnostic();
  virtual ~Diagnostic();

  Diagnostic(const Diagnostic& from);

  inline Diagnostic& operator=(const Diagnostic& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Diagnostic& default_instance();

  static const Diagnostic* internal_default_instance();

  void Swap(Diagnostic* other);

  // implements Message ----------------------------------------------

  inline Diagnostic* New() const { return New(NULL); }

  Diagnostic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Diagnostic& from);
  void MergeFrom(const Diagnostic& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Diagnostic* other);
  void UnsafeMergeFrom(const Diagnostic& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Diagnostic_Kind Kind;
  static const Kind WARNING =
    Diagnostic_Kind_WARNING;
  static const Kind ERROR =
    Diagnostic_Kind_ERROR;
  static inline bool Kind_IsValid(int value) {
    return Diagnostic_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    Diagnostic_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    Diagnostic_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    Diagnostic_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return Diagnostic_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return Diagnostic_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return Diagnostic_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string location = 1;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // optional .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::google::api::servicemanagement::v1::Diagnostic_Kind kind() const;
  void set_kind(::google::api::servicemanagement::v1::Diagnostic_Kind value);

  // optional string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Diagnostic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int kind_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Diagnostic> Diagnostic_default_instance_;

// -------------------------------------------------------------------

class ConfigSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ConfigSource) */ {
 public:
  ConfigSource();
  virtual ~ConfigSource();

  ConfigSource(const ConfigSource& from);

  inline ConfigSource& operator=(const ConfigSource& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigSource& default_instance();

  static const ConfigSource* internal_default_instance();

  void Swap(ConfigSource* other);

  // implements Message ----------------------------------------------

  inline ConfigSource* New() const { return New(NULL); }

  ConfigSource* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigSource& from);
  void MergeFrom(const ConfigSource& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigSource* other);
  void UnsafeMergeFrom(const ConfigSource& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 2;
  const ::google::api::servicemanagement::v1::ConfigFile& files(int index) const;
  ::google::api::servicemanagement::v1::ConfigFile* mutable_files(int index);
  ::google::api::servicemanagement::v1::ConfigFile* add_files();
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ConfigFile >*
      mutable_files();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ConfigFile >&
      files() const;

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ConfigSource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ConfigFile > files_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfigSource> ConfigSource_default_instance_;

// -------------------------------------------------------------------

class ConfigFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ConfigFile) */ {
 public:
  ConfigFile();
  virtual ~ConfigFile();

  ConfigFile(const ConfigFile& from);

  inline ConfigFile& operator=(const ConfigFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFile& default_instance();

  static const ConfigFile* internal_default_instance();

  void Swap(ConfigFile* other);

  // implements Message ----------------------------------------------

  inline ConfigFile* New() const { return New(NULL); }

  ConfigFile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigFile& from);
  void MergeFrom(const ConfigFile& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigFile* other);
  void UnsafeMergeFrom(const ConfigFile& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ConfigFile_FileType FileType;
  static const FileType FILE_TYPE_UNSPECIFIED =
    ConfigFile_FileType_FILE_TYPE_UNSPECIFIED;
  static const FileType SERVICE_CONFIG_YAML =
    ConfigFile_FileType_SERVICE_CONFIG_YAML;
  static const FileType OPEN_API_JSON =
    ConfigFile_FileType_OPEN_API_JSON;
  static const FileType OPEN_API_YAML =
    ConfigFile_FileType_OPEN_API_YAML;
  static const FileType FILE_DESCRIPTOR_SET_PROTO =
    ConfigFile_FileType_FILE_DESCRIPTOR_SET_PROTO;
  static inline bool FileType_IsValid(int value) {
    return ConfigFile_FileType_IsValid(value);
  }
  static const FileType FileType_MIN =
    ConfigFile_FileType_FileType_MIN;
  static const FileType FileType_MAX =
    ConfigFile_FileType_FileType_MAX;
  static const int FileType_ARRAYSIZE =
    ConfigFile_FileType_FileType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FileType_descriptor() {
    return ConfigFile_FileType_descriptor();
  }
  static inline const ::std::string& FileType_Name(FileType value) {
    return ConfigFile_FileType_Name(value);
  }
  static inline bool FileType_Parse(const ::std::string& name,
      FileType* value) {
    return ConfigFile_FileType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string file_path = 1;
  void clear_file_path();
  static const int kFilePathFieldNumber = 1;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // optional bytes file_contents = 3;
  void clear_file_contents();
  static const int kFileContentsFieldNumber = 3;
  const ::std::string& file_contents() const;
  void set_file_contents(const ::std::string& value);
  void set_file_contents(const char* value);
  void set_file_contents(const void* value, size_t size);
  ::std::string* mutable_file_contents();
  ::std::string* release_file_contents();
  void set_allocated_file_contents(::std::string* file_contents);

  // optional .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
  void clear_file_type();
  static const int kFileTypeFieldNumber = 4;
  ::google::api::servicemanagement::v1::ConfigFile_FileType file_type() const;
  void set_file_type(::google::api::servicemanagement::v1::ConfigFile_FileType value);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ConfigFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  ::google::protobuf::internal::ArenaStringPtr file_contents_;
  int file_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfigFile> ConfigFile_default_instance_;

// -------------------------------------------------------------------

class ConfigRef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ConfigRef) */ {
 public:
  ConfigRef();
  virtual ~ConfigRef();

  ConfigRef(const ConfigRef& from);

  inline ConfigRef& operator=(const ConfigRef& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigRef& default_instance();

  static const ConfigRef* internal_default_instance();

  void Swap(ConfigRef* other);

  // implements Message ----------------------------------------------

  inline ConfigRef* New() const { return New(NULL); }

  ConfigRef* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigRef& from);
  void MergeFrom(const ConfigRef& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigRef* other);
  void UnsafeMergeFrom(const ConfigRef& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ConfigRef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfigRef> ConfigRef_default_instance_;

// -------------------------------------------------------------------

class ChangeReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.ChangeReport) */ {
 public:
  ChangeReport();
  virtual ~ChangeReport();

  ChangeReport(const ChangeReport& from);

  inline ChangeReport& operator=(const ChangeReport& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeReport& default_instance();

  static const ChangeReport* internal_default_instance();

  void Swap(ChangeReport* other);

  // implements Message ----------------------------------------------

  inline ChangeReport* New() const { return New(NULL); }

  ChangeReport* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeReport& from);
  void MergeFrom(const ChangeReport& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChangeReport* other);
  void UnsafeMergeFrom(const ChangeReport& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.ConfigChange config_changes = 1;
  int config_changes_size() const;
  void clear_config_changes();
  static const int kConfigChangesFieldNumber = 1;
  const ::google::api::ConfigChange& config_changes(int index) const;
  ::google::api::ConfigChange* mutable_config_changes(int index);
  ::google::api::ConfigChange* add_config_changes();
  ::google::protobuf::RepeatedPtrField< ::google::api::ConfigChange >*
      mutable_config_changes();
  const ::google::protobuf::RepeatedPtrField< ::google::api::ConfigChange >&
      config_changes() const;

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.ChangeReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::ConfigChange > config_changes_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ChangeReport> ChangeReport_default_instance_;

// -------------------------------------------------------------------

class Rollout_TrafficPercentStrategy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) */ {
 public:
  Rollout_TrafficPercentStrategy();
  virtual ~Rollout_TrafficPercentStrategy();

  Rollout_TrafficPercentStrategy(const Rollout_TrafficPercentStrategy& from);

  inline Rollout_TrafficPercentStrategy& operator=(const Rollout_TrafficPercentStrategy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rollout_TrafficPercentStrategy& default_instance();

  static const Rollout_TrafficPercentStrategy* internal_default_instance();

  void Swap(Rollout_TrafficPercentStrategy* other);

  // implements Message ----------------------------------------------

  inline Rollout_TrafficPercentStrategy* New() const { return New(NULL); }

  Rollout_TrafficPercentStrategy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rollout_TrafficPercentStrategy& from);
  void MergeFrom(const Rollout_TrafficPercentStrategy& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rollout_TrafficPercentStrategy* other);
  void UnsafeMergeFrom(const Rollout_TrafficPercentStrategy& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, double> percentages = 1;
  int percentages_size() const;
  void clear_percentages();
  static const int kPercentagesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, double >&
      percentages() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_percentages();

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 >
      Rollout_TrafficPercentStrategy_PercentagesEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > percentages_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Rollout_TrafficPercentStrategy> Rollout_TrafficPercentStrategy_default_instance_;

// -------------------------------------------------------------------

class Rollout_DeleteServiceStrategy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) */ {
 public:
  Rollout_DeleteServiceStrategy();
  virtual ~Rollout_DeleteServiceStrategy();

  Rollout_DeleteServiceStrategy(const Rollout_DeleteServiceStrategy& from);

  inline Rollout_DeleteServiceStrategy& operator=(const Rollout_DeleteServiceStrategy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rollout_DeleteServiceStrategy& default_instance();

  static const Rollout_DeleteServiceStrategy* internal_default_instance();

  void Swap(Rollout_DeleteServiceStrategy* other);

  // implements Message ----------------------------------------------

  inline Rollout_DeleteServiceStrategy* New() const { return New(NULL); }

  Rollout_DeleteServiceStrategy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rollout_DeleteServiceStrategy& from);
  void MergeFrom(const Rollout_DeleteServiceStrategy& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rollout_DeleteServiceStrategy* other);
  void UnsafeMergeFrom(const Rollout_DeleteServiceStrategy& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Rollout_DeleteServiceStrategy> Rollout_DeleteServiceStrategy_default_instance_;

// -------------------------------------------------------------------

class Rollout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicemanagement.v1.Rollout) */ {
 public:
  Rollout();
  virtual ~Rollout();

  Rollout(const Rollout& from);

  inline Rollout& operator=(const Rollout& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rollout& default_instance();

  enum StrategyCase {
    kTrafficPercentStrategy = 5,
    kDeleteServiceStrategy = 200,
    STRATEGY_NOT_SET = 0,
  };

  static const Rollout* internal_default_instance();

  void Swap(Rollout* other);

  // implements Message ----------------------------------------------

  inline Rollout* New() const { return New(NULL); }

  Rollout* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rollout& from);
  void MergeFrom(const Rollout& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rollout* other);
  void UnsafeMergeFrom(const Rollout& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Rollout_TrafficPercentStrategy TrafficPercentStrategy;
  typedef Rollout_DeleteServiceStrategy DeleteServiceStrategy;

  typedef Rollout_RolloutStatus RolloutStatus;
  static const RolloutStatus ROLLOUT_STATUS_UNSPECIFIED =
    Rollout_RolloutStatus_ROLLOUT_STATUS_UNSPECIFIED;
  static const RolloutStatus IN_PROGRESS =
    Rollout_RolloutStatus_IN_PROGRESS;
  static const RolloutStatus SUCCESS =
    Rollout_RolloutStatus_SUCCESS;
  static const RolloutStatus CANCELLED =
    Rollout_RolloutStatus_CANCELLED;
  static const RolloutStatus FAILED =
    Rollout_RolloutStatus_FAILED;
  static const RolloutStatus PENDING =
    Rollout_RolloutStatus_PENDING;
  static inline bool RolloutStatus_IsValid(int value) {
    return Rollout_RolloutStatus_IsValid(value);
  }
  static const RolloutStatus RolloutStatus_MIN =
    Rollout_RolloutStatus_RolloutStatus_MIN;
  static const RolloutStatus RolloutStatus_MAX =
    Rollout_RolloutStatus_RolloutStatus_MAX;
  static const int RolloutStatus_ARRAYSIZE =
    Rollout_RolloutStatus_RolloutStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RolloutStatus_descriptor() {
    return Rollout_RolloutStatus_descriptor();
  }
  static inline const ::std::string& RolloutStatus_Name(RolloutStatus value) {
    return Rollout_RolloutStatus_Name(value);
  }
  static inline bool RolloutStatus_Parse(const ::std::string& name,
      RolloutStatus* value) {
    return Rollout_RolloutStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string rollout_id = 1;
  void clear_rollout_id();
  static const int kRolloutIdFieldNumber = 1;
  const ::std::string& rollout_id() const;
  void set_rollout_id(const ::std::string& value);
  void set_rollout_id(const char* value);
  void set_rollout_id(const char* value, size_t size);
  ::std::string* mutable_rollout_id();
  ::std::string* release_rollout_id();
  void set_allocated_rollout_id(::std::string* rollout_id);

  // optional .google.protobuf.Timestamp create_time = 2;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* mutable_create_time();
  ::google::protobuf::Timestamp* release_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // optional string created_by = 3;
  void clear_created_by();
  static const int kCreatedByFieldNumber = 3;
  const ::std::string& created_by() const;
  void set_created_by(const ::std::string& value);
  void set_created_by(const char* value);
  void set_created_by(const char* value, size_t size);
  ::std::string* mutable_created_by();
  ::std::string* release_created_by();
  void set_allocated_created_by(::std::string* created_by);

  // optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::api::servicemanagement::v1::Rollout_RolloutStatus status() const;
  void set_status(::google::api::servicemanagement::v1::Rollout_RolloutStatus value);

  // optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
  bool has_traffic_percent_strategy() const;
  void clear_traffic_percent_strategy();
  static const int kTrafficPercentStrategyFieldNumber = 5;
  const ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy& traffic_percent_strategy() const;
  ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* mutable_traffic_percent_strategy();
  ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* release_traffic_percent_strategy();
  void set_allocated_traffic_percent_strategy(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* traffic_percent_strategy);

  // optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
  bool has_delete_service_strategy() const;
  void clear_delete_service_strategy();
  static const int kDeleteServiceStrategyFieldNumber = 200;
  const ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy& delete_service_strategy() const;
  ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* mutable_delete_service_strategy();
  ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* release_delete_service_strategy();
  void set_allocated_delete_service_strategy(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* delete_service_strategy);

  // optional string service_name = 8;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 8;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  StrategyCase strategy_case() const;
  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout)
 private:
  inline void set_has_traffic_percent_strategy();
  inline void set_has_delete_service_strategy();

  inline bool has_strategy() const;
  void clear_strategy();
  inline void clear_has_strategy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rollout_id_;
  ::google::protobuf::internal::ArenaStringPtr created_by_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::Timestamp* create_time_;
  int status_;
  union StrategyUnion {
    StrategyUnion() {}
    ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* traffic_percent_strategy_;
    ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* delete_service_strategy_;
  } strategy_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Rollout> Rollout_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ManagedService

// optional string service_name = 2;
inline void ManagedService::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ManagedService::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ManagedService.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagedService::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ManagedService.service_name)
}
inline void ManagedService::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ManagedService.service_name)
}
inline void ManagedService::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ManagedService.service_name)
}
inline ::std::string* ManagedService::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ManagedService.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManagedService::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ManagedService.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagedService::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ManagedService.service_name)
}

// optional string producer_project_id = 3;
inline void ManagedService::clear_producer_project_id() {
  producer_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ManagedService::producer_project_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ManagedService.producer_project_id)
  return producer_project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagedService::set_producer_project_id(const ::std::string& value) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ManagedService.producer_project_id)
}
inline void ManagedService::set_producer_project_id(const char* value) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ManagedService.producer_project_id)
}
inline void ManagedService::set_producer_project_id(const char* value, size_t size) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ManagedService.producer_project_id)
}
inline ::std::string* ManagedService::mutable_producer_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ManagedService.producer_project_id)
  return producer_project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManagedService::release_producer_project_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ManagedService.producer_project_id)
  
  return producer_project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagedService::set_allocated_producer_project_id(::std::string* producer_project_id) {
  if (producer_project_id != NULL) {
    
  } else {
    
  }
  producer_project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_project_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ManagedService.producer_project_id)
}

inline const ManagedService* ManagedService::internal_default_instance() {
  return &ManagedService_default_instance_.get();
}
// -------------------------------------------------------------------

// OperationMetadata_Step

// optional string description = 2;
inline void OperationMetadata_Step::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OperationMetadata_Step::description() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.OperationMetadata.Step.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadata_Step::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.OperationMetadata.Step.description)
}
inline void OperationMetadata_Step::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.OperationMetadata.Step.description)
}
inline void OperationMetadata_Step::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.OperationMetadata.Step.description)
}
inline ::std::string* OperationMetadata_Step::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.OperationMetadata.Step.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperationMetadata_Step::release_description() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.OperationMetadata.Step.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperationMetadata_Step::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.OperationMetadata.Step.description)
}

// optional .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
inline void OperationMetadata_Step::clear_status() {
  status_ = 0;
}
inline ::google::api::servicemanagement::v1::OperationMetadata_Status OperationMetadata_Step::status() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.OperationMetadata.Step.status)
  return static_cast< ::google::api::servicemanagement::v1::OperationMetadata_Status >(status_);
}
inline void OperationMetadata_Step::set_status(::google::api::servicemanagement::v1::OperationMetadata_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.OperationMetadata.Step.status)
}

inline const OperationMetadata_Step* OperationMetadata_Step::internal_default_instance() {
  return &OperationMetadata_Step_default_instance_.get();
}
// -------------------------------------------------------------------

// OperationMetadata

// repeated string resource_names = 1;
inline int OperationMetadata::resource_names_size() const {
  return resource_names_.size();
}
inline void OperationMetadata::clear_resource_names() {
  resource_names_.Clear();
}
inline const ::std::string& OperationMetadata::resource_names(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.OperationMetadata.resource_names)
  return resource_names_.Get(index);
}
inline ::std::string* OperationMetadata::mutable_resource_names(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.OperationMetadata.resource_names)
  return resource_names_.Mutable(index);
}
inline void OperationMetadata::set_resource_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.OperationMetadata.resource_names)
  resource_names_.Mutable(index)->assign(value);
}
inline void OperationMetadata::set_resource_names(int index, const char* value) {
  resource_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.OperationMetadata.resource_names)
}
inline void OperationMetadata::set_resource_names(int index, const char* value, size_t size) {
  resource_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.OperationMetadata.resource_names)
}
inline ::std::string* OperationMetadata::add_resource_names() {
  // @@protoc_insertion_point(field_add_mutable:google.api.servicemanagement.v1.OperationMetadata.resource_names)
  return resource_names_.Add();
}
inline void OperationMetadata::add_resource_names(const ::std::string& value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.OperationMetadata.resource_names)
}
inline void OperationMetadata::add_resource_names(const char* value) {
  resource_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.servicemanagement.v1.OperationMetadata.resource_names)
}
inline void OperationMetadata::add_resource_names(const char* value, size_t size) {
  resource_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.servicemanagement.v1.OperationMetadata.resource_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OperationMetadata::resource_names() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.OperationMetadata.resource_names)
  return resource_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OperationMetadata::mutable_resource_names() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.OperationMetadata.resource_names)
  return &resource_names_;
}

// repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
inline int OperationMetadata::steps_size() const {
  return steps_.size();
}
inline void OperationMetadata::clear_steps() {
  steps_.Clear();
}
inline const ::google::api::servicemanagement::v1::OperationMetadata_Step& OperationMetadata::steps(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.OperationMetadata.steps)
  return steps_.Get(index);
}
inline ::google::api::servicemanagement::v1::OperationMetadata_Step* OperationMetadata::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.OperationMetadata.steps)
  return steps_.Mutable(index);
}
inline ::google::api::servicemanagement::v1::OperationMetadata_Step* OperationMetadata::add_steps() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.OperationMetadata.steps)
  return steps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::OperationMetadata_Step >*
OperationMetadata::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.OperationMetadata.steps)
  return &steps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::OperationMetadata_Step >&
OperationMetadata::steps() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.OperationMetadata.steps)
  return steps_;
}

// optional int32 progress_percentage = 3;
inline void OperationMetadata::clear_progress_percentage() {
  progress_percentage_ = 0;
}
inline ::google::protobuf::int32 OperationMetadata::progress_percentage() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.OperationMetadata.progress_percentage)
  return progress_percentage_;
}
inline void OperationMetadata::set_progress_percentage(::google::protobuf::int32 value) {
  
  progress_percentage_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.OperationMetadata.progress_percentage)
}

// optional .google.protobuf.Timestamp start_time = 4;
inline bool OperationMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void OperationMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.OperationMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.OperationMetadata.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* OperationMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.OperationMetadata.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline void OperationMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.OperationMetadata.start_time)
}

inline const OperationMetadata* OperationMetadata::internal_default_instance() {
  return &OperationMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// Diagnostic

// optional string location = 1;
inline void Diagnostic::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Diagnostic::location() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Diagnostic.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Diagnostic::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.Diagnostic.location)
}
inline void Diagnostic::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.Diagnostic.location)
}
inline void Diagnostic::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.Diagnostic.location)
}
inline ::std::string* Diagnostic::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Diagnostic.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Diagnostic::release_location() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Diagnostic.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Diagnostic::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Diagnostic.location)
}

// optional .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
inline void Diagnostic::clear_kind() {
  kind_ = 0;
}
inline ::google::api::servicemanagement::v1::Diagnostic_Kind Diagnostic::kind() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Diagnostic.kind)
  return static_cast< ::google::api::servicemanagement::v1::Diagnostic_Kind >(kind_);
}
inline void Diagnostic::set_kind(::google::api::servicemanagement::v1::Diagnostic_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.Diagnostic.kind)
}

// optional string message = 3;
inline void Diagnostic::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Diagnostic::message() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Diagnostic.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Diagnostic::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.Diagnostic.message)
}
inline void Diagnostic::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.Diagnostic.message)
}
inline void Diagnostic::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.Diagnostic.message)
}
inline ::std::string* Diagnostic::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Diagnostic.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Diagnostic::release_message() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Diagnostic.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Diagnostic::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Diagnostic.message)
}

inline const Diagnostic* Diagnostic::internal_default_instance() {
  return &Diagnostic_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfigSource

// optional string id = 5;
inline void ConfigSource::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigSource::id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ConfigSource.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSource::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ConfigSource.id)
}
inline void ConfigSource::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ConfigSource.id)
}
inline void ConfigSource::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ConfigSource.id)
}
inline ::std::string* ConfigSource::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ConfigSource.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigSource::release_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ConfigSource.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSource::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ConfigSource.id)
}

// repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
inline int ConfigSource::files_size() const {
  return files_.size();
}
inline void ConfigSource::clear_files() {
  files_.Clear();
}
inline const ::google::api::servicemanagement::v1::ConfigFile& ConfigSource::files(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ConfigSource.files)
  return files_.Get(index);
}
inline ::google::api::servicemanagement::v1::ConfigFile* ConfigSource::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ConfigSource.files)
  return files_.Mutable(index);
}
inline ::google::api::servicemanagement::v1::ConfigFile* ConfigSource::add_files() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.ConfigSource.files)
  return files_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ConfigFile >*
ConfigSource::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.ConfigSource.files)
  return &files_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicemanagement::v1::ConfigFile >&
ConfigSource::files() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.ConfigSource.files)
  return files_;
}

inline const ConfigSource* ConfigSource::internal_default_instance() {
  return &ConfigSource_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfigFile

// optional string file_path = 1;
inline void ConfigFile::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::file_path() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ConfigFile.file_path)
  return file_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ConfigFile.file_path)
}
inline void ConfigFile::set_file_path(const char* value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ConfigFile.file_path)
}
inline void ConfigFile::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ConfigFile.file_path)
}
inline ::std::string* ConfigFile::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ConfigFile.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_file_path() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ConfigFile.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ConfigFile.file_path)
}

// optional bytes file_contents = 3;
inline void ConfigFile::clear_file_contents() {
  file_contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::file_contents() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ConfigFile.file_contents)
  return file_contents_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_file_contents(const ::std::string& value) {
  
  file_contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ConfigFile.file_contents)
}
inline void ConfigFile::set_file_contents(const char* value) {
  
  file_contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ConfigFile.file_contents)
}
inline void ConfigFile::set_file_contents(const void* value, size_t size) {
  
  file_contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ConfigFile.file_contents)
}
inline ::std::string* ConfigFile::mutable_file_contents() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ConfigFile.file_contents)
  return file_contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_file_contents() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ConfigFile.file_contents)
  
  return file_contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_file_contents(::std::string* file_contents) {
  if (file_contents != NULL) {
    
  } else {
    
  }
  file_contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_contents);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ConfigFile.file_contents)
}

// optional .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
inline void ConfigFile::clear_file_type() {
  file_type_ = 0;
}
inline ::google::api::servicemanagement::v1::ConfigFile_FileType ConfigFile::file_type() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ConfigFile.file_type)
  return static_cast< ::google::api::servicemanagement::v1::ConfigFile_FileType >(file_type_);
}
inline void ConfigFile::set_file_type(::google::api::servicemanagement::v1::ConfigFile_FileType value) {
  
  file_type_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ConfigFile.file_type)
}

inline const ConfigFile* ConfigFile::internal_default_instance() {
  return &ConfigFile_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfigRef

// optional string name = 1;
inline void ConfigRef::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigRef::name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ConfigRef.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigRef::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.ConfigRef.name)
}
inline void ConfigRef::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.ConfigRef.name)
}
inline void ConfigRef::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.ConfigRef.name)
}
inline ::std::string* ConfigRef::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ConfigRef.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigRef::release_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.ConfigRef.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigRef::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.ConfigRef.name)
}

inline const ConfigRef* ConfigRef::internal_default_instance() {
  return &ConfigRef_default_instance_.get();
}
// -------------------------------------------------------------------

// ChangeReport

// repeated .google.api.ConfigChange config_changes = 1;
inline int ChangeReport::config_changes_size() const {
  return config_changes_.size();
}
inline void ChangeReport::clear_config_changes() {
  config_changes_.Clear();
}
inline const ::google::api::ConfigChange& ChangeReport::config_changes(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.ChangeReport.config_changes)
  return config_changes_.Get(index);
}
inline ::google::api::ConfigChange* ChangeReport::mutable_config_changes(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.ChangeReport.config_changes)
  return config_changes_.Mutable(index);
}
inline ::google::api::ConfigChange* ChangeReport::add_config_changes() {
  // @@protoc_insertion_point(field_add:google.api.servicemanagement.v1.ChangeReport.config_changes)
  return config_changes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::ConfigChange >*
ChangeReport::mutable_config_changes() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicemanagement.v1.ChangeReport.config_changes)
  return &config_changes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::ConfigChange >&
ChangeReport::config_changes() const {
  // @@protoc_insertion_point(field_list:google.api.servicemanagement.v1.ChangeReport.config_changes)
  return config_changes_;
}

inline const ChangeReport* ChangeReport::internal_default_instance() {
  return &ChangeReport_default_instance_.get();
}
// -------------------------------------------------------------------

// Rollout_TrafficPercentStrategy

// map<string, double> percentages = 1;
inline int Rollout_TrafficPercentStrategy::percentages_size() const {
  return percentages_.size();
}
inline void Rollout_TrafficPercentStrategy::clear_percentages() {
  percentages_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
Rollout_TrafficPercentStrategy::percentages() const {
  // @@protoc_insertion_point(field_map:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.percentages)
  return percentages_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
Rollout_TrafficPercentStrategy::mutable_percentages() {
  // @@protoc_insertion_point(field_mutable_map:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.percentages)
  return percentages_.MutableMap();
}

inline const Rollout_TrafficPercentStrategy* Rollout_TrafficPercentStrategy::internal_default_instance() {
  return &Rollout_TrafficPercentStrategy_default_instance_.get();
}
// -------------------------------------------------------------------

// Rollout_DeleteServiceStrategy

inline const Rollout_DeleteServiceStrategy* Rollout_DeleteServiceStrategy::internal_default_instance() {
  return &Rollout_DeleteServiceStrategy_default_instance_.get();
}
// -------------------------------------------------------------------

// Rollout

// optional string rollout_id = 1;
inline void Rollout::clear_rollout_id() {
  rollout_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rollout::rollout_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Rollout.rollout_id)
  return rollout_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rollout::set_rollout_id(const ::std::string& value) {
  
  rollout_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.Rollout.rollout_id)
}
inline void Rollout::set_rollout_id(const char* value) {
  
  rollout_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.Rollout.rollout_id)
}
inline void Rollout::set_rollout_id(const char* value, size_t size) {
  
  rollout_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.Rollout.rollout_id)
}
inline ::std::string* Rollout::mutable_rollout_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Rollout.rollout_id)
  return rollout_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rollout::release_rollout_id() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Rollout.rollout_id)
  
  return rollout_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rollout::set_allocated_rollout_id(::std::string* rollout_id) {
  if (rollout_id != NULL) {
    
  } else {
    
  }
  rollout_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rollout_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.rollout_id)
}

// optional .google.protobuf.Timestamp create_time = 2;
inline bool Rollout::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline void Rollout::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& Rollout::create_time() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Rollout.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* Rollout::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Rollout.create_time)
  return create_time_;
}
inline ::google::protobuf::Timestamp* Rollout::release_create_time() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Rollout.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline void Rollout::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.create_time)
}

// optional string created_by = 3;
inline void Rollout::clear_created_by() {
  created_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rollout::created_by() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Rollout.created_by)
  return created_by_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rollout::set_created_by(const ::std::string& value) {
  
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.Rollout.created_by)
}
inline void Rollout::set_created_by(const char* value) {
  
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.Rollout.created_by)
}
inline void Rollout::set_created_by(const char* value, size_t size) {
  
  created_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.Rollout.created_by)
}
inline ::std::string* Rollout::mutable_created_by() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Rollout.created_by)
  return created_by_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rollout::release_created_by() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Rollout.created_by)
  
  return created_by_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rollout::set_allocated_created_by(::std::string* created_by) {
  if (created_by != NULL) {
    
  } else {
    
  }
  created_by_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created_by);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.created_by)
}

// optional .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
inline void Rollout::clear_status() {
  status_ = 0;
}
inline ::google::api::servicemanagement::v1::Rollout_RolloutStatus Rollout::status() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Rollout.status)
  return static_cast< ::google::api::servicemanagement::v1::Rollout_RolloutStatus >(status_);
}
inline void Rollout::set_status(::google::api::servicemanagement::v1::Rollout_RolloutStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.Rollout.status)
}

// optional .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
inline bool Rollout::has_traffic_percent_strategy() const {
  return strategy_case() == kTrafficPercentStrategy;
}
inline void Rollout::set_has_traffic_percent_strategy() {
  _oneof_case_[0] = kTrafficPercentStrategy;
}
inline void Rollout::clear_traffic_percent_strategy() {
  if (has_traffic_percent_strategy()) {
    delete strategy_.traffic_percent_strategy_;
    clear_has_strategy();
  }
}
inline  const ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy& Rollout::traffic_percent_strategy() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Rollout.traffic_percent_strategy)
  return has_traffic_percent_strategy()
      ? *strategy_.traffic_percent_strategy_
      : ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy::default_instance();
}
inline ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* Rollout::mutable_traffic_percent_strategy() {
  if (!has_traffic_percent_strategy()) {
    clear_strategy();
    set_has_traffic_percent_strategy();
    strategy_.traffic_percent_strategy_ = new ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Rollout.traffic_percent_strategy)
  return strategy_.traffic_percent_strategy_;
}
inline ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* Rollout::release_traffic_percent_strategy() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Rollout.traffic_percent_strategy)
  if (has_traffic_percent_strategy()) {
    clear_has_strategy();
    ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* temp = strategy_.traffic_percent_strategy_;
    strategy_.traffic_percent_strategy_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Rollout::set_allocated_traffic_percent_strategy(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* traffic_percent_strategy) {
  clear_strategy();
  if (traffic_percent_strategy) {
    set_has_traffic_percent_strategy();
    strategy_.traffic_percent_strategy_ = traffic_percent_strategy;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.traffic_percent_strategy)
}

// optional .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
inline bool Rollout::has_delete_service_strategy() const {
  return strategy_case() == kDeleteServiceStrategy;
}
inline void Rollout::set_has_delete_service_strategy() {
  _oneof_case_[0] = kDeleteServiceStrategy;
}
inline void Rollout::clear_delete_service_strategy() {
  if (has_delete_service_strategy()) {
    delete strategy_.delete_service_strategy_;
    clear_has_strategy();
  }
}
inline  const ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy& Rollout::delete_service_strategy() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Rollout.delete_service_strategy)
  return has_delete_service_strategy()
      ? *strategy_.delete_service_strategy_
      : ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy::default_instance();
}
inline ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* Rollout::mutable_delete_service_strategy() {
  if (!has_delete_service_strategy()) {
    clear_strategy();
    set_has_delete_service_strategy();
    strategy_.delete_service_strategy_ = new ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Rollout.delete_service_strategy)
  return strategy_.delete_service_strategy_;
}
inline ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* Rollout::release_delete_service_strategy() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Rollout.delete_service_strategy)
  if (has_delete_service_strategy()) {
    clear_has_strategy();
    ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* temp = strategy_.delete_service_strategy_;
    strategy_.delete_service_strategy_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Rollout::set_allocated_delete_service_strategy(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* delete_service_strategy) {
  clear_strategy();
  if (delete_service_strategy) {
    set_has_delete_service_strategy();
    strategy_.delete_service_strategy_ = delete_service_strategy;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.delete_service_strategy)
}

// optional string service_name = 8;
inline void Rollout::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rollout::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicemanagement.v1.Rollout.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rollout::set_service_name(const ::std::string& value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.servicemanagement.v1.Rollout.service_name)
}
inline void Rollout::set_service_name(const char* value) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.servicemanagement.v1.Rollout.service_name)
}
inline void Rollout::set_service_name(const char* value, size_t size) {
  
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.servicemanagement.v1.Rollout.service_name)
}
inline ::std::string* Rollout::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicemanagement.v1.Rollout.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rollout::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicemanagement.v1.Rollout.service_name)
  
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rollout::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.service_name)
}

inline bool Rollout::has_strategy() const {
  return strategy_case() != STRATEGY_NOT_SET;
}
inline void Rollout::clear_has_strategy() {
  _oneof_case_[0] = STRATEGY_NOT_SET;
}
inline Rollout::StrategyCase Rollout::strategy_case() const {
  return Rollout::StrategyCase(_oneof_case_[0]);
}
inline const Rollout* Rollout::internal_default_instance() {
  return &Rollout_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::api::servicemanagement::v1::OperationMetadata_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::servicemanagement::v1::OperationMetadata_Status>() {
  return ::google::api::servicemanagement::v1::OperationMetadata_Status_descriptor();
}
template <> struct is_proto_enum< ::google::api::servicemanagement::v1::Diagnostic_Kind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::servicemanagement::v1::Diagnostic_Kind>() {
  return ::google::api::servicemanagement::v1::Diagnostic_Kind_descriptor();
}
template <> struct is_proto_enum< ::google::api::servicemanagement::v1::ConfigFile_FileType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::servicemanagement::v1::ConfigFile_FileType>() {
  return ::google::api::servicemanagement::v1::ConfigFile_FileType_descriptor();
}
template <> struct is_proto_enum< ::google::api::servicemanagement::v1::Rollout_RolloutStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::servicemanagement::v1::Rollout_RolloutStatus>() {
  return ::google::api::servicemanagement::v1::Rollout_RolloutStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto__INCLUDED
