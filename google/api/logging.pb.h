// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/logging.proto

#ifndef PROTOBUF_google_2fapi_2flogging_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2flogging_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace api {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2flogging_2eproto();
void protobuf_InitDefaults_google_2fapi_2flogging_2eproto();
void protobuf_AssignDesc_google_2fapi_2flogging_2eproto();
void protobuf_ShutdownFile_google_2fapi_2flogging_2eproto();

class Logging;
class Logging_LoggingDestination;

// ===================================================================

class Logging_LoggingDestination : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Logging.LoggingDestination) */ {
 public:
  Logging_LoggingDestination();
  virtual ~Logging_LoggingDestination();

  Logging_LoggingDestination(const Logging_LoggingDestination& from);

  inline Logging_LoggingDestination& operator=(const Logging_LoggingDestination& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Logging_LoggingDestination& default_instance();

  static const Logging_LoggingDestination* internal_default_instance();

  void Swap(Logging_LoggingDestination* other);

  // implements Message ----------------------------------------------

  inline Logging_LoggingDestination* New() const { return New(NULL); }

  Logging_LoggingDestination* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Logging_LoggingDestination& from);
  void MergeFrom(const Logging_LoggingDestination& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Logging_LoggingDestination* other);
  void UnsafeMergeFrom(const Logging_LoggingDestination& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string monitored_resource = 3;
  void clear_monitored_resource();
  static const int kMonitoredResourceFieldNumber = 3;
  const ::std::string& monitored_resource() const;
  void set_monitored_resource(const ::std::string& value);
  void set_monitored_resource(const char* value);
  void set_monitored_resource(const char* value, size_t size);
  ::std::string* mutable_monitored_resource();
  ::std::string* release_monitored_resource();
  void set_allocated_monitored_resource(::std::string* monitored_resource);

  // repeated string logs = 1;
  int logs_size() const;
  void clear_logs();
  static const int kLogsFieldNumber = 1;
  const ::std::string& logs(int index) const;
  ::std::string* mutable_logs(int index);
  void set_logs(int index, const ::std::string& value);
  void set_logs(int index, const char* value);
  void set_logs(int index, const char* value, size_t size);
  ::std::string* add_logs();
  void add_logs(const ::std::string& value);
  void add_logs(const char* value);
  void add_logs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& logs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_logs();

  // @@protoc_insertion_point(class_scope:google.api.Logging.LoggingDestination)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> logs_;
  ::google::protobuf::internal::ArenaStringPtr monitored_resource_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2flogging_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2flogging_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Logging_LoggingDestination> Logging_LoggingDestination_default_instance_;

// -------------------------------------------------------------------

class Logging : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Logging) */ {
 public:
  Logging();
  virtual ~Logging();

  Logging(const Logging& from);

  inline Logging& operator=(const Logging& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Logging& default_instance();

  static const Logging* internal_default_instance();

  void Swap(Logging* other);

  // implements Message ----------------------------------------------

  inline Logging* New() const { return New(NULL); }

  Logging* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Logging& from);
  void MergeFrom(const Logging& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Logging* other);
  void UnsafeMergeFrom(const Logging& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Logging_LoggingDestination LoggingDestination;

  // accessors -------------------------------------------------------

  // repeated .google.api.Logging.LoggingDestination producer_destinations = 1;
  int producer_destinations_size() const;
  void clear_producer_destinations();
  static const int kProducerDestinationsFieldNumber = 1;
  const ::google::api::Logging_LoggingDestination& producer_destinations(int index) const;
  ::google::api::Logging_LoggingDestination* mutable_producer_destinations(int index);
  ::google::api::Logging_LoggingDestination* add_producer_destinations();
  ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >*
      mutable_producer_destinations();
  const ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >&
      producer_destinations() const;

  // repeated .google.api.Logging.LoggingDestination consumer_destinations = 2;
  int consumer_destinations_size() const;
  void clear_consumer_destinations();
  static const int kConsumerDestinationsFieldNumber = 2;
  const ::google::api::Logging_LoggingDestination& consumer_destinations(int index) const;
  ::google::api::Logging_LoggingDestination* mutable_consumer_destinations(int index);
  ::google::api::Logging_LoggingDestination* add_consumer_destinations();
  ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >*
      mutable_consumer_destinations();
  const ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >&
      consumer_destinations() const;

  // @@protoc_insertion_point(class_scope:google.api.Logging)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination > producer_destinations_;
  ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination > consumer_destinations_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2flogging_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2flogging_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2flogging_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2flogging_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Logging> Logging_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Logging_LoggingDestination

// optional string monitored_resource = 3;
inline void Logging_LoggingDestination::clear_monitored_resource() {
  monitored_resource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logging_LoggingDestination::monitored_resource() const {
  // @@protoc_insertion_point(field_get:google.api.Logging.LoggingDestination.monitored_resource)
  return monitored_resource_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logging_LoggingDestination::set_monitored_resource(const ::std::string& value) {
  
  monitored_resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Logging.LoggingDestination.monitored_resource)
}
inline void Logging_LoggingDestination::set_monitored_resource(const char* value) {
  
  monitored_resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Logging.LoggingDestination.monitored_resource)
}
inline void Logging_LoggingDestination::set_monitored_resource(const char* value, size_t size) {
  
  monitored_resource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Logging.LoggingDestination.monitored_resource)
}
inline ::std::string* Logging_LoggingDestination::mutable_monitored_resource() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Logging.LoggingDestination.monitored_resource)
  return monitored_resource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logging_LoggingDestination::release_monitored_resource() {
  // @@protoc_insertion_point(field_release:google.api.Logging.LoggingDestination.monitored_resource)
  
  return monitored_resource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logging_LoggingDestination::set_allocated_monitored_resource(::std::string* monitored_resource) {
  if (monitored_resource != NULL) {
    
  } else {
    
  }
  monitored_resource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), monitored_resource);
  // @@protoc_insertion_point(field_set_allocated:google.api.Logging.LoggingDestination.monitored_resource)
}

// repeated string logs = 1;
inline int Logging_LoggingDestination::logs_size() const {
  return logs_.size();
}
inline void Logging_LoggingDestination::clear_logs() {
  logs_.Clear();
}
inline const ::std::string& Logging_LoggingDestination::logs(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Logging.LoggingDestination.logs)
  return logs_.Get(index);
}
inline ::std::string* Logging_LoggingDestination::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Logging.LoggingDestination.logs)
  return logs_.Mutable(index);
}
inline void Logging_LoggingDestination::set_logs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.api.Logging.LoggingDestination.logs)
  logs_.Mutable(index)->assign(value);
}
inline void Logging_LoggingDestination::set_logs(int index, const char* value) {
  logs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.api.Logging.LoggingDestination.logs)
}
inline void Logging_LoggingDestination::set_logs(int index, const char* value, size_t size) {
  logs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.api.Logging.LoggingDestination.logs)
}
inline ::std::string* Logging_LoggingDestination::add_logs() {
  // @@protoc_insertion_point(field_add_mutable:google.api.Logging.LoggingDestination.logs)
  return logs_.Add();
}
inline void Logging_LoggingDestination::add_logs(const ::std::string& value) {
  logs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.api.Logging.LoggingDestination.logs)
}
inline void Logging_LoggingDestination::add_logs(const char* value) {
  logs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.api.Logging.LoggingDestination.logs)
}
inline void Logging_LoggingDestination::add_logs(const char* value, size_t size) {
  logs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.api.Logging.LoggingDestination.logs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Logging_LoggingDestination::logs() const {
  // @@protoc_insertion_point(field_list:google.api.Logging.LoggingDestination.logs)
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Logging_LoggingDestination::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Logging.LoggingDestination.logs)
  return &logs_;
}

inline const Logging_LoggingDestination* Logging_LoggingDestination::internal_default_instance() {
  return &Logging_LoggingDestination_default_instance_.get();
}
// -------------------------------------------------------------------

// Logging

// repeated .google.api.Logging.LoggingDestination producer_destinations = 1;
inline int Logging::producer_destinations_size() const {
  return producer_destinations_.size();
}
inline void Logging::clear_producer_destinations() {
  producer_destinations_.Clear();
}
inline const ::google::api::Logging_LoggingDestination& Logging::producer_destinations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Logging.producer_destinations)
  return producer_destinations_.Get(index);
}
inline ::google::api::Logging_LoggingDestination* Logging::mutable_producer_destinations(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Logging.producer_destinations)
  return producer_destinations_.Mutable(index);
}
inline ::google::api::Logging_LoggingDestination* Logging::add_producer_destinations() {
  // @@protoc_insertion_point(field_add:google.api.Logging.producer_destinations)
  return producer_destinations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >*
Logging::mutable_producer_destinations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Logging.producer_destinations)
  return &producer_destinations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >&
Logging::producer_destinations() const {
  // @@protoc_insertion_point(field_list:google.api.Logging.producer_destinations)
  return producer_destinations_;
}

// repeated .google.api.Logging.LoggingDestination consumer_destinations = 2;
inline int Logging::consumer_destinations_size() const {
  return consumer_destinations_.size();
}
inline void Logging::clear_consumer_destinations() {
  consumer_destinations_.Clear();
}
inline const ::google::api::Logging_LoggingDestination& Logging::consumer_destinations(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Logging.consumer_destinations)
  return consumer_destinations_.Get(index);
}
inline ::google::api::Logging_LoggingDestination* Logging::mutable_consumer_destinations(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Logging.consumer_destinations)
  return consumer_destinations_.Mutable(index);
}
inline ::google::api::Logging_LoggingDestination* Logging::add_consumer_destinations() {
  // @@protoc_insertion_point(field_add:google.api.Logging.consumer_destinations)
  return consumer_destinations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >*
Logging::mutable_consumer_destinations() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Logging.consumer_destinations)
  return &consumer_destinations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::Logging_LoggingDestination >&
Logging::consumer_destinations() const {
  // @@protoc_insertion_point(field_list:google.api.Logging.consumer_destinations)
  return consumer_destinations_;
}

inline const Logging* Logging::internal_default_instance() {
  return &Logging_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2flogging_2eproto__INCLUDED
