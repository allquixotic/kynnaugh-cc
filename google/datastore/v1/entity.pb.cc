// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1/entity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/datastore/v1/entity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace datastore {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* PartitionId_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PartitionId_reflection_ = NULL;
const ::google::protobuf::Descriptor* Key_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Key_reflection_ = NULL;
const ::google::protobuf::Descriptor* Key_PathElement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Key_PathElement_reflection_ = NULL;
struct Key_PathElementOneofInstance {
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
}* Key_PathElement_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ArrayValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArrayValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* Value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Value_reflection_ = NULL;
struct ValueOneofInstance {
  int null_value_;
  bool boolean_value_;
  ::google::protobuf::int64 integer_value_;
  double double_value_;
  const ::google::protobuf::Timestamp* timestamp_value_;
  const ::google::datastore::v1::Key* key_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::internal::ArenaStringPtr blob_value_;
  const ::google::type::LatLng* geo_point_value_;
  const ::google::datastore::v1::Entity* entity_value_;
  const ::google::datastore::v1::ArrayValue* array_value_;
}* Value_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Entity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Entity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Entity_PropertiesEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fdatastore_2fv1_2fentity_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fdatastore_2fv1_2fentity_2eproto() {
  protobuf_AddDesc_google_2fdatastore_2fv1_2fentity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/datastore/v1/entity.proto");
  GOOGLE_CHECK(file != NULL);
  PartitionId_descriptor_ = file->message_type(0);
  static const int PartitionId_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionId, project_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionId, namespace_id_),
  };
  PartitionId_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PartitionId_descriptor_,
      PartitionId::internal_default_instance(),
      PartitionId_offsets_,
      -1,
      -1,
      -1,
      sizeof(PartitionId),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionId, _internal_metadata_));
  Key_descriptor_ = file->message_type(1);
  static const int Key_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key, partition_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key, path_),
  };
  Key_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Key_descriptor_,
      Key::internal_default_instance(),
      Key_offsets_,
      -1,
      -1,
      -1,
      sizeof(Key),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key, _internal_metadata_));
  Key_PathElement_descriptor_ = Key_descriptor_->nested_type(0);
  static const int Key_PathElement_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key_PathElement, kind_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Key_PathElement_default_oneof_instance_, id_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Key_PathElement_default_oneof_instance_, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key_PathElement, id_type_),
  };
  Key_PathElement_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Key_PathElement_descriptor_,
      Key_PathElement::internal_default_instance(),
      Key_PathElement_offsets_,
      -1,
      -1,
      -1,
      Key_PathElement_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key_PathElement, _oneof_case_[0]),
      sizeof(Key_PathElement),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Key_PathElement, _internal_metadata_));
  ArrayValue_descriptor_ = file->message_type(2);
  static const int ArrayValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArrayValue, values_),
  };
  ArrayValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ArrayValue_descriptor_,
      ArrayValue::internal_default_instance(),
      ArrayValue_offsets_,
      -1,
      -1,
      -1,
      sizeof(ArrayValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArrayValue, _internal_metadata_));
  Value_descriptor_ = file->message_type(3);
  static const int Value_offsets_[14] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, null_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, boolean_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, integer_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, double_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, timestamp_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, key_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, string_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, blob_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, geo_point_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, entity_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, array_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, meaning_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, exclude_from_indexes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, value_type_),
  };
  Value_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Value_descriptor_,
      Value::internal_default_instance(),
      Value_offsets_,
      -1,
      -1,
      -1,
      Value_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _oneof_case_[0]),
      sizeof(Value),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _internal_metadata_));
  Entity_descriptor_ = file->message_type(4);
  static const int Entity_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, properties_),
  };
  Entity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Entity_descriptor_,
      Entity::internal_default_instance(),
      Entity_offsets_,
      -1,
      -1,
      -1,
      sizeof(Entity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, _internal_metadata_));
  Entity_PropertiesEntry_descriptor_ = Entity_descriptor_->nested_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fdatastore_2fv1_2fentity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PartitionId_descriptor_, PartitionId::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Key_descriptor_, Key::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Key_PathElement_descriptor_, Key_PathElement::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ArrayValue_descriptor_, ArrayValue::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Value_descriptor_, Value::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Entity_descriptor_, Entity::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Entity_PropertiesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::datastore::v1::Value,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                Entity_PropertiesEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_google_2fdatastore_2fv1_2fentity_2eproto() {
  PartitionId_default_instance_.Shutdown();
  delete PartitionId_reflection_;
  Key_default_instance_.Shutdown();
  delete Key_reflection_;
  Key_PathElement_default_instance_.Shutdown();
  delete Key_PathElement_default_oneof_instance_;
  delete Key_PathElement_reflection_;
  ArrayValue_default_instance_.Shutdown();
  delete ArrayValue_reflection_;
  Value_default_instance_.Shutdown();
  delete Value_default_oneof_instance_;
  delete Value_reflection_;
  Entity_default_instance_.Shutdown();
  delete Entity_reflection_;
}

void protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fstruct_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::type::protobuf_InitDefaults_google_2ftype_2flatlng_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  PartitionId_default_instance_.DefaultConstruct();
  Key_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Key_PathElement_default_instance_.DefaultConstruct();
  Key_PathElement_default_oneof_instance_ = new Key_PathElementOneofInstance();
  ArrayValue_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Value_default_instance_.DefaultConstruct();
  Value_default_oneof_instance_ = new ValueOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  Entity_default_instance_.DefaultConstruct();
  PartitionId_default_instance_.get_mutable()->InitAsDefaultInstance();
  Key_default_instance_.get_mutable()->InitAsDefaultInstance();
  Key_PathElement_default_instance_.get_mutable()->InitAsDefaultInstance();
  ArrayValue_default_instance_.get_mutable()->InitAsDefaultInstance();
  Value_default_instance_.get_mutable()->InitAsDefaultInstance();
  Entity_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto_once_);
void protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto_once_,
                 &protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto_impl);
}
void protobuf_AddDesc_google_2fdatastore_2fv1_2fentity_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n google/datastore/v1/entity.proto\022\023goog"
    "le.datastore.v1\032\034google/api/annotations."
    "proto\032\034google/protobuf/struct.proto\032\037goo"
    "gle/protobuf/timestamp.proto\032\030google/typ"
    "e/latlng.proto\"7\n\013PartitionId\022\022\n\nproject"
    "_id\030\002 \001(\t\022\024\n\014namespace_id\030\004 \001(\t\"\267\001\n\003Key\022"
    "6\n\014partition_id\030\001 \001(\0132 .google.datastore"
    ".v1.PartitionId\0222\n\004path\030\002 \003(\0132$.google.d"
    "atastore.v1.Key.PathElement\032D\n\013PathEleme"
    "nt\022\014\n\004kind\030\001 \001(\t\022\014\n\002id\030\002 \001(\003H\000\022\016\n\004name\030\003"
    " \001(\tH\000B\t\n\007id_type\"8\n\nArrayValue\022*\n\006value"
    "s\030\001 \003(\0132\032.google.datastore.v1.Value\"\361\003\n\005"
    "Value\0220\n\nnull_value\030\013 \001(\0162\032.google.proto"
    "buf.NullValueH\000\022\027\n\rboolean_value\030\001 \001(\010H\000"
    "\022\027\n\rinteger_value\030\002 \001(\003H\000\022\026\n\014double_valu"
    "e\030\003 \001(\001H\000\0225\n\017timestamp_value\030\n \001(\0132\032.goo"
    "gle.protobuf.TimestampH\000\022-\n\tkey_value\030\005 "
    "\001(\0132\030.google.datastore.v1.KeyH\000\022\026\n\014strin"
    "g_value\030\021 \001(\tH\000\022\024\n\nblob_value\030\022 \001(\014H\000\022.\n"
    "\017geo_point_value\030\010 \001(\0132\023.google.type.Lat"
    "LngH\000\0223\n\014entity_value\030\006 \001(\0132\033.google.dat"
    "astore.v1.EntityH\000\0226\n\013array_value\030\t \001(\0132"
    "\037.google.datastore.v1.ArrayValueH\000\022\017\n\007me"
    "aning\030\016 \001(\005\022\034\n\024exclude_from_indexes\030\023 \001("
    "\010B\014\n\nvalue_type\"\277\001\n\006Entity\022%\n\003key\030\001 \001(\0132"
    "\030.google.datastore.v1.Key\022\?\n\nproperties\030"
    "\003 \003(\0132+.google.datastore.v1.Entity.Prope"
    "rtiesEntry\032M\n\017PropertiesEntry\022\013\n\003key\030\001 \001"
    "(\t\022)\n\005value\030\002 \001(\0132\032.google.datastore.v1."
    "Value:\0028\001B\202\001\n\027com.google.datastore.v1B\013E"
    "ntityProtoP\001Z<google.golang.org/genproto"
    "/googleapis/datastore/v1;datastore\252\002\031Goo"
    "gle.Cloud.Datastore.V1b\006proto3", 1310);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/datastore/v1/entity.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fstruct_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::type::protobuf_AddDesc_google_2ftype_2flatlng_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fdatastore_2fv1_2fentity_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fdatastore_2fv1_2fentity_2eproto_once_);
void protobuf_AddDesc_google_2fdatastore_2fv1_2fentity_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fdatastore_2fv1_2fentity_2eproto_once_,
                 &protobuf_AddDesc_google_2fdatastore_2fv1_2fentity_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fdatastore_2fv1_2fentity_2eproto {
  StaticDescriptorInitializer_google_2fdatastore_2fv1_2fentity_2eproto() {
    protobuf_AddDesc_google_2fdatastore_2fv1_2fentity_2eproto();
  }
} static_descriptor_initializer_google_2fdatastore_2fv1_2fentity_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionId::kProjectIdFieldNumber;
const int PartitionId::kNamespaceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionId::PartitionId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.PartitionId)
}

void PartitionId::InitAsDefaultInstance() {
}

PartitionId::PartitionId(const PartitionId& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.PartitionId)
}

void PartitionId::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PartitionId::~PartitionId() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.PartitionId)
  SharedDtor();
}

void PartitionId::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PartitionId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartitionId::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PartitionId_descriptor_;
}

const PartitionId& PartitionId::default_instance() {
  protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PartitionId> PartitionId_default_instance_;

PartitionId* PartitionId::New(::google::protobuf::Arena* arena) const {
  PartitionId* n = new PartitionId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartitionId::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.PartitionId)
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PartitionId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.PartitionId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_id = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.PartitionId.project_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_namespace_id;
        break;
      }

      // optional string namespace_id = 4;
      case 4: {
        if (tag == 34) {
         parse_namespace_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_id().data(), this->namespace_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.PartitionId.namespace_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.PartitionId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.PartitionId)
  return false;
#undef DO_
}

void PartitionId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.PartitionId)
  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_id(), output);
  }

  // optional string namespace_id = 4;
  if (this->namespace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_id().data(), this->namespace_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.namespace_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->namespace_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.PartitionId)
}

::google::protobuf::uint8* PartitionId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.PartitionId)
  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_id(), target);
  }

  // optional string namespace_id = 4;
  if (this->namespace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_id().data(), this->namespace_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.PartitionId.namespace_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->namespace_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.PartitionId)
  return target;
}

size_t PartitionId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.PartitionId)
  size_t total_size = 0;

  // optional string project_id = 2;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // optional string namespace_id = 4;
  if (this->namespace_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartitionId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.PartitionId)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PartitionId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartitionId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.PartitionId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.PartitionId)
    UnsafeMergeFrom(*source);
  }
}

void PartitionId::MergeFrom(const PartitionId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.PartitionId)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PartitionId::UnsafeMergeFrom(const PartitionId& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.namespace_id().size() > 0) {

    namespace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace_id_);
  }
}

void PartitionId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.PartitionId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionId::CopyFrom(const PartitionId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.PartitionId)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PartitionId::IsInitialized() const {

  return true;
}

void PartitionId::Swap(PartitionId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionId::InternalSwap(PartitionId* other) {
  project_id_.Swap(&other->project_id_);
  namespace_id_.Swap(&other->namespace_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartitionId::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PartitionId_descriptor_;
  metadata.reflection = PartitionId_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartitionId

// optional string project_id = 2;
void PartitionId::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PartitionId::project_id() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PartitionId.project_id)
  return project_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PartitionId::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.PartitionId.project_id)
}
void PartitionId::set_project_id(const char* value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.PartitionId.project_id)
}
void PartitionId::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.PartitionId.project_id)
}
::std::string* PartitionId::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.PartitionId.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PartitionId::release_project_id() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.PartitionId.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PartitionId::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.PartitionId.project_id)
}

// optional string namespace_id = 4;
void PartitionId::clear_namespace_id() {
  namespace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PartitionId::namespace_id() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.PartitionId.namespace_id)
  return namespace_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PartitionId::set_namespace_id(const ::std::string& value) {
  
  namespace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.PartitionId.namespace_id)
}
void PartitionId::set_namespace_id(const char* value) {
  
  namespace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.PartitionId.namespace_id)
}
void PartitionId::set_namespace_id(const char* value, size_t size) {
  
  namespace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.PartitionId.namespace_id)
}
::std::string* PartitionId::mutable_namespace_id() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.PartitionId.namespace_id)
  return namespace_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PartitionId::release_namespace_id() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.PartitionId.namespace_id)
  
  return namespace_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PartitionId::set_allocated_namespace_id(::std::string* namespace_id) {
  if (namespace_id != NULL) {
    
  } else {
    
  }
  namespace_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), namespace_id);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.PartitionId.namespace_id)
}

inline const PartitionId* PartitionId::internal_default_instance() {
  return &PartitionId_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Key_PathElement::kKindFieldNumber;
const int Key_PathElement::kIdFieldNumber;
const int Key_PathElement::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Key_PathElement::Key_PathElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Key.PathElement)
}

void Key_PathElement::InitAsDefaultInstance() {
  Key_PathElement_default_oneof_instance_->id_ = GOOGLE_LONGLONG(0);
  Key_PathElement_default_oneof_instance_->name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Key_PathElement::Key_PathElement(const Key_PathElement& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Key.PathElement)
}

void Key_PathElement::SharedCtor() {
  kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id_type();
  _cached_size_ = 0;
}

Key_PathElement::~Key_PathElement() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Key.PathElement)
  SharedDtor();
}

void Key_PathElement::SharedDtor() {
  kind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_id_type()) {
    clear_id_type();
  }
}

void Key_PathElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Key_PathElement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Key_PathElement_descriptor_;
}

const Key_PathElement& Key_PathElement::default_instance() {
  protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Key_PathElement> Key_PathElement_default_instance_;

Key_PathElement* Key_PathElement::New(::google::protobuf::Arena* arena) const {
  Key_PathElement* n = new Key_PathElement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Key_PathElement::clear_id_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Key.PathElement)
  switch (id_type_case()) {
    case kId: {
      // No need to clear
      break;
    }
    case kName: {
      id_type_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ID_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_TYPE_NOT_SET;
}


void Key_PathElement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Key.PathElement)
  kind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_id_type();
}

bool Key_PathElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Key.PathElement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string kind = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kind()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kind().data(), this->kind().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Key.PathElement.kind"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int64 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          clear_id_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_type_.id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        goto after_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Key.PathElement.name"));
        } else {
          goto handle_unusual;
        }
       after_name:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Key.PathElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Key.PathElement)
  return false;
#undef DO_
}

void Key_PathElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Key.PathElement)
  // optional string kind = 1;
  if (this->kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kind().data(), this->kind().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.kind");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kind(), output);
  }

  // optional int64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Key.PathElement)
}

::google::protobuf::uint8* Key_PathElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Key.PathElement)
  // optional string kind = 1;
  if (this->kind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kind().data(), this->kind().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.kind");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kind(), target);
  }

  // optional int64 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Key.PathElement.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Key.PathElement)
  return target;
}

size_t Key_PathElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Key.PathElement)
  size_t total_size = 0;

  // optional string kind = 1;
  if (this->kind().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kind());
  }

  switch (id_type_case()) {
    // optional int64 id = 2;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
      break;
    }
    // optional string name = 3;
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
      break;
    }
    case ID_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Key_PathElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Key.PathElement)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Key_PathElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Key_PathElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Key.PathElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Key.PathElement)
    UnsafeMergeFrom(*source);
  }
}

void Key_PathElement::MergeFrom(const Key_PathElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Key.PathElement)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Key_PathElement::UnsafeMergeFrom(const Key_PathElement& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.id_type_case()) {
    case kId: {
      set_id(from.id());
      break;
    }
    case kName: {
      set_name(from.name());
      break;
    }
    case ID_TYPE_NOT_SET: {
      break;
    }
  }
  if (from.kind().size() > 0) {

    kind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kind_);
  }
}

void Key_PathElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Key.PathElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Key_PathElement::CopyFrom(const Key_PathElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Key.PathElement)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Key_PathElement::IsInitialized() const {

  return true;
}

void Key_PathElement::Swap(Key_PathElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Key_PathElement::InternalSwap(Key_PathElement* other) {
  kind_.Swap(&other->kind_);
  std::swap(id_type_, other->id_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Key_PathElement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Key_PathElement_descriptor_;
  metadata.reflection = Key_PathElement_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Key::kPartitionIdFieldNumber;
const int Key::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Key::Key()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Key)
}

void Key::InitAsDefaultInstance() {
  partition_id_ = const_cast< ::google::datastore::v1::PartitionId*>(
      ::google::datastore::v1::PartitionId::internal_default_instance());
}

Key::Key(const Key& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Key)
}

void Key::SharedCtor() {
  partition_id_ = NULL;
  _cached_size_ = 0;
}

Key::~Key() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Key)
  SharedDtor();
}

void Key::SharedDtor() {
  if (this != &Key_default_instance_.get()) {
    delete partition_id_;
  }
}

void Key::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Key::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Key_descriptor_;
}

const Key& Key::default_instance() {
  protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Key> Key_default_instance_;

Key* Key::New(::google::protobuf::Arena* arena) const {
  Key* n = new Key;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Key::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Key)
  if (GetArenaNoVirtual() == NULL && partition_id_ != NULL) delete partition_id_;
  partition_id_ = NULL;
  path_.Clear();
}

bool Key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Key)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.datastore.v1.PartitionId partition_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partition_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // repeated .google.datastore.v1.Key.PathElement path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(input->IncrementRecursionDepth());
         parse_loop_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_path;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Key)
  return false;
#undef DO_
}

void Key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Key)
  // optional .google.datastore.v1.PartitionId partition_id = 1;
  if (this->has_partition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->partition_id_, output);
  }

  // repeated .google.datastore.v1.Key.PathElement path = 2;
  for (unsigned int i = 0, n = this->path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->path(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Key)
}

::google::protobuf::uint8* Key::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Key)
  // optional .google.datastore.v1.PartitionId partition_id = 1;
  if (this->has_partition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->partition_id_, false, target);
  }

  // repeated .google.datastore.v1.Key.PathElement path = 2;
  for (unsigned int i = 0, n = this->path_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->path(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Key)
  return target;
}

size_t Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Key)
  size_t total_size = 0;

  // optional .google.datastore.v1.PartitionId partition_id = 1;
  if (this->has_partition_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->partition_id_);
  }

  // repeated .google.datastore.v1.Key.PathElement path = 2;
  {
    unsigned int count = this->path_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->path(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Key::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Key)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Key* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Key>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Key)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Key)
    UnsafeMergeFrom(*source);
  }
}

void Key::MergeFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Key)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Key::UnsafeMergeFrom(const Key& from) {
  GOOGLE_DCHECK(&from != this);
  path_.MergeFrom(from.path_);
  if (from.has_partition_id()) {
    mutable_partition_id()->::google::datastore::v1::PartitionId::MergeFrom(from.partition_id());
  }
}

void Key::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Key::CopyFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Key)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Key::IsInitialized() const {

  return true;
}

void Key::Swap(Key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Key::InternalSwap(Key* other) {
  std::swap(partition_id_, other->partition_id_);
  path_.UnsafeArenaSwap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Key::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Key_descriptor_;
  metadata.reflection = Key_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Key_PathElement

// optional string kind = 1;
void Key_PathElement::clear_kind() {
  kind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Key_PathElement::kind() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Key.PathElement.kind)
  return kind_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Key_PathElement::set_kind(const ::std::string& value) {
  
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.Key.PathElement.kind)
}
void Key_PathElement::set_kind(const char* value) {
  
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.Key.PathElement.kind)
}
void Key_PathElement::set_kind(const char* value, size_t size) {
  
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.Key.PathElement.kind)
}
::std::string* Key_PathElement::mutable_kind() {
  
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Key.PathElement.kind)
  return kind_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Key_PathElement::release_kind() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Key.PathElement.kind)
  
  return kind_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Key_PathElement::set_allocated_kind(::std::string* kind) {
  if (kind != NULL) {
    
  } else {
    
  }
  kind_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kind);
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Key.PathElement.kind)
}

// optional int64 id = 2;
bool Key_PathElement::has_id() const {
  return id_type_case() == kId;
}
void Key_PathElement::set_has_id() {
  _oneof_case_[0] = kId;
}
void Key_PathElement::clear_id() {
  if (has_id()) {
    id_type_.id_ = GOOGLE_LONGLONG(0);
    clear_has_id_type();
  }
}
::google::protobuf::int64 Key_PathElement::id() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Key.PathElement.id)
  if (has_id()) {
    return id_type_.id_;
  }
  return GOOGLE_LONGLONG(0);
}
void Key_PathElement::set_id(::google::protobuf::int64 value) {
  if (!has_id()) {
    clear_id_type();
    set_has_id();
  }
  id_type_.id_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Key.PathElement.id)
}

// optional string name = 3;
bool Key_PathElement::has_name() const {
  return id_type_case() == kName;
}
void Key_PathElement::set_has_name() {
  _oneof_case_[0] = kName;
}
void Key_PathElement::clear_name() {
  if (has_name()) {
    id_type_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id_type();
  }
}
const ::std::string& Key_PathElement::name() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Key.PathElement.name)
  if (has_name()) {
    return id_type_.name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void Key_PathElement::set_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.datastore.v1.Key.PathElement.name)
  if (!has_name()) {
    clear_id_type();
    set_has_name();
    id_type_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_type_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.Key.PathElement.name)
}
void Key_PathElement::set_name(const char* value) {
  if (!has_name()) {
    clear_id_type();
    set_has_name();
    id_type_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_type_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.Key.PathElement.name)
}
void Key_PathElement::set_name(const char* value, size_t size) {
  if (!has_name()) {
    clear_id_type();
    set_has_name();
    id_type_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_type_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.Key.PathElement.name)
}
::std::string* Key_PathElement::mutable_name() {
  if (!has_name()) {
    clear_id_type();
    set_has_name();
    id_type_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Key.PathElement.name)
  return id_type_.name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Key_PathElement::release_name() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Key.PathElement.name)
  if (has_name()) {
    clear_has_id_type();
    return id_type_.name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void Key_PathElement::set_allocated_name(::std::string* name) {
  if (!has_name()) {
    id_type_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_id_type();
  if (name != NULL) {
    set_has_name();
    id_type_.name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        name);
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Key.PathElement.name)
}

bool Key_PathElement::has_id_type() const {
  return id_type_case() != ID_TYPE_NOT_SET;
}
void Key_PathElement::clear_has_id_type() {
  _oneof_case_[0] = ID_TYPE_NOT_SET;
}
Key_PathElement::IdTypeCase Key_PathElement::id_type_case() const {
  return Key_PathElement::IdTypeCase(_oneof_case_[0]);
}
inline const Key_PathElement* Key_PathElement::internal_default_instance() {
  return &Key_PathElement_default_instance_.get();
}
// -------------------------------------------------------------------

// Key

// optional .google.datastore.v1.PartitionId partition_id = 1;
bool Key::has_partition_id() const {
  return this != internal_default_instance() && partition_id_ != NULL;
}
void Key::clear_partition_id() {
  if (GetArenaNoVirtual() == NULL && partition_id_ != NULL) delete partition_id_;
  partition_id_ = NULL;
}
const ::google::datastore::v1::PartitionId& Key::partition_id() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Key.partition_id)
  return partition_id_ != NULL ? *partition_id_
                         : *::google::datastore::v1::PartitionId::internal_default_instance();
}
::google::datastore::v1::PartitionId* Key::mutable_partition_id() {
  
  if (partition_id_ == NULL) {
    partition_id_ = new ::google::datastore::v1::PartitionId;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Key.partition_id)
  return partition_id_;
}
::google::datastore::v1::PartitionId* Key::release_partition_id() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Key.partition_id)
  
  ::google::datastore::v1::PartitionId* temp = partition_id_;
  partition_id_ = NULL;
  return temp;
}
void Key::set_allocated_partition_id(::google::datastore::v1::PartitionId* partition_id) {
  delete partition_id_;
  partition_id_ = partition_id;
  if (partition_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Key.partition_id)
}

// repeated .google.datastore.v1.Key.PathElement path = 2;
int Key::path_size() const {
  return path_.size();
}
void Key::clear_path() {
  path_.Clear();
}
const ::google::datastore::v1::Key_PathElement& Key::path(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Key.path)
  return path_.Get(index);
}
::google::datastore::v1::Key_PathElement* Key::mutable_path(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Key.path)
  return path_.Mutable(index);
}
::google::datastore::v1::Key_PathElement* Key::add_path() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.Key.path)
  return path_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Key_PathElement >*
Key::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.Key.path)
  return &path_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Key_PathElement >&
Key::path() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.Key.path)
  return path_;
}

inline const Key* Key::internal_default_instance() {
  return &Key_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArrayValue::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArrayValue::ArrayValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.ArrayValue)
}

void ArrayValue::InitAsDefaultInstance() {
}

ArrayValue::ArrayValue(const ArrayValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.ArrayValue)
}

void ArrayValue::SharedCtor() {
  _cached_size_ = 0;
}

ArrayValue::~ArrayValue() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.ArrayValue)
  SharedDtor();
}

void ArrayValue::SharedDtor() {
}

void ArrayValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArrayValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArrayValue_descriptor_;
}

const ArrayValue& ArrayValue::default_instance() {
  protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ArrayValue> ArrayValue_default_instance_;

ArrayValue* ArrayValue::New(::google::protobuf::Arena* arena) const {
  ArrayValue* n = new ArrayValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArrayValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.ArrayValue)
  values_.Clear();
}

bool ArrayValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.ArrayValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.datastore.v1.Value values = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.ArrayValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.ArrayValue)
  return false;
#undef DO_
}

void ArrayValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.ArrayValue)
  // repeated .google.datastore.v1.Value values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.ArrayValue)
}

::google::protobuf::uint8* ArrayValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.ArrayValue)
  // repeated .google.datastore.v1.Value values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.ArrayValue)
  return target;
}

size_t ArrayValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.ArrayValue)
  size_t total_size = 0;

  // repeated .google.datastore.v1.Value values = 1;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArrayValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.ArrayValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ArrayValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArrayValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.ArrayValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.ArrayValue)
    UnsafeMergeFrom(*source);
  }
}

void ArrayValue::MergeFrom(const ArrayValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.ArrayValue)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ArrayValue::UnsafeMergeFrom(const ArrayValue& from) {
  GOOGLE_DCHECK(&from != this);
  values_.MergeFrom(from.values_);
}

void ArrayValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.ArrayValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayValue::CopyFrom(const ArrayValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.ArrayValue)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ArrayValue::IsInitialized() const {

  return true;
}

void ArrayValue::Swap(ArrayValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArrayValue::InternalSwap(ArrayValue* other) {
  values_.UnsafeArenaSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArrayValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArrayValue_descriptor_;
  metadata.reflection = ArrayValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArrayValue

// repeated .google.datastore.v1.Value values = 1;
int ArrayValue::values_size() const {
  return values_.size();
}
void ArrayValue::clear_values() {
  values_.Clear();
}
const ::google::datastore::v1::Value& ArrayValue::values(int index) const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.ArrayValue.values)
  return values_.Get(index);
}
::google::datastore::v1::Value* ArrayValue::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.ArrayValue.values)
  return values_.Mutable(index);
}
::google::datastore::v1::Value* ArrayValue::add_values() {
  // @@protoc_insertion_point(field_add:google.datastore.v1.ArrayValue.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Value >*
ArrayValue::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:google.datastore.v1.ArrayValue.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::google::datastore::v1::Value >&
ArrayValue::values() const {
  // @@protoc_insertion_point(field_list:google.datastore.v1.ArrayValue.values)
  return values_;
}

inline const ArrayValue* ArrayValue::internal_default_instance() {
  return &ArrayValue_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kNullValueFieldNumber;
const int Value::kBooleanValueFieldNumber;
const int Value::kIntegerValueFieldNumber;
const int Value::kDoubleValueFieldNumber;
const int Value::kTimestampValueFieldNumber;
const int Value::kKeyValueFieldNumber;
const int Value::kStringValueFieldNumber;
const int Value::kBlobValueFieldNumber;
const int Value::kGeoPointValueFieldNumber;
const int Value::kEntityValueFieldNumber;
const int Value::kArrayValueFieldNumber;
const int Value::kMeaningFieldNumber;
const int Value::kExcludeFromIndexesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Value)
}

void Value::InitAsDefaultInstance() {
  Value_default_oneof_instance_->null_value_ = 0;
  Value_default_oneof_instance_->boolean_value_ = false;
  Value_default_oneof_instance_->integer_value_ = GOOGLE_LONGLONG(0);
  Value_default_oneof_instance_->double_value_ = 0;
  Value_default_oneof_instance_->timestamp_value_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  Value_default_oneof_instance_->key_value_ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
  Value_default_oneof_instance_->string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  Value_default_oneof_instance_->blob_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  Value_default_oneof_instance_->geo_point_value_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
  Value_default_oneof_instance_->entity_value_ = const_cast< ::google::datastore::v1::Entity*>(
      ::google::datastore::v1::Entity::internal_default_instance());
  Value_default_oneof_instance_->array_value_ = const_cast< ::google::datastore::v1::ArrayValue*>(
      ::google::datastore::v1::ArrayValue::internal_default_instance());
}

Value::Value(const Value& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Value)
}

void Value::SharedCtor() {
  ::memset(&meaning_, 0, reinterpret_cast<char*>(&exclude_from_indexes_) -
    reinterpret_cast<char*>(&meaning_) + sizeof(exclude_from_indexes_));
  clear_has_value_type();
  _cached_size_ = 0;
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  if (has_value_type()) {
    clear_value_type();
  }
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Value_descriptor_;
}

const Value& Value::default_instance() {
  protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Value> Value_default_instance_;

Value* Value::New(::google::protobuf::Arena* arena) const {
  Value* n = new Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value::clear_value_type() {
// @@protoc_insertion_point(one_of_clear_start:google.datastore.v1.Value)
  switch (value_type_case()) {
    case kNullValue: {
      // No need to clear
      break;
    }
    case kBooleanValue: {
      // No need to clear
      break;
    }
    case kIntegerValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kTimestampValue: {
      delete value_type_.timestamp_value_;
      break;
    }
    case kKeyValue: {
      delete value_type_.key_value_;
      break;
    }
    case kStringValue: {
      value_type_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBlobValue: {
      value_type_.blob_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kGeoPointValue: {
      delete value_type_.geo_point_value_;
      break;
    }
    case kEntityValue: {
      delete value_type_.entity_value_;
      break;
    }
    case kArrayValue: {
      delete value_type_.array_value_;
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_TYPE_NOT_SET;
}


void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Value)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Value, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Value*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(meaning_, exclude_from_indexes_);

#undef ZR_HELPER_
#undef ZR_

  clear_value_type();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool boolean_value = 1;
      case 1: {
        if (tag == 8) {
          clear_value_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_type_.boolean_value_)));
          set_has_boolean_value();
        } else {
          goto handle_unusual;
        }
        goto after_null_value;
        break;
      }

      // optional int64 integer_value = 2;
      case 2: {
        if (tag == 16) {
          clear_value_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_type_.integer_value_)));
          set_has_integer_value();
        } else {
          goto handle_unusual;
        }
        goto after_null_value;
        break;
      }

      // optional double double_value = 3;
      case 3: {
        if (tag == 25) {
          clear_value_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_type_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        goto after_null_value;
        break;
      }

      // optional .google.datastore.v1.Key key_value = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_key_value()));
        } else {
          goto handle_unusual;
        }
        goto after_null_value;
        break;
      }

      // optional .google.datastore.v1.Entity entity_value = 6;
      case 6: {
        if (tag == 50) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity_value()));
        } else {
          goto handle_unusual;
        }
        goto after_null_value;
        break;
      }

      // optional .google.type.LatLng geo_point_value = 8;
      case 8: {
        if (tag == 66) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geo_point_value()));
        } else {
          goto handle_unusual;
        }
        goto after_null_value;
        break;
      }

      // optional .google.datastore.v1.ArrayValue array_value = 9;
      case 9: {
        if (tag == 74) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_array_value()));
        } else {
          goto handle_unusual;
        }
        goto after_null_value;
        break;
      }

      // optional .google.protobuf.Timestamp timestamp_value = 10;
      case 10: {
        if (tag == 82) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestamp_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_null_value;
        break;
      }

      // optional .google.protobuf.NullValue null_value = 11;
      case 11: {
        if (tag == 88) {
         parse_null_value:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_null_value(static_cast< ::google::protobuf::NullValue >(value));
        } else {
          goto handle_unusual;
        }
       after_null_value:
        if (input->ExpectTag(112)) goto parse_meaning;
        break;
      }

      // optional int32 meaning = 14;
      case 14: {
        if (tag == 112) {
         parse_meaning:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &meaning_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_string_value;
        break;
      }

      // optional string string_value = 17;
      case 17: {
        if (tag == 138) {
         parse_string_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Value.string_value"));
        } else {
          goto handle_unusual;
        }
        goto after_blob_value;
        break;
      }

      // optional bytes blob_value = 18;
      case 18: {
        if (tag == 146) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob_value()));
        } else {
          goto handle_unusual;
        }
       after_blob_value:
        if (input->ExpectTag(152)) goto parse_exclude_from_indexes;
        break;
      }

      // optional bool exclude_from_indexes = 19;
      case 19: {
        if (tag == 152) {
         parse_exclude_from_indexes:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exclude_from_indexes_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Value)
  // optional bool boolean_value = 1;
  if (has_boolean_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->boolean_value(), output);
  }

  // optional int64 integer_value = 2;
  if (has_integer_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->integer_value(), output);
  }

  // optional double double_value = 3;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->double_value(), output);
  }

  // optional .google.datastore.v1.Key key_value = 5;
  if (has_key_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *value_type_.key_value_, output);
  }

  // optional .google.datastore.v1.Entity entity_value = 6;
  if (has_entity_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *value_type_.entity_value_, output);
  }

  // optional .google.type.LatLng geo_point_value = 8;
  if (has_geo_point_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *value_type_.geo_point_value_, output);
  }

  // optional .google.datastore.v1.ArrayValue array_value = 9;
  if (has_array_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *value_type_.array_value_, output);
  }

  // optional .google.protobuf.Timestamp timestamp_value = 10;
  if (has_timestamp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *value_type_.timestamp_value_, output);
  }

  // optional .google.protobuf.NullValue null_value = 11;
  if (has_null_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->null_value(), output);
  }

  // optional int32 meaning = 14;
  if (this->meaning() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->meaning(), output);
  }

  // optional string string_value = 17;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Value.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->string_value(), output);
  }

  // optional bytes blob_value = 18;
  if (has_blob_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->blob_value(), output);
  }

  // optional bool exclude_from_indexes = 19;
  if (this->exclude_from_indexes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->exclude_from_indexes(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Value)
  // optional bool boolean_value = 1;
  if (has_boolean_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->boolean_value(), target);
  }

  // optional int64 integer_value = 2;
  if (has_integer_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->integer_value(), target);
  }

  // optional double double_value = 3;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->double_value(), target);
  }

  // optional .google.datastore.v1.Key key_value = 5;
  if (has_key_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *value_type_.key_value_, false, target);
  }

  // optional .google.datastore.v1.Entity entity_value = 6;
  if (has_entity_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *value_type_.entity_value_, false, target);
  }

  // optional .google.type.LatLng geo_point_value = 8;
  if (has_geo_point_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *value_type_.geo_point_value_, false, target);
  }

  // optional .google.datastore.v1.ArrayValue array_value = 9;
  if (has_array_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *value_type_.array_value_, false, target);
  }

  // optional .google.protobuf.Timestamp timestamp_value = 10;
  if (has_timestamp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *value_type_.timestamp_value_, false, target);
  }

  // optional .google.protobuf.NullValue null_value = 11;
  if (has_null_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->null_value(), target);
  }

  // optional int32 meaning = 14;
  if (this->meaning() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->meaning(), target);
  }

  // optional string string_value = 17;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.datastore.v1.Value.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->string_value(), target);
  }

  // optional bytes blob_value = 18;
  if (has_blob_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->blob_value(), target);
  }

  // optional bool exclude_from_indexes = 19;
  if (this->exclude_from_indexes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->exclude_from_indexes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Value)
  size_t total_size = 0;

  // optional int32 meaning = 14;
  if (this->meaning() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->meaning());
  }

  // optional bool exclude_from_indexes = 19;
  if (this->exclude_from_indexes() != 0) {
    total_size += 2 + 1;
  }

  switch (value_type_case()) {
    // optional .google.protobuf.NullValue null_value = 11;
    case kNullValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->null_value());
      break;
    }
    // optional bool boolean_value = 1;
    case kBooleanValue: {
      total_size += 1 + 1;
      break;
    }
    // optional int64 integer_value = 2;
    case kIntegerValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->integer_value());
      break;
    }
    // optional double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // optional .google.protobuf.Timestamp timestamp_value = 10;
    case kTimestampValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_type_.timestamp_value_);
      break;
    }
    // optional .google.datastore.v1.Key key_value = 5;
    case kKeyValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_type_.key_value_);
      break;
    }
    // optional string string_value = 17;
    case kStringValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // optional bytes blob_value = 18;
    case kBlobValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->blob_value());
      break;
    }
    // optional .google.type.LatLng geo_point_value = 8;
    case kGeoPointValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_type_.geo_point_value_);
      break;
    }
    // optional .google.datastore.v1.Entity entity_value = 6;
    case kEntityValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_type_.entity_value_);
      break;
    }
    // optional .google.datastore.v1.ArrayValue array_value = 9;
    case kArrayValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_type_.array_value_);
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Value)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Value)
    UnsafeMergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Value)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Value::UnsafeMergeFrom(const Value& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.value_type_case()) {
    case kNullValue: {
      set_null_value(from.null_value());
      break;
    }
    case kBooleanValue: {
      set_boolean_value(from.boolean_value());
      break;
    }
    case kIntegerValue: {
      set_integer_value(from.integer_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kTimestampValue: {
      mutable_timestamp_value()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_value());
      break;
    }
    case kKeyValue: {
      mutable_key_value()->::google::datastore::v1::Key::MergeFrom(from.key_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBlobValue: {
      set_blob_value(from.blob_value());
      break;
    }
    case kGeoPointValue: {
      mutable_geo_point_value()->::google::type::LatLng::MergeFrom(from.geo_point_value());
      break;
    }
    case kEntityValue: {
      mutable_entity_value()->::google::datastore::v1::Entity::MergeFrom(from.entity_value());
      break;
    }
    case kArrayValue: {
      mutable_array_value()->::google::datastore::v1::ArrayValue::MergeFrom(from.array_value());
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
  if (from.meaning() != 0) {
    set_meaning(from.meaning());
  }
  if (from.exclude_from_indexes() != 0) {
    set_exclude_from_indexes(from.exclude_from_indexes());
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Value)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Value::IsInitialized() const {

  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  std::swap(meaning_, other->meaning_);
  std::swap(exclude_from_indexes_, other->exclude_from_indexes_);
  std::swap(value_type_, other->value_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Value_descriptor_;
  metadata.reflection = Value_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Value

// optional .google.protobuf.NullValue null_value = 11;
bool Value::has_null_value() const {
  return value_type_case() == kNullValue;
}
void Value::set_has_null_value() {
  _oneof_case_[0] = kNullValue;
}
void Value::clear_null_value() {
  if (has_null_value()) {
    value_type_.null_value_ = 0;
    clear_has_value_type();
  }
}
::google::protobuf::NullValue Value::null_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.null_value)
  if (has_null_value()) {
    return static_cast< ::google::protobuf::NullValue >(value_type_.null_value_);
  }
  return static_cast< ::google::protobuf::NullValue >(0);
}
void Value::set_null_value(::google::protobuf::NullValue value) {
  if (!has_null_value()) {
    clear_value_type();
    set_has_null_value();
  }
  value_type_.null_value_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.null_value)
}

// optional bool boolean_value = 1;
bool Value::has_boolean_value() const {
  return value_type_case() == kBooleanValue;
}
void Value::set_has_boolean_value() {
  _oneof_case_[0] = kBooleanValue;
}
void Value::clear_boolean_value() {
  if (has_boolean_value()) {
    value_type_.boolean_value_ = false;
    clear_has_value_type();
  }
}
bool Value::boolean_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.boolean_value)
  if (has_boolean_value()) {
    return value_type_.boolean_value_;
  }
  return false;
}
void Value::set_boolean_value(bool value) {
  if (!has_boolean_value()) {
    clear_value_type();
    set_has_boolean_value();
  }
  value_type_.boolean_value_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.boolean_value)
}

// optional int64 integer_value = 2;
bool Value::has_integer_value() const {
  return value_type_case() == kIntegerValue;
}
void Value::set_has_integer_value() {
  _oneof_case_[0] = kIntegerValue;
}
void Value::clear_integer_value() {
  if (has_integer_value()) {
    value_type_.integer_value_ = GOOGLE_LONGLONG(0);
    clear_has_value_type();
  }
}
::google::protobuf::int64 Value::integer_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.integer_value)
  if (has_integer_value()) {
    return value_type_.integer_value_;
  }
  return GOOGLE_LONGLONG(0);
}
void Value::set_integer_value(::google::protobuf::int64 value) {
  if (!has_integer_value()) {
    clear_value_type();
    set_has_integer_value();
  }
  value_type_.integer_value_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.integer_value)
}

// optional double double_value = 3;
bool Value::has_double_value() const {
  return value_type_case() == kDoubleValue;
}
void Value::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
void Value::clear_double_value() {
  if (has_double_value()) {
    value_type_.double_value_ = 0;
    clear_has_value_type();
  }
}
double Value::double_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.double_value)
  if (has_double_value()) {
    return value_type_.double_value_;
  }
  return 0;
}
void Value::set_double_value(double value) {
  if (!has_double_value()) {
    clear_value_type();
    set_has_double_value();
  }
  value_type_.double_value_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.double_value)
}

// optional .google.protobuf.Timestamp timestamp_value = 10;
bool Value::has_timestamp_value() const {
  return value_type_case() == kTimestampValue;
}
void Value::set_has_timestamp_value() {
  _oneof_case_[0] = kTimestampValue;
}
void Value::clear_timestamp_value() {
  if (has_timestamp_value()) {
    delete value_type_.timestamp_value_;
    clear_has_value_type();
  }
}
 const ::google::protobuf::Timestamp& Value::timestamp_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.timestamp_value)
  return has_timestamp_value()
      ? *value_type_.timestamp_value_
      : ::google::protobuf::Timestamp::default_instance();
}
::google::protobuf::Timestamp* Value::mutable_timestamp_value() {
  if (!has_timestamp_value()) {
    clear_value_type();
    set_has_timestamp_value();
    value_type_.timestamp_value_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Value.timestamp_value)
  return value_type_.timestamp_value_;
}
::google::protobuf::Timestamp* Value::release_timestamp_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Value.timestamp_value)
  if (has_timestamp_value()) {
    clear_has_value_type();
    ::google::protobuf::Timestamp* temp = value_type_.timestamp_value_;
    value_type_.timestamp_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value::set_allocated_timestamp_value(::google::protobuf::Timestamp* timestamp_value) {
  clear_value_type();
  if (timestamp_value) {
    if (static_cast< ::google::protobuf::Timestamp*>(timestamp_value)->GetArena() != NULL) {
      ::google::protobuf::Timestamp* new_timestamp_value = new ::google::protobuf::Timestamp;
      new_timestamp_value->CopyFrom(*timestamp_value);
      timestamp_value = new_timestamp_value;
    }
    set_has_timestamp_value();
    value_type_.timestamp_value_ = timestamp_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.timestamp_value)
}

// optional .google.datastore.v1.Key key_value = 5;
bool Value::has_key_value() const {
  return value_type_case() == kKeyValue;
}
void Value::set_has_key_value() {
  _oneof_case_[0] = kKeyValue;
}
void Value::clear_key_value() {
  if (has_key_value()) {
    delete value_type_.key_value_;
    clear_has_value_type();
  }
}
 const ::google::datastore::v1::Key& Value::key_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.key_value)
  return has_key_value()
      ? *value_type_.key_value_
      : ::google::datastore::v1::Key::default_instance();
}
::google::datastore::v1::Key* Value::mutable_key_value() {
  if (!has_key_value()) {
    clear_value_type();
    set_has_key_value();
    value_type_.key_value_ = new ::google::datastore::v1::Key;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Value.key_value)
  return value_type_.key_value_;
}
::google::datastore::v1::Key* Value::release_key_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Value.key_value)
  if (has_key_value()) {
    clear_has_value_type();
    ::google::datastore::v1::Key* temp = value_type_.key_value_;
    value_type_.key_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value::set_allocated_key_value(::google::datastore::v1::Key* key_value) {
  clear_value_type();
  if (key_value) {
    set_has_key_value();
    value_type_.key_value_ = key_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.key_value)
}

// optional string string_value = 17;
bool Value::has_string_value() const {
  return value_type_case() == kStringValue;
}
void Value::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
void Value::clear_string_value() {
  if (has_string_value()) {
    value_type_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value_type();
  }
}
const ::std::string& Value::string_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.string_value)
  if (has_string_value()) {
    return value_type_.string_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void Value::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.string_value)
  if (!has_string_value()) {
    clear_value_type();
    set_has_string_value();
    value_type_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_type_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.string_value)
}
void Value::set_string_value(const char* value) {
  if (!has_string_value()) {
    clear_value_type();
    set_has_string_value();
    value_type_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_type_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.Value.string_value)
}
void Value::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value_type();
    set_has_string_value();
    value_type_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_type_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.Value.string_value)
}
::std::string* Value::mutable_string_value() {
  if (!has_string_value()) {
    clear_value_type();
    set_has_string_value();
    value_type_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Value.string_value)
  return value_type_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Value::release_string_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Value.string_value)
  if (has_string_value()) {
    clear_has_value_type();
    return value_type_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void Value::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_type_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value_type();
  if (string_value != NULL) {
    set_has_string_value();
    value_type_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.string_value)
}

// optional bytes blob_value = 18;
bool Value::has_blob_value() const {
  return value_type_case() == kBlobValue;
}
void Value::set_has_blob_value() {
  _oneof_case_[0] = kBlobValue;
}
void Value::clear_blob_value() {
  if (has_blob_value()) {
    value_type_.blob_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value_type();
  }
}
const ::std::string& Value::blob_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.blob_value)
  if (has_blob_value()) {
    return value_type_.blob_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void Value::set_blob_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.blob_value)
  if (!has_blob_value()) {
    clear_value_type();
    set_has_blob_value();
    value_type_.blob_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_type_.blob_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.blob_value)
}
void Value::set_blob_value(const char* value) {
  if (!has_blob_value()) {
    clear_value_type();
    set_has_blob_value();
    value_type_.blob_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_type_.blob_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.datastore.v1.Value.blob_value)
}
void Value::set_blob_value(const void* value, size_t size) {
  if (!has_blob_value()) {
    clear_value_type();
    set_has_blob_value();
    value_type_.blob_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_type_.blob_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.datastore.v1.Value.blob_value)
}
::std::string* Value::mutable_blob_value() {
  if (!has_blob_value()) {
    clear_value_type();
    set_has_blob_value();
    value_type_.blob_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Value.blob_value)
  return value_type_.blob_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Value::release_blob_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Value.blob_value)
  if (has_blob_value()) {
    clear_has_value_type();
    return value_type_.blob_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void Value::set_allocated_blob_value(::std::string* blob_value) {
  if (!has_blob_value()) {
    value_type_.blob_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value_type();
  if (blob_value != NULL) {
    set_has_blob_value();
    value_type_.blob_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        blob_value);
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.blob_value)
}

// optional .google.type.LatLng geo_point_value = 8;
bool Value::has_geo_point_value() const {
  return value_type_case() == kGeoPointValue;
}
void Value::set_has_geo_point_value() {
  _oneof_case_[0] = kGeoPointValue;
}
void Value::clear_geo_point_value() {
  if (has_geo_point_value()) {
    delete value_type_.geo_point_value_;
    clear_has_value_type();
  }
}
 const ::google::type::LatLng& Value::geo_point_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.geo_point_value)
  return has_geo_point_value()
      ? *value_type_.geo_point_value_
      : ::google::type::LatLng::default_instance();
}
::google::type::LatLng* Value::mutable_geo_point_value() {
  if (!has_geo_point_value()) {
    clear_value_type();
    set_has_geo_point_value();
    value_type_.geo_point_value_ = new ::google::type::LatLng;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Value.geo_point_value)
  return value_type_.geo_point_value_;
}
::google::type::LatLng* Value::release_geo_point_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Value.geo_point_value)
  if (has_geo_point_value()) {
    clear_has_value_type();
    ::google::type::LatLng* temp = value_type_.geo_point_value_;
    value_type_.geo_point_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value::set_allocated_geo_point_value(::google::type::LatLng* geo_point_value) {
  clear_value_type();
  if (geo_point_value) {
    set_has_geo_point_value();
    value_type_.geo_point_value_ = geo_point_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.geo_point_value)
}

// optional .google.datastore.v1.Entity entity_value = 6;
bool Value::has_entity_value() const {
  return value_type_case() == kEntityValue;
}
void Value::set_has_entity_value() {
  _oneof_case_[0] = kEntityValue;
}
void Value::clear_entity_value() {
  if (has_entity_value()) {
    delete value_type_.entity_value_;
    clear_has_value_type();
  }
}
 const ::google::datastore::v1::Entity& Value::entity_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.entity_value)
  return has_entity_value()
      ? *value_type_.entity_value_
      : ::google::datastore::v1::Entity::default_instance();
}
::google::datastore::v1::Entity* Value::mutable_entity_value() {
  if (!has_entity_value()) {
    clear_value_type();
    set_has_entity_value();
    value_type_.entity_value_ = new ::google::datastore::v1::Entity;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Value.entity_value)
  return value_type_.entity_value_;
}
::google::datastore::v1::Entity* Value::release_entity_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Value.entity_value)
  if (has_entity_value()) {
    clear_has_value_type();
    ::google::datastore::v1::Entity* temp = value_type_.entity_value_;
    value_type_.entity_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value::set_allocated_entity_value(::google::datastore::v1::Entity* entity_value) {
  clear_value_type();
  if (entity_value) {
    set_has_entity_value();
    value_type_.entity_value_ = entity_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.entity_value)
}

// optional .google.datastore.v1.ArrayValue array_value = 9;
bool Value::has_array_value() const {
  return value_type_case() == kArrayValue;
}
void Value::set_has_array_value() {
  _oneof_case_[0] = kArrayValue;
}
void Value::clear_array_value() {
  if (has_array_value()) {
    delete value_type_.array_value_;
    clear_has_value_type();
  }
}
 const ::google::datastore::v1::ArrayValue& Value::array_value() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.array_value)
  return has_array_value()
      ? *value_type_.array_value_
      : ::google::datastore::v1::ArrayValue::default_instance();
}
::google::datastore::v1::ArrayValue* Value::mutable_array_value() {
  if (!has_array_value()) {
    clear_value_type();
    set_has_array_value();
    value_type_.array_value_ = new ::google::datastore::v1::ArrayValue;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Value.array_value)
  return value_type_.array_value_;
}
::google::datastore::v1::ArrayValue* Value::release_array_value() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Value.array_value)
  if (has_array_value()) {
    clear_has_value_type();
    ::google::datastore::v1::ArrayValue* temp = value_type_.array_value_;
    value_type_.array_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value::set_allocated_array_value(::google::datastore::v1::ArrayValue* array_value) {
  clear_value_type();
  if (array_value) {
    set_has_array_value();
    value_type_.array_value_ = array_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Value.array_value)
}

// optional int32 meaning = 14;
void Value::clear_meaning() {
  meaning_ = 0;
}
::google::protobuf::int32 Value::meaning() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.meaning)
  return meaning_;
}
void Value::set_meaning(::google::protobuf::int32 value) {
  
  meaning_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.meaning)
}

// optional bool exclude_from_indexes = 19;
void Value::clear_exclude_from_indexes() {
  exclude_from_indexes_ = false;
}
bool Value::exclude_from_indexes() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Value.exclude_from_indexes)
  return exclude_from_indexes_;
}
void Value::set_exclude_from_indexes(bool value) {
  
  exclude_from_indexes_ = value;
  // @@protoc_insertion_point(field_set:google.datastore.v1.Value.exclude_from_indexes)
}

bool Value::has_value_type() const {
  return value_type_case() != VALUE_TYPE_NOT_SET;
}
void Value::clear_has_value_type() {
  _oneof_case_[0] = VALUE_TYPE_NOT_SET;
}
Value::ValueTypeCase Value::value_type_case() const {
  return Value::ValueTypeCase(_oneof_case_[0]);
}
inline const Value* Value::internal_default_instance() {
  return &Value_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kKeyFieldNumber;
const int Entity::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.datastore.v1.Entity)
}

void Entity::InitAsDefaultInstance() {
  key_ = const_cast< ::google::datastore::v1::Key*>(
      ::google::datastore::v1::Key::internal_default_instance());
}

Entity::Entity(const Entity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.datastore.v1.Entity)
}

void Entity::SharedCtor() {
  properties_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  properties_.SetEntryDescriptor(
      &::google::datastore::v1::Entity_PropertiesEntry_descriptor_);
  key_ = NULL;
  _cached_size_ = 0;
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:google.datastore.v1.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  if (this != &Entity_default_instance_.get()) {
    delete key_;
  }
}

void Entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Entity_descriptor_;
}

const Entity& Entity::default_instance() {
  protobuf_InitDefaults_google_2fdatastore_2fv1_2fentity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Entity> Entity_default_instance_;

Entity* Entity::New(::google::protobuf::Arena* arena) const {
  Entity* n = new Entity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.datastore.v1.Entity)
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
  properties_.Clear();
}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.datastore.v1.Entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.datastore.v1.Key key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_properties;
        break;
      }

      // map<string, .google.datastore.v1.Value> properties = 3;
      case 3: {
        if (tag == 26) {
         parse_properties:
          DO_(input->IncrementRecursionDepth());
         parse_loop_properties:
          Entity_PropertiesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::datastore::v1::Value,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.datastore.v1.Entity.PropertiesEntry.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_properties;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.datastore.v1.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.datastore.v1.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.datastore.v1.Entity)
  // optional .google.datastore.v1.Key key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // map<string, .google.datastore.v1.Value> properties = 3;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.v1.Entity.PropertiesEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.datastore.v1.Entity)
}

::google::protobuf::uint8* Entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.datastore.v1.Entity)
  // optional .google.datastore.v1.Key key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->key_, false, target);
  }

  // map<string, .google.datastore.v1.Value> properties = 3;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.datastore.v1.Entity.PropertiesEntry.key");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Entity_PropertiesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.datastore.v1.Entity)
  return target;
}

size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.datastore.v1.Entity)
  size_t total_size = 0;

  // optional .google.datastore.v1.Key key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->key_);
  }

  // map<string, .google.datastore.v1.Value> properties = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::google::protobuf::scoped_ptr<Entity_PropertiesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.datastore.v1.Entity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.datastore.v1.Entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.datastore.v1.Entity)
    UnsafeMergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.datastore.v1.Entity)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Entity::UnsafeMergeFrom(const Entity& from) {
  GOOGLE_DCHECK(&from != this);
  properties_.MergeFrom(from.properties_);
  if (from.has_key()) {
    mutable_key()->::google::datastore::v1::Key::MergeFrom(from.key());
  }
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.datastore.v1.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.datastore.v1.Entity)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Entity::IsInitialized() const {

  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  std::swap(key_, other->key_);
  properties_.Swap(&other->properties_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Entity_descriptor_;
  metadata.reflection = Entity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Entity

// optional .google.datastore.v1.Key key = 1;
bool Entity::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
void Entity::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
const ::google::datastore::v1::Key& Entity::key() const {
  // @@protoc_insertion_point(field_get:google.datastore.v1.Entity.key)
  return key_ != NULL ? *key_
                         : *::google::datastore::v1::Key::internal_default_instance();
}
::google::datastore::v1::Key* Entity::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::google::datastore::v1::Key;
  }
  // @@protoc_insertion_point(field_mutable:google.datastore.v1.Entity.key)
  return key_;
}
::google::datastore::v1::Key* Entity::release_key() {
  // @@protoc_insertion_point(field_release:google.datastore.v1.Entity.key)
  
  ::google::datastore::v1::Key* temp = key_;
  key_ = NULL;
  return temp;
}
void Entity::set_allocated_key(::google::datastore::v1::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.datastore.v1.Entity.key)
}

// map<string, .google.datastore.v1.Value> properties = 3;
int Entity::properties_size() const {
  return properties_.size();
}
void Entity::clear_properties() {
  properties_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >&
Entity::properties() const {
  // @@protoc_insertion_point(field_map:google.datastore.v1.Entity.properties)
  return properties_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::datastore::v1::Value >*
Entity::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_map:google.datastore.v1.Entity.properties)
  return properties_.MutableMap();
}

inline const Entity* Entity::internal_default_instance() {
  return &Entity_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace datastore
}  // namespace google

// @@protoc_insertion_point(global_scope)
