// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto

#ifndef PROTOBUF_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto__INCLUDED
#define PROTOBUF_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/devtools/clouderrorreporting/v1beta1/common.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouderrorreporting {
namespace v1beta1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
void protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

class DeleteEventsRequest;
class DeleteEventsResponse;
class ErrorGroupStats;
class ListEventsRequest;
class ListEventsResponse;
class ListGroupStatsRequest;
class ListGroupStatsResponse;
class QueryTimeRange;
class ServiceContextFilter;
class TimedCount;

enum QueryTimeRange_Period {
  QueryTimeRange_Period_PERIOD_UNSPECIFIED = 0,
  QueryTimeRange_Period_PERIOD_1_HOUR = 1,
  QueryTimeRange_Period_PERIOD_6_HOURS = 2,
  QueryTimeRange_Period_PERIOD_1_DAY = 3,
  QueryTimeRange_Period_PERIOD_1_WEEK = 4,
  QueryTimeRange_Period_PERIOD_30_DAYS = 5,
  QueryTimeRange_Period_QueryTimeRange_Period_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QueryTimeRange_Period_QueryTimeRange_Period_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QueryTimeRange_Period_IsValid(int value);
const QueryTimeRange_Period QueryTimeRange_Period_Period_MIN = QueryTimeRange_Period_PERIOD_UNSPECIFIED;
const QueryTimeRange_Period QueryTimeRange_Period_Period_MAX = QueryTimeRange_Period_PERIOD_30_DAYS;
const int QueryTimeRange_Period_Period_ARRAYSIZE = QueryTimeRange_Period_Period_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryTimeRange_Period_descriptor();
inline const ::std::string& QueryTimeRange_Period_Name(QueryTimeRange_Period value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryTimeRange_Period_descriptor(), value);
}
inline bool QueryTimeRange_Period_Parse(
    const ::std::string& name, QueryTimeRange_Period* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryTimeRange_Period>(
    QueryTimeRange_Period_descriptor(), name, value);
}
enum TimedCountAlignment {
  ERROR_COUNT_ALIGNMENT_UNSPECIFIED = 0,
  ALIGNMENT_EQUAL_ROUNDED = 1,
  ALIGNMENT_EQUAL_AT_END = 2,
  TimedCountAlignment_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TimedCountAlignment_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TimedCountAlignment_IsValid(int value);
const TimedCountAlignment TimedCountAlignment_MIN = ERROR_COUNT_ALIGNMENT_UNSPECIFIED;
const TimedCountAlignment TimedCountAlignment_MAX = ALIGNMENT_EQUAL_AT_END;
const int TimedCountAlignment_ARRAYSIZE = TimedCountAlignment_MAX + 1;

const ::google::protobuf::EnumDescriptor* TimedCountAlignment_descriptor();
inline const ::std::string& TimedCountAlignment_Name(TimedCountAlignment value) {
  return ::google::protobuf::internal::NameOfEnum(
    TimedCountAlignment_descriptor(), value);
}
inline bool TimedCountAlignment_Parse(
    const ::std::string& name, TimedCountAlignment* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimedCountAlignment>(
    TimedCountAlignment_descriptor(), name, value);
}
enum ErrorGroupOrder {
  GROUP_ORDER_UNSPECIFIED = 0,
  COUNT_DESC = 1,
  LAST_SEEN_DESC = 2,
  CREATED_DESC = 3,
  AFFECTED_USERS_DESC = 4,
  ErrorGroupOrder_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorGroupOrder_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorGroupOrder_IsValid(int value);
const ErrorGroupOrder ErrorGroupOrder_MIN = GROUP_ORDER_UNSPECIFIED;
const ErrorGroupOrder ErrorGroupOrder_MAX = AFFECTED_USERS_DESC;
const int ErrorGroupOrder_ARRAYSIZE = ErrorGroupOrder_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorGroupOrder_descriptor();
inline const ::std::string& ErrorGroupOrder_Name(ErrorGroupOrder value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorGroupOrder_descriptor(), value);
}
inline bool ErrorGroupOrder_Parse(
    const ::std::string& name, ErrorGroupOrder* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorGroupOrder>(
    ErrorGroupOrder_descriptor(), name, value);
}
// ===================================================================

class ListGroupStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest) */ {
 public:
  ListGroupStatsRequest();
  virtual ~ListGroupStatsRequest();

  ListGroupStatsRequest(const ListGroupStatsRequest& from);

  inline ListGroupStatsRequest& operator=(const ListGroupStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGroupStatsRequest& default_instance();

  static const ListGroupStatsRequest* internal_default_instance();

  void Swap(ListGroupStatsRequest* other);

  // implements Message ----------------------------------------------

  inline ListGroupStatsRequest* New() const { return New(NULL); }

  ListGroupStatsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListGroupStatsRequest& from);
  void MergeFrom(const ListGroupStatsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListGroupStatsRequest* other);
  void UnsafeMergeFrom(const ListGroupStatsRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string project_name = 1;
  void clear_project_name();
  static const int kProjectNameFieldNumber = 1;
  const ::std::string& project_name() const;
  void set_project_name(const ::std::string& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  ::std::string* mutable_project_name();
  ::std::string* release_project_name();
  void set_allocated_project_name(::std::string* project_name);

  // repeated string group_id = 2;
  int group_id_size() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  const ::std::string& group_id(int index) const;
  ::std::string* mutable_group_id(int index);
  void set_group_id(int index, const ::std::string& value);
  void set_group_id(int index, const char* value);
  void set_group_id(int index, const char* value, size_t size);
  ::std::string* add_group_id();
  void add_group_id(const ::std::string& value);
  void add_group_id(const char* value);
  void add_group_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& group_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_group_id();

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  bool has_service_filter() const;
  void clear_service_filter();
  static const int kServiceFilterFieldNumber = 3;
  const ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter& service_filter() const;
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* mutable_service_filter();
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* release_service_filter();
  void set_allocated_service_filter(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter);

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
  bool has_time_range() const;
  void clear_time_range();
  static const int kTimeRangeFieldNumber = 5;
  const ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange& time_range() const;
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* mutable_time_range();
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* release_time_range();
  void set_allocated_time_range(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range);

  // optional .google.protobuf.Duration timed_count_duration = 6;
  bool has_timed_count_duration() const;
  void clear_timed_count_duration();
  static const int kTimedCountDurationFieldNumber = 6;
  const ::google::protobuf::Duration& timed_count_duration() const;
  ::google::protobuf::Duration* mutable_timed_count_duration();
  ::google::protobuf::Duration* release_timed_count_duration();
  void set_allocated_timed_count_duration(::google::protobuf::Duration* timed_count_duration);

  // optional .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
  void clear_alignment();
  static const int kAlignmentFieldNumber = 7;
  ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment alignment() const;
  void set_alignment(::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment value);

  // optional .google.protobuf.Timestamp alignment_time = 8;
  bool has_alignment_time() const;
  void clear_alignment_time();
  static const int kAlignmentTimeFieldNumber = 8;
  const ::google::protobuf::Timestamp& alignment_time() const;
  ::google::protobuf::Timestamp* mutable_alignment_time();
  ::google::protobuf::Timestamp* release_alignment_time();
  void set_allocated_alignment_time(::google::protobuf::Timestamp* alignment_time);

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
  void clear_order();
  static const int kOrderFieldNumber = 9;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder order() const;
  void set_order(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder value);

  // optional int32 page_size = 11;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 11;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // optional string page_token = 12;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 12;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> group_id_;
  ::google::protobuf::internal::ArenaStringPtr project_name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter_;
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range_;
  ::google::protobuf::Duration* timed_count_duration_;
  ::google::protobuf::Timestamp* alignment_time_;
  int alignment_;
  int order_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListGroupStatsRequest> ListGroupStatsRequest_default_instance_;

// -------------------------------------------------------------------

class ListGroupStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse) */ {
 public:
  ListGroupStatsResponse();
  virtual ~ListGroupStatsResponse();

  ListGroupStatsResponse(const ListGroupStatsResponse& from);

  inline ListGroupStatsResponse& operator=(const ListGroupStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGroupStatsResponse& default_instance();

  static const ListGroupStatsResponse* internal_default_instance();

  void Swap(ListGroupStatsResponse* other);

  // implements Message ----------------------------------------------

  inline ListGroupStatsResponse* New() const { return New(NULL); }

  ListGroupStatsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListGroupStatsResponse& from);
  void MergeFrom(const ListGroupStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListGroupStatsResponse* other);
  void UnsafeMergeFrom(const ListGroupStatsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
  int error_group_stats_size() const;
  void clear_error_group_stats();
  static const int kErrorGroupStatsFieldNumber = 1;
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats& error_group_stats(int index) const;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats* mutable_error_group_stats(int index);
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats* add_error_group_stats();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats >*
      mutable_error_group_stats();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats >&
      error_group_stats() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  bool has_time_range_begin() const;
  void clear_time_range_begin();
  static const int kTimeRangeBeginFieldNumber = 4;
  const ::google::protobuf::Timestamp& time_range_begin() const;
  ::google::protobuf::Timestamp* mutable_time_range_begin();
  ::google::protobuf::Timestamp* release_time_range_begin();
  void set_allocated_time_range_begin(::google::protobuf::Timestamp* time_range_begin);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats > error_group_stats_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::Timestamp* time_range_begin_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListGroupStatsResponse> ListGroupStatsResponse_default_instance_;

// -------------------------------------------------------------------

class ErrorGroupStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats) */ {
 public:
  ErrorGroupStats();
  virtual ~ErrorGroupStats();

  ErrorGroupStats(const ErrorGroupStats& from);

  inline ErrorGroupStats& operator=(const ErrorGroupStats& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorGroupStats& default_instance();

  static const ErrorGroupStats* internal_default_instance();

  void Swap(ErrorGroupStats* other);

  // implements Message ----------------------------------------------

  inline ErrorGroupStats* New() const { return New(NULL); }

  ErrorGroupStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorGroupStats& from);
  void MergeFrom(const ErrorGroupStats& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorGroupStats* other);
  void UnsafeMergeFrom(const ErrorGroupStats& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 1;
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup& group() const;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* mutable_group();
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* release_group();
  void set_allocated_group(::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* group);

  // optional int64 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // optional int64 affected_users_count = 3;
  void clear_affected_users_count();
  static const int kAffectedUsersCountFieldNumber = 3;
  ::google::protobuf::int64 affected_users_count() const;
  void set_affected_users_count(::google::protobuf::int64 value);

  // repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
  int timed_counts_size() const;
  void clear_timed_counts();
  static const int kTimedCountsFieldNumber = 4;
  const ::google::devtools::clouderrorreporting::v1beta1::TimedCount& timed_counts(int index) const;
  ::google::devtools::clouderrorreporting::v1beta1::TimedCount* mutable_timed_counts(int index);
  ::google::devtools::clouderrorreporting::v1beta1::TimedCount* add_timed_counts();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TimedCount >*
      mutable_timed_counts();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TimedCount >&
      timed_counts() const;

  // optional .google.protobuf.Timestamp first_seen_time = 5;
  bool has_first_seen_time() const;
  void clear_first_seen_time();
  static const int kFirstSeenTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& first_seen_time() const;
  ::google::protobuf::Timestamp* mutable_first_seen_time();
  ::google::protobuf::Timestamp* release_first_seen_time();
  void set_allocated_first_seen_time(::google::protobuf::Timestamp* first_seen_time);

  // optional .google.protobuf.Timestamp last_seen_time = 6;
  bool has_last_seen_time() const;
  void clear_last_seen_time();
  static const int kLastSeenTimeFieldNumber = 6;
  const ::google::protobuf::Timestamp& last_seen_time() const;
  ::google::protobuf::Timestamp* mutable_last_seen_time();
  ::google::protobuf::Timestamp* release_last_seen_time();
  void set_allocated_last_seen_time(::google::protobuf::Timestamp* last_seen_time);

  // repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
  int affected_services_size() const;
  void clear_affected_services();
  static const int kAffectedServicesFieldNumber = 7;
  const ::google::devtools::clouderrorreporting::v1beta1::ServiceContext& affected_services(int index) const;
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* mutable_affected_services(int index);
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* add_affected_services();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext >*
      mutable_affected_services();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext >&
      affected_services() const;

  // optional int32 num_affected_services = 8;
  void clear_num_affected_services();
  static const int kNumAffectedServicesFieldNumber = 8;
  ::google::protobuf::int32 num_affected_services() const;
  void set_num_affected_services(::google::protobuf::int32 value);

  // optional .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
  bool has_representative() const;
  void clear_representative();
  static const int kRepresentativeFieldNumber = 9;
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent& representative() const;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* mutable_representative();
  ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* release_representative();
  void set_allocated_representative(::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* representative);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TimedCount > timed_counts_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext > affected_services_;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* group_;
  ::google::protobuf::Timestamp* first_seen_time_;
  ::google::protobuf::Timestamp* last_seen_time_;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* representative_;
  ::google::protobuf::int64 count_;
  ::google::protobuf::int64 affected_users_count_;
  ::google::protobuf::int32 num_affected_services_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ErrorGroupStats> ErrorGroupStats_default_instance_;

// -------------------------------------------------------------------

class TimedCount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.TimedCount) */ {
 public:
  TimedCount();
  virtual ~TimedCount();

  TimedCount(const TimedCount& from);

  inline TimedCount& operator=(const TimedCount& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimedCount& default_instance();

  static const TimedCount* internal_default_instance();

  void Swap(TimedCount* other);

  // implements Message ----------------------------------------------

  inline TimedCount* New() const { return New(NULL); }

  TimedCount* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimedCount& from);
  void MergeFrom(const TimedCount& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TimedCount* other);
  void UnsafeMergeFrom(const TimedCount& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // optional .google.protobuf.Timestamp start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);

  // optional .google.protobuf.Timestamp end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.TimedCount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  ::google::protobuf::int64 count_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TimedCount> TimedCount_default_instance_;

// -------------------------------------------------------------------

class ListEventsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest) */ {
 public:
  ListEventsRequest();
  virtual ~ListEventsRequest();

  ListEventsRequest(const ListEventsRequest& from);

  inline ListEventsRequest& operator=(const ListEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListEventsRequest& default_instance();

  static const ListEventsRequest* internal_default_instance();

  void Swap(ListEventsRequest* other);

  // implements Message ----------------------------------------------

  inline ListEventsRequest* New() const { return New(NULL); }

  ListEventsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListEventsRequest& from);
  void MergeFrom(const ListEventsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListEventsRequest* other);
  void UnsafeMergeFrom(const ListEventsRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string project_name = 1;
  void clear_project_name();
  static const int kProjectNameFieldNumber = 1;
  const ::std::string& project_name() const;
  void set_project_name(const ::std::string& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  ::std::string* mutable_project_name();
  ::std::string* release_project_name();
  void set_allocated_project_name(::std::string* project_name);

  // optional string group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  const ::std::string& group_id() const;
  void set_group_id(const ::std::string& value);
  void set_group_id(const char* value);
  void set_group_id(const char* value, size_t size);
  ::std::string* mutable_group_id();
  ::std::string* release_group_id();
  void set_allocated_group_id(::std::string* group_id);

  // optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
  bool has_service_filter() const;
  void clear_service_filter();
  static const int kServiceFilterFieldNumber = 3;
  const ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter& service_filter() const;
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* mutable_service_filter();
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* release_service_filter();
  void set_allocated_service_filter(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter);

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
  bool has_time_range() const;
  void clear_time_range();
  static const int kTimeRangeFieldNumber = 4;
  const ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange& time_range() const;
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* mutable_time_range();
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* release_time_range();
  void set_allocated_time_range(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range);

  // optional int32 page_size = 6;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 6;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // optional string page_token = 7;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 7;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_name_;
  ::google::protobuf::internal::ArenaStringPtr group_id_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter_;
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListEventsRequest> ListEventsRequest_default_instance_;

// -------------------------------------------------------------------

class ListEventsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse) */ {
 public:
  ListEventsResponse();
  virtual ~ListEventsResponse();

  ListEventsResponse(const ListEventsResponse& from);

  inline ListEventsResponse& operator=(const ListEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListEventsResponse& default_instance();

  static const ListEventsResponse* internal_default_instance();

  void Swap(ListEventsResponse* other);

  // implements Message ----------------------------------------------

  inline ListEventsResponse* New() const { return New(NULL); }

  ListEventsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListEventsResponse& from);
  void MergeFrom(const ListEventsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListEventsResponse* other);
  void UnsafeMergeFrom(const ListEventsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
  int error_events_size() const;
  void clear_error_events();
  static const int kErrorEventsFieldNumber = 1;
  const ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent& error_events(int index) const;
  ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* mutable_error_events(int index);
  ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* add_error_events();
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent >*
      mutable_error_events();
  const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent >&
      error_events() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // optional .google.protobuf.Timestamp time_range_begin = 4;
  bool has_time_range_begin() const;
  void clear_time_range_begin();
  static const int kTimeRangeBeginFieldNumber = 4;
  const ::google::protobuf::Timestamp& time_range_begin() const;
  ::google::protobuf::Timestamp* mutable_time_range_begin();
  ::google::protobuf::Timestamp* release_time_range_begin();
  void set_allocated_time_range_begin(::google::protobuf::Timestamp* time_range_begin);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent > error_events_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::Timestamp* time_range_begin_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListEventsResponse> ListEventsResponse_default_instance_;

// -------------------------------------------------------------------

class QueryTimeRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange) */ {
 public:
  QueryTimeRange();
  virtual ~QueryTimeRange();

  QueryTimeRange(const QueryTimeRange& from);

  inline QueryTimeRange& operator=(const QueryTimeRange& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryTimeRange& default_instance();

  static const QueryTimeRange* internal_default_instance();

  void Swap(QueryTimeRange* other);

  // implements Message ----------------------------------------------

  inline QueryTimeRange* New() const { return New(NULL); }

  QueryTimeRange* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryTimeRange& from);
  void MergeFrom(const QueryTimeRange& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryTimeRange* other);
  void UnsafeMergeFrom(const QueryTimeRange& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryTimeRange_Period Period;
  static const Period PERIOD_UNSPECIFIED =
    QueryTimeRange_Period_PERIOD_UNSPECIFIED;
  static const Period PERIOD_1_HOUR =
    QueryTimeRange_Period_PERIOD_1_HOUR;
  static const Period PERIOD_6_HOURS =
    QueryTimeRange_Period_PERIOD_6_HOURS;
  static const Period PERIOD_1_DAY =
    QueryTimeRange_Period_PERIOD_1_DAY;
  static const Period PERIOD_1_WEEK =
    QueryTimeRange_Period_PERIOD_1_WEEK;
  static const Period PERIOD_30_DAYS =
    QueryTimeRange_Period_PERIOD_30_DAYS;
  static inline bool Period_IsValid(int value) {
    return QueryTimeRange_Period_IsValid(value);
  }
  static const Period Period_MIN =
    QueryTimeRange_Period_Period_MIN;
  static const Period Period_MAX =
    QueryTimeRange_Period_Period_MAX;
  static const int Period_ARRAYSIZE =
    QueryTimeRange_Period_Period_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Period_descriptor() {
    return QueryTimeRange_Period_descriptor();
  }
  static inline const ::std::string& Period_Name(Period value) {
    return QueryTimeRange_Period_Name(value);
  }
  static inline bool Period_Parse(const ::std::string& name,
      Period* value) {
    return QueryTimeRange_Period_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
  void clear_period();
  static const int kPeriodFieldNumber = 1;
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period period() const;
  void set_period(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period value);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int period_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryTimeRange> QueryTimeRange_default_instance_;

// -------------------------------------------------------------------

class ServiceContextFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter) */ {
 public:
  ServiceContextFilter();
  virtual ~ServiceContextFilter();

  ServiceContextFilter(const ServiceContextFilter& from);

  inline ServiceContextFilter& operator=(const ServiceContextFilter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceContextFilter& default_instance();

  static const ServiceContextFilter* internal_default_instance();

  void Swap(ServiceContextFilter* other);

  // implements Message ----------------------------------------------

  inline ServiceContextFilter* New() const { return New(NULL); }

  ServiceContextFilter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceContextFilter& from);
  void MergeFrom(const ServiceContextFilter& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServiceContextFilter* other);
  void UnsafeMergeFrom(const ServiceContextFilter& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service = 2;
  void clear_service();
  static const int kServiceFieldNumber = 2;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // optional string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string resource_type = 4;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 4;
  const ::std::string& resource_type() const;
  void set_resource_type(const ::std::string& value);
  void set_resource_type(const char* value);
  void set_resource_type(const char* value, size_t size);
  ::std::string* mutable_resource_type();
  ::std::string* release_resource_type();
  void set_allocated_resource_type(::std::string* resource_type);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr resource_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ServiceContextFilter> ServiceContextFilter_default_instance_;

// -------------------------------------------------------------------

class DeleteEventsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest) */ {
 public:
  DeleteEventsRequest();
  virtual ~DeleteEventsRequest();

  DeleteEventsRequest(const DeleteEventsRequest& from);

  inline DeleteEventsRequest& operator=(const DeleteEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEventsRequest& default_instance();

  static const DeleteEventsRequest* internal_default_instance();

  void Swap(DeleteEventsRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteEventsRequest* New() const { return New(NULL); }

  DeleteEventsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteEventsRequest& from);
  void MergeFrom(const DeleteEventsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteEventsRequest* other);
  void UnsafeMergeFrom(const DeleteEventsRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string project_name = 1;
  void clear_project_name();
  static const int kProjectNameFieldNumber = 1;
  const ::std::string& project_name() const;
  void set_project_name(const ::std::string& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  ::std::string* mutable_project_name();
  ::std::string* release_project_name();
  void set_allocated_project_name(::std::string* project_name);

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteEventsRequest> DeleteEventsRequest_default_instance_;

// -------------------------------------------------------------------

class DeleteEventsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse) */ {
 public:
  DeleteEventsResponse();
  virtual ~DeleteEventsResponse();

  DeleteEventsResponse(const DeleteEventsResponse& from);

  inline DeleteEventsResponse& operator=(const DeleteEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteEventsResponse& default_instance();

  static const DeleteEventsResponse* internal_default_instance();

  void Swap(DeleteEventsResponse* other);

  // implements Message ----------------------------------------------

  inline DeleteEventsResponse* New() const { return New(NULL); }

  DeleteEventsResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteEventsResponse& from);
  void MergeFrom(const DeleteEventsResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteEventsResponse* other);
  void UnsafeMergeFrom(const DeleteEventsResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();
  friend void protobuf_ShutdownFile_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteEventsResponse> DeleteEventsResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGroupStatsRequest

// optional string project_name = 1;
inline void ListGroupStatsRequest::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupStatsRequest::project_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
  return project_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupStatsRequest::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}
inline void ListGroupStatsRequest::set_project_name(const char* value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}
inline void ListGroupStatsRequest::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}
inline ::std::string* ListGroupStatsRequest::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupStatsRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupStatsRequest::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.project_name)
}

// repeated string group_id = 2;
inline int ListGroupStatsRequest::group_id_size() const {
  return group_id_.size();
}
inline void ListGroupStatsRequest::clear_group_id() {
  group_id_.Clear();
}
inline const ::std::string& ListGroupStatsRequest::group_id(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_.Get(index);
}
inline ::std::string* ListGroupStatsRequest::mutable_group_id(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_.Mutable(index);
}
inline void ListGroupStatsRequest::set_group_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  group_id_.Mutable(index)->assign(value);
}
inline void ListGroupStatsRequest::set_group_id(int index, const char* value) {
  group_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
inline void ListGroupStatsRequest::set_group_id(int index, const char* value, size_t size) {
  group_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
inline ::std::string* ListGroupStatsRequest::add_group_id() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_.Add();
}
inline void ListGroupStatsRequest::add_group_id(const ::std::string& value) {
  group_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
inline void ListGroupStatsRequest::add_group_id(const char* value) {
  group_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
inline void ListGroupStatsRequest::add_group_id(const char* value, size_t size) {
  group_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListGroupStatsRequest::group_id() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return group_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListGroupStatsRequest::mutable_group_id() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.group_id)
  return &group_id_;
}

// optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
inline bool ListGroupStatsRequest::has_service_filter() const {
  return this != internal_default_instance() && service_filter_ != NULL;
}
inline void ListGroupStatsRequest::clear_service_filter() {
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) delete service_filter_;
  service_filter_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter& ListGroupStatsRequest::service_filter() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
  return service_filter_ != NULL ? *service_filter_
                         : *::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListGroupStatsRequest::mutable_service_filter() {
  
  if (service_filter_ == NULL) {
    service_filter_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
  return service_filter_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListGroupStatsRequest::release_service_filter() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
  
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* temp = service_filter_;
  service_filter_ = NULL;
  return temp;
}
inline void ListGroupStatsRequest::set_allocated_service_filter(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter) {
  delete service_filter_;
  service_filter_ = service_filter;
  if (service_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.service_filter)
}

// optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
inline bool ListGroupStatsRequest::has_time_range() const {
  return this != internal_default_instance() && time_range_ != NULL;
}
inline void ListGroupStatsRequest::clear_time_range() {
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) delete time_range_;
  time_range_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange& ListGroupStatsRequest::time_range() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
  return time_range_ != NULL ? *time_range_
                         : *::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListGroupStatsRequest::mutable_time_range() {
  
  if (time_range_ == NULL) {
    time_range_ = new ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
  return time_range_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListGroupStatsRequest::release_time_range() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
  
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* temp = time_range_;
  time_range_ = NULL;
  return temp;
}
inline void ListGroupStatsRequest::set_allocated_time_range(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range) {
  delete time_range_;
  time_range_ = time_range;
  if (time_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.time_range)
}

// optional .google.protobuf.Duration timed_count_duration = 6;
inline bool ListGroupStatsRequest::has_timed_count_duration() const {
  return this != internal_default_instance() && timed_count_duration_ != NULL;
}
inline void ListGroupStatsRequest::clear_timed_count_duration() {
  if (GetArenaNoVirtual() == NULL && timed_count_duration_ != NULL) delete timed_count_duration_;
  timed_count_duration_ = NULL;
}
inline const ::google::protobuf::Duration& ListGroupStatsRequest::timed_count_duration() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
  return timed_count_duration_ != NULL ? *timed_count_duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* ListGroupStatsRequest::mutable_timed_count_duration() {
  
  if (timed_count_duration_ == NULL) {
    timed_count_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
  return timed_count_duration_;
}
inline ::google::protobuf::Duration* ListGroupStatsRequest::release_timed_count_duration() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
  
  ::google::protobuf::Duration* temp = timed_count_duration_;
  timed_count_duration_ = NULL;
  return temp;
}
inline void ListGroupStatsRequest::set_allocated_timed_count_duration(::google::protobuf::Duration* timed_count_duration) {
  delete timed_count_duration_;
  if (timed_count_duration != NULL && timed_count_duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_timed_count_duration = new ::google::protobuf::Duration;
    new_timed_count_duration->CopyFrom(*timed_count_duration);
    timed_count_duration = new_timed_count_duration;
  }
  timed_count_duration_ = timed_count_duration;
  if (timed_count_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.timed_count_duration)
}

// optional .google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
inline void ListGroupStatsRequest::clear_alignment() {
  alignment_ = 0;
}
inline ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment ListGroupStatsRequest::alignment() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment)
  return static_cast< ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment >(alignment_);
}
inline void ListGroupStatsRequest::set_alignment(::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment value) {
  
  alignment_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment)
}

// optional .google.protobuf.Timestamp alignment_time = 8;
inline bool ListGroupStatsRequest::has_alignment_time() const {
  return this != internal_default_instance() && alignment_time_ != NULL;
}
inline void ListGroupStatsRequest::clear_alignment_time() {
  if (GetArenaNoVirtual() == NULL && alignment_time_ != NULL) delete alignment_time_;
  alignment_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& ListGroupStatsRequest::alignment_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
  return alignment_time_ != NULL ? *alignment_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ListGroupStatsRequest::mutable_alignment_time() {
  
  if (alignment_time_ == NULL) {
    alignment_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
  return alignment_time_;
}
inline ::google::protobuf::Timestamp* ListGroupStatsRequest::release_alignment_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
  
  ::google::protobuf::Timestamp* temp = alignment_time_;
  alignment_time_ = NULL;
  return temp;
}
inline void ListGroupStatsRequest::set_allocated_alignment_time(::google::protobuf::Timestamp* alignment_time) {
  delete alignment_time_;
  if (alignment_time != NULL && alignment_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_alignment_time = new ::google::protobuf::Timestamp;
    new_alignment_time->CopyFrom(*alignment_time);
    alignment_time = new_alignment_time;
  }
  alignment_time_ = alignment_time;
  if (alignment_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.alignment_time)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
inline void ListGroupStatsRequest::clear_order() {
  order_ = 0;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder ListGroupStatsRequest::order() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.order)
  return static_cast< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder >(order_);
}
inline void ListGroupStatsRequest::set_order(::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder value) {
  
  order_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.order)
}

// optional int32 page_size = 11;
inline void ListGroupStatsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListGroupStatsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_size)
  return page_size_;
}
inline void ListGroupStatsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_size)
}

// optional string page_token = 12;
inline void ListGroupStatsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupStatsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupStatsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}
inline void ListGroupStatsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}
inline void ListGroupStatsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}
inline ::std::string* ListGroupStatsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupStatsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupStatsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest.page_token)
}

inline const ListGroupStatsRequest* ListGroupStatsRequest::internal_default_instance() {
  return &ListGroupStatsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListGroupStatsResponse

// repeated .google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
inline int ListGroupStatsResponse::error_group_stats_size() const {
  return error_group_stats_.size();
}
inline void ListGroupStatsResponse::clear_error_group_stats() {
  error_group_stats_.Clear();
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats& ListGroupStatsResponse::error_group_stats(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_.Get(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats* ListGroupStatsResponse::mutable_error_group_stats(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_.Mutable(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats* ListGroupStatsResponse::add_error_group_stats() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats >*
ListGroupStatsResponse::mutable_error_group_stats() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return &error_group_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupStats >&
ListGroupStatsResponse::error_group_stats() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.error_group_stats)
  return error_group_stats_;
}

// optional string next_page_token = 2;
inline void ListGroupStatsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGroupStatsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupStatsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}
inline void ListGroupStatsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}
inline void ListGroupStatsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}
inline ::std::string* ListGroupStatsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGroupStatsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGroupStatsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.next_page_token)
}

// optional .google.protobuf.Timestamp time_range_begin = 4;
inline bool ListGroupStatsResponse::has_time_range_begin() const {
  return this != internal_default_instance() && time_range_begin_ != NULL;
}
inline void ListGroupStatsResponse::clear_time_range_begin() {
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) delete time_range_begin_;
  time_range_begin_ = NULL;
}
inline const ::google::protobuf::Timestamp& ListGroupStatsResponse::time_range_begin() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
  return time_range_begin_ != NULL ? *time_range_begin_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ListGroupStatsResponse::mutable_time_range_begin() {
  
  if (time_range_begin_ == NULL) {
    time_range_begin_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
  return time_range_begin_;
}
inline ::google::protobuf::Timestamp* ListGroupStatsResponse::release_time_range_begin() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
  
  ::google::protobuf::Timestamp* temp = time_range_begin_;
  time_range_begin_ = NULL;
  return temp;
}
inline void ListGroupStatsResponse::set_allocated_time_range_begin(::google::protobuf::Timestamp* time_range_begin) {
  delete time_range_begin_;
  if (time_range_begin != NULL && time_range_begin->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time_range_begin = new ::google::protobuf::Timestamp;
    new_time_range_begin->CopyFrom(*time_range_begin);
    time_range_begin = new_time_range_begin;
  }
  time_range_begin_ = time_range_begin;
  if (time_range_begin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse.time_range_begin)
}

inline const ListGroupStatsResponse* ListGroupStatsResponse::internal_default_instance() {
  return &ListGroupStatsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ErrorGroupStats

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
inline bool ErrorGroupStats::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
inline void ErrorGroupStats::clear_group() {
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup& ErrorGroupStats::group() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
  return group_ != NULL ? *group_
                         : *::google::devtools::clouderrorreporting::v1beta1::ErrorGroup::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* ErrorGroupStats::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
  return group_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* ErrorGroupStats::release_group() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* temp = group_;
  group_ = NULL;
  return temp;
}
inline void ErrorGroupStats::set_allocated_group(::google::devtools::clouderrorreporting::v1beta1::ErrorGroup* group) {
  delete group_;
  group_ = group;
  if (group) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.group)
}

// optional int64 count = 2;
inline void ErrorGroupStats::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ErrorGroupStats::count() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.count)
  return count_;
}
inline void ErrorGroupStats::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.count)
}

// optional int64 affected_users_count = 3;
inline void ErrorGroupStats::clear_affected_users_count() {
  affected_users_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ErrorGroupStats::affected_users_count() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_users_count)
  return affected_users_count_;
}
inline void ErrorGroupStats::set_affected_users_count(::google::protobuf::int64 value) {
  
  affected_users_count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_users_count)
}

// repeated .google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
inline int ErrorGroupStats::timed_counts_size() const {
  return timed_counts_.size();
}
inline void ErrorGroupStats::clear_timed_counts() {
  timed_counts_.Clear();
}
inline const ::google::devtools::clouderrorreporting::v1beta1::TimedCount& ErrorGroupStats::timed_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_.Get(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::TimedCount* ErrorGroupStats::mutable_timed_counts(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_.Mutable(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::TimedCount* ErrorGroupStats::add_timed_counts() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TimedCount >*
ErrorGroupStats::mutable_timed_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return &timed_counts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::TimedCount >&
ErrorGroupStats::timed_counts() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.timed_counts)
  return timed_counts_;
}

// optional .google.protobuf.Timestamp first_seen_time = 5;
inline bool ErrorGroupStats::has_first_seen_time() const {
  return this != internal_default_instance() && first_seen_time_ != NULL;
}
inline void ErrorGroupStats::clear_first_seen_time() {
  if (GetArenaNoVirtual() == NULL && first_seen_time_ != NULL) delete first_seen_time_;
  first_seen_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& ErrorGroupStats::first_seen_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
  return first_seen_time_ != NULL ? *first_seen_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ErrorGroupStats::mutable_first_seen_time() {
  
  if (first_seen_time_ == NULL) {
    first_seen_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
  return first_seen_time_;
}
inline ::google::protobuf::Timestamp* ErrorGroupStats::release_first_seen_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
  
  ::google::protobuf::Timestamp* temp = first_seen_time_;
  first_seen_time_ = NULL;
  return temp;
}
inline void ErrorGroupStats::set_allocated_first_seen_time(::google::protobuf::Timestamp* first_seen_time) {
  delete first_seen_time_;
  if (first_seen_time != NULL && first_seen_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_first_seen_time = new ::google::protobuf::Timestamp;
    new_first_seen_time->CopyFrom(*first_seen_time);
    first_seen_time = new_first_seen_time;
  }
  first_seen_time_ = first_seen_time;
  if (first_seen_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.first_seen_time)
}

// optional .google.protobuf.Timestamp last_seen_time = 6;
inline bool ErrorGroupStats::has_last_seen_time() const {
  return this != internal_default_instance() && last_seen_time_ != NULL;
}
inline void ErrorGroupStats::clear_last_seen_time() {
  if (GetArenaNoVirtual() == NULL && last_seen_time_ != NULL) delete last_seen_time_;
  last_seen_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& ErrorGroupStats::last_seen_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
  return last_seen_time_ != NULL ? *last_seen_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ErrorGroupStats::mutable_last_seen_time() {
  
  if (last_seen_time_ == NULL) {
    last_seen_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
  return last_seen_time_;
}
inline ::google::protobuf::Timestamp* ErrorGroupStats::release_last_seen_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
  
  ::google::protobuf::Timestamp* temp = last_seen_time_;
  last_seen_time_ = NULL;
  return temp;
}
inline void ErrorGroupStats::set_allocated_last_seen_time(::google::protobuf::Timestamp* last_seen_time) {
  delete last_seen_time_;
  if (last_seen_time != NULL && last_seen_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_last_seen_time = new ::google::protobuf::Timestamp;
    new_last_seen_time->CopyFrom(*last_seen_time);
    last_seen_time = new_last_seen_time;
  }
  last_seen_time_ = last_seen_time;
  if (last_seen_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.last_seen_time)
}

// repeated .google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
inline int ErrorGroupStats::affected_services_size() const {
  return affected_services_.size();
}
inline void ErrorGroupStats::clear_affected_services() {
  affected_services_.Clear();
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ServiceContext& ErrorGroupStats::affected_services(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_.Get(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorGroupStats::mutable_affected_services(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_.Mutable(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContext* ErrorGroupStats::add_affected_services() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext >*
ErrorGroupStats::mutable_affected_services() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return &affected_services_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ServiceContext >&
ErrorGroupStats::affected_services() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.affected_services)
  return affected_services_;
}

// optional int32 num_affected_services = 8;
inline void ErrorGroupStats::clear_num_affected_services() {
  num_affected_services_ = 0;
}
inline ::google::protobuf::int32 ErrorGroupStats::num_affected_services() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.num_affected_services)
  return num_affected_services_;
}
inline void ErrorGroupStats::set_num_affected_services(::google::protobuf::int32 value) {
  
  num_affected_services_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.num_affected_services)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
inline bool ErrorGroupStats::has_representative() const {
  return this != internal_default_instance() && representative_ != NULL;
}
inline void ErrorGroupStats::clear_representative() {
  if (GetArenaNoVirtual() == NULL && representative_ != NULL) delete representative_;
  representative_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent& ErrorGroupStats::representative() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
  return representative_ != NULL ? *representative_
                         : *::google::devtools::clouderrorreporting::v1beta1::ErrorEvent::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ErrorGroupStats::mutable_representative() {
  
  if (representative_ == NULL) {
    representative_ = new ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
  return representative_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ErrorGroupStats::release_representative() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
  
  ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* temp = representative_;
  representative_ = NULL;
  return temp;
}
inline void ErrorGroupStats::set_allocated_representative(::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* representative) {
  delete representative_;
  representative_ = representative;
  if (representative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats.representative)
}

inline const ErrorGroupStats* ErrorGroupStats::internal_default_instance() {
  return &ErrorGroupStats_default_instance_.get();
}
// -------------------------------------------------------------------

// TimedCount

// optional int64 count = 1;
inline void TimedCount::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TimedCount::count() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TimedCount.count)
  return count_;
}
inline void TimedCount::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.TimedCount.count)
}

// optional .google.protobuf.Timestamp start_time = 2;
inline bool TimedCount::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void TimedCount::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& TimedCount::start_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* TimedCount::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* TimedCount::release_start_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
  
  ::google::protobuf::Timestamp* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline void TimedCount::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  delete start_time_;
  if (start_time != NULL && start_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start_time = new ::google::protobuf::Timestamp;
    new_start_time->CopyFrom(*start_time);
    start_time = new_start_time;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.TimedCount.start_time)
}

// optional .google.protobuf.Timestamp end_time = 3;
inline bool TimedCount::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void TimedCount::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& TimedCount::end_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* TimedCount::mutable_end_time() {
  
  if (end_time_ == NULL) {
    end_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* TimedCount::release_end_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
  
  ::google::protobuf::Timestamp* temp = end_time_;
  end_time_ = NULL;
  return temp;
}
inline void TimedCount::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  delete end_time_;
  if (end_time != NULL && end_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end_time = new ::google::protobuf::Timestamp;
    new_end_time->CopyFrom(*end_time);
    end_time = new_end_time;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.TimedCount.end_time)
}

inline const TimedCount* TimedCount::internal_default_instance() {
  return &TimedCount_default_instance_.get();
}
// -------------------------------------------------------------------

// ListEventsRequest

// optional string project_name = 1;
inline void ListEventsRequest::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListEventsRequest::project_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
  return project_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsRequest::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}
inline void ListEventsRequest::set_project_name(const char* value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}
inline void ListEventsRequest::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}
inline ::std::string* ListEventsRequest::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListEventsRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsRequest::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.project_name)
}

// optional string group_id = 2;
inline void ListEventsRequest::clear_group_id() {
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListEventsRequest::group_id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
  return group_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsRequest::set_group_id(const ::std::string& value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}
inline void ListEventsRequest::set_group_id(const char* value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}
inline void ListEventsRequest::set_group_id(const char* value, size_t size) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}
inline ::std::string* ListEventsRequest::mutable_group_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
  return group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListEventsRequest::release_group_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
  
  return group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsRequest::set_allocated_group_id(::std::string* group_id) {
  if (group_id != NULL) {
    
  } else {
    
  }
  group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.group_id)
}

// optional .google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
inline bool ListEventsRequest::has_service_filter() const {
  return this != internal_default_instance() && service_filter_ != NULL;
}
inline void ListEventsRequest::clear_service_filter() {
  if (GetArenaNoVirtual() == NULL && service_filter_ != NULL) delete service_filter_;
  service_filter_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter& ListEventsRequest::service_filter() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
  return service_filter_ != NULL ? *service_filter_
                         : *::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListEventsRequest::mutable_service_filter() {
  
  if (service_filter_ == NULL) {
    service_filter_ = new ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
  return service_filter_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* ListEventsRequest::release_service_filter() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
  
  ::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* temp = service_filter_;
  service_filter_ = NULL;
  return temp;
}
inline void ListEventsRequest::set_allocated_service_filter(::google::devtools::clouderrorreporting::v1beta1::ServiceContextFilter* service_filter) {
  delete service_filter_;
  service_filter_ = service_filter;
  if (service_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.service_filter)
}

// optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
inline bool ListEventsRequest::has_time_range() const {
  return this != internal_default_instance() && time_range_ != NULL;
}
inline void ListEventsRequest::clear_time_range() {
  if (GetArenaNoVirtual() == NULL && time_range_ != NULL) delete time_range_;
  time_range_ = NULL;
}
inline const ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange& ListEventsRequest::time_range() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
  return time_range_ != NULL ? *time_range_
                         : *::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange::internal_default_instance();
}
inline ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListEventsRequest::mutable_time_range() {
  
  if (time_range_ == NULL) {
    time_range_ = new ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
  return time_range_;
}
inline ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* ListEventsRequest::release_time_range() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
  
  ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* temp = time_range_;
  time_range_ = NULL;
  return temp;
}
inline void ListEventsRequest::set_allocated_time_range(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange* time_range) {
  delete time_range_;
  time_range_ = time_range;
  if (time_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.time_range)
}

// optional int32 page_size = 6;
inline void ListEventsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListEventsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_size)
  return page_size_;
}
inline void ListEventsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_size)
}

// optional string page_token = 7;
inline void ListEventsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListEventsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}
inline void ListEventsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}
inline void ListEventsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}
inline ::std::string* ListEventsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListEventsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsRequest.page_token)
}

inline const ListEventsRequest* ListEventsRequest::internal_default_instance() {
  return &ListEventsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListEventsResponse

// repeated .google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
inline int ListEventsResponse::error_events_size() const {
  return error_events_.size();
}
inline void ListEventsResponse::clear_error_events() {
  error_events_.Clear();
}
inline const ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent& ListEventsResponse::error_events(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_.Get(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ListEventsResponse::mutable_error_events(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_.Mutable(index);
}
inline ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent* ListEventsResponse::add_error_events() {
  // @@protoc_insertion_point(field_add:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent >*
ListEventsResponse::mutable_error_events() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return &error_events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouderrorreporting::v1beta1::ErrorEvent >&
ListEventsResponse::error_events() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.error_events)
  return error_events_;
}

// optional string next_page_token = 2;
inline void ListEventsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListEventsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}
inline void ListEventsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}
inline void ListEventsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}
inline ::std::string* ListEventsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListEventsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEventsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.next_page_token)
}

// optional .google.protobuf.Timestamp time_range_begin = 4;
inline bool ListEventsResponse::has_time_range_begin() const {
  return this != internal_default_instance() && time_range_begin_ != NULL;
}
inline void ListEventsResponse::clear_time_range_begin() {
  if (GetArenaNoVirtual() == NULL && time_range_begin_ != NULL) delete time_range_begin_;
  time_range_begin_ = NULL;
}
inline const ::google::protobuf::Timestamp& ListEventsResponse::time_range_begin() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
  return time_range_begin_ != NULL ? *time_range_begin_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ListEventsResponse::mutable_time_range_begin() {
  
  if (time_range_begin_ == NULL) {
    time_range_begin_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
  return time_range_begin_;
}
inline ::google::protobuf::Timestamp* ListEventsResponse::release_time_range_begin() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
  
  ::google::protobuf::Timestamp* temp = time_range_begin_;
  time_range_begin_ = NULL;
  return temp;
}
inline void ListEventsResponse::set_allocated_time_range_begin(::google::protobuf::Timestamp* time_range_begin) {
  delete time_range_begin_;
  if (time_range_begin != NULL && time_range_begin->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time_range_begin = new ::google::protobuf::Timestamp;
    new_time_range_begin->CopyFrom(*time_range_begin);
    time_range_begin = new_time_range_begin;
  }
  time_range_begin_ = time_range_begin;
  if (time_range_begin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ListEventsResponse.time_range_begin)
}

inline const ListEventsResponse* ListEventsResponse::internal_default_instance() {
  return &ListEventsResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryTimeRange

// optional .google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
inline void QueryTimeRange::clear_period() {
  period_ = 0;
}
inline ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period QueryTimeRange::period() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.period)
  return static_cast< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period >(period_);
}
inline void QueryTimeRange::set_period(::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period value) {
  
  period_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.period)
}

inline const QueryTimeRange* QueryTimeRange::internal_default_instance() {
  return &QueryTimeRange_default_instance_.get();
}
// -------------------------------------------------------------------

// ServiceContextFilter

// optional string service = 2;
inline void ServiceContextFilter::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceContextFilter::service() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
  return service_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContextFilter::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}
inline void ServiceContextFilter::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}
inline void ServiceContextFilter::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}
inline ::std::string* ServiceContextFilter::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceContextFilter::release_service() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContextFilter::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.service)
}

// optional string version = 3;
inline void ServiceContextFilter::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceContextFilter::version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContextFilter::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}
inline void ServiceContextFilter::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}
inline void ServiceContextFilter::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}
inline ::std::string* ServiceContextFilter::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceContextFilter::release_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContextFilter::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.version)
}

// optional string resource_type = 4;
inline void ServiceContextFilter::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServiceContextFilter::resource_type() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
  return resource_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContextFilter::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}
inline void ServiceContextFilter::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}
inline void ServiceContextFilter::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}
inline ::std::string* ServiceContextFilter::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceContextFilter::release_resource_type() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceContextFilter::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter.resource_type)
}

inline const ServiceContextFilter* ServiceContextFilter::internal_default_instance() {
  return &ServiceContextFilter_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteEventsRequest

// optional string project_name = 1;
inline void DeleteEventsRequest::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteEventsRequest::project_name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
  return project_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEventsRequest::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}
inline void DeleteEventsRequest::set_project_name(const char* value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}
inline void DeleteEventsRequest::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}
inline ::std::string* DeleteEventsRequest::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteEventsRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteEventsRequest::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest.project_name)
}

inline const DeleteEventsRequest* DeleteEventsRequest::internal_default_instance() {
  return &DeleteEventsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteEventsResponse

inline const DeleteEventsResponse* DeleteEventsResponse::internal_default_instance() {
  return &DeleteEventsResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace clouderrorreporting
}  // namespace devtools
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period>() {
  return ::google::devtools::clouderrorreporting::v1beta1::QueryTimeRange_Period_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment>() {
  return ::google::devtools::clouderrorreporting::v1beta1::TimedCountAlignment_descriptor();
}
template <> struct is_proto_enum< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder>() {
  return ::google::devtools::clouderrorreporting::v1beta1::ErrorGroupOrder_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fdevtools_2fclouderrorreporting_2fv1beta1_2ferror_5fstats_5fservice_2eproto__INCLUDED
