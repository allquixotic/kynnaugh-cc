// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/v1/policy.proto

#ifndef PROTOBUF_google_2fiam_2fv1_2fpolicy_2eproto__INCLUDED
#define PROTOBUF_google_2fiam_2fv1_2fpolicy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace iam {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fiam_2fv1_2fpolicy_2eproto();
void protobuf_InitDefaults_google_2fiam_2fv1_2fpolicy_2eproto();
void protobuf_AssignDesc_google_2fiam_2fv1_2fpolicy_2eproto();
void protobuf_ShutdownFile_google_2fiam_2fv1_2fpolicy_2eproto();

class Binding;
class BindingDelta;
class Policy;
class PolicyDelta;

enum BindingDelta_Action {
  BindingDelta_Action_ACTION_UNSPECIFIED = 0,
  BindingDelta_Action_ADD = 1,
  BindingDelta_Action_REMOVE = 2,
  BindingDelta_Action_BindingDelta_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BindingDelta_Action_BindingDelta_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BindingDelta_Action_IsValid(int value);
const BindingDelta_Action BindingDelta_Action_Action_MIN = BindingDelta_Action_ACTION_UNSPECIFIED;
const BindingDelta_Action BindingDelta_Action_Action_MAX = BindingDelta_Action_REMOVE;
const int BindingDelta_Action_Action_ARRAYSIZE = BindingDelta_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* BindingDelta_Action_descriptor();
inline const ::std::string& BindingDelta_Action_Name(BindingDelta_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    BindingDelta_Action_descriptor(), value);
}
inline bool BindingDelta_Action_Parse(
    const ::std::string& name, BindingDelta_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BindingDelta_Action>(
    BindingDelta_Action_descriptor(), name, value);
}
// ===================================================================

class Policy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.v1.Policy) */ {
 public:
  Policy();
  virtual ~Policy();

  Policy(const Policy& from);

  inline Policy& operator=(const Policy& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Policy& default_instance();

  static const Policy* internal_default_instance();

  void UnsafeArenaSwap(Policy* other);
  void Swap(Policy* other);

  // implements Message ----------------------------------------------

  inline Policy* New() const { return New(NULL); }

  Policy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Policy& from);
  void MergeFrom(const Policy& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Policy* other);
  void UnsafeMergeFrom(const Policy& from);
  protected:
  explicit Policy(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // repeated .google.iam.v1.Binding bindings = 4;
  int bindings_size() const;
  void clear_bindings();
  static const int kBindingsFieldNumber = 4;
  const ::google::iam::v1::Binding& bindings(int index) const;
  ::google::iam::v1::Binding* mutable_bindings(int index);
  ::google::iam::v1::Binding* add_bindings();
  ::google::protobuf::RepeatedPtrField< ::google::iam::v1::Binding >*
      mutable_bindings();
  const ::google::protobuf::RepeatedPtrField< ::google::iam::v1::Binding >&
      bindings() const;

  // optional bytes etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  void set_etag(const char* value);
  void set_etag(const void* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);
  ::std::string* unsafe_arena_release_etag();
  void unsafe_arena_set_allocated_etag(
      ::std::string* etag);

  // @@protoc_insertion_point(class_scope:google.iam.v1.Policy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::iam::v1::Binding > bindings_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::int32 version_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fiam_2fv1_2fpolicy_2eproto();
  friend void protobuf_ShutdownFile_google_2fiam_2fv1_2fpolicy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Policy> Policy_default_instance_;

// -------------------------------------------------------------------

class Binding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.v1.Binding) */ {
 public:
  Binding();
  virtual ~Binding();

  Binding(const Binding& from);

  inline Binding& operator=(const Binding& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Binding& default_instance();

  static const Binding* internal_default_instance();

  void UnsafeArenaSwap(Binding* other);
  void Swap(Binding* other);

  // implements Message ----------------------------------------------

  inline Binding* New() const { return New(NULL); }

  Binding* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Binding& from);
  void MergeFrom(const Binding& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Binding* other);
  void UnsafeMergeFrom(const Binding& from);
  protected:
  explicit Binding(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string role = 1;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);
  ::std::string* unsafe_arena_release_role();
  void unsafe_arena_set_allocated_role(
      ::std::string* role);

  // repeated string members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::std::string& members(int index) const;
  ::std::string* mutable_members(int index);
  void set_members(int index, const ::std::string& value);
  void set_members(int index, const char* value);
  void set_members(int index, const char* value, size_t size);
  ::std::string* add_members();
  void add_members(const ::std::string& value);
  void add_members(const char* value);
  void add_members(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& members() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_members();

  // @@protoc_insertion_point(class_scope:google.iam.v1.Binding)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> members_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fiam_2fv1_2fpolicy_2eproto();
  friend void protobuf_ShutdownFile_google_2fiam_2fv1_2fpolicy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Binding> Binding_default_instance_;

// -------------------------------------------------------------------

class PolicyDelta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.v1.PolicyDelta) */ {
 public:
  PolicyDelta();
  virtual ~PolicyDelta();

  PolicyDelta(const PolicyDelta& from);

  inline PolicyDelta& operator=(const PolicyDelta& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PolicyDelta& default_instance();

  static const PolicyDelta* internal_default_instance();

  void UnsafeArenaSwap(PolicyDelta* other);
  void Swap(PolicyDelta* other);

  // implements Message ----------------------------------------------

  inline PolicyDelta* New() const { return New(NULL); }

  PolicyDelta* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PolicyDelta& from);
  void MergeFrom(const PolicyDelta& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PolicyDelta* other);
  void UnsafeMergeFrom(const PolicyDelta& from);
  protected:
  explicit PolicyDelta(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.iam.v1.BindingDelta binding_deltas = 1;
  int binding_deltas_size() const;
  void clear_binding_deltas();
  static const int kBindingDeltasFieldNumber = 1;
  const ::google::iam::v1::BindingDelta& binding_deltas(int index) const;
  ::google::iam::v1::BindingDelta* mutable_binding_deltas(int index);
  ::google::iam::v1::BindingDelta* add_binding_deltas();
  ::google::protobuf::RepeatedPtrField< ::google::iam::v1::BindingDelta >*
      mutable_binding_deltas();
  const ::google::protobuf::RepeatedPtrField< ::google::iam::v1::BindingDelta >&
      binding_deltas() const;

  // @@protoc_insertion_point(class_scope:google.iam.v1.PolicyDelta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::iam::v1::BindingDelta > binding_deltas_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fiam_2fv1_2fpolicy_2eproto();
  friend void protobuf_ShutdownFile_google_2fiam_2fv1_2fpolicy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PolicyDelta> PolicyDelta_default_instance_;

// -------------------------------------------------------------------

class BindingDelta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.iam.v1.BindingDelta) */ {
 public:
  BindingDelta();
  virtual ~BindingDelta();

  BindingDelta(const BindingDelta& from);

  inline BindingDelta& operator=(const BindingDelta& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const BindingDelta& default_instance();

  static const BindingDelta* internal_default_instance();

  void UnsafeArenaSwap(BindingDelta* other);
  void Swap(BindingDelta* other);

  // implements Message ----------------------------------------------

  inline BindingDelta* New() const { return New(NULL); }

  BindingDelta* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindingDelta& from);
  void MergeFrom(const BindingDelta& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BindingDelta* other);
  void UnsafeMergeFrom(const BindingDelta& from);
  protected:
  explicit BindingDelta(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BindingDelta_Action Action;
  static const Action ACTION_UNSPECIFIED =
    BindingDelta_Action_ACTION_UNSPECIFIED;
  static const Action ADD =
    BindingDelta_Action_ADD;
  static const Action REMOVE =
    BindingDelta_Action_REMOVE;
  static inline bool Action_IsValid(int value) {
    return BindingDelta_Action_IsValid(value);
  }
  static const Action Action_MIN =
    BindingDelta_Action_Action_MIN;
  static const Action Action_MAX =
    BindingDelta_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    BindingDelta_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return BindingDelta_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return BindingDelta_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return BindingDelta_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .google.iam.v1.BindingDelta.Action action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::google::iam::v1::BindingDelta_Action action() const;
  void set_action(::google::iam::v1::BindingDelta_Action value);

  // optional string role = 2;
  void clear_role();
  static const int kRoleFieldNumber = 2;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);
  ::std::string* unsafe_arena_release_role();
  void unsafe_arena_set_allocated_role(
      ::std::string* role);

  // optional string member = 3;
  void clear_member();
  static const int kMemberFieldNumber = 3;
  const ::std::string& member() const;
  void set_member(const ::std::string& value);
  void set_member(const char* value);
  void set_member(const char* value, size_t size);
  ::std::string* mutable_member();
  ::std::string* release_member();
  void set_allocated_member(::std::string* member);
  ::std::string* unsafe_arena_release_member();
  void unsafe_arena_set_allocated_member(
      ::std::string* member);

  // @@protoc_insertion_point(class_scope:google.iam.v1.BindingDelta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  ::google::protobuf::internal::ArenaStringPtr member_;
  int action_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fiam_2fv1_2fpolicy_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fiam_2fv1_2fpolicy_2eproto();
  friend void protobuf_ShutdownFile_google_2fiam_2fv1_2fpolicy_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BindingDelta> BindingDelta_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Policy

// optional int32 version = 1;
inline void Policy::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 Policy::version() const {
  // @@protoc_insertion_point(field_get:google.iam.v1.Policy.version)
  return version_;
}
inline void Policy::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.iam.v1.Policy.version)
}

// repeated .google.iam.v1.Binding bindings = 4;
inline int Policy::bindings_size() const {
  return bindings_.size();
}
inline void Policy::clear_bindings() {
  bindings_.Clear();
}
inline const ::google::iam::v1::Binding& Policy::bindings(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.v1.Policy.bindings)
  return bindings_.Get(index);
}
inline ::google::iam::v1::Binding* Policy::mutable_bindings(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.v1.Policy.bindings)
  return bindings_.Mutable(index);
}
inline ::google::iam::v1::Binding* Policy::add_bindings() {
  // @@protoc_insertion_point(field_add:google.iam.v1.Policy.bindings)
  return bindings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::iam::v1::Binding >*
Policy::mutable_bindings() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.v1.Policy.bindings)
  return &bindings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::iam::v1::Binding >&
Policy::bindings() const {
  // @@protoc_insertion_point(field_list:google.iam.v1.Policy.bindings)
  return bindings_;
}

// optional bytes etag = 3;
inline void Policy::clear_etag() {
  etag_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Policy::etag() const {
  // @@protoc_insertion_point(field_get:google.iam.v1.Policy.etag)
  return etag_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Policy::set_etag(const ::std::string& value) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.v1.Policy.etag)
}
inline void Policy::set_etag(const char* value) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.v1.Policy.etag)
}
inline void Policy::set_etag(const void* value,
    size_t size) {
  
  etag_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.v1.Policy.etag)
}
inline ::std::string* Policy::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.v1.Policy.etag)
  return etag_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Policy::release_etag() {
  // @@protoc_insertion_point(field_release:google.iam.v1.Policy.etag)
  
  return etag_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Policy::unsafe_arena_release_etag() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.v1.Policy.etag)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return etag_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Policy::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.v1.Policy.etag)
}
inline void Policy::unsafe_arena_set_allocated_etag(
    ::std::string* etag) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      etag, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.v1.Policy.etag)
}

inline const Policy* Policy::internal_default_instance() {
  return &Policy_default_instance_.get();
}
// -------------------------------------------------------------------

// Binding

// optional string role = 1;
inline void Binding::clear_role() {
  role_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Binding::role() const {
  // @@protoc_insertion_point(field_get:google.iam.v1.Binding.role)
  return role_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Binding::set_role(const ::std::string& value) {
  
  role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.v1.Binding.role)
}
inline void Binding::set_role(const char* value) {
  
  role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.v1.Binding.role)
}
inline void Binding::set_role(const char* value,
    size_t size) {
  
  role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.v1.Binding.role)
}
inline ::std::string* Binding::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.v1.Binding.role)
  return role_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Binding::release_role() {
  // @@protoc_insertion_point(field_release:google.iam.v1.Binding.role)
  
  return role_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Binding::unsafe_arena_release_role() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.v1.Binding.role)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return role_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Binding::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    
  } else {
    
  }
  role_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.v1.Binding.role)
}
inline void Binding::unsafe_arena_set_allocated_role(
    ::std::string* role) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (role != NULL) {
    
  } else {
    
  }
  role_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      role, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.v1.Binding.role)
}

// repeated string members = 2;
inline int Binding::members_size() const {
  return members_.size();
}
inline void Binding::clear_members() {
  members_.Clear();
}
inline const ::std::string& Binding::members(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.v1.Binding.members)
  return members_.Get(index);
}
inline ::std::string* Binding::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.v1.Binding.members)
  return members_.Mutable(index);
}
inline void Binding::set_members(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.iam.v1.Binding.members)
  members_.Mutable(index)->assign(value);
}
inline void Binding::set_members(int index, const char* value) {
  members_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.iam.v1.Binding.members)
}
inline void Binding::set_members(int index, const char* value, size_t size) {
  members_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.iam.v1.Binding.members)
}
inline ::std::string* Binding::add_members() {
  // @@protoc_insertion_point(field_add_mutable:google.iam.v1.Binding.members)
  return members_.Add();
}
inline void Binding::add_members(const ::std::string& value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.iam.v1.Binding.members)
}
inline void Binding::add_members(const char* value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.iam.v1.Binding.members)
}
inline void Binding::add_members(const char* value, size_t size) {
  members_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.iam.v1.Binding.members)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Binding::members() const {
  // @@protoc_insertion_point(field_list:google.iam.v1.Binding.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Binding::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.v1.Binding.members)
  return &members_;
}

inline const Binding* Binding::internal_default_instance() {
  return &Binding_default_instance_.get();
}
// -------------------------------------------------------------------

// PolicyDelta

// repeated .google.iam.v1.BindingDelta binding_deltas = 1;
inline int PolicyDelta::binding_deltas_size() const {
  return binding_deltas_.size();
}
inline void PolicyDelta::clear_binding_deltas() {
  binding_deltas_.Clear();
}
inline const ::google::iam::v1::BindingDelta& PolicyDelta::binding_deltas(int index) const {
  // @@protoc_insertion_point(field_get:google.iam.v1.PolicyDelta.binding_deltas)
  return binding_deltas_.Get(index);
}
inline ::google::iam::v1::BindingDelta* PolicyDelta::mutable_binding_deltas(int index) {
  // @@protoc_insertion_point(field_mutable:google.iam.v1.PolicyDelta.binding_deltas)
  return binding_deltas_.Mutable(index);
}
inline ::google::iam::v1::BindingDelta* PolicyDelta::add_binding_deltas() {
  // @@protoc_insertion_point(field_add:google.iam.v1.PolicyDelta.binding_deltas)
  return binding_deltas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::iam::v1::BindingDelta >*
PolicyDelta::mutable_binding_deltas() {
  // @@protoc_insertion_point(field_mutable_list:google.iam.v1.PolicyDelta.binding_deltas)
  return &binding_deltas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::iam::v1::BindingDelta >&
PolicyDelta::binding_deltas() const {
  // @@protoc_insertion_point(field_list:google.iam.v1.PolicyDelta.binding_deltas)
  return binding_deltas_;
}

inline const PolicyDelta* PolicyDelta::internal_default_instance() {
  return &PolicyDelta_default_instance_.get();
}
// -------------------------------------------------------------------

// BindingDelta

// optional .google.iam.v1.BindingDelta.Action action = 1;
inline void BindingDelta::clear_action() {
  action_ = 0;
}
inline ::google::iam::v1::BindingDelta_Action BindingDelta::action() const {
  // @@protoc_insertion_point(field_get:google.iam.v1.BindingDelta.action)
  return static_cast< ::google::iam::v1::BindingDelta_Action >(action_);
}
inline void BindingDelta::set_action(::google::iam::v1::BindingDelta_Action value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:google.iam.v1.BindingDelta.action)
}

// optional string role = 2;
inline void BindingDelta::clear_role() {
  role_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& BindingDelta::role() const {
  // @@protoc_insertion_point(field_get:google.iam.v1.BindingDelta.role)
  return role_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindingDelta::set_role(const ::std::string& value) {
  
  role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.v1.BindingDelta.role)
}
inline void BindingDelta::set_role(const char* value) {
  
  role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.v1.BindingDelta.role)
}
inline void BindingDelta::set_role(const char* value,
    size_t size) {
  
  role_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.v1.BindingDelta.role)
}
inline ::std::string* BindingDelta::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.v1.BindingDelta.role)
  return role_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BindingDelta::release_role() {
  // @@protoc_insertion_point(field_release:google.iam.v1.BindingDelta.role)
  
  return role_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BindingDelta::unsafe_arena_release_role() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.v1.BindingDelta.role)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return role_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void BindingDelta::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    
  } else {
    
  }
  role_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.v1.BindingDelta.role)
}
inline void BindingDelta::unsafe_arena_set_allocated_role(
    ::std::string* role) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (role != NULL) {
    
  } else {
    
  }
  role_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      role, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.v1.BindingDelta.role)
}

// optional string member = 3;
inline void BindingDelta::clear_member() {
  member_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& BindingDelta::member() const {
  // @@protoc_insertion_point(field_get:google.iam.v1.BindingDelta.member)
  return member_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindingDelta::set_member(const ::std::string& value) {
  
  member_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.iam.v1.BindingDelta.member)
}
inline void BindingDelta::set_member(const char* value) {
  
  member_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.iam.v1.BindingDelta.member)
}
inline void BindingDelta::set_member(const char* value,
    size_t size) {
  
  member_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.iam.v1.BindingDelta.member)
}
inline ::std::string* BindingDelta::mutable_member() {
  
  // @@protoc_insertion_point(field_mutable:google.iam.v1.BindingDelta.member)
  return member_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BindingDelta::release_member() {
  // @@protoc_insertion_point(field_release:google.iam.v1.BindingDelta.member)
  
  return member_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* BindingDelta::unsafe_arena_release_member() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.iam.v1.BindingDelta.member)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return member_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void BindingDelta::set_allocated_member(::std::string* member) {
  if (member != NULL) {
    
  } else {
    
  }
  member_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), member,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.iam.v1.BindingDelta.member)
}
inline void BindingDelta::unsafe_arena_set_allocated_member(
    ::std::string* member) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (member != NULL) {
    
  } else {
    
  }
  member_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      member, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.iam.v1.BindingDelta.member)
}

inline const BindingDelta* BindingDelta::internal_default_instance() {
  return &BindingDelta_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace iam
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::iam::v1::BindingDelta_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::iam::v1::BindingDelta_Action>() {
  return ::google::iam::v1::BindingDelta_Action_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fiam_2fv1_2fpolicy_2eproto__INCLUDED
