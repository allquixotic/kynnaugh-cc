// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bytestream/bytestream.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/bytestream/bytestream.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace bytestream {

namespace {

const ::google::protobuf::Descriptor* ReadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryWriteStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryWriteStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryWriteStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryWriteStatusResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fbytestream_2fbytestream_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fbytestream_2fbytestream_2eproto() {
  protobuf_AddDesc_google_2fbytestream_2fbytestream_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/bytestream/bytestream.proto");
  GOOGLE_CHECK(file != NULL);
  ReadRequest_descriptor_ = file->message_type(0);
  static const int ReadRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, resource_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, read_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, read_limit_),
  };
  ReadRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadRequest_descriptor_,
      ReadRequest::internal_default_instance(),
      ReadRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _internal_metadata_));
  ReadResponse_descriptor_ = file->message_type(1);
  static const int ReadResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, data_),
  };
  ReadResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadResponse_descriptor_,
      ReadResponse::internal_default_instance(),
      ReadResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, _internal_metadata_));
  WriteRequest_descriptor_ = file->message_type(2);
  static const int WriteRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, resource_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, write_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, finish_write_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, data_),
  };
  WriteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteRequest_descriptor_,
      WriteRequest::internal_default_instance(),
      WriteRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, _internal_metadata_));
  WriteResponse_descriptor_ = file->message_type(3);
  static const int WriteResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResponse, committed_size_),
  };
  WriteResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteResponse_descriptor_,
      WriteResponse::internal_default_instance(),
      WriteResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteResponse, _internal_metadata_));
  QueryWriteStatusRequest_descriptor_ = file->message_type(4);
  static const int QueryWriteStatusRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusRequest, resource_name_),
  };
  QueryWriteStatusRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryWriteStatusRequest_descriptor_,
      QueryWriteStatusRequest::internal_default_instance(),
      QueryWriteStatusRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(QueryWriteStatusRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusRequest, _internal_metadata_));
  QueryWriteStatusResponse_descriptor_ = file->message_type(5);
  static const int QueryWriteStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusResponse, committed_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusResponse, complete_),
  };
  QueryWriteStatusResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryWriteStatusResponse_descriptor_,
      QueryWriteStatusResponse::internal_default_instance(),
      QueryWriteStatusResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(QueryWriteStatusResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWriteStatusResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fbytestream_2fbytestream_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadRequest_descriptor_, ReadRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadResponse_descriptor_, ReadResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteRequest_descriptor_, WriteRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteResponse_descriptor_, WriteResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryWriteStatusRequest_descriptor_, QueryWriteStatusRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryWriteStatusResponse_descriptor_, QueryWriteStatusResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fbytestream_2fbytestream_2eproto() {
  ReadRequest_default_instance_.Shutdown();
  delete ReadRequest_reflection_;
  ReadResponse_default_instance_.Shutdown();
  delete ReadResponse_reflection_;
  WriteRequest_default_instance_.Shutdown();
  delete WriteRequest_reflection_;
  WriteResponse_default_instance_.Shutdown();
  delete WriteResponse_reflection_;
  QueryWriteStatusRequest_default_instance_.Shutdown();
  delete QueryWriteStatusRequest_reflection_;
  QueryWriteStatusResponse_default_instance_.Shutdown();
  delete QueryWriteStatusResponse_reflection_;
}

void protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ReadRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReadResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WriteRequest_default_instance_.DefaultConstruct();
  WriteResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QueryWriteStatusRequest_default_instance_.DefaultConstruct();
  QueryWriteStatusResponse_default_instance_.DefaultConstruct();
  ReadRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReadResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  WriteRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  WriteResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryWriteStatusRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryWriteStatusResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto_once_);
void protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto_once_,
                 &protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto_impl);
}
void protobuf_AddDesc_google_2fbytestream_2fbytestream_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"google/bytestream/bytestream.proto\022\021go"
    "ogle.bytestream\032\034google/api/annotations."
    "proto\032\036google/protobuf/wrappers.proto\"M\n"
    "\013ReadRequest\022\025\n\rresource_name\030\001 \001(\t\022\023\n\013r"
    "ead_offset\030\002 \001(\003\022\022\n\nread_limit\030\003 \001(\003\"\034\n\014"
    "ReadResponse\022\014\n\004data\030\n \001(\014\"_\n\014WriteReque"
    "st\022\025\n\rresource_name\030\001 \001(\t\022\024\n\014write_offse"
    "t\030\002 \001(\003\022\024\n\014finish_write\030\003 \001(\010\022\014\n\004data\030\n "
    "\001(\014\"\'\n\rWriteResponse\022\026\n\016committed_size\030\001"
    " \001(\003\"0\n\027QueryWriteStatusRequest\022\025\n\rresou"
    "rce_name\030\001 \001(\t\"D\n\030QueryWriteStatusRespon"
    "se\022\026\n\016committed_size\030\001 \001(\003\022\020\n\010complete\030\002"
    " \001(\0102\222\002\n\nByteStream\022I\n\004Read\022\036.google.byt"
    "estream.ReadRequest\032\037.google.bytestream."
    "ReadResponse0\001\022L\n\005Write\022\037.google.bytestr"
    "eam.WriteRequest\032 .google.bytestream.Wri"
    "teResponse(\001\022k\n\020QueryWriteStatus\022*.googl"
    "e.bytestream.QueryWriteStatusRequest\032+.g"
    "oogle.bytestream.QueryWriteStatusRespons"
    "eBe\n\025com.google.bytestreamB\017ByteStreamPr"
    "otoZ;google.golang.org/genproto/googleap"
    "is/bytestream;bytestreamb\006proto3", 872);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/bytestream/bytestream.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fbytestream_2fbytestream_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fbytestream_2fbytestream_2eproto_once_);
void protobuf_AddDesc_google_2fbytestream_2fbytestream_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fbytestream_2fbytestream_2eproto_once_,
                 &protobuf_AddDesc_google_2fbytestream_2fbytestream_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fbytestream_2fbytestream_2eproto {
  StaticDescriptorInitializer_google_2fbytestream_2fbytestream_2eproto() {
    protobuf_AddDesc_google_2fbytestream_2fbytestream_2eproto();
  }
} static_descriptor_initializer_google_2fbytestream_2fbytestream_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kResourceNameFieldNumber;
const int ReadRequest::kReadOffsetFieldNumber;
const int ReadRequest::kReadLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.ReadRequest)
}

void ReadRequest::InitAsDefaultInstance() {
}

ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadRequest)
}

void ReadRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_offset_, 0, reinterpret_cast<char*>(&read_limit_) -
    reinterpret_cast<char*>(&read_offset_) + sizeof(read_limit_));
  _cached_size_ = 0;
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadRequest_descriptor_;
}

const ReadRequest& ReadRequest::default_instance() {
  protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadRequest> ReadRequest_default_instance_;

ReadRequest* ReadRequest::New(::google::protobuf::Arena* arena) const {
  ReadRequest* n = new ReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReadRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(read_offset_, read_limit_);
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.ReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resource_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), this->resource_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.ReadRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_read_offset;
        break;
      }

      // optional int64 read_offset = 2;
      case 2: {
        if (tag == 16) {
         parse_read_offset:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_offset_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_read_limit;
        break;
      }

      // optional int64 read_limit = 3;
      case 3: {
        if (tag == 24) {
         parse_read_limit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_limit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.ReadRequest)
  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.ReadRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // optional int64 read_offset = 2;
  if (this->read_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->read_offset(), output);
  }

  // optional int64 read_limit = 3;
  if (this->read_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->read_limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadRequest)
  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.ReadRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // optional int64 read_offset = 2;
  if (this->read_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->read_offset(), target);
  }

  // optional int64 read_limit = 3;
  if (this->read_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->read_limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadRequest)
  size_t total_size = 0;

  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // optional int64 read_offset = 2;
  if (this->read_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_offset());
  }

  // optional int64 read_limit = 3;
  if (this->read_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadRequest)
    UnsafeMergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadRequest::UnsafeMergeFrom(const ReadRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.read_offset() != 0) {
    set_read_offset(from.read_offset());
  }
  if (from.read_limit() != 0) {
    set_read_limit(from.read_limit());
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadRequest::IsInitialized() const {

  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  resource_name_.Swap(&other->resource_name_);
  std::swap(read_offset_, other->read_offset_);
  std::swap(read_limit_, other->read_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadRequest_descriptor_;
  metadata.reflection = ReadRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadRequest

// optional string resource_name = 1;
void ReadRequest::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.resource_name)
  return resource_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.resource_name)
}
void ReadRequest::set_resource_name(const char* value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.ReadRequest.resource_name)
}
void ReadRequest::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.ReadRequest.resource_name)
}
::std::string* ReadRequest::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadRequest.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.ReadRequest.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadRequest.resource_name)
}

// optional int64 read_offset = 2;
void ReadRequest::clear_read_offset() {
  read_offset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ReadRequest::read_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_offset)
  return read_offset_;
}
void ReadRequest::set_read_offset(::google::protobuf::int64 value) {
  
  read_offset_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_offset)
}

// optional int64 read_limit = 3;
void ReadRequest::clear_read_limit() {
  read_limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ReadRequest::read_limit() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_limit)
  return read_limit_;
}
void ReadRequest::set_read_limit(::google::protobuf::int64 value) {
  
  read_limit_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_limit)
}

inline const ReadRequest* ReadRequest::internal_default_instance() {
  return &ReadRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.ReadResponse)
}

void ReadResponse::InitAsDefaultInstance() {
}

ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bytestream.ReadResponse)
}

void ReadResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadResponse_descriptor_;
}

const ReadResponse& ReadResponse::default_instance() {
  protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadResponse> ReadResponse_default_instance_;

ReadResponse* ReadResponse::New(::google::protobuf::Arena* arena) const {
  ReadResponse* n = new ReadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.ReadResponse)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.ReadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 10;
      case 10: {
        if (tag == 82) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.ReadResponse)
  return false;
#undef DO_
}

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.ReadResponse)
  // optional bytes data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.ReadResponse)
  // optional bytes data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.ReadResponse)
  size_t total_size = 0;

  // optional bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.ReadResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.ReadResponse)
    UnsafeMergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.ReadResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadResponse::UnsafeMergeFrom(const ReadResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.ReadResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadResponse::IsInitialized() const {

  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadResponse_descriptor_;
  metadata.reflection = ReadResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadResponse

// optional bytes data = 10;
void ReadResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadResponse::data() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadResponse.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadResponse.data)
}
void ReadResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.ReadResponse.data)
}
void ReadResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.ReadResponse.data)
}
::std::string* ReadResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadResponse::release_data() {
  // @@protoc_insertion_point(field_release:google.bytestream.ReadResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadResponse.data)
}

inline const ReadResponse* ReadResponse::internal_default_instance() {
  return &ReadResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kResourceNameFieldNumber;
const int WriteRequest::kWriteOffsetFieldNumber;
const int WriteRequest::kFinishWriteFieldNumber;
const int WriteRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.WriteRequest)
}

void WriteRequest::InitAsDefaultInstance() {
}

WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteRequest)
}

void WriteRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&write_offset_, 0, reinterpret_cast<char*>(&finish_write_) -
    reinterpret_cast<char*>(&write_offset_) + sizeof(finish_write_));
  _cached_size_ = 0;
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteRequest_descriptor_;
}

const WriteRequest& WriteRequest::default_instance() {
  protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WriteRequest> WriteRequest_default_instance_;

WriteRequest* WriteRequest::New(::google::protobuf::Arena* arena) const {
  WriteRequest* n = new WriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WriteRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WriteRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(write_offset_, finish_write_);
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.WriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resource_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), this->resource_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.WriteRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_write_offset;
        break;
      }

      // optional int64 write_offset = 2;
      case 2: {
        if (tag == 16) {
         parse_write_offset:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &write_offset_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_finish_write;
        break;
      }

      // optional bool finish_write = 3;
      case 3: {
        if (tag == 24) {
         parse_finish_write:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finish_write_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_data;
        break;
      }

      // optional bytes data = 10;
      case 10: {
        if (tag == 82) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.WriteRequest)
  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.WriteRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // optional int64 write_offset = 2;
  if (this->write_offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->write_offset(), output);
  }

  // optional bool finish_write = 3;
  if (this->finish_write() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->finish_write(), output);
  }

  // optional bytes data = 10;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteRequest)
  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.WriteRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // optional int64 write_offset = 2;
  if (this->write_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->write_offset(), target);
  }

  // optional bool finish_write = 3;
  if (this->finish_write() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->finish_write(), target);
  }

  // optional bytes data = 10;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteRequest)
  size_t total_size = 0;

  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // optional int64 write_offset = 2;
  if (this->write_offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->write_offset());
  }

  // optional bool finish_write = 3;
  if (this->finish_write() != 0) {
    total_size += 1 + 1;
  }

  // optional bytes data = 10;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteRequest)
    UnsafeMergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WriteRequest::UnsafeMergeFrom(const WriteRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.write_offset() != 0) {
    set_write_offset(from.write_offset());
  }
  if (from.finish_write() != 0) {
    set_finish_write(from.finish_write());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WriteRequest::IsInitialized() const {

  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  resource_name_.Swap(&other->resource_name_);
  std::swap(write_offset_, other->write_offset_);
  std::swap(finish_write_, other->finish_write_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteRequest_descriptor_;
  metadata.reflection = WriteRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteRequest

// optional string resource_name = 1;
void WriteRequest::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.resource_name)
  return resource_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.resource_name)
}
void WriteRequest::set_resource_name(const char* value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.WriteRequest.resource_name)
}
void WriteRequest::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.WriteRequest.resource_name)
}
::std::string* WriteRequest::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.resource_name)
}

// optional int64 write_offset = 2;
void WriteRequest::clear_write_offset() {
  write_offset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 WriteRequest::write_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.write_offset)
  return write_offset_;
}
void WriteRequest::set_write_offset(::google::protobuf::int64 value) {
  
  write_offset_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.write_offset)
}

// optional bool finish_write = 3;
void WriteRequest::clear_finish_write() {
  finish_write_ = false;
}
bool WriteRequest::finish_write() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.finish_write)
  return finish_write_;
}
void WriteRequest::set_finish_write(bool value) {
  
  finish_write_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.finish_write)
}

// optional bytes data = 10;
void WriteRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteRequest::data() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.data)
}
void WriteRequest::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.WriteRequest.data)
}
void WriteRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.WriteRequest.data)
}
::std::string* WriteRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteRequest::release_data() {
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.data)
}

inline const WriteRequest* WriteRequest::internal_default_instance() {
  return &WriteRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteResponse::kCommittedSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResponse::WriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.WriteResponse)
}

void WriteResponse::InitAsDefaultInstance() {
}

WriteResponse::WriteResponse(const WriteResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bytestream.WriteResponse)
}

void WriteResponse::SharedCtor() {
  committed_size_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

WriteResponse::~WriteResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.WriteResponse)
  SharedDtor();
}

void WriteResponse::SharedDtor() {
}

void WriteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteResponse_descriptor_;
}

const WriteResponse& WriteResponse::default_instance() {
  protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WriteResponse> WriteResponse_default_instance_;

WriteResponse* WriteResponse::New(::google::protobuf::Arena* arena) const {
  WriteResponse* n = new WriteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.WriteResponse)
  committed_size_ = GOOGLE_LONGLONG(0);
}

bool WriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.WriteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 committed_size = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &committed_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.WriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.WriteResponse)
  return false;
#undef DO_
}

void WriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.WriteResponse)
  // optional int64 committed_size = 1;
  if (this->committed_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->committed_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.WriteResponse)
}

::google::protobuf::uint8* WriteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.WriteResponse)
  // optional int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->committed_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.WriteResponse)
  return target;
}

size_t WriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.WriteResponse)
  size_t total_size = 0;

  // optional int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->committed_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.WriteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WriteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.WriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.WriteResponse)
    UnsafeMergeFrom(*source);
  }
}

void WriteResponse::MergeFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.WriteResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WriteResponse::UnsafeMergeFrom(const WriteResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.committed_size() != 0) {
    set_committed_size(from.committed_size());
  }
}

void WriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResponse::CopyFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.WriteResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WriteResponse::IsInitialized() const {

  return true;
}

void WriteResponse::Swap(WriteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteResponse::InternalSwap(WriteResponse* other) {
  std::swap(committed_size_, other->committed_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteResponse_descriptor_;
  metadata.reflection = WriteResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteResponse

// optional int64 committed_size = 1;
void WriteResponse::clear_committed_size() {
  committed_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 WriteResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteResponse.committed_size)
  return committed_size_;
}
void WriteResponse::set_committed_size(::google::protobuf::int64 value) {
  
  committed_size_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.WriteResponse.committed_size)
}

inline const WriteResponse* WriteResponse::internal_default_instance() {
  return &WriteResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryWriteStatusRequest::kResourceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryWriteStatusRequest::QueryWriteStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.QueryWriteStatusRequest)
}

void QueryWriteStatusRequest::InitAsDefaultInstance() {
}

QueryWriteStatusRequest::QueryWriteStatusRequest(const QueryWriteStatusRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusRequest)
}

void QueryWriteStatusRequest::SharedCtor() {
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryWriteStatusRequest::~QueryWriteStatusRequest() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusRequest)
  SharedDtor();
}

void QueryWriteStatusRequest::SharedDtor() {
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryWriteStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWriteStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryWriteStatusRequest_descriptor_;
}

const QueryWriteStatusRequest& QueryWriteStatusRequest::default_instance() {
  protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryWriteStatusRequest> QueryWriteStatusRequest_default_instance_;

QueryWriteStatusRequest* QueryWriteStatusRequest::New(::google::protobuf::Arena* arena) const {
  QueryWriteStatusRequest* n = new QueryWriteStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryWriteStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusRequest)
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QueryWriteStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.QueryWriteStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resource_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), this->resource_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.bytestream.QueryWriteStatusRequest.resource_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.QueryWriteStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.QueryWriteStatusRequest)
  return false;
#undef DO_
}

void QueryWriteStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.QueryWriteStatusRequest)
  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.QueryWriteStatusRequest.resource_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.QueryWriteStatusRequest)
}

::google::protobuf::uint8* QueryWriteStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusRequest)
  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), this->resource_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.bytestream.QueryWriteStatusRequest.resource_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusRequest)
  return target;
}

size_t QueryWriteStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusRequest)
  size_t total_size = 0;

  // optional string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWriteStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryWriteStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryWriteStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusRequest)
    UnsafeMergeFrom(*source);
  }
}

void QueryWriteStatusRequest::MergeFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryWriteStatusRequest::UnsafeMergeFrom(const QueryWriteStatusRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
}

void QueryWriteStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusRequest::CopyFrom(const QueryWriteStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryWriteStatusRequest::IsInitialized() const {

  return true;
}

void QueryWriteStatusRequest::Swap(QueryWriteStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryWriteStatusRequest::InternalSwap(QueryWriteStatusRequest* other) {
  resource_name_.Swap(&other->resource_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryWriteStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryWriteStatusRequest_descriptor_;
  metadata.reflection = QueryWriteStatusRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryWriteStatusRequest

// optional string resource_name = 1;
void QueryWriteStatusRequest::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryWriteStatusRequest::resource_name() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusRequest.resource_name)
  return resource_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryWriteStatusRequest::set_resource_name(const ::std::string& value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusRequest.resource_name)
}
void QueryWriteStatusRequest::set_resource_name(const char* value) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bytestream.QueryWriteStatusRequest.resource_name)
}
void QueryWriteStatusRequest::set_resource_name(const char* value, size_t size) {
  
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bytestream.QueryWriteStatusRequest.resource_name)
}
::std::string* QueryWriteStatusRequest::mutable_resource_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bytestream.QueryWriteStatusRequest.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryWriteStatusRequest::release_resource_name() {
  // @@protoc_insertion_point(field_release:google.bytestream.QueryWriteStatusRequest.resource_name)
  
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryWriteStatusRequest::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    
  } else {
    
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.QueryWriteStatusRequest.resource_name)
}

inline const QueryWriteStatusRequest* QueryWriteStatusRequest::internal_default_instance() {
  return &QueryWriteStatusRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryWriteStatusResponse::kCommittedSizeFieldNumber;
const int QueryWriteStatusResponse::kCompleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryWriteStatusResponse::QueryWriteStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.bytestream.QueryWriteStatusResponse)
}

void QueryWriteStatusResponse::InitAsDefaultInstance() {
}

QueryWriteStatusResponse::QueryWriteStatusResponse(const QueryWriteStatusResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.bytestream.QueryWriteStatusResponse)
}

void QueryWriteStatusResponse::SharedCtor() {
  ::memset(&committed_size_, 0, reinterpret_cast<char*>(&complete_) -
    reinterpret_cast<char*>(&committed_size_) + sizeof(complete_));
  _cached_size_ = 0;
}

QueryWriteStatusResponse::~QueryWriteStatusResponse() {
  // @@protoc_insertion_point(destructor:google.bytestream.QueryWriteStatusResponse)
  SharedDtor();
}

void QueryWriteStatusResponse::SharedDtor() {
}

void QueryWriteStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWriteStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryWriteStatusResponse_descriptor_;
}

const QueryWriteStatusResponse& QueryWriteStatusResponse::default_instance() {
  protobuf_InitDefaults_google_2fbytestream_2fbytestream_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryWriteStatusResponse> QueryWriteStatusResponse_default_instance_;

QueryWriteStatusResponse* QueryWriteStatusResponse::New(::google::protobuf::Arena* arena) const {
  QueryWriteStatusResponse* n = new QueryWriteStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryWriteStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.bytestream.QueryWriteStatusResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryWriteStatusResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryWriteStatusResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(committed_size_, complete_);

#undef ZR_HELPER_
#undef ZR_

}

bool QueryWriteStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.bytestream.QueryWriteStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 committed_size = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &committed_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_complete;
        break;
      }

      // optional bool complete = 2;
      case 2: {
        if (tag == 16) {
         parse_complete:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &complete_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.bytestream.QueryWriteStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.bytestream.QueryWriteStatusResponse)
  return false;
#undef DO_
}

void QueryWriteStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.bytestream.QueryWriteStatusResponse)
  // optional int64 committed_size = 1;
  if (this->committed_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->committed_size(), output);
  }

  // optional bool complete = 2;
  if (this->complete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->complete(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.bytestream.QueryWriteStatusResponse)
}

::google::protobuf::uint8* QueryWriteStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.bytestream.QueryWriteStatusResponse)
  // optional int64 committed_size = 1;
  if (this->committed_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->committed_size(), target);
  }

  // optional bool complete = 2;
  if (this->complete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->complete(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.bytestream.QueryWriteStatusResponse)
  return target;
}

size_t QueryWriteStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.bytestream.QueryWriteStatusResponse)
  size_t total_size = 0;

  // optional int64 committed_size = 1;
  if (this->committed_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->committed_size());
  }

  // optional bool complete = 2;
  if (this->complete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWriteStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueryWriteStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryWriteStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.bytestream.QueryWriteStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.bytestream.QueryWriteStatusResponse)
    UnsafeMergeFrom(*source);
  }
}

void QueryWriteStatusResponse::MergeFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.bytestream.QueryWriteStatusResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QueryWriteStatusResponse::UnsafeMergeFrom(const QueryWriteStatusResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.committed_size() != 0) {
    set_committed_size(from.committed_size());
  }
  if (from.complete() != 0) {
    set_complete(from.complete());
  }
}

void QueryWriteStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWriteStatusResponse::CopyFrom(const QueryWriteStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.bytestream.QueryWriteStatusResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QueryWriteStatusResponse::IsInitialized() const {

  return true;
}

void QueryWriteStatusResponse::Swap(QueryWriteStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryWriteStatusResponse::InternalSwap(QueryWriteStatusResponse* other) {
  std::swap(committed_size_, other->committed_size_);
  std::swap(complete_, other->complete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryWriteStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryWriteStatusResponse_descriptor_;
  metadata.reflection = QueryWriteStatusResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryWriteStatusResponse

// optional int64 committed_size = 1;
void QueryWriteStatusResponse::clear_committed_size() {
  committed_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 QueryWriteStatusResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.committed_size)
  return committed_size_;
}
void QueryWriteStatusResponse::set_committed_size(::google::protobuf::int64 value) {
  
  committed_size_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.committed_size)
}

// optional bool complete = 2;
void QueryWriteStatusResponse::clear_complete() {
  complete_ = false;
}
bool QueryWriteStatusResponse::complete() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.complete)
  return complete_;
}
void QueryWriteStatusResponse::set_complete(bool value) {
  
  complete_ = value;
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.complete)
}

inline const QueryWriteStatusResponse* QueryWriteStatusResponse::internal_default_instance() {
  return &QueryWriteStatusResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bytestream
}  // namespace google

// @@protoc_insertion_point(global_scope)
