// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/metric_value.proto

#ifndef PROTOBUF_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto__INCLUDED
#define PROTOBUF_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/servicecontrol/v1/distribution.pb.h"
#include <google/protobuf/timestamp.pb.h>
#include "google/type/money.pb.h"
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
void protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
void protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();

class MetricValue;
class MetricValueSet;

// ===================================================================

class MetricValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.MetricValue) */ {
 public:
  MetricValue();
  virtual ~MetricValue();

  MetricValue(const MetricValue& from);

  inline MetricValue& operator=(const MetricValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const MetricValue& default_instance();

  enum ValueCase {
    kBoolValue = 4,
    kInt64Value = 5,
    kDoubleValue = 6,
    kStringValue = 7,
    kDistributionValue = 8,
    VALUE_NOT_SET = 0,
  };

  static const MetricValue* internal_default_instance();

  void UnsafeArenaSwap(MetricValue* other);
  void Swap(MetricValue* other);

  // implements Message ----------------------------------------------

  inline MetricValue* New() const { return New(NULL); }

  MetricValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetricValue& from);
  void MergeFrom(const MetricValue& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetricValue* other);
  void UnsafeMergeFrom(const MetricValue& from);
  protected:
  explicit MetricValue(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 1;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // optional .google.protobuf.Timestamp start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  private:
  void _slow_mutable_start_time();
  void _slow_set_allocated_start_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** start_time);
  ::google::protobuf::Timestamp* _slow_release_start_time();
  public:
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();
  void unsafe_arena_set_allocated_start_time(
      ::google::protobuf::Timestamp* start_time);

  // optional .google.protobuf.Timestamp end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  private:
  void _slow_mutable_end_time();
  void _slow_set_allocated_end_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** end_time);
  ::google::protobuf::Timestamp* _slow_release_end_time();
  public:
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();
  void unsafe_arena_set_allocated_end_time(
      ::google::protobuf::Timestamp* end_time);

  // optional bool bool_value = 4;
  private:
  bool has_bool_value() const;
  public:
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 4;
  bool bool_value() const;
  void set_bool_value(bool value);

  // optional int64 int64_value = 5;
  private:
  bool has_int64_value() const;
  public:
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 5;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // optional double double_value = 6;
  private:
  bool has_double_value() const;
  public:
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 6;
  double double_value() const;
  void set_double_value(double value);

  // optional string string_value = 7;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 7;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);
  ::std::string* unsafe_arena_release_string_value();
  void unsafe_arena_set_allocated_string_value(
      ::std::string* string_value);

  // optional .google.api.servicecontrol.v1.Distribution distribution_value = 8;
  bool has_distribution_value() const;
  void clear_distribution_value();
  static const int kDistributionValueFieldNumber = 8;
  private:
  void _slow_mutable_distribution_value();
  void _slow_set_allocated_distribution_value(
      ::google::protobuf::Arena* message_arena, ::google::api::servicecontrol::v1::Distribution** distribution_value);
  ::google::api::servicecontrol::v1::Distribution* _slow_release_distribution_value();
  public:
  const ::google::api::servicecontrol::v1::Distribution& distribution_value() const;
  ::google::api::servicecontrol::v1::Distribution* mutable_distribution_value();
  ::google::api::servicecontrol::v1::Distribution* release_distribution_value();
  void set_allocated_distribution_value(::google::api::servicecontrol::v1::Distribution* distribution_value);
  ::google::api::servicecontrol::v1::Distribution* unsafe_arena_release_distribution_value();
  void unsafe_arena_set_allocated_distribution_value(
      ::google::api::servicecontrol::v1::Distribution* distribution_value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.MetricValue)
 private:
  inline void set_has_bool_value();
  inline void set_has_int64_value();
  inline void set_has_double_value();
  inline void set_has_string_value();
  inline void set_has_distribution_value();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      MetricValue_LabelsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  union ValueUnion {
    ValueUnion() {}
    bool bool_value_;
    ::google::protobuf::int64 int64_value_;
    double double_value_;
    ::google::protobuf::internal::ArenaStringPtr string_value_;
    ::google::api::servicecontrol::v1::Distribution* distribution_value_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MetricValue> MetricValue_default_instance_;

// -------------------------------------------------------------------

class MetricValueSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.MetricValueSet) */ {
 public:
  MetricValueSet();
  virtual ~MetricValueSet();

  MetricValueSet(const MetricValueSet& from);

  inline MetricValueSet& operator=(const MetricValueSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const MetricValueSet& default_instance();

  static const MetricValueSet* internal_default_instance();

  void UnsafeArenaSwap(MetricValueSet* other);
  void Swap(MetricValueSet* other);

  // implements Message ----------------------------------------------

  inline MetricValueSet* New() const { return New(NULL); }

  MetricValueSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetricValueSet& from);
  void MergeFrom(const MetricValueSet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetricValueSet* other);
  void UnsafeMergeFrom(const MetricValueSet& from);
  protected:
  explicit MetricValueSet(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string metric_name = 1;
  void clear_metric_name();
  static const int kMetricNameFieldNumber = 1;
  const ::std::string& metric_name() const;
  void set_metric_name(const ::std::string& value);
  void set_metric_name(const char* value);
  void set_metric_name(const char* value, size_t size);
  ::std::string* mutable_metric_name();
  ::std::string* release_metric_name();
  void set_allocated_metric_name(::std::string* metric_name);
  ::std::string* unsafe_arena_release_metric_name();
  void unsafe_arena_set_allocated_metric_name(
      ::std::string* metric_name);

  // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
  int metric_values_size() const;
  void clear_metric_values();
  static const int kMetricValuesFieldNumber = 2;
  const ::google::api::servicecontrol::v1::MetricValue& metric_values(int index) const;
  ::google::api::servicecontrol::v1::MetricValue* mutable_metric_values(int index);
  ::google::api::servicecontrol::v1::MetricValue* add_metric_values();
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValue >*
      mutable_metric_values();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValue >&
      metric_values() const;

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.MetricValueSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValue > metric_values_;
  ::google::protobuf::internal::ArenaStringPtr metric_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();
  friend void protobuf_ShutdownFile_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MetricValueSet> MetricValueSet_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MetricValue

// map<string, string> labels = 1;
inline int MetricValue::labels_size() const {
  return labels_.size();
}
inline void MetricValue::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
MetricValue::labels() const {
  // @@protoc_insertion_point(field_map:google.api.servicecontrol.v1.MetricValue.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
MetricValue::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.api.servicecontrol.v1.MetricValue.labels)
  return labels_.MutableMap();
}

// optional .google.protobuf.Timestamp start_time = 2;
inline bool MetricValue::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void MetricValue::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& MetricValue::start_time() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* MetricValue::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* MetricValue::release_start_time() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.start_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time();
  } else {
    ::google::protobuf::Timestamp* temp = start_time_;
    start_time_ = NULL;
    return temp;
  }
}
inline  void MetricValue::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_;
  }
  if (start_time != NULL) {
    _slow_set_allocated_start_time(message_arena, &start_time);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.start_time)
}

// optional .google.protobuf.Timestamp end_time = 3;
inline bool MetricValue::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void MetricValue::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& MetricValue::end_time() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* MetricValue::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* MetricValue::release_end_time() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.end_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_end_time();
  } else {
    ::google::protobuf::Timestamp* temp = end_time_;
    end_time_ = NULL;
    return temp;
  }
}
inline  void MetricValue::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_time_;
  }
  if (end_time != NULL) {
    _slow_set_allocated_end_time(message_arena, &end_time);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.end_time)
}

// optional bool bool_value = 4;
inline bool MetricValue::has_bool_value() const {
  return value_case() == kBoolValue;
}
inline void MetricValue::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
inline void MetricValue::clear_bool_value() {
  if (has_bool_value()) {
    value_.bool_value_ = false;
    clear_has_value();
  }
}
inline bool MetricValue::bool_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.bool_value)
  if (has_bool_value()) {
    return value_.bool_value_;
  }
  return false;
}
inline void MetricValue::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_value();
    set_has_bool_value();
  }
  value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.bool_value)
}

// optional int64 int64_value = 5;
inline bool MetricValue::has_int64_value() const {
  return value_case() == kInt64Value;
}
inline void MetricValue::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
inline void MetricValue::clear_int64_value() {
  if (has_int64_value()) {
    value_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 MetricValue::int64_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.int64_value)
  if (has_int64_value()) {
    return value_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void MetricValue::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_value();
    set_has_int64_value();
  }
  value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.int64_value)
}

// optional double double_value = 6;
inline bool MetricValue::has_double_value() const {
  return value_case() == kDoubleValue;
}
inline void MetricValue::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
inline void MetricValue::clear_double_value() {
  if (has_double_value()) {
    value_.double_value_ = 0;
    clear_has_value();
  }
}
inline double MetricValue::double_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.double_value)
  if (has_double_value()) {
    return value_.double_value_;
  }
  return 0;
}
inline void MetricValue::set_double_value(double value) {
  if (!has_double_value()) {
    clear_value();
    set_has_double_value();
  }
  value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.double_value)
}

// optional string string_value = 7;
inline bool MetricValue::has_string_value() const {
  return value_case() == kStringValue;
}
inline void MetricValue::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void MetricValue::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_value();
  }
}
inline const ::std::string& MetricValue::string_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.string_value)
  if (has_string_value()) {
    return value_.string_value_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MetricValue::set_string_value(const ::std::string& value) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValue.string_value)
}
inline void MetricValue::set_string_value(const char* value) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.MetricValue.string_value)
}
inline void MetricValue::set_string_value(const char* value,
                             size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.MetricValue.string_value)
}
inline ::std::string* MetricValue::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return value_.string_value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.string_value)
}
inline ::std::string* MetricValue::release_string_value() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline ::std::string* MetricValue::unsafe_arena_release_string_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValue.string_value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void MetricValue::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.string_value)
}
inline void MetricValue::unsafe_arena_set_allocated_string_value(::std::string* string_value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value) {
    set_has_string_value();
    value_.string_value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.string_value)
}

// optional .google.api.servicecontrol.v1.Distribution distribution_value = 8;
inline bool MetricValue::has_distribution_value() const {
  return value_case() == kDistributionValue;
}
inline void MetricValue::set_has_distribution_value() {
  _oneof_case_[0] = kDistributionValue;
}
inline void MetricValue::clear_distribution_value() {
  if (has_distribution_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_.distribution_value_;
    }
    clear_has_value();
  }
}
inline  const ::google::api::servicecontrol::v1::Distribution& MetricValue::distribution_value() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValue.distribution_value)
  return has_distribution_value()
      ? *value_.distribution_value_
      : ::google::api::servicecontrol::v1::Distribution::default_instance();
}
inline ::google::api::servicecontrol::v1::Distribution* MetricValue::mutable_distribution_value() {
  if (!has_distribution_value()) {
    clear_value();
    set_has_distribution_value();
    value_.distribution_value_ = 
      ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValue.distribution_value)
  return value_.distribution_value_;
}
inline ::google::api::servicecontrol::v1::Distribution* MetricValue::release_distribution_value() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValue.distribution_value)
  if (has_distribution_value()) {
    clear_has_value();
    if (GetArenaNoVirtual() != NULL) {
      ::google::api::servicecontrol::v1::Distribution* temp = new ::google::api::servicecontrol::v1::Distribution(*value_.distribution_value_);
      value_.distribution_value_ = NULL;
      return temp;
    } else {
      ::google::api::servicecontrol::v1::Distribution* temp = value_.distribution_value_;
      value_.distribution_value_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
inline void MetricValue::set_allocated_distribution_value(::google::api::servicecontrol::v1::Distribution* distribution_value) {
  clear_value();
  if (distribution_value) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(distribution_value) == NULL) {
      GetArenaNoVirtual()->Own(distribution_value);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(distribution_value)) {
      ::google::api::servicecontrol::v1::Distribution* new_distribution_value = 
          ::google::protobuf::Arena::CreateMessage< ::google::api::servicecontrol::v1::Distribution >(
          GetArenaNoVirtual());
      new_distribution_value->CopyFrom(*distribution_value);
      distribution_value = new_distribution_value;
    }
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.distribution_value)
}
inline  ::google::api::servicecontrol::v1::Distribution* MetricValue::unsafe_arena_release_distribution_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValue.distribution_value)
  if (has_distribution_value()) {
    clear_has_value();
    ::google::api::servicecontrol::v1::Distribution* temp = value_.distribution_value_;
    value_.distribution_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline  void MetricValue::unsafe_arena_set_allocated_distribution_value(::google::api::servicecontrol::v1::Distribution* distribution_value) {
  clear_value();
  if (distribution_value) {
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.distribution_value)
}

inline bool MetricValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void MetricValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline MetricValue::ValueCase MetricValue::value_case() const {
  return MetricValue::ValueCase(_oneof_case_[0]);
}
inline const MetricValue* MetricValue::internal_default_instance() {
  return &MetricValue_default_instance_.get();
}
// -------------------------------------------------------------------

// MetricValueSet

// optional string metric_name = 1;
inline void MetricValueSet::clear_metric_name() {
  metric_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& MetricValueSet::metric_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  return metric_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetricValueSet::set_metric_name(const ::std::string& value) {
  
  metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
inline void MetricValueSet::set_metric_name(const char* value) {
  
  metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
inline void MetricValueSet::set_metric_name(const char* value,
    size_t size) {
  
  metric_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
inline ::std::string* MetricValueSet::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  return metric_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MetricValueSet::release_metric_name() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  
  return metric_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MetricValueSet::unsafe_arena_release_metric_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.MetricValueSet.metric_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return metric_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void MetricValueSet::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}
inline void MetricValueSet::unsafe_arena_set_allocated_metric_name(
    ::std::string* metric_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (metric_name != NULL) {
    
  } else {
    
  }
  metric_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      metric_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValueSet.metric_name)
}

// repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
inline int MetricValueSet::metric_values_size() const {
  return metric_values_.size();
}
inline void MetricValueSet::clear_metric_values() {
  metric_values_.Clear();
}
inline const ::google::api::servicecontrol::v1::MetricValue& MetricValueSet::metric_values(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_.Get(index);
}
inline ::google::api::servicecontrol::v1::MetricValue* MetricValueSet::mutable_metric_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_.Mutable(index);
}
inline ::google::api::servicecontrol::v1::MetricValue* MetricValueSet::add_metric_values() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValue >*
MetricValueSet::mutable_metric_values() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return &metric_values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValue >&
MetricValueSet::metric_values() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.MetricValueSet.metric_values)
  return metric_values_;
}

inline const MetricValueSet* MetricValueSet::internal_default_instance() {
  return &MetricValueSet_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto__INCLUDED
