// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: google/cloud/ml/v1beta1/prediction_service.proto

#include "google/cloud/ml/v1beta1/prediction_service.pb.h"
#include "google/cloud/ml/v1beta1/prediction_service.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace ml {
namespace v1beta1 {

static const char* OnlinePredictionService_method_names[] = {
  "/google.cloud.ml.v1beta1.OnlinePredictionService/Predict",
};

std::unique_ptr< OnlinePredictionService::Stub> OnlinePredictionService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< OnlinePredictionService::Stub> stub(new OnlinePredictionService::Stub(channel));
  return stub;
}

OnlinePredictionService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_Predict_(OnlinePredictionService_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status OnlinePredictionService::Stub::Predict(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::PredictRequest& request, ::google::api::HttpBody* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_Predict_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::api::HttpBody>* OnlinePredictionService::Stub::AsyncPredictRaw(::grpc::ClientContext* context, const ::google::cloud::ml::v1beta1::PredictRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::api::HttpBody>(channel_.get(), cq, rpcmethod_Predict_, context, request);
}

OnlinePredictionService::Service::Service() {
  (void)OnlinePredictionService_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      OnlinePredictionService_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< OnlinePredictionService::Service, ::google::cloud::ml::v1beta1::PredictRequest, ::google::api::HttpBody>(
          std::mem_fn(&OnlinePredictionService::Service::Predict), this)));
}

OnlinePredictionService::Service::~Service() {
}

::grpc::Status OnlinePredictionService::Service::Predict(::grpc::ServerContext* context, const ::google::cloud::ml::v1beta1::PredictRequest* request, ::google::api::HttpBody* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace ml
}  // namespace v1beta1

