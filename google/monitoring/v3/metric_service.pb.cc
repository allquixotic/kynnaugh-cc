// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/metric_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/monitoring/v3/metric_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace monitoring {
namespace v3 {

namespace {

const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListMonitoredResourceDescriptorsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListMonitoredResourceDescriptorsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMonitoredResourceDescriptorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMonitoredResourceDescriptorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListMetricDescriptorsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListMetricDescriptorsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListMetricDescriptorsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListMetricDescriptorsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMetricDescriptorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMetricDescriptorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateMetricDescriptorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateMetricDescriptorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteMetricDescriptorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteMetricDescriptorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTimeSeriesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTimeSeriesRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ListTimeSeriesRequest_TimeSeriesView_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ListTimeSeriesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTimeSeriesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTimeSeriesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTimeSeriesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateTimeSeriesError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateTimeSeriesError_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto() {
  protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/monitoring/v3/metric_service.proto");
  GOOGLE_CHECK(file != NULL);
  ListMonitoredResourceDescriptorsRequest_descriptor_ = file->message_type(0);
  static const int ListMonitoredResourceDescriptorsRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, page_token_),
  };
  ListMonitoredResourceDescriptorsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListMonitoredResourceDescriptorsRequest_descriptor_,
      ListMonitoredResourceDescriptorsRequest::internal_default_instance(),
      ListMonitoredResourceDescriptorsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListMonitoredResourceDescriptorsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsRequest, _internal_metadata_));
  ListMonitoredResourceDescriptorsResponse_descriptor_ = file->message_type(1);
  static const int ListMonitoredResourceDescriptorsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsResponse, resource_descriptors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsResponse, next_page_token_),
  };
  ListMonitoredResourceDescriptorsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListMonitoredResourceDescriptorsResponse_descriptor_,
      ListMonitoredResourceDescriptorsResponse::internal_default_instance(),
      ListMonitoredResourceDescriptorsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListMonitoredResourceDescriptorsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMonitoredResourceDescriptorsResponse, _internal_metadata_));
  GetMonitoredResourceDescriptorRequest_descriptor_ = file->message_type(2);
  static const int GetMonitoredResourceDescriptorRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMonitoredResourceDescriptorRequest, name_),
  };
  GetMonitoredResourceDescriptorRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetMonitoredResourceDescriptorRequest_descriptor_,
      GetMonitoredResourceDescriptorRequest::internal_default_instance(),
      GetMonitoredResourceDescriptorRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetMonitoredResourceDescriptorRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMonitoredResourceDescriptorRequest, _internal_metadata_));
  ListMetricDescriptorsRequest_descriptor_ = file->message_type(3);
  static const int ListMetricDescriptorsRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsRequest, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsRequest, page_token_),
  };
  ListMetricDescriptorsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListMetricDescriptorsRequest_descriptor_,
      ListMetricDescriptorsRequest::internal_default_instance(),
      ListMetricDescriptorsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListMetricDescriptorsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsRequest, _internal_metadata_));
  ListMetricDescriptorsResponse_descriptor_ = file->message_type(4);
  static const int ListMetricDescriptorsResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsResponse, metric_descriptors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsResponse, next_page_token_),
  };
  ListMetricDescriptorsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListMetricDescriptorsResponse_descriptor_,
      ListMetricDescriptorsResponse::internal_default_instance(),
      ListMetricDescriptorsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListMetricDescriptorsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMetricDescriptorsResponse, _internal_metadata_));
  GetMetricDescriptorRequest_descriptor_ = file->message_type(5);
  static const int GetMetricDescriptorRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricDescriptorRequest, name_),
  };
  GetMetricDescriptorRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetMetricDescriptorRequest_descriptor_,
      GetMetricDescriptorRequest::internal_default_instance(),
      GetMetricDescriptorRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetMetricDescriptorRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricDescriptorRequest, _internal_metadata_));
  CreateMetricDescriptorRequest_descriptor_ = file->message_type(6);
  static const int CreateMetricDescriptorRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMetricDescriptorRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMetricDescriptorRequest, metric_descriptor_),
  };
  CreateMetricDescriptorRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateMetricDescriptorRequest_descriptor_,
      CreateMetricDescriptorRequest::internal_default_instance(),
      CreateMetricDescriptorRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateMetricDescriptorRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMetricDescriptorRequest, _internal_metadata_));
  DeleteMetricDescriptorRequest_descriptor_ = file->message_type(7);
  static const int DeleteMetricDescriptorRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMetricDescriptorRequest, name_),
  };
  DeleteMetricDescriptorRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteMetricDescriptorRequest_descriptor_,
      DeleteMetricDescriptorRequest::internal_default_instance(),
      DeleteMetricDescriptorRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteMetricDescriptorRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMetricDescriptorRequest, _internal_metadata_));
  ListTimeSeriesRequest_descriptor_ = file->message_type(8);
  static const int ListTimeSeriesRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, interval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, aggregation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, order_by_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, view_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, page_token_),
  };
  ListTimeSeriesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTimeSeriesRequest_descriptor_,
      ListTimeSeriesRequest::internal_default_instance(),
      ListTimeSeriesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTimeSeriesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesRequest, _internal_metadata_));
  ListTimeSeriesRequest_TimeSeriesView_descriptor_ = ListTimeSeriesRequest_descriptor_->enum_type(0);
  ListTimeSeriesResponse_descriptor_ = file->message_type(9);
  static const int ListTimeSeriesResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesResponse, time_series_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesResponse, next_page_token_),
  };
  ListTimeSeriesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListTimeSeriesResponse_descriptor_,
      ListTimeSeriesResponse::internal_default_instance(),
      ListTimeSeriesResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListTimeSeriesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTimeSeriesResponse, _internal_metadata_));
  CreateTimeSeriesRequest_descriptor_ = file->message_type(10);
  static const int CreateTimeSeriesRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTimeSeriesRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTimeSeriesRequest, time_series_),
  };
  CreateTimeSeriesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateTimeSeriesRequest_descriptor_,
      CreateTimeSeriesRequest::internal_default_instance(),
      CreateTimeSeriesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateTimeSeriesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTimeSeriesRequest, _internal_metadata_));
  CreateTimeSeriesError_descriptor_ = file->message_type(11);
  static const int CreateTimeSeriesError_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTimeSeriesError, time_series_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTimeSeriesError, status_),
  };
  CreateTimeSeriesError_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateTimeSeriesError_descriptor_,
      CreateTimeSeriesError::internal_default_instance(),
      CreateTimeSeriesError_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateTimeSeriesError),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateTimeSeriesError, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListMonitoredResourceDescriptorsRequest_descriptor_, ListMonitoredResourceDescriptorsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListMonitoredResourceDescriptorsResponse_descriptor_, ListMonitoredResourceDescriptorsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMonitoredResourceDescriptorRequest_descriptor_, GetMonitoredResourceDescriptorRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListMetricDescriptorsRequest_descriptor_, ListMetricDescriptorsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListMetricDescriptorsResponse_descriptor_, ListMetricDescriptorsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMetricDescriptorRequest_descriptor_, GetMetricDescriptorRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateMetricDescriptorRequest_descriptor_, CreateMetricDescriptorRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteMetricDescriptorRequest_descriptor_, DeleteMetricDescriptorRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTimeSeriesRequest_descriptor_, ListTimeSeriesRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListTimeSeriesResponse_descriptor_, ListTimeSeriesResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateTimeSeriesRequest_descriptor_, CreateTimeSeriesRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateTimeSeriesError_descriptor_, CreateTimeSeriesError::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto() {
  ListMonitoredResourceDescriptorsRequest_default_instance_.Shutdown();
  delete ListMonitoredResourceDescriptorsRequest_reflection_;
  ListMonitoredResourceDescriptorsResponse_default_instance_.Shutdown();
  delete ListMonitoredResourceDescriptorsResponse_reflection_;
  GetMonitoredResourceDescriptorRequest_default_instance_.Shutdown();
  delete GetMonitoredResourceDescriptorRequest_reflection_;
  ListMetricDescriptorsRequest_default_instance_.Shutdown();
  delete ListMetricDescriptorsRequest_reflection_;
  ListMetricDescriptorsResponse_default_instance_.Shutdown();
  delete ListMetricDescriptorsResponse_reflection_;
  GetMetricDescriptorRequest_default_instance_.Shutdown();
  delete GetMetricDescriptorRequest_reflection_;
  CreateMetricDescriptorRequest_default_instance_.Shutdown();
  delete CreateMetricDescriptorRequest_reflection_;
  DeleteMetricDescriptorRequest_default_instance_.Shutdown();
  delete DeleteMetricDescriptorRequest_reflection_;
  ListTimeSeriesRequest_default_instance_.Shutdown();
  delete ListTimeSeriesRequest_reflection_;
  ListTimeSeriesResponse_default_instance_.Shutdown();
  delete ListTimeSeriesResponse_reflection_;
  CreateTimeSeriesRequest_default_instance_.Shutdown();
  delete CreateTimeSeriesRequest_reflection_;
  CreateTimeSeriesError_default_instance_.Shutdown();
  delete CreateTimeSeriesError_reflection_;
}

void protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmetric_2eproto();
  ::google::api::protobuf_InitDefaults_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::monitoring::v3::protobuf_InitDefaults_google_2fmonitoring_2fv3_2fcommon_2eproto();
  ::google::monitoring::v3::protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fempty_2eproto();
  ::google::rpc::protobuf_InitDefaults_google_2frpc_2fstatus_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ListMonitoredResourceDescriptorsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListMonitoredResourceDescriptorsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetMonitoredResourceDescriptorRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListMetricDescriptorsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListMetricDescriptorsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetMetricDescriptorRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateMetricDescriptorRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DeleteMetricDescriptorRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListTimeSeriesRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListTimeSeriesResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateTimeSeriesRequest_default_instance_.DefaultConstruct();
  CreateTimeSeriesError_default_instance_.DefaultConstruct();
  ListMonitoredResourceDescriptorsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListMonitoredResourceDescriptorsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetMonitoredResourceDescriptorRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListMetricDescriptorsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListMetricDescriptorsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetMetricDescriptorRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateMetricDescriptorRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteMetricDescriptorRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListTimeSeriesRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListTimeSeriesResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateTimeSeriesRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateTimeSeriesError_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_once_);
void protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_once_,
                 &protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_impl);
}
void protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)google/monitoring/v3/metric_service.pr"
    "oto\022\024google.monitoring.v3\032\034google/api/an"
    "notations.proto\032\027google/api/metric.proto"
    "\032#google/api/monitored_resource.proto\032!g"
    "oogle/monitoring/v3/common.proto\032!google"
    "/monitoring/v3/metric.proto\032\033google/prot"
    "obuf/empty.proto\032\027google/rpc/status.prot"
    "o\"n\n\'ListMonitoredResourceDescriptorsReq"
    "uest\022\014\n\004name\030\005 \001(\t\022\016\n\006filter\030\002 \001(\t\022\021\n\tpa"
    "ge_size\030\003 \001(\005\022\022\n\npage_token\030\004 \001(\t\"\212\001\n(Li"
    "stMonitoredResourceDescriptorsResponse\022E"
    "\n\024resource_descriptors\030\001 \003(\0132\'.google.ap"
    "i.MonitoredResourceDescriptor\022\027\n\017next_pa"
    "ge_token\030\002 \001(\t\"5\n%GetMonitoredResourceDe"
    "scriptorRequest\022\014\n\004name\030\003 \001(\t\"c\n\034ListMet"
    "ricDescriptorsRequest\022\014\n\004name\030\005 \001(\t\022\016\n\006f"
    "ilter\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\022\n\npage_t"
    "oken\030\004 \001(\t\"r\n\035ListMetricDescriptorsRespo"
    "nse\0228\n\022metric_descriptors\030\001 \003(\0132\034.google"
    ".api.MetricDescriptor\022\027\n\017next_page_token"
    "\030\002 \001(\t\"*\n\032GetMetricDescriptorRequest\022\014\n\004"
    "name\030\003 \001(\t\"f\n\035CreateMetricDescriptorRequ"
    "est\022\014\n\004name\030\003 \001(\t\0227\n\021metric_descriptor\030\002"
    " \001(\0132\034.google.api.MetricDescriptor\"-\n\035De"
    "leteMetricDescriptorRequest\022\014\n\004name\030\003 \001("
    "\t\"\317\002\n\025ListTimeSeriesRequest\022\014\n\004name\030\n \001("
    "\t\022\016\n\006filter\030\002 \001(\t\0224\n\010interval\030\004 \001(\0132\".go"
    "ogle.monitoring.v3.TimeInterval\0226\n\013aggre"
    "gation\030\005 \001(\0132!.google.monitoring.v3.Aggr"
    "egation\022\020\n\010order_by\030\006 \001(\t\022H\n\004view\030\007 \001(\0162"
    ":.google.monitoring.v3.ListTimeSeriesReq"
    "uest.TimeSeriesView\022\021\n\tpage_size\030\010 \001(\005\022\022"
    "\n\npage_token\030\t \001(\t\"\'\n\016TimeSeriesView\022\010\n\004"
    "FULL\020\000\022\013\n\007HEADERS\020\001\"h\n\026ListTimeSeriesRes"
    "ponse\0225\n\013time_series\030\001 \003(\0132 .google.moni"
    "toring.v3.TimeSeries\022\027\n\017next_page_token\030"
    "\002 \001(\t\"^\n\027CreateTimeSeriesRequest\022\014\n\004name"
    "\030\003 \001(\t\0225\n\013time_series\030\002 \003(\0132 .google.mon"
    "itoring.v3.TimeSeries\"r\n\025CreateTimeSerie"
    "sError\0225\n\013time_series\030\001 \001(\0132 .google.mon"
    "itoring.v3.TimeSeries\022\"\n\006status\030\002 \001(\0132\022."
    "google.rpc.Status2\365\n\n\rMetricService\022\335\001\n "
    "ListMonitoredResourceDescriptors\022=.googl"
    "e.monitoring.v3.ListMonitoredResourceDes"
    "criptorsRequest\032>.google.monitoring.v3.L"
    "istMonitoredResourceDescriptorsResponse\""
    ":\202\323\344\223\0024\0222/v3/{name=projects/*}/monitored"
    "ResourceDescriptors\022\304\001\n\036GetMonitoredReso"
    "urceDescriptor\022;.google.monitoring.v3.Ge"
    "tMonitoredResourceDescriptorRequest\032\'.go"
    "ogle.api.MonitoredResourceDescriptor\"<\202\323"
    "\344\223\0026\0224/v3/{name=projects/*/monitoredReso"
    "urceDescriptors/*}\022\261\001\n\025ListMetricDescrip"
    "tors\0222.google.monitoring.v3.ListMetricDe"
    "scriptorsRequest\0323.google.monitoring.v3."
    "ListMetricDescriptorsResponse\"/\202\323\344\223\002)\022\'/"
    "v3/{name=projects/*}/metricDescriptors\022\231"
    "\001\n\023GetMetricDescriptor\0220.google.monitori"
    "ng.v3.GetMetricDescriptorRequest\032\034.googl"
    "e.api.MetricDescriptor\"2\202\323\344\223\002,\022*/v3/{nam"
    "e=projects/*/metricDescriptors/**}\022\257\001\n\026C"
    "reateMetricDescriptor\0223.google.monitorin"
    "g.v3.CreateMetricDescriptorRequest\032\034.goo"
    "gle.api.MetricDescriptor\"B\202\323\344\223\002<\"\'/v3/{n"
    "ame=projects/*}/metricDescriptors:\021metri"
    "c_descriptor\022\231\001\n\026DeleteMetricDescriptor\022"
    "3.google.monitoring.v3.DeleteMetricDescr"
    "iptorRequest\032\026.google.protobuf.Empty\"2\202\323"
    "\344\223\002,**/v3/{name=projects/*/metricDescrip"
    "tors/**}\022\225\001\n\016ListTimeSeries\022+.google.mon"
    "itoring.v3.ListTimeSeriesRequest\032,.googl"
    "e.monitoring.v3.ListTimeSeriesResponse\"("
    "\202\323\344\223\002\"\022 /v3/{name=projects/*}/timeSeries"
    "\022\206\001\n\020CreateTimeSeries\022-.google.monitorin"
    "g.v3.CreateTimeSeriesRequest\032\026.google.pr"
    "otobuf.Empty\"+\202\323\344\223\002%\" /v3/{name=projects"
    "/*}/timeSeries:\001*B\215\001\n\030com.google.monitor"
    "ing.v3B\022MetricServiceProtoP\001Z>google.gol"
    "ang.org/genproto/googleapis/monitoring/v"
    "3;monitoring\252\002\032Google.Cloud.Monitoring.V"
    "3b\006proto3", 3209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/monitoring/v3/metric_service.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmetric_2eproto();
  ::google::api::protobuf_AddDesc_google_2fapi_2fmonitored_5fresource_2eproto();
  ::google::monitoring::v3::protobuf_AddDesc_google_2fmonitoring_2fv3_2fcommon_2eproto();
  ::google::monitoring::v3::protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::rpc::protobuf_AddDesc_google_2frpc_2fstatus_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_once_);
void protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_once_,
                 &protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto {
  StaticDescriptorInitializer_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto() {
    protobuf_AddDesc_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  }
} static_descriptor_initializer_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsRequest::kNameFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kFilterFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageSizeFieldNumber;
const int ListMonitoredResourceDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}

void ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance() {
}

ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}

void ListMonitoredResourceDescriptorsRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListMonitoredResourceDescriptorsRequest::~ListMonitoredResourceDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListMonitoredResourceDescriptorsRequest_descriptor_;
}

const ListMonitoredResourceDescriptorsRequest& ListMonitoredResourceDescriptorsRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsRequest> ListMonitoredResourceDescriptorsRequest_default_instance_;

ListMonitoredResourceDescriptorsRequest* ListMonitoredResourceDescriptorsRequest::New(::google::protobuf::Arena* arena) const {
  ListMonitoredResourceDescriptorsRequest* n = new ListMonitoredResourceDescriptorsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMonitoredResourceDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListMonitoredResourceDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filter = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_page_token;
        break;
      }

      // optional string page_token = 4;
      case 4: {
        if (tag == 34) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  return target;
}

size_t ListMonitoredResourceDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  size_t total_size = 0;

  // optional string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListMonitoredResourceDescriptorsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMonitoredResourceDescriptorsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListMonitoredResourceDescriptorsRequest::UnsafeMergeFrom(const ListMonitoredResourceDescriptorsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListMonitoredResourceDescriptorsRequest::IsInitialized() const {

  return true;
}

void ListMonitoredResourceDescriptorsRequest::Swap(ListMonitoredResourceDescriptorsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsRequest::InternalSwap(ListMonitoredResourceDescriptorsRequest* other) {
  name_.Swap(&other->name_);
  filter_.Swap(&other->filter_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListMonitoredResourceDescriptorsRequest_descriptor_;
  metadata.reflection = ListMonitoredResourceDescriptorsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMonitoredResourceDescriptorsRequest

// optional string name = 5;
void ListMonitoredResourceDescriptorsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMonitoredResourceDescriptorsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}
void ListMonitoredResourceDescriptorsRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}
void ListMonitoredResourceDescriptorsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}
::std::string* ListMonitoredResourceDescriptorsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMonitoredResourceDescriptorsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.name)
}

// optional string filter = 2;
void ListMonitoredResourceDescriptorsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMonitoredResourceDescriptorsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
  return filter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}
void ListMonitoredResourceDescriptorsRequest::set_filter(const char* value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}
void ListMonitoredResourceDescriptorsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}
::std::string* ListMonitoredResourceDescriptorsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMonitoredResourceDescriptorsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.filter)
}

// optional int32 page_size = 3;
void ListMonitoredResourceDescriptorsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListMonitoredResourceDescriptorsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_size)
  return page_size_;
}
void ListMonitoredResourceDescriptorsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_size)
}

// optional string page_token = 4;
void ListMonitoredResourceDescriptorsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMonitoredResourceDescriptorsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}
void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}
void ListMonitoredResourceDescriptorsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}
::std::string* ListMonitoredResourceDescriptorsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMonitoredResourceDescriptorsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsRequest.page_token)
}

inline const ListMonitoredResourceDescriptorsRequest* ListMonitoredResourceDescriptorsRequest::internal_default_instance() {
  return &ListMonitoredResourceDescriptorsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMonitoredResourceDescriptorsResponse::kResourceDescriptorsFieldNumber;
const int ListMonitoredResourceDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}

void ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance() {
}

ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}

void ListMonitoredResourceDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListMonitoredResourceDescriptorsResponse::~ListMonitoredResourceDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMonitoredResourceDescriptorsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListMonitoredResourceDescriptorsResponse_descriptor_;
}

const ListMonitoredResourceDescriptorsResponse& ListMonitoredResourceDescriptorsResponse::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsResponse> ListMonitoredResourceDescriptorsResponse_default_instance_;

ListMonitoredResourceDescriptorsResponse* ListMonitoredResourceDescriptorsResponse::New(::google::protobuf::Arena* arena) const {
  ListMonitoredResourceDescriptorsResponse* n = new ListMonitoredResourceDescriptorsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMonitoredResourceDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_descriptors_.Clear();
}

bool ListMonitoredResourceDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_resource_descriptors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_resource_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_resource_descriptors;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return false;
#undef DO_
}

void ListMonitoredResourceDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0, n = this->resource_descriptors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resource_descriptors(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
}

::google::protobuf::uint8* ListMonitoredResourceDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0, n = this->resource_descriptors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->resource_descriptors(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  return target;
}

size_t ListMonitoredResourceDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  {
    unsigned int count = this->resource_descriptors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resource_descriptors(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListMonitoredResourceDescriptorsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMonitoredResourceDescriptorsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListMonitoredResourceDescriptorsResponse::UnsafeMergeFrom(const ListMonitoredResourceDescriptorsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  resource_descriptors_.MergeFrom(from.resource_descriptors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListMonitoredResourceDescriptorsResponse::IsInitialized() const {

  return true;
}

void ListMonitoredResourceDescriptorsResponse::Swap(ListMonitoredResourceDescriptorsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMonitoredResourceDescriptorsResponse::InternalSwap(ListMonitoredResourceDescriptorsResponse* other) {
  resource_descriptors_.UnsafeArenaSwap(&other->resource_descriptors_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMonitoredResourceDescriptorsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListMonitoredResourceDescriptorsResponse_descriptor_;
  metadata.reflection = ListMonitoredResourceDescriptorsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMonitoredResourceDescriptorsResponse

// repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
int ListMonitoredResourceDescriptorsResponse::resource_descriptors_size() const {
  return resource_descriptors_.size();
}
void ListMonitoredResourceDescriptorsResponse::clear_resource_descriptors() {
  resource_descriptors_.Clear();
}
const ::google::api::MonitoredResourceDescriptor& ListMonitoredResourceDescriptorsResponse::resource_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Get(index);
}
::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Mutable(index);
}
::google::api::MonitoredResourceDescriptor* ListMonitoredResourceDescriptorsResponse::add_resource_descriptors() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
ListMonitoredResourceDescriptorsResponse::mutable_resource_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return &resource_descriptors_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
ListMonitoredResourceDescriptorsResponse::resource_descriptors() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.resource_descriptors)
  return resource_descriptors_;
}

// optional string next_page_token = 2;
void ListMonitoredResourceDescriptorsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMonitoredResourceDescriptorsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
void ListMonitoredResourceDescriptorsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}
::std::string* ListMonitoredResourceDescriptorsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMonitoredResourceDescriptorsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMonitoredResourceDescriptorsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMonitoredResourceDescriptorsResponse.next_page_token)
}

inline const ListMonitoredResourceDescriptorsResponse* ListMonitoredResourceDescriptorsResponse::internal_default_instance() {
  return &ListMonitoredResourceDescriptorsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMonitoredResourceDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMonitoredResourceDescriptorRequest::GetMonitoredResourceDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}

void GetMonitoredResourceDescriptorRequest::InitAsDefaultInstance() {
}

GetMonitoredResourceDescriptorRequest::GetMonitoredResourceDescriptorRequest(const GetMonitoredResourceDescriptorRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}

void GetMonitoredResourceDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetMonitoredResourceDescriptorRequest::~GetMonitoredResourceDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  SharedDtor();
}

void GetMonitoredResourceDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMonitoredResourceDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMonitoredResourceDescriptorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMonitoredResourceDescriptorRequest_descriptor_;
}

const GetMonitoredResourceDescriptorRequest& GetMonitoredResourceDescriptorRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetMonitoredResourceDescriptorRequest> GetMonitoredResourceDescriptorRequest_default_instance_;

GetMonitoredResourceDescriptorRequest* GetMonitoredResourceDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  GetMonitoredResourceDescriptorRequest* n = new GetMonitoredResourceDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMonitoredResourceDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetMonitoredResourceDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return false;
#undef DO_
}

void GetMonitoredResourceDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
}

::google::protobuf::uint8* GetMonitoredResourceDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  return target;
}

size_t GetMonitoredResourceDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  size_t total_size = 0;

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMonitoredResourceDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetMonitoredResourceDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMonitoredResourceDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetMonitoredResourceDescriptorRequest::MergeFrom(const GetMonitoredResourceDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetMonitoredResourceDescriptorRequest::UnsafeMergeFrom(const GetMonitoredResourceDescriptorRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetMonitoredResourceDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMonitoredResourceDescriptorRequest::CopyFrom(const GetMonitoredResourceDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetMonitoredResourceDescriptorRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetMonitoredResourceDescriptorRequest::IsInitialized() const {

  return true;
}

void GetMonitoredResourceDescriptorRequest::Swap(GetMonitoredResourceDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMonitoredResourceDescriptorRequest::InternalSwap(GetMonitoredResourceDescriptorRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMonitoredResourceDescriptorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMonitoredResourceDescriptorRequest_descriptor_;
  metadata.reflection = GetMonitoredResourceDescriptorRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMonitoredResourceDescriptorRequest

// optional string name = 3;
void GetMonitoredResourceDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetMonitoredResourceDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMonitoredResourceDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}
void GetMonitoredResourceDescriptorRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}
void GetMonitoredResourceDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}
::std::string* GetMonitoredResourceDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetMonitoredResourceDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMonitoredResourceDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.GetMonitoredResourceDescriptorRequest.name)
}

inline const GetMonitoredResourceDescriptorRequest* GetMonitoredResourceDescriptorRequest::internal_default_instance() {
  return &GetMonitoredResourceDescriptorRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMetricDescriptorsRequest::kNameFieldNumber;
const int ListMetricDescriptorsRequest::kFilterFieldNumber;
const int ListMetricDescriptorsRequest::kPageSizeFieldNumber;
const int ListMetricDescriptorsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMetricDescriptorsRequest::ListMetricDescriptorsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMetricDescriptorsRequest)
}

void ListMetricDescriptorsRequest::InitAsDefaultInstance() {
}

ListMetricDescriptorsRequest::ListMetricDescriptorsRequest(const ListMetricDescriptorsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMetricDescriptorsRequest)
}

void ListMetricDescriptorsRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _cached_size_ = 0;
}

ListMetricDescriptorsRequest::~ListMetricDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMetricDescriptorsRequest)
  SharedDtor();
}

void ListMetricDescriptorsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMetricDescriptorsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMetricDescriptorsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListMetricDescriptorsRequest_descriptor_;
}

const ListMetricDescriptorsRequest& ListMetricDescriptorsRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListMetricDescriptorsRequest> ListMetricDescriptorsRequest_default_instance_;

ListMetricDescriptorsRequest* ListMetricDescriptorsRequest::New(::google::protobuf::Arena* arena) const {
  ListMetricDescriptorsRequest* n = new ListMetricDescriptorsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMetricDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListMetricDescriptorsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filter = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.filter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_page_token;
        break;
      }

      // optional string page_token = 4;
      case 4: {
        if (tag == 34) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMetricDescriptorsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMetricDescriptorsRequest)
  return false;
#undef DO_
}

void ListMetricDescriptorsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMetricDescriptorsRequest)
}

::google::protobuf::uint8* ListMetricDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMetricDescriptorsRequest)
  return target;
}

size_t ListMetricDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  size_t total_size = 0;

  // optional string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMetricDescriptorsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListMetricDescriptorsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMetricDescriptorsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMetricDescriptorsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMetricDescriptorsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListMetricDescriptorsRequest::MergeFrom(const ListMetricDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListMetricDescriptorsRequest::UnsafeMergeFrom(const ListMetricDescriptorsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListMetricDescriptorsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMetricDescriptorsRequest::CopyFrom(const ListMetricDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMetricDescriptorsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListMetricDescriptorsRequest::IsInitialized() const {

  return true;
}

void ListMetricDescriptorsRequest::Swap(ListMetricDescriptorsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMetricDescriptorsRequest::InternalSwap(ListMetricDescriptorsRequest* other) {
  name_.Swap(&other->name_);
  filter_.Swap(&other->filter_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMetricDescriptorsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListMetricDescriptorsRequest_descriptor_;
  metadata.reflection = ListMetricDescriptorsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMetricDescriptorsRequest

// optional string name = 5;
void ListMetricDescriptorsRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMetricDescriptorsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}
void ListMetricDescriptorsRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}
void ListMetricDescriptorsRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}
::std::string* ListMetricDescriptorsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMetricDescriptorsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsRequest.name)
}

// optional string filter = 2;
void ListMetricDescriptorsRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMetricDescriptorsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
  return filter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}
void ListMetricDescriptorsRequest::set_filter(const char* value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}
void ListMetricDescriptorsRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}
::std::string* ListMetricDescriptorsRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMetricDescriptorsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsRequest.filter)
}

// optional int32 page_size = 3;
void ListMetricDescriptorsRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListMetricDescriptorsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.page_size)
  return page_size_;
}
void ListMetricDescriptorsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.page_size)
}

// optional string page_token = 4;
void ListMetricDescriptorsRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMetricDescriptorsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}
void ListMetricDescriptorsRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}
void ListMetricDescriptorsRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}
::std::string* ListMetricDescriptorsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMetricDescriptorsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsRequest.page_token)
}

inline const ListMetricDescriptorsRequest* ListMetricDescriptorsRequest::internal_default_instance() {
  return &ListMetricDescriptorsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMetricDescriptorsResponse::kMetricDescriptorsFieldNumber;
const int ListMetricDescriptorsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMetricDescriptorsResponse::ListMetricDescriptorsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListMetricDescriptorsResponse)
}

void ListMetricDescriptorsResponse::InitAsDefaultInstance() {
}

ListMetricDescriptorsResponse::ListMetricDescriptorsResponse(const ListMetricDescriptorsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListMetricDescriptorsResponse)
}

void ListMetricDescriptorsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListMetricDescriptorsResponse::~ListMetricDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListMetricDescriptorsResponse)
  SharedDtor();
}

void ListMetricDescriptorsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMetricDescriptorsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMetricDescriptorsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListMetricDescriptorsResponse_descriptor_;
}

const ListMetricDescriptorsResponse& ListMetricDescriptorsResponse::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListMetricDescriptorsResponse> ListMetricDescriptorsResponse_default_instance_;

ListMetricDescriptorsResponse* ListMetricDescriptorsResponse::New(::google::protobuf::Arena* arena) const {
  ListMetricDescriptorsResponse* n = new ListMetricDescriptorsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMetricDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_descriptors_.Clear();
}

bool ListMetricDescriptorsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.MetricDescriptor metric_descriptors = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_metric_descriptors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metric_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_metric_descriptors;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListMetricDescriptorsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListMetricDescriptorsResponse)
  return false;
#undef DO_
}

void ListMetricDescriptorsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  for (unsigned int i = 0, n = this->metric_descriptors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metric_descriptors(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListMetricDescriptorsResponse)
}

::google::protobuf::uint8* ListMetricDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  for (unsigned int i = 0, n = this->metric_descriptors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->metric_descriptors(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListMetricDescriptorsResponse)
  return target;
}

size_t ListMetricDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.api.MetricDescriptor metric_descriptors = 1;
  {
    unsigned int count = this->metric_descriptors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metric_descriptors(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMetricDescriptorsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListMetricDescriptorsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMetricDescriptorsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListMetricDescriptorsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListMetricDescriptorsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListMetricDescriptorsResponse::MergeFrom(const ListMetricDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListMetricDescriptorsResponse::UnsafeMergeFrom(const ListMetricDescriptorsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  metric_descriptors_.MergeFrom(from.metric_descriptors_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListMetricDescriptorsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMetricDescriptorsResponse::CopyFrom(const ListMetricDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListMetricDescriptorsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListMetricDescriptorsResponse::IsInitialized() const {

  return true;
}

void ListMetricDescriptorsResponse::Swap(ListMetricDescriptorsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMetricDescriptorsResponse::InternalSwap(ListMetricDescriptorsResponse* other) {
  metric_descriptors_.UnsafeArenaSwap(&other->metric_descriptors_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMetricDescriptorsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListMetricDescriptorsResponse_descriptor_;
  metadata.reflection = ListMetricDescriptorsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMetricDescriptorsResponse

// repeated .google.api.MetricDescriptor metric_descriptors = 1;
int ListMetricDescriptorsResponse::metric_descriptors_size() const {
  return metric_descriptors_.size();
}
void ListMetricDescriptorsResponse::clear_metric_descriptors() {
  metric_descriptors_.Clear();
}
const ::google::api::MetricDescriptor& ListMetricDescriptorsResponse::metric_descriptors(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_.Get(index);
}
::google::api::MetricDescriptor* ListMetricDescriptorsResponse::mutable_metric_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_.Mutable(index);
}
::google::api::MetricDescriptor* ListMetricDescriptorsResponse::add_metric_descriptors() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >*
ListMetricDescriptorsResponse::mutable_metric_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return &metric_descriptors_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >&
ListMetricDescriptorsResponse::metric_descriptors() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListMetricDescriptorsResponse.metric_descriptors)
  return metric_descriptors_;
}

// optional string next_page_token = 2;
void ListMetricDescriptorsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMetricDescriptorsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}
void ListMetricDescriptorsResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}
void ListMetricDescriptorsResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}
::std::string* ListMetricDescriptorsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMetricDescriptorsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMetricDescriptorsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListMetricDescriptorsResponse.next_page_token)
}

inline const ListMetricDescriptorsResponse* ListMetricDescriptorsResponse::internal_default_instance() {
  return &ListMetricDescriptorsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricDescriptorRequest::GetMetricDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.GetMetricDescriptorRequest)
}

void GetMetricDescriptorRequest::InitAsDefaultInstance() {
}

GetMetricDescriptorRequest::GetMetricDescriptorRequest(const GetMetricDescriptorRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.GetMetricDescriptorRequest)
}

void GetMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetMetricDescriptorRequest::~GetMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.GetMetricDescriptorRequest)
  SharedDtor();
}

void GetMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMetricDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMetricDescriptorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMetricDescriptorRequest_descriptor_;
}

const GetMetricDescriptorRequest& GetMetricDescriptorRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetMetricDescriptorRequest> GetMetricDescriptorRequest_default_instance_;

GetMetricDescriptorRequest* GetMetricDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  GetMetricDescriptorRequest* n = new GetMetricDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.GetMetricDescriptorRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.GetMetricDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.GetMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.GetMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.GetMetricDescriptorRequest)
  return false;
#undef DO_
}

void GetMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.GetMetricDescriptorRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.GetMetricDescriptorRequest)
}

::google::protobuf::uint8* GetMetricDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.GetMetricDescriptorRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.GetMetricDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.GetMetricDescriptorRequest)
  return target;
}

size_t GetMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.GetMetricDescriptorRequest)
  size_t total_size = 0;

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMetricDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetMetricDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.GetMetricDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.GetMetricDescriptorRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetMetricDescriptorRequest::MergeFrom(const GetMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetMetricDescriptorRequest::UnsafeMergeFrom(const GetMetricDescriptorRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetMetricDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricDescriptorRequest::CopyFrom(const GetMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.GetMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetMetricDescriptorRequest::IsInitialized() const {

  return true;
}

void GetMetricDescriptorRequest::Swap(GetMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricDescriptorRequest::InternalSwap(GetMetricDescriptorRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMetricDescriptorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMetricDescriptorRequest_descriptor_;
  metadata.reflection = GetMetricDescriptorRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMetricDescriptorRequest

// optional string name = 3;
void GetMetricDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetMetricDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.GetMetricDescriptorRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.GetMetricDescriptorRequest.name)
}
void GetMetricDescriptorRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.GetMetricDescriptorRequest.name)
}
void GetMetricDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.GetMetricDescriptorRequest.name)
}
::std::string* GetMetricDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.GetMetricDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetMetricDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.GetMetricDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.GetMetricDescriptorRequest.name)
}

inline const GetMetricDescriptorRequest* GetMetricDescriptorRequest::internal_default_instance() {
  return &GetMetricDescriptorRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMetricDescriptorRequest::kNameFieldNumber;
const int CreateMetricDescriptorRequest::kMetricDescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMetricDescriptorRequest::CreateMetricDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateMetricDescriptorRequest)
}

void CreateMetricDescriptorRequest::InitAsDefaultInstance() {
  metric_descriptor_ = const_cast< ::google::api::MetricDescriptor*>(
      ::google::api::MetricDescriptor::internal_default_instance());
}

CreateMetricDescriptorRequest::CreateMetricDescriptorRequest(const CreateMetricDescriptorRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateMetricDescriptorRequest)
}

void CreateMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_descriptor_ = NULL;
  _cached_size_ = 0;
}

CreateMetricDescriptorRequest::~CreateMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateMetricDescriptorRequest)
  SharedDtor();
}

void CreateMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CreateMetricDescriptorRequest_default_instance_.get()) {
    delete metric_descriptor_;
  }
}

void CreateMetricDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMetricDescriptorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateMetricDescriptorRequest_descriptor_;
}

const CreateMetricDescriptorRequest& CreateMetricDescriptorRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateMetricDescriptorRequest> CreateMetricDescriptorRequest_default_instance_;

CreateMetricDescriptorRequest* CreateMetricDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  CreateMetricDescriptorRequest* n = new CreateMetricDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) delete metric_descriptor_;
  metric_descriptor_ = NULL;
}

bool CreateMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.api.MetricDescriptor metric_descriptor = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metric_descriptor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateMetricDescriptorRequest)
  return false;
#undef DO_
}

void CreateMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  // optional .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metric_descriptor_, output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateMetricDescriptorRequest)
}

::google::protobuf::uint8* CreateMetricDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  // optional .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->metric_descriptor_, false, target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateMetricDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateMetricDescriptorRequest)
  return target;
}

size_t CreateMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  size_t total_size = 0;

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.api.MetricDescriptor metric_descriptor = 2;
  if (this->has_metric_descriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->metric_descriptor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateMetricDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateMetricDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMetricDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateMetricDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateMetricDescriptorRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateMetricDescriptorRequest::MergeFrom(const CreateMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateMetricDescriptorRequest::UnsafeMergeFrom(const CreateMetricDescriptorRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_metric_descriptor()) {
    mutable_metric_descriptor()->::google::api::MetricDescriptor::MergeFrom(from.metric_descriptor());
  }
}

void CreateMetricDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMetricDescriptorRequest::CopyFrom(const CreateMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateMetricDescriptorRequest::IsInitialized() const {

  return true;
}

void CreateMetricDescriptorRequest::Swap(CreateMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMetricDescriptorRequest::InternalSwap(CreateMetricDescriptorRequest* other) {
  name_.Swap(&other->name_);
  std::swap(metric_descriptor_, other->metric_descriptor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateMetricDescriptorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateMetricDescriptorRequest_descriptor_;
  metadata.reflection = CreateMetricDescriptorRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateMetricDescriptorRequest

// optional string name = 3;
void CreateMetricDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateMetricDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateMetricDescriptorRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateMetricDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}
void CreateMetricDescriptorRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}
void CreateMetricDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}
::std::string* CreateMetricDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateMetricDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateMetricDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateMetricDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateMetricDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateMetricDescriptorRequest.name)
}

// optional .google.api.MetricDescriptor metric_descriptor = 2;
bool CreateMetricDescriptorRequest::has_metric_descriptor() const {
  return this != internal_default_instance() && metric_descriptor_ != NULL;
}
void CreateMetricDescriptorRequest::clear_metric_descriptor() {
  if (GetArenaNoVirtual() == NULL && metric_descriptor_ != NULL) delete metric_descriptor_;
  metric_descriptor_ = NULL;
}
const ::google::api::MetricDescriptor& CreateMetricDescriptorRequest::metric_descriptor() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
  return metric_descriptor_ != NULL ? *metric_descriptor_
                         : *::google::api::MetricDescriptor::internal_default_instance();
}
::google::api::MetricDescriptor* CreateMetricDescriptorRequest::mutable_metric_descriptor() {
  
  if (metric_descriptor_ == NULL) {
    metric_descriptor_ = new ::google::api::MetricDescriptor;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
  return metric_descriptor_;
}
::google::api::MetricDescriptor* CreateMetricDescriptorRequest::release_metric_descriptor() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
  
  ::google::api::MetricDescriptor* temp = metric_descriptor_;
  metric_descriptor_ = NULL;
  return temp;
}
void CreateMetricDescriptorRequest::set_allocated_metric_descriptor(::google::api::MetricDescriptor* metric_descriptor) {
  delete metric_descriptor_;
  metric_descriptor_ = metric_descriptor;
  if (metric_descriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateMetricDescriptorRequest.metric_descriptor)
}

inline const CreateMetricDescriptorRequest* CreateMetricDescriptorRequest::internal_default_instance() {
  return &CreateMetricDescriptorRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMetricDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMetricDescriptorRequest::DeleteMetricDescriptorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
}

void DeleteMetricDescriptorRequest::InitAsDefaultInstance() {
}

DeleteMetricDescriptorRequest::DeleteMetricDescriptorRequest(const DeleteMetricDescriptorRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
}

void DeleteMetricDescriptorRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteMetricDescriptorRequest::~DeleteMetricDescriptorRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.DeleteMetricDescriptorRequest)
  SharedDtor();
}

void DeleteMetricDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteMetricDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMetricDescriptorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteMetricDescriptorRequest_descriptor_;
}

const DeleteMetricDescriptorRequest& DeleteMetricDescriptorRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteMetricDescriptorRequest> DeleteMetricDescriptorRequest_default_instance_;

DeleteMetricDescriptorRequest* DeleteMetricDescriptorRequest::New(::google::protobuf::Arena* arena) const {
  DeleteMetricDescriptorRequest* n = new DeleteMetricDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteMetricDescriptorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteMetricDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.DeleteMetricDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return false;
#undef DO_
}

void DeleteMetricDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteMetricDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.DeleteMetricDescriptorRequest)
}

::google::protobuf::uint8* DeleteMetricDescriptorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.DeleteMetricDescriptorRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.DeleteMetricDescriptorRequest)
  return target;
}

size_t DeleteMetricDescriptorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  size_t total_size = 0;

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteMetricDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteMetricDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteMetricDescriptorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.DeleteMetricDescriptorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.DeleteMetricDescriptorRequest)
    UnsafeMergeFrom(*source);
  }
}

void DeleteMetricDescriptorRequest::MergeFrom(const DeleteMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteMetricDescriptorRequest::UnsafeMergeFrom(const DeleteMetricDescriptorRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteMetricDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMetricDescriptorRequest::CopyFrom(const DeleteMetricDescriptorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.DeleteMetricDescriptorRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteMetricDescriptorRequest::IsInitialized() const {

  return true;
}

void DeleteMetricDescriptorRequest::Swap(DeleteMetricDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMetricDescriptorRequest::InternalSwap(DeleteMetricDescriptorRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteMetricDescriptorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteMetricDescriptorRequest_descriptor_;
  metadata.reflection = DeleteMetricDescriptorRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteMetricDescriptorRequest

// optional string name = 3;
void DeleteMetricDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteMetricDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteMetricDescriptorRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}
void DeleteMetricDescriptorRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}
void DeleteMetricDescriptorRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}
::std::string* DeleteMetricDescriptorRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteMetricDescriptorRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteMetricDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.DeleteMetricDescriptorRequest.name)
}

inline const DeleteMetricDescriptorRequest* DeleteMetricDescriptorRequest::internal_default_instance() {
  return &DeleteMetricDescriptorRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ListTimeSeriesRequest_TimeSeriesView_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTimeSeriesRequest_TimeSeriesView_descriptor_;
}
bool ListTimeSeriesRequest_TimeSeriesView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::FULL;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::HEADERS;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::TimeSeriesView_MIN;
const ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::TimeSeriesView_MAX;
const int ListTimeSeriesRequest::TimeSeriesView_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTimeSeriesRequest::kNameFieldNumber;
const int ListTimeSeriesRequest::kFilterFieldNumber;
const int ListTimeSeriesRequest::kIntervalFieldNumber;
const int ListTimeSeriesRequest::kAggregationFieldNumber;
const int ListTimeSeriesRequest::kOrderByFieldNumber;
const int ListTimeSeriesRequest::kViewFieldNumber;
const int ListTimeSeriesRequest::kPageSizeFieldNumber;
const int ListTimeSeriesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTimeSeriesRequest::ListTimeSeriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListTimeSeriesRequest)
}

void ListTimeSeriesRequest::InitAsDefaultInstance() {
  interval_ = const_cast< ::google::monitoring::v3::TimeInterval*>(
      ::google::monitoring::v3::TimeInterval::internal_default_instance());
  aggregation_ = const_cast< ::google::monitoring::v3::Aggregation*>(
      ::google::monitoring::v3::Aggregation::internal_default_instance());
}

ListTimeSeriesRequest::ListTimeSeriesRequest(const ListTimeSeriesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListTimeSeriesRequest)
}

void ListTimeSeriesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interval_ = NULL;
  aggregation_ = NULL;
  ::memset(&view_, 0, reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&view_) + sizeof(page_size_));
  _cached_size_ = 0;
}

ListTimeSeriesRequest::~ListTimeSeriesRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListTimeSeriesRequest)
  SharedDtor();
}

void ListTimeSeriesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ListTimeSeriesRequest_default_instance_.get()) {
    delete interval_;
    delete aggregation_;
  }
}

void ListTimeSeriesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTimeSeriesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTimeSeriesRequest_descriptor_;
}

const ListTimeSeriesRequest& ListTimeSeriesRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListTimeSeriesRequest> ListTimeSeriesRequest_default_instance_;

ListTimeSeriesRequest* ListTimeSeriesRequest::New(::google::protobuf::Arena* arena) const {
  ListTimeSeriesRequest* n = new ListTimeSeriesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTimeSeriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListTimeSeriesRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ListTimeSeriesRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ListTimeSeriesRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(view_, page_size_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && aggregation_ != NULL) delete aggregation_;
  aggregation_ = NULL;
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ListTimeSeriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListTimeSeriesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filter = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), this->filter().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.filter"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_interval;
        break;
      }

      // optional .google.monitoring.v3.TimeInterval interval = 4;
      case 4: {
        if (tag == 34) {
         parse_interval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_aggregation;
        break;
      }

      // optional .google.monitoring.v3.Aggregation aggregation = 5;
      case 5: {
        if (tag == 42) {
         parse_aggregation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aggregation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_order_by;
        break;
      }

      // optional string order_by = 6;
      case 6: {
        if (tag == 50) {
         parse_order_by:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_by().data(), this->order_by().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.order_by"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_view;
        break;
      }

      // optional .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
      case 7: {
        if (tag == 56) {
         parse_view:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_view(static_cast< ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 8;
      case 8: {
        if (tag == 64) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_page_token;
        break;
      }

      // optional string page_token = 9;
      case 9: {
        if (tag == 74) {
         parse_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), this->page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_name;
        break;
      }

      // optional string name = 10;
      case 10: {
        if (tag == 82) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListTimeSeriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListTimeSeriesRequest)
  return false;
#undef DO_
}

void ListTimeSeriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListTimeSeriesRequest)
  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filter(), output);
  }

  // optional .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->interval_, output);
  }

  // optional .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->aggregation_, output);
  }

  // optional string order_by = 6;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), this->order_by().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.order_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->order_by(), output);
  }

  // optional .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->view(), output);
  }

  // optional int32 page_size = 8;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->page_size(), output);
  }

  // optional string page_token = 9;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->page_token(), output);
  }

  // optional string name = 10;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListTimeSeriesRequest)
}

::google::protobuf::uint8* ListTimeSeriesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListTimeSeriesRequest)
  // optional string filter = 2;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), this->filter().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filter(), target);
  }

  // optional .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->interval_, false, target);
  }

  // optional .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->aggregation_, false, target);
  }

  // optional string order_by = 6;
  if (this->order_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_by().data(), this->order_by().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.order_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->order_by(), target);
  }

  // optional .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->view(), target);
  }

  // optional int32 page_size = 8;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->page_size(), target);
  }

  // optional string page_token = 9;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), this->page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->page_token(), target);
  }

  // optional string name = 10;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListTimeSeriesRequest)
  return target;
}

size_t ListTimeSeriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListTimeSeriesRequest)
  size_t total_size = 0;

  // optional string name = 10;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // optional .google.monitoring.v3.TimeInterval interval = 4;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->interval_);
  }

  // optional .google.monitoring.v3.Aggregation aggregation = 5;
  if (this->has_aggregation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->aggregation_);
  }

  // optional string order_by = 6;
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_by());
  }

  // optional .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
  if (this->view() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->view());
  }

  // optional int32 page_size = 8;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string page_token = 9;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTimeSeriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListTimeSeriesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTimeSeriesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListTimeSeriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListTimeSeriesRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListTimeSeriesRequest::MergeFrom(const ListTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListTimeSeriesRequest::UnsafeMergeFrom(const ListTimeSeriesRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::monitoring::v3::TimeInterval::MergeFrom(from.interval());
  }
  if (from.has_aggregation()) {
    mutable_aggregation()->::google::monitoring::v3::Aggregation::MergeFrom(from.aggregation());
  }
  if (from.order_by().size() > 0) {

    order_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_by_);
  }
  if (from.view() != 0) {
    set_view(from.view());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
}

void ListTimeSeriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTimeSeriesRequest::CopyFrom(const ListTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListTimeSeriesRequest::IsInitialized() const {

  return true;
}

void ListTimeSeriesRequest::Swap(ListTimeSeriesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTimeSeriesRequest::InternalSwap(ListTimeSeriesRequest* other) {
  name_.Swap(&other->name_);
  filter_.Swap(&other->filter_);
  std::swap(interval_, other->interval_);
  std::swap(aggregation_, other->aggregation_);
  order_by_.Swap(&other->order_by_);
  std::swap(view_, other->view_);
  std::swap(page_size_, other->page_size_);
  page_token_.Swap(&other->page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTimeSeriesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTimeSeriesRequest_descriptor_;
  metadata.reflection = ListTimeSeriesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTimeSeriesRequest

// optional string name = 10;
void ListTimeSeriesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTimeSeriesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.name)
}
void ListTimeSeriesRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.name)
}
void ListTimeSeriesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.name)
}
::std::string* ListTimeSeriesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTimeSeriesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.name)
}

// optional string filter = 2;
void ListTimeSeriesRequest::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTimeSeriesRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.filter)
  return filter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.filter)
}
void ListTimeSeriesRequest::set_filter(const char* value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.filter)
}
void ListTimeSeriesRequest::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.filter)
}
::std::string* ListTimeSeriesRequest::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTimeSeriesRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.filter)
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.filter)
}

// optional .google.monitoring.v3.TimeInterval interval = 4;
bool ListTimeSeriesRequest::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
void ListTimeSeriesRequest::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}
const ::google::monitoring::v3::TimeInterval& ListTimeSeriesRequest::interval() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.interval)
  return interval_ != NULL ? *interval_
                         : *::google::monitoring::v3::TimeInterval::internal_default_instance();
}
::google::monitoring::v3::TimeInterval* ListTimeSeriesRequest::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::monitoring::v3::TimeInterval;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.interval)
  return interval_;
}
::google::monitoring::v3::TimeInterval* ListTimeSeriesRequest::release_interval() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.interval)
  
  ::google::monitoring::v3::TimeInterval* temp = interval_;
  interval_ = NULL;
  return temp;
}
void ListTimeSeriesRequest::set_allocated_interval(::google::monitoring::v3::TimeInterval* interval) {
  delete interval_;
  interval_ = interval;
  if (interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.interval)
}

// optional .google.monitoring.v3.Aggregation aggregation = 5;
bool ListTimeSeriesRequest::has_aggregation() const {
  return this != internal_default_instance() && aggregation_ != NULL;
}
void ListTimeSeriesRequest::clear_aggregation() {
  if (GetArenaNoVirtual() == NULL && aggregation_ != NULL) delete aggregation_;
  aggregation_ = NULL;
}
const ::google::monitoring::v3::Aggregation& ListTimeSeriesRequest::aggregation() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
  return aggregation_ != NULL ? *aggregation_
                         : *::google::monitoring::v3::Aggregation::internal_default_instance();
}
::google::monitoring::v3::Aggregation* ListTimeSeriesRequest::mutable_aggregation() {
  
  if (aggregation_ == NULL) {
    aggregation_ = new ::google::monitoring::v3::Aggregation;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
  return aggregation_;
}
::google::monitoring::v3::Aggregation* ListTimeSeriesRequest::release_aggregation() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
  
  ::google::monitoring::v3::Aggregation* temp = aggregation_;
  aggregation_ = NULL;
  return temp;
}
void ListTimeSeriesRequest::set_allocated_aggregation(::google::monitoring::v3::Aggregation* aggregation) {
  delete aggregation_;
  aggregation_ = aggregation;
  if (aggregation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.aggregation)
}

// optional string order_by = 6;
void ListTimeSeriesRequest::clear_order_by() {
  order_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTimeSeriesRequest::order_by() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.order_by)
  return order_by_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_order_by(const ::std::string& value) {
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}
void ListTimeSeriesRequest::set_order_by(const char* value) {
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}
void ListTimeSeriesRequest::set_order_by(const char* value, size_t size) {
  
  order_by_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}
::std::string* ListTimeSeriesRequest::mutable_order_by() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.order_by)
  return order_by_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTimeSeriesRequest::release_order_by() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.order_by)
  
  return order_by_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_allocated_order_by(::std::string* order_by) {
  if (order_by != NULL) {
    
  } else {
    
  }
  order_by_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_by);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.order_by)
}

// optional .google.monitoring.v3.ListTimeSeriesRequest.TimeSeriesView view = 7;
void ListTimeSeriesRequest::clear_view() {
  view_ = 0;
}
::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView ListTimeSeriesRequest::view() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.view)
  return static_cast< ::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView >(view_);
}
void ListTimeSeriesRequest::set_view(::google::monitoring::v3::ListTimeSeriesRequest_TimeSeriesView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.view)
}

// optional int32 page_size = 8;
void ListTimeSeriesRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 ListTimeSeriesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.page_size)
  return page_size_;
}
void ListTimeSeriesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.page_size)
}

// optional string page_token = 9;
void ListTimeSeriesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTimeSeriesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}
void ListTimeSeriesRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}
void ListTimeSeriesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}
::std::string* ListTimeSeriesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTimeSeriesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesRequest.page_token)
}

inline const ListTimeSeriesRequest* ListTimeSeriesRequest::internal_default_instance() {
  return &ListTimeSeriesRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTimeSeriesResponse::kTimeSeriesFieldNumber;
const int ListTimeSeriesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTimeSeriesResponse::ListTimeSeriesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.ListTimeSeriesResponse)
}

void ListTimeSeriesResponse::InitAsDefaultInstance() {
}

ListTimeSeriesResponse::ListTimeSeriesResponse(const ListTimeSeriesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.ListTimeSeriesResponse)
}

void ListTimeSeriesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTimeSeriesResponse::~ListTimeSeriesResponse() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.ListTimeSeriesResponse)
  SharedDtor();
}

void ListTimeSeriesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTimeSeriesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTimeSeriesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTimeSeriesResponse_descriptor_;
}

const ListTimeSeriesResponse& ListTimeSeriesResponse::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListTimeSeriesResponse> ListTimeSeriesResponse_default_instance_;

ListTimeSeriesResponse* ListTimeSeriesResponse::New(::google::protobuf::Arena* arena) const {
  ListTimeSeriesResponse* n = new ListTimeSeriesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTimeSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.ListTimeSeriesResponse)
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_series_.Clear();
}

bool ListTimeSeriesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.ListTimeSeriesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.TimeSeries time_series = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_time_series:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_time_series()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_time_series;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_next_page_token;
        break;
      }

      // optional string next_page_token = 2;
      case 2: {
        if (tag == 18) {
         parse_next_page_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), this->next_page_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.ListTimeSeriesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.ListTimeSeriesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.ListTimeSeriesResponse)
  return false;
#undef DO_
}

void ListTimeSeriesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.ListTimeSeriesResponse)
  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  for (unsigned int i = 0, n = this->time_series_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->time_series(i), output);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.ListTimeSeriesResponse)
}

::google::protobuf::uint8* ListTimeSeriesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.ListTimeSeriesResponse)
  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  for (unsigned int i = 0, n = this->time_series_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->time_series(i), false, target);
  }

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), this->next_page_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.ListTimeSeriesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.ListTimeSeriesResponse)
  return target;
}

size_t ListTimeSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.ListTimeSeriesResponse)
  size_t total_size = 0;

  // optional string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // repeated .google.monitoring.v3.TimeSeries time_series = 1;
  {
    unsigned int count = this->time_series_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->time_series(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTimeSeriesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListTimeSeriesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTimeSeriesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.ListTimeSeriesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.ListTimeSeriesResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListTimeSeriesResponse::MergeFrom(const ListTimeSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListTimeSeriesResponse::UnsafeMergeFrom(const ListTimeSeriesResponse& from) {
  GOOGLE_DCHECK(&from != this);
  time_series_.MergeFrom(from.time_series_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTimeSeriesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTimeSeriesResponse::CopyFrom(const ListTimeSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.ListTimeSeriesResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListTimeSeriesResponse::IsInitialized() const {

  return true;
}

void ListTimeSeriesResponse::Swap(ListTimeSeriesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTimeSeriesResponse::InternalSwap(ListTimeSeriesResponse* other) {
  time_series_.UnsafeArenaSwap(&other->time_series_);
  next_page_token_.Swap(&other->next_page_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTimeSeriesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTimeSeriesResponse_descriptor_;
  metadata.reflection = ListTimeSeriesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTimeSeriesResponse

// repeated .google.monitoring.v3.TimeSeries time_series = 1;
int ListTimeSeriesResponse::time_series_size() const {
  return time_series_.size();
}
void ListTimeSeriesResponse::clear_time_series() {
  time_series_.Clear();
}
const ::google::monitoring::v3::TimeSeries& ListTimeSeriesResponse::time_series(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_.Get(index);
}
::google::monitoring::v3::TimeSeries* ListTimeSeriesResponse::mutable_time_series(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_.Mutable(index);
}
::google::monitoring::v3::TimeSeries* ListTimeSeriesResponse::add_time_series() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >*
ListTimeSeriesResponse::mutable_time_series() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return &time_series_;
}
const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >&
ListTimeSeriesResponse::time_series() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.ListTimeSeriesResponse.time_series)
  return time_series_;
}

// optional string next_page_token = 2;
void ListTimeSeriesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTimeSeriesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}
void ListTimeSeriesResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}
void ListTimeSeriesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}
::std::string* ListTimeSeriesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTimeSeriesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTimeSeriesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.ListTimeSeriesResponse.next_page_token)
}

inline const ListTimeSeriesResponse* ListTimeSeriesResponse::internal_default_instance() {
  return &ListTimeSeriesResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTimeSeriesRequest::kNameFieldNumber;
const int CreateTimeSeriesRequest::kTimeSeriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTimeSeriesRequest::CreateTimeSeriesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateTimeSeriesRequest)
}

void CreateTimeSeriesRequest::InitAsDefaultInstance() {
}

CreateTimeSeriesRequest::CreateTimeSeriesRequest(const CreateTimeSeriesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateTimeSeriesRequest)
}

void CreateTimeSeriesRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateTimeSeriesRequest::~CreateTimeSeriesRequest() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateTimeSeriesRequest)
  SharedDtor();
}

void CreateTimeSeriesRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateTimeSeriesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTimeSeriesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTimeSeriesRequest_descriptor_;
}

const CreateTimeSeriesRequest& CreateTimeSeriesRequest::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateTimeSeriesRequest> CreateTimeSeriesRequest_default_instance_;

CreateTimeSeriesRequest* CreateTimeSeriesRequest::New(::google::protobuf::Arena* arena) const {
  CreateTimeSeriesRequest* n = new CreateTimeSeriesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTimeSeriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateTimeSeriesRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_series_.Clear();
}

bool CreateTimeSeriesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateTimeSeriesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.monitoring.v3.TimeSeries time_series = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_time_series:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_time_series()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_time_series;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.monitoring.v3.CreateTimeSeriesRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateTimeSeriesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateTimeSeriesRequest)
  return false;
#undef DO_
}

void CreateTimeSeriesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateTimeSeriesRequest)
  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  for (unsigned int i = 0, n = this->time_series_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->time_series(i), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateTimeSeriesRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateTimeSeriesRequest)
}

::google::protobuf::uint8* CreateTimeSeriesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateTimeSeriesRequest)
  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  for (unsigned int i = 0, n = this->time_series_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->time_series(i), false, target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.monitoring.v3.CreateTimeSeriesRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateTimeSeriesRequest)
  return target;
}

size_t CreateTimeSeriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateTimeSeriesRequest)
  size_t total_size = 0;

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .google.monitoring.v3.TimeSeries time_series = 2;
  {
    unsigned int count = this->time_series_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->time_series(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTimeSeriesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateTimeSeriesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTimeSeriesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateTimeSeriesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateTimeSeriesRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateTimeSeriesRequest::MergeFrom(const CreateTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateTimeSeriesRequest::UnsafeMergeFrom(const CreateTimeSeriesRequest& from) {
  GOOGLE_DCHECK(&from != this);
  time_series_.MergeFrom(from.time_series_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CreateTimeSeriesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTimeSeriesRequest::CopyFrom(const CreateTimeSeriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateTimeSeriesRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateTimeSeriesRequest::IsInitialized() const {

  return true;
}

void CreateTimeSeriesRequest::Swap(CreateTimeSeriesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTimeSeriesRequest::InternalSwap(CreateTimeSeriesRequest* other) {
  name_.Swap(&other->name_);
  time_series_.UnsafeArenaSwap(&other->time_series_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTimeSeriesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTimeSeriesRequest_descriptor_;
  metadata.reflection = CreateTimeSeriesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateTimeSeriesRequest

// optional string name = 3;
void CreateTimeSeriesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateTimeSeriesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTimeSeriesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.monitoring.v3.CreateTimeSeriesRequest.name)
}
void CreateTimeSeriesRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.monitoring.v3.CreateTimeSeriesRequest.name)
}
void CreateTimeSeriesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.monitoring.v3.CreateTimeSeriesRequest.name)
}
::std::string* CreateTimeSeriesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateTimeSeriesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateTimeSeriesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateTimeSeriesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateTimeSeriesRequest.name)
}

// repeated .google.monitoring.v3.TimeSeries time_series = 2;
int CreateTimeSeriesRequest::time_series_size() const {
  return time_series_.size();
}
void CreateTimeSeriesRequest::clear_time_series() {
  time_series_.Clear();
}
const ::google::monitoring::v3::TimeSeries& CreateTimeSeriesRequest::time_series(int index) const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_.Get(index);
}
::google::monitoring::v3::TimeSeries* CreateTimeSeriesRequest::mutable_time_series(int index) {
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_.Mutable(index);
}
::google::monitoring::v3::TimeSeries* CreateTimeSeriesRequest::add_time_series() {
  // @@protoc_insertion_point(field_add:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >*
CreateTimeSeriesRequest::mutable_time_series() {
  // @@protoc_insertion_point(field_mutable_list:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return &time_series_;
}
const ::google::protobuf::RepeatedPtrField< ::google::monitoring::v3::TimeSeries >&
CreateTimeSeriesRequest::time_series() const {
  // @@protoc_insertion_point(field_list:google.monitoring.v3.CreateTimeSeriesRequest.time_series)
  return time_series_;
}

inline const CreateTimeSeriesRequest* CreateTimeSeriesRequest::internal_default_instance() {
  return &CreateTimeSeriesRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTimeSeriesError::kTimeSeriesFieldNumber;
const int CreateTimeSeriesError::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTimeSeriesError::CreateTimeSeriesError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.monitoring.v3.CreateTimeSeriesError)
}

void CreateTimeSeriesError::InitAsDefaultInstance() {
  time_series_ = const_cast< ::google::monitoring::v3::TimeSeries*>(
      ::google::monitoring::v3::TimeSeries::internal_default_instance());
  status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}

CreateTimeSeriesError::CreateTimeSeriesError(const CreateTimeSeriesError& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.monitoring.v3.CreateTimeSeriesError)
}

void CreateTimeSeriesError::SharedCtor() {
  time_series_ = NULL;
  status_ = NULL;
  _cached_size_ = 0;
}

CreateTimeSeriesError::~CreateTimeSeriesError() {
  // @@protoc_insertion_point(destructor:google.monitoring.v3.CreateTimeSeriesError)
  SharedDtor();
}

void CreateTimeSeriesError::SharedDtor() {
  if (this != &CreateTimeSeriesError_default_instance_.get()) {
    delete time_series_;
    delete status_;
  }
}

void CreateTimeSeriesError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateTimeSeriesError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateTimeSeriesError_descriptor_;
}

const CreateTimeSeriesError& CreateTimeSeriesError::default_instance() {
  protobuf_InitDefaults_google_2fmonitoring_2fv3_2fmetric_5fservice_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateTimeSeriesError> CreateTimeSeriesError_default_instance_;

CreateTimeSeriesError* CreateTimeSeriesError::New(::google::protobuf::Arena* arena) const {
  CreateTimeSeriesError* n = new CreateTimeSeriesError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateTimeSeriesError::Clear() {
// @@protoc_insertion_point(message_clear_start:google.monitoring.v3.CreateTimeSeriesError)
  if (GetArenaNoVirtual() == NULL && time_series_ != NULL) delete time_series_;
  time_series_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}

bool CreateTimeSeriesError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.monitoring.v3.CreateTimeSeriesError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.monitoring.v3.TimeSeries time_series = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time_series()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_status;
        break;
      }

      // optional .google.rpc.Status status = 2;
      case 2: {
        if (tag == 18) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.monitoring.v3.CreateTimeSeriesError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.monitoring.v3.CreateTimeSeriesError)
  return false;
#undef DO_
}

void CreateTimeSeriesError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.monitoring.v3.CreateTimeSeriesError)
  // optional .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->time_series_, output);
  }

  // optional .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->status_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.monitoring.v3.CreateTimeSeriesError)
}

::google::protobuf::uint8* CreateTimeSeriesError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.monitoring.v3.CreateTimeSeriesError)
  // optional .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->time_series_, false, target);
  }

  // optional .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->status_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.monitoring.v3.CreateTimeSeriesError)
  return target;
}

size_t CreateTimeSeriesError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.monitoring.v3.CreateTimeSeriesError)
  size_t total_size = 0;

  // optional .google.monitoring.v3.TimeSeries time_series = 1;
  if (this->has_time_series()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_series_);
  }

  // optional .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateTimeSeriesError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.monitoring.v3.CreateTimeSeriesError)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateTimeSeriesError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTimeSeriesError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.monitoring.v3.CreateTimeSeriesError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.monitoring.v3.CreateTimeSeriesError)
    UnsafeMergeFrom(*source);
  }
}

void CreateTimeSeriesError::MergeFrom(const CreateTimeSeriesError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.monitoring.v3.CreateTimeSeriesError)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateTimeSeriesError::UnsafeMergeFrom(const CreateTimeSeriesError& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_time_series()) {
    mutable_time_series()->::google::monitoring::v3::TimeSeries::MergeFrom(from.time_series());
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void CreateTimeSeriesError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.monitoring.v3.CreateTimeSeriesError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTimeSeriesError::CopyFrom(const CreateTimeSeriesError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.monitoring.v3.CreateTimeSeriesError)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateTimeSeriesError::IsInitialized() const {

  return true;
}

void CreateTimeSeriesError::Swap(CreateTimeSeriesError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTimeSeriesError::InternalSwap(CreateTimeSeriesError* other) {
  std::swap(time_series_, other->time_series_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateTimeSeriesError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateTimeSeriesError_descriptor_;
  metadata.reflection = CreateTimeSeriesError_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateTimeSeriesError

// optional .google.monitoring.v3.TimeSeries time_series = 1;
bool CreateTimeSeriesError::has_time_series() const {
  return this != internal_default_instance() && time_series_ != NULL;
}
void CreateTimeSeriesError::clear_time_series() {
  if (GetArenaNoVirtual() == NULL && time_series_ != NULL) delete time_series_;
  time_series_ = NULL;
}
const ::google::monitoring::v3::TimeSeries& CreateTimeSeriesError::time_series() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesError.time_series)
  return time_series_ != NULL ? *time_series_
                         : *::google::monitoring::v3::TimeSeries::internal_default_instance();
}
::google::monitoring::v3::TimeSeries* CreateTimeSeriesError::mutable_time_series() {
  
  if (time_series_ == NULL) {
    time_series_ = new ::google::monitoring::v3::TimeSeries;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesError.time_series)
  return time_series_;
}
::google::monitoring::v3::TimeSeries* CreateTimeSeriesError::release_time_series() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateTimeSeriesError.time_series)
  
  ::google::monitoring::v3::TimeSeries* temp = time_series_;
  time_series_ = NULL;
  return temp;
}
void CreateTimeSeriesError::set_allocated_time_series(::google::monitoring::v3::TimeSeries* time_series) {
  delete time_series_;
  time_series_ = time_series;
  if (time_series) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateTimeSeriesError.time_series)
}

// optional .google.rpc.Status status = 2;
bool CreateTimeSeriesError::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
void CreateTimeSeriesError::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::google::rpc::Status& CreateTimeSeriesError::status() const {
  // @@protoc_insertion_point(field_get:google.monitoring.v3.CreateTimeSeriesError.status)
  return status_ != NULL ? *status_
                         : *::google::rpc::Status::internal_default_instance();
}
::google::rpc::Status* CreateTimeSeriesError::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:google.monitoring.v3.CreateTimeSeriesError.status)
  return status_;
}
::google::rpc::Status* CreateTimeSeriesError::release_status() {
  // @@protoc_insertion_point(field_release:google.monitoring.v3.CreateTimeSeriesError.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
void CreateTimeSeriesError::set_allocated_status(::google::rpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.monitoring.v3.CreateTimeSeriesError.status)
}

inline const CreateTimeSeriesError* CreateTimeSeriesError::internal_default_instance() {
  return &CreateTimeSeriesError_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v3
}  // namespace monitoring
}  // namespace google

// @@protoc_insertion_point(global_scope)
