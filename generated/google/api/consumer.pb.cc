// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/consumer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/api/consumer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
class ProjectPropertiesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProjectProperties> {};
ProjectPropertiesDefaultTypeInternal _ProjectProperties_default_instance_;
class PropertyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Property> {};
PropertyDefaultTypeInternal _Property_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fconsumer_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_google_2fapi_2fconsumer_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectProperties, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectProperties, properties_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, description_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ProjectProperties)},
  { 5, -1, sizeof(Property)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_ProjectProperties_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_Property_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_google_2fapi_2fconsumer_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/api/consumer.proto", schemas, file_default_instances, protobuf_Offsets_google_2fapi_2fconsumer_2eproto(), factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void protobuf_ShutdownFile_google_2fapi_2fconsumer_2eproto() {
  _ProjectProperties_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Property_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProjectProperties_default_instance_.DefaultConstruct();
  _Property_default_instance_.DefaultConstruct();
}

void protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto_impl);
}
void protobuf_AddDesc_google_2fapi_2fconsumer_2eproto_impl() {
  protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto();
  static const char descriptor[] = {
      "\n\031google/api/consumer.proto\022\ngoogle.api\""
      "=\n\021ProjectProperties\022(\n\nproperties\030\001 \003(\013"
      "2\024.google.api.Property\"\254\001\n\010Property\022\014\n\004n"
      "ame\030\001 \001(\t\022/\n\004type\030\002 \001(\0162!.google.api.Pro"
      "perty.PropertyType\022\023\n\013description\030\003 \001(\t\""
      "L\n\014PropertyType\022\017\n\013UNSPECIFIED\020\000\022\t\n\005INT6"
      "4\020\001\022\010\n\004BOOL\020\002\022\n\n\006STRING\020\003\022\n\n\006DOUBLE\020\004B!\n"
      "\016com.google.apiB\rConsumerProtoP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/consumer.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fapi_2fconsumer_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fapi_2fconsumer_2eproto_once_);
void protobuf_AddDesc_google_2fapi_2fconsumer_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fapi_2fconsumer_2eproto_once_,
                 &protobuf_AddDesc_google_2fapi_2fconsumer_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fapi_2fconsumer_2eproto {
  StaticDescriptorInitializer_google_2fapi_2fconsumer_2eproto() {
    protobuf_AddDesc_google_2fapi_2fconsumer_2eproto();
  }
} static_descriptor_initializer_google_2fapi_2fconsumer_2eproto_;
const ::google::protobuf::EnumDescriptor* Property_PropertyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_enum_descriptors[0];
}
bool Property_PropertyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Property_PropertyType Property::UNSPECIFIED;
const Property_PropertyType Property::INT64;
const Property_PropertyType Property::BOOL;
const Property_PropertyType Property::STRING;
const Property_PropertyType Property::DOUBLE;
const Property_PropertyType Property::PropertyType_MIN;
const Property_PropertyType Property::PropertyType_MAX;
const int Property::PropertyType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectProperties::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectProperties::ProjectProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.ProjectProperties)
}
ProjectProperties::ProjectProperties(const ProjectProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.ProjectProperties)
}

void ProjectProperties::SharedCtor() {
  _cached_size_ = 0;
}

ProjectProperties::~ProjectProperties() {
  // @@protoc_insertion_point(destructor:google.api.ProjectProperties)
  SharedDtor();
}

void ProjectProperties::SharedDtor() {
}

void ProjectProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectProperties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const ProjectProperties& ProjectProperties::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto();
  return *internal_default_instance();
}

ProjectProperties* ProjectProperties::New(::google::protobuf::Arena* arena) const {
  ProjectProperties* n = new ProjectProperties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ProjectProperties)
  properties_.Clear();
}

bool ProjectProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.ProjectProperties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.Property properties = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.ProjectProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.ProjectProperties)
  return false;
#undef DO_
}

void ProjectProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.ProjectProperties)
  // repeated .google.api.Property properties = 1;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.ProjectProperties)
}

::google::protobuf::uint8* ProjectProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ProjectProperties)
  // repeated .google.api.Property properties = 1;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->properties(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.ProjectProperties)
  return target;
}

size_t ProjectProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ProjectProperties)
  size_t total_size = 0;

  // repeated .google.api.Property properties = 1;
  {
    unsigned int count = this->properties_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.ProjectProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.ProjectProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.ProjectProperties)
    MergeFrom(*source);
  }
}

void ProjectProperties::MergeFrom(const ProjectProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.ProjectProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
}

void ProjectProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.ProjectProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectProperties::CopyFrom(const ProjectProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ProjectProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectProperties::IsInitialized() const {
  return true;
}

void ProjectProperties::Swap(ProjectProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectProperties::InternalSwap(ProjectProperties* other) {
  properties_.UnsafeArenaSwap(&other->properties_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectProperties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectProperties

// repeated .google.api.Property properties = 1;
int ProjectProperties::properties_size() const {
  return properties_.size();
}
void ProjectProperties::clear_properties() {
  properties_.Clear();
}
const ::google::api::Property& ProjectProperties::properties(int index) const {
  // @@protoc_insertion_point(field_get:google.api.ProjectProperties.properties)
  return properties_.Get(index);
}
::google::api::Property* ProjectProperties::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.ProjectProperties.properties)
  return properties_.Mutable(index);
}
::google::api::Property* ProjectProperties::add_properties() {
  // @@protoc_insertion_point(field_add:google.api.ProjectProperties.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::api::Property >*
ProjectProperties::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:google.api.ProjectProperties.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::google::api::Property >&
ProjectProperties::properties() const {
  // @@protoc_insertion_point(field_list:google.api.ProjectProperties.properties)
  return properties_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kNameFieldNumber;
const int Property::kTypeFieldNumber;
const int Property::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Property)
}
Property::Property(const Property& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:google.api.Property)
}

void Property::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:google.api.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Property::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1].descriptor;
}

const Property& Property::default_instance() {
  protobuf_InitDefaults_google_2fapi_2fconsumer_2eproto();
  return *internal_default_instance();
}

Property* Property::New(::google::protobuf::Arena* arena) const {
  Property* n = new Property;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Property)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Property)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Property.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Property.PropertyType type = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::api::Property_PropertyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Property.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Property)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.api.Property.PropertyType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Property.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.api.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Property)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.api.Property.PropertyType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Property.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.api.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Property)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.api.Property.PropertyType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Property)
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Property

// string name = 1;
void Property::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Property::name() const {
  // @@protoc_insertion_point(field_get:google.api.Property.name)
  return name_.GetNoArena();
}
void Property::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Property.name)
}
void Property::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Property.name)
}
void Property::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Property.name)
}
::std::string* Property::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Property.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Property::release_name() {
  // @@protoc_insertion_point(field_release:google.api.Property.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.api.Property.name)
}

// .google.api.Property.PropertyType type = 2;
void Property::clear_type() {
  type_ = 0;
}
::google::api::Property_PropertyType Property::type() const {
  // @@protoc_insertion_point(field_get:google.api.Property.type)
  return static_cast< ::google::api::Property_PropertyType >(type_);
}
void Property::set_type(::google::api::Property_PropertyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.api.Property.type)
}

// string description = 3;
void Property::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Property::description() const {
  // @@protoc_insertion_point(field_get:google.api.Property.description)
  return description_.GetNoArena();
}
void Property::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Property.description)
}
void Property::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Property.description)
}
void Property::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Property.description)
}
::std::string* Property::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Property.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Property::release_description() {
  // @@protoc_insertion_point(field_release:google.api.Property.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.api.Property.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)
