// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouddebugger/v2/data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/devtools/clouddebugger/v2/data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace devtools {
namespace clouddebugger {
namespace v2 {

namespace {

const ::google::protobuf::Descriptor* FormatMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FormatMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* StatusMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StatusMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* StatusMessage_Reference_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SourceLocation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SourceLocation_reflection_ = NULL;
const ::google::protobuf::Descriptor* Variable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Variable_reflection_ = NULL;
const ::google::protobuf::Descriptor* StackFrame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StackFrame_reflection_ = NULL;
const ::google::protobuf::Descriptor* Breakpoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Breakpoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* Breakpoint_LabelsEntry_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Breakpoint_Action_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Breakpoint_LogLevel_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Debuggee_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Debuggee_reflection_ = NULL;
const ::google::protobuf::Descriptor* Debuggee_LabelsEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto() {
  protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/devtools/clouddebugger/v2/data.proto");
  GOOGLE_CHECK(file != NULL);
  FormatMessage_descriptor_ = file->message_type(0);
  static const int FormatMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormatMessage, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormatMessage, parameters_),
  };
  FormatMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FormatMessage_descriptor_,
      FormatMessage::internal_default_instance(),
      FormatMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(FormatMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormatMessage, _internal_metadata_));
  StatusMessage_descriptor_ = file->message_type(1);
  static const int StatusMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMessage, is_error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMessage, refers_to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMessage, description_),
  };
  StatusMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StatusMessage_descriptor_,
      StatusMessage::internal_default_instance(),
      StatusMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(StatusMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMessage, _internal_metadata_));
  StatusMessage_Reference_descriptor_ = StatusMessage_descriptor_->enum_type(0);
  SourceLocation_descriptor_ = file->message_type(2);
  static const int SourceLocation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, line_),
  };
  SourceLocation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SourceLocation_descriptor_,
      SourceLocation::internal_default_instance(),
      SourceLocation_offsets_,
      -1,
      -1,
      -1,
      sizeof(SourceLocation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SourceLocation, _internal_metadata_));
  Variable_descriptor_ = file->message_type(3);
  static const int Variable_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable, members_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable, var_table_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable, status_),
  };
  Variable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Variable_descriptor_,
      Variable::internal_default_instance(),
      Variable_offsets_,
      -1,
      -1,
      -1,
      sizeof(Variable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variable, _internal_metadata_));
  StackFrame_descriptor_ = file->message_type(4);
  static const int StackFrame_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StackFrame, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StackFrame, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StackFrame, arguments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StackFrame, locals_),
  };
  StackFrame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StackFrame_descriptor_,
      StackFrame::internal_default_instance(),
      StackFrame_offsets_,
      -1,
      -1,
      -1,
      sizeof(StackFrame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StackFrame, _internal_metadata_));
  Breakpoint_descriptor_ = file->message_type(5);
  static const int Breakpoint_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, expressions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, log_message_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, log_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, is_final_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, final_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, user_email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, stack_frames_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, evaluated_expressions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, variable_table_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, labels_),
  };
  Breakpoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Breakpoint_descriptor_,
      Breakpoint::internal_default_instance(),
      Breakpoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(Breakpoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Breakpoint, _internal_metadata_));
  Breakpoint_LabelsEntry_descriptor_ = Breakpoint_descriptor_->nested_type(0);
  Breakpoint_Action_descriptor_ = Breakpoint_descriptor_->enum_type(0);
  Breakpoint_LogLevel_descriptor_ = Breakpoint_descriptor_->enum_type(1);
  Debuggee_descriptor_ = file->message_type(6);
  static const int Debuggee_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, project_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, uniquifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, is_inactive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, agent_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, is_disabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, source_contexts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, ext_source_contexts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, labels_),
  };
  Debuggee_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Debuggee_descriptor_,
      Debuggee::internal_default_instance(),
      Debuggee_offsets_,
      -1,
      -1,
      -1,
      sizeof(Debuggee),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Debuggee, _internal_metadata_));
  Debuggee_LabelsEntry_descriptor_ = Debuggee_descriptor_->nested_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FormatMessage_descriptor_, FormatMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StatusMessage_descriptor_, StatusMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SourceLocation_descriptor_, SourceLocation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Variable_descriptor_, Variable::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StackFrame_descriptor_, StackFrame::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Breakpoint_descriptor_, Breakpoint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Breakpoint_LabelsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                Breakpoint_LabelsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Debuggee_descriptor_, Debuggee::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Debuggee_LabelsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                Debuggee_LabelsEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto() {
  FormatMessage_default_instance_.Shutdown();
  delete FormatMessage_reflection_;
  StatusMessage_default_instance_.Shutdown();
  delete StatusMessage_reflection_;
  SourceLocation_default_instance_.Shutdown();
  delete SourceLocation_reflection_;
  Variable_default_instance_.Shutdown();
  delete Variable_reflection_;
  StackFrame_default_instance_.Shutdown();
  delete StackFrame_reflection_;
  Breakpoint_default_instance_.Shutdown();
  delete Breakpoint_reflection_;
  Debuggee_default_instance_.Shutdown();
  delete Debuggee_reflection_;
}

void protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::api::protobuf_InitDefaults_google_2fapi_2fannotations_2eproto();
  ::google::devtools::source::v1::protobuf_InitDefaults_google_2fdevtools_2fsource_2fv1_2fsource_5fcontext_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  FormatMessage_default_instance_.DefaultConstruct();
  StatusMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SourceLocation_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Variable_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  StackFrame_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Breakpoint_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Debuggee_default_instance_.DefaultConstruct();
  FormatMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  StatusMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  SourceLocation_default_instance_.get_mutable()->InitAsDefaultInstance();
  Variable_default_instance_.get_mutable()->InitAsDefaultInstance();
  StackFrame_default_instance_.get_mutable()->InitAsDefaultInstance();
  Breakpoint_default_instance_.get_mutable()->InitAsDefaultInstance();
  Debuggee_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_once_);
void protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_once_,
                 &protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_impl);
}
void protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n+google/devtools/clouddebugger/v2/data."
    "proto\022 google.devtools.clouddebugger.v2\032"
    "\034google/api/annotations.proto\032.google/de"
    "vtools/source/v1/source_context.proto\032\037g"
    "oogle/protobuf/timestamp.proto\032\036google/p"
    "rotobuf/wrappers.proto\"3\n\rFormatMessage\022"
    "\016\n\006format\030\001 \001(\t\022\022\n\nparameters\030\002 \003(\t\"\320\002\n\r"
    "StatusMessage\022\020\n\010is_error\030\001 \001(\010\022L\n\trefer"
    "s_to\030\002 \001(\01629.google.devtools.clouddebugg"
    "er.v2.StatusMessage.Reference\022D\n\013descrip"
    "tion\030\003 \001(\0132/.google.devtools.clouddebugg"
    "er.v2.FormatMessage\"\230\001\n\tReference\022\017\n\013UNS"
    "PECIFIED\020\000\022\036\n\032BREAKPOINT_SOURCE_LOCATION"
    "\020\003\022\030\n\024BREAKPOINT_CONDITION\020\004\022\031\n\025BREAKPOI"
    "NT_EXPRESSION\020\007\022\021\n\rVARIABLE_NAME\020\005\022\022\n\016VA"
    "RIABLE_VALUE\020\006\",\n\016SourceLocation\022\014\n\004path"
    "\030\001 \001(\t\022\014\n\004line\030\002 \001(\005\"\351\001\n\010Variable\022\014\n\004nam"
    "e\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\014\n\004type\030\006 \001(\t\022;\n\007"
    "members\030\003 \003(\0132*.google.devtools.clouddeb"
    "ugger.v2.Variable\0224\n\017var_table_index\030\004 \001"
    "(\0132\033.google.protobuf.Int32Value\022\?\n\006statu"
    "s\030\005 \001(\0132/.google.devtools.clouddebugger."
    "v2.StatusMessage\"\335\001\n\nStackFrame\022\020\n\010funct"
    "ion\030\001 \001(\t\022B\n\010location\030\002 \001(\01320.google.dev"
    "tools.clouddebugger.v2.SourceLocation\022=\n"
    "\targuments\030\003 \003(\0132*.google.devtools.cloud"
    "debugger.v2.Variable\022:\n\006locals\030\004 \003(\0132*.g"
    "oogle.devtools.clouddebugger.v2.Variable"
    "\"\227\007\n\nBreakpoint\022\n\n\002id\030\001 \001(\t\022C\n\006action\030\r "
    "\001(\01623.google.devtools.clouddebugger.v2.B"
    "reakpoint.Action\022B\n\010location\030\002 \001(\01320.goo"
    "gle.devtools.clouddebugger.v2.SourceLoca"
    "tion\022\021\n\tcondition\030\003 \001(\t\022\023\n\013expressions\030\004"
    " \003(\t\022\032\n\022log_message_format\030\016 \001(\t\022H\n\tlog_"
    "level\030\017 \001(\01625.google.devtools.clouddebug"
    "ger.v2.Breakpoint.LogLevel\022\026\n\016is_final_s"
    "tate\030\005 \001(\010\022/\n\013create_time\030\013 \001(\0132\032.google"
    ".protobuf.Timestamp\022.\n\nfinal_time\030\014 \001(\0132"
    "\032.google.protobuf.Timestamp\022\022\n\nuser_emai"
    "l\030\020 \001(\t\022\?\n\006status\030\n \001(\0132/.google.devtool"
    "s.clouddebugger.v2.StatusMessage\022B\n\014stac"
    "k_frames\030\007 \003(\0132,.google.devtools.cloudde"
    "bugger.v2.StackFrame\022I\n\025evaluated_expres"
    "sions\030\010 \003(\0132*.google.devtools.clouddebug"
    "ger.v2.Variable\022B\n\016variable_table\030\t \003(\0132"
    "*.google.devtools.clouddebugger.v2.Varia"
    "ble\022H\n\006labels\030\021 \003(\01328.google.devtools.cl"
    "ouddebugger.v2.Breakpoint.LabelsEntry\032-\n"
    "\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"\036\n\006Action\022\013\n\007CAPTURE\020\000\022\007\n\003LOG\020\001\",\n\010"
    "LogLevel\022\010\n\004INFO\020\000\022\013\n\007WARNING\020\001\022\t\n\005ERROR"
    "\020\002\"\333\003\n\010Debuggee\022\n\n\002id\030\001 \001(\t\022\017\n\007project\030\002"
    " \001(\t\022\022\n\nuniquifier\030\003 \001(\t\022\023\n\013description\030"
    "\004 \001(\t\022\023\n\013is_inactive\030\005 \001(\010\022\025\n\ragent_vers"
    "ion\030\006 \001(\t\022\023\n\013is_disabled\030\007 \001(\010\022\?\n\006status"
    "\030\010 \001(\0132/.google.devtools.clouddebugger.v"
    "2.StatusMessage\022A\n\017source_contexts\030\t \003(\013"
    "2(.google.devtools.source.v1.SourceConte"
    "xt\022M\n\023ext_source_contexts\030\r \003(\01320.google"
    ".devtools.source.v1.ExtendedSourceContex"
    "t\022F\n\006labels\030\013 \003(\01326.google.devtools.clou"
    "ddebugger.v2.Debuggee.LabelsEntry\032-\n\013Lab"
    "elsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
    "B\202\001\n$com.google.devtools.clouddebugger.v"
    "2B\tDataProtoP\001ZMgoogle.golang.org/genpro"
    "to/googleapis/devtools/clouddebugger/v2;"
    "clouddebuggerb\006proto3", 2661);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/devtools/clouddebugger/v2/data.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_AddDesc_google_2fapi_2fannotations_2eproto();
  ::google::devtools::source::v1::protobuf_AddDesc_google_2fdevtools_2fsource_2fv1_2fsource_5fcontext_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_once_);
void protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_once_,
                 &protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto {
  StaticDescriptorInitializer_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto() {
    protobuf_AddDesc_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  }
} static_descriptor_initializer_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FormatMessage::kFormatFieldNumber;
const int FormatMessage::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FormatMessage::FormatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.FormatMessage)
}

void FormatMessage::InitAsDefaultInstance() {
}

FormatMessage::FormatMessage(const FormatMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.FormatMessage)
}

void FormatMessage::SharedCtor() {
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FormatMessage::~FormatMessage() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.FormatMessage)
  SharedDtor();
}

void FormatMessage::SharedDtor() {
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FormatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FormatMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FormatMessage_descriptor_;
}

const FormatMessage& FormatMessage::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FormatMessage> FormatMessage_default_instance_;

FormatMessage* FormatMessage::New(::google::protobuf::Arena* arena) const {
  FormatMessage* n = new FormatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FormatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.FormatMessage)
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameters_.Clear();
}

bool FormatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.FormatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string format = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->format().data(), this->format().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.FormatMessage.format"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_parameters;
        break;
      }

      // repeated string parameters = 2;
      case 2: {
        if (tag == 18) {
         parse_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_parameters()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameters(this->parameters_size() - 1).data(),
            this->parameters(this->parameters_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.FormatMessage.parameters"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_parameters;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.FormatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.FormatMessage)
  return false;
#undef DO_
}

void FormatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.FormatMessage)
  // optional string format = 1;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.FormatMessage.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->format(), output);
  }

  // repeated string parameters = 2;
  for (int i = 0; i < this->parameters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameters(i).data(), this->parameters(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.FormatMessage.parameters");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->parameters(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.FormatMessage)
}

::google::protobuf::uint8* FormatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.FormatMessage)
  // optional string format = 1;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.FormatMessage.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->format(), target);
  }

  // repeated string parameters = 2;
  for (int i = 0; i < this->parameters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameters(i).data(), this->parameters(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.FormatMessage.parameters");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->parameters(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.FormatMessage)
  return target;
}

size_t FormatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.FormatMessage)
  size_t total_size = 0;

  // optional string format = 1;
  if (this->format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());
  }

  // repeated string parameters = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->parameters_size());
  for (int i = 0; i < this->parameters_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->parameters(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FormatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.FormatMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FormatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FormatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.FormatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.FormatMessage)
    UnsafeMergeFrom(*source);
  }
}

void FormatMessage::MergeFrom(const FormatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.FormatMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FormatMessage::UnsafeMergeFrom(const FormatMessage& from) {
  GOOGLE_DCHECK(&from != this);
  parameters_.UnsafeMergeFrom(from.parameters_);
  if (from.format().size() > 0) {

    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
}

void FormatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.FormatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormatMessage::CopyFrom(const FormatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.FormatMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FormatMessage::IsInitialized() const {

  return true;
}

void FormatMessage::Swap(FormatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FormatMessage::InternalSwap(FormatMessage* other) {
  format_.Swap(&other->format_);
  parameters_.UnsafeArenaSwap(&other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FormatMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FormatMessage_descriptor_;
  metadata.reflection = FormatMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FormatMessage

// optional string format = 1;
void FormatMessage::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FormatMessage::format() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.FormatMessage.format)
  return format_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FormatMessage::set_format(const ::std::string& value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.FormatMessage.format)
}
void FormatMessage::set_format(const char* value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.FormatMessage.format)
}
void FormatMessage::set_format(const char* value, size_t size) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.FormatMessage.format)
}
::std::string* FormatMessage::mutable_format() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.FormatMessage.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FormatMessage::release_format() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.FormatMessage.format)
  
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FormatMessage::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    
  } else {
    
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.FormatMessage.format)
}

// repeated string parameters = 2;
int FormatMessage::parameters_size() const {
  return parameters_.size();
}
void FormatMessage::clear_parameters() {
  parameters_.Clear();
}
const ::std::string& FormatMessage::parameters(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.FormatMessage.parameters)
  return parameters_.Get(index);
}
::std::string* FormatMessage::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.FormatMessage.parameters)
  return parameters_.Mutable(index);
}
void FormatMessage::set_parameters(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.FormatMessage.parameters)
  parameters_.Mutable(index)->assign(value);
}
void FormatMessage::set_parameters(int index, const char* value) {
  parameters_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.FormatMessage.parameters)
}
void FormatMessage::set_parameters(int index, const char* value, size_t size) {
  parameters_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.FormatMessage.parameters)
}
::std::string* FormatMessage::add_parameters() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.clouddebugger.v2.FormatMessage.parameters)
  return parameters_.Add();
}
void FormatMessage::add_parameters(const ::std::string& value) {
  parameters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.FormatMessage.parameters)
}
void FormatMessage::add_parameters(const char* value) {
  parameters_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.clouddebugger.v2.FormatMessage.parameters)
}
void FormatMessage::add_parameters(const char* value, size_t size) {
  parameters_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.clouddebugger.v2.FormatMessage.parameters)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FormatMessage::parameters() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.FormatMessage.parameters)
  return parameters_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FormatMessage::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.FormatMessage.parameters)
  return &parameters_;
}

inline const FormatMessage* FormatMessage::internal_default_instance() {
  return &FormatMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* StatusMessage_Reference_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StatusMessage_Reference_descriptor_;
}
bool StatusMessage_Reference_IsValid(int value) {
  switch (value) {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StatusMessage_Reference StatusMessage::UNSPECIFIED;
const StatusMessage_Reference StatusMessage::BREAKPOINT_SOURCE_LOCATION;
const StatusMessage_Reference StatusMessage::BREAKPOINT_CONDITION;
const StatusMessage_Reference StatusMessage::BREAKPOINT_EXPRESSION;
const StatusMessage_Reference StatusMessage::VARIABLE_NAME;
const StatusMessage_Reference StatusMessage::VARIABLE_VALUE;
const StatusMessage_Reference StatusMessage::Reference_MIN;
const StatusMessage_Reference StatusMessage::Reference_MAX;
const int StatusMessage::Reference_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusMessage::kIsErrorFieldNumber;
const int StatusMessage::kRefersToFieldNumber;
const int StatusMessage::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusMessage::StatusMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.StatusMessage)
}

void StatusMessage::InitAsDefaultInstance() {
  description_ = const_cast< ::google::devtools::clouddebugger::v2::FormatMessage*>(
      ::google::devtools::clouddebugger::v2::FormatMessage::internal_default_instance());
}

StatusMessage::StatusMessage(const StatusMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.StatusMessage)
}

void StatusMessage::SharedCtor() {
  description_ = NULL;
  ::memset(&is_error_, 0, reinterpret_cast<char*>(&refers_to_) -
    reinterpret_cast<char*>(&is_error_) + sizeof(refers_to_));
  _cached_size_ = 0;
}

StatusMessage::~StatusMessage() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.StatusMessage)
  SharedDtor();
}

void StatusMessage::SharedDtor() {
  if (this != &StatusMessage_default_instance_.get()) {
    delete description_;
  }
}

void StatusMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StatusMessage_descriptor_;
}

const StatusMessage& StatusMessage::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StatusMessage> StatusMessage_default_instance_;

StatusMessage* StatusMessage::New(::google::protobuf::Arena* arena) const {
  StatusMessage* n = new StatusMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.StatusMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StatusMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StatusMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(is_error_, refers_to_);
  if (GetArenaNoVirtual() == NULL && description_ != NULL) delete description_;
  description_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool StatusMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.StatusMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_error = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_error_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_refers_to;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.StatusMessage.Reference refers_to = 2;
      case 2: {
        if (tag == 16) {
         parse_refers_to:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_refers_to(static_cast< ::google::devtools::clouddebugger::v2::StatusMessage_Reference >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.FormatMessage description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.StatusMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.StatusMessage)
  return false;
#undef DO_
}

void StatusMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.StatusMessage)
  // optional bool is_error = 1;
  if (this->is_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_error(), output);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage.Reference refers_to = 2;
  if (this->refers_to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->refers_to(), output);
  }

  // optional .google.devtools.clouddebugger.v2.FormatMessage description = 3;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->description_, output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.StatusMessage)
}

::google::protobuf::uint8* StatusMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.StatusMessage)
  // optional bool is_error = 1;
  if (this->is_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_error(), target);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage.Reference refers_to = 2;
  if (this->refers_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->refers_to(), target);
  }

  // optional .google.devtools.clouddebugger.v2.FormatMessage description = 3;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->description_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.StatusMessage)
  return target;
}

size_t StatusMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.StatusMessage)
  size_t total_size = 0;

  // optional bool is_error = 1;
  if (this->is_error() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage.Reference refers_to = 2;
  if (this->refers_to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->refers_to());
  }

  // optional .google.devtools.clouddebugger.v2.FormatMessage description = 3;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->description_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.StatusMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StatusMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.StatusMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.StatusMessage)
    UnsafeMergeFrom(*source);
  }
}

void StatusMessage::MergeFrom(const StatusMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.StatusMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StatusMessage::UnsafeMergeFrom(const StatusMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.is_error() != 0) {
    set_is_error(from.is_error());
  }
  if (from.refers_to() != 0) {
    set_refers_to(from.refers_to());
  }
  if (from.has_description()) {
    mutable_description()->::google::devtools::clouddebugger::v2::FormatMessage::MergeFrom(from.description());
  }
}

void StatusMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.StatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusMessage::CopyFrom(const StatusMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.StatusMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StatusMessage::IsInitialized() const {

  return true;
}

void StatusMessage::Swap(StatusMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusMessage::InternalSwap(StatusMessage* other) {
  std::swap(is_error_, other->is_error_);
  std::swap(refers_to_, other->refers_to_);
  std::swap(description_, other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StatusMessage_descriptor_;
  metadata.reflection = StatusMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatusMessage

// optional bool is_error = 1;
void StatusMessage::clear_is_error() {
  is_error_ = false;
}
bool StatusMessage::is_error() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.StatusMessage.is_error)
  return is_error_;
}
void StatusMessage::set_is_error(bool value) {
  
  is_error_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.StatusMessage.is_error)
}

// optional .google.devtools.clouddebugger.v2.StatusMessage.Reference refers_to = 2;
void StatusMessage::clear_refers_to() {
  refers_to_ = 0;
}
::google::devtools::clouddebugger::v2::StatusMessage_Reference StatusMessage::refers_to() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.StatusMessage.refers_to)
  return static_cast< ::google::devtools::clouddebugger::v2::StatusMessage_Reference >(refers_to_);
}
void StatusMessage::set_refers_to(::google::devtools::clouddebugger::v2::StatusMessage_Reference value) {
  
  refers_to_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.StatusMessage.refers_to)
}

// optional .google.devtools.clouddebugger.v2.FormatMessage description = 3;
bool StatusMessage::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
void StatusMessage::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) delete description_;
  description_ = NULL;
}
const ::google::devtools::clouddebugger::v2::FormatMessage& StatusMessage::description() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.StatusMessage.description)
  return description_ != NULL ? *description_
                         : *::google::devtools::clouddebugger::v2::FormatMessage::internal_default_instance();
}
::google::devtools::clouddebugger::v2::FormatMessage* StatusMessage::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::google::devtools::clouddebugger::v2::FormatMessage;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.StatusMessage.description)
  return description_;
}
::google::devtools::clouddebugger::v2::FormatMessage* StatusMessage::release_description() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.StatusMessage.description)
  
  ::google::devtools::clouddebugger::v2::FormatMessage* temp = description_;
  description_ = NULL;
  return temp;
}
void StatusMessage::set_allocated_description(::google::devtools::clouddebugger::v2::FormatMessage* description) {
  delete description_;
  description_ = description;
  if (description) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.StatusMessage.description)
}

inline const StatusMessage* StatusMessage::internal_default_instance() {
  return &StatusMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceLocation::kPathFieldNumber;
const int SourceLocation::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceLocation::SourceLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.SourceLocation)
}

void SourceLocation::InitAsDefaultInstance() {
}

SourceLocation::SourceLocation(const SourceLocation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.SourceLocation)
}

void SourceLocation::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_ = 0;
  _cached_size_ = 0;
}

SourceLocation::~SourceLocation() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.SourceLocation)
  SharedDtor();
}

void SourceLocation::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourceLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SourceLocation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SourceLocation_descriptor_;
}

const SourceLocation& SourceLocation::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SourceLocation> SourceLocation_default_instance_;

SourceLocation* SourceLocation::New(::google::protobuf::Arena* arena) const {
  SourceLocation* n = new SourceLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SourceLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.SourceLocation)
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_ = 0;
}

bool SourceLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.SourceLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.SourceLocation.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_line;
        break;
      }

      // optional int32 line = 2;
      case 2: {
        if (tag == 16) {
         parse_line:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.SourceLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.SourceLocation)
  return false;
#undef DO_
}

void SourceLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.SourceLocation)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.SourceLocation.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional int32 line = 2;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->line(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.SourceLocation)
}

::google::protobuf::uint8* SourceLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.SourceLocation)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.SourceLocation.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional int32 line = 2;
  if (this->line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->line(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.SourceLocation)
  return target;
}

size_t SourceLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.SourceLocation)
  size_t total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // optional int32 line = 2;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SourceLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.SourceLocation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SourceLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.SourceLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.SourceLocation)
    UnsafeMergeFrom(*source);
  }
}

void SourceLocation::MergeFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.SourceLocation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SourceLocation::UnsafeMergeFrom(const SourceLocation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
}

void SourceLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.SourceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceLocation::CopyFrom(const SourceLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.SourceLocation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SourceLocation::IsInitialized() const {

  return true;
}

void SourceLocation::Swap(SourceLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceLocation::InternalSwap(SourceLocation* other) {
  path_.Swap(&other->path_);
  std::swap(line_, other->line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SourceLocation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SourceLocation_descriptor_;
  metadata.reflection = SourceLocation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SourceLocation

// optional string path = 1;
void SourceLocation::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SourceLocation::path() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.SourceLocation.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.SourceLocation.path)
}
void SourceLocation::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.SourceLocation.path)
}
void SourceLocation::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.SourceLocation.path)
}
::std::string* SourceLocation::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.SourceLocation.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SourceLocation::release_path() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.SourceLocation.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SourceLocation::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.SourceLocation.path)
}

// optional int32 line = 2;
void SourceLocation::clear_line() {
  line_ = 0;
}
::google::protobuf::int32 SourceLocation::line() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.SourceLocation.line)
  return line_;
}
void SourceLocation::set_line(::google::protobuf::int32 value) {
  
  line_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.SourceLocation.line)
}

inline const SourceLocation* SourceLocation::internal_default_instance() {
  return &SourceLocation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable::kNameFieldNumber;
const int Variable::kValueFieldNumber;
const int Variable::kTypeFieldNumber;
const int Variable::kMembersFieldNumber;
const int Variable::kVarTableIndexFieldNumber;
const int Variable::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable::Variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.Variable)
}

void Variable::InitAsDefaultInstance() {
  var_table_index_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  status_ = const_cast< ::google::devtools::clouddebugger::v2::StatusMessage*>(
      ::google::devtools::clouddebugger::v2::StatusMessage::internal_default_instance());
}

Variable::Variable(const Variable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.Variable)
}

void Variable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  var_table_index_ = NULL;
  status_ = NULL;
  _cached_size_ = 0;
}

Variable::~Variable() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.Variable)
  SharedDtor();
}

void Variable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Variable_default_instance_.get()) {
    delete var_table_index_;
    delete status_;
  }
}

void Variable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Variable_descriptor_;
}

const Variable& Variable::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Variable> Variable_default_instance_;

Variable* Variable::New(::google::protobuf::Arena* arena) const {
  Variable* n = new Variable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.Variable)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && var_table_index_ != NULL) delete var_table_index_;
  var_table_index_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
  members_.Clear();
}

bool Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.Variable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Variable.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Variable.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_members;
        break;
      }

      // repeated .google.devtools.clouddebugger.v2.Variable members = 3;
      case 3: {
        if (tag == 26) {
         parse_members:
          DO_(input->IncrementRecursionDepth());
         parse_loop_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_var_table_index;
        break;
      }

      // optional .google.protobuf.Int32Value var_table_index = 4;
      case 4: {
        if (tag == 34) {
         parse_var_table_index:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_var_table_index()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_status;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.StatusMessage status = 5;
      case 5: {
        if (tag == 42) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_type;
        break;
      }

      // optional string type = 6;
      case 6: {
        if (tag == 50) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Variable.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.Variable)
  return false;
#undef DO_
}

void Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.Variable)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Variable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Variable.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable members = 3;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->members(i), output);
  }

  // optional .google.protobuf.Int32Value var_table_index = 4;
  if (this->has_var_table_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->var_table_index_, output);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 5;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->status_, output);
  }

  // optional string type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Variable.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.Variable)
}

::google::protobuf::uint8* Variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.Variable)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Variable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Variable.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable members = 3;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->members(i), false, target);
  }

  // optional .google.protobuf.Int32Value var_table_index = 4;
  if (this->has_var_table_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->var_table_index_, false, target);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 5;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->status_, false, target);
  }

  // optional string type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Variable.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.Variable)
  return target;
}

size_t Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.Variable)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional string type = 6;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional .google.protobuf.Int32Value var_table_index = 4;
  if (this->has_var_table_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->var_table_index_);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 5;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable members = 3;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.Variable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.Variable)
    UnsafeMergeFrom(*source);
  }
}

void Variable::MergeFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.Variable)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Variable::UnsafeMergeFrom(const Variable& from) {
  GOOGLE_DCHECK(&from != this);
  members_.MergeFrom(from.members_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_var_table_index()) {
    mutable_var_table_index()->::google::protobuf::Int32Value::MergeFrom(from.var_table_index());
  }
  if (from.has_status()) {
    mutable_status()->::google::devtools::clouddebugger::v2::StatusMessage::MergeFrom(from.status());
  }
}

void Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable::CopyFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.Variable)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Variable::IsInitialized() const {

  return true;
}

void Variable::Swap(Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable::InternalSwap(Variable* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  type_.Swap(&other->type_);
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(var_table_index_, other->var_table_index_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Variable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Variable_descriptor_;
  metadata.reflection = Variable_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Variable

// optional string name = 1;
void Variable::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Variable::name() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Variable.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Variable.name)
}
void Variable::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Variable.name)
}
void Variable::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Variable.name)
}
::std::string* Variable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Variable.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Variable::release_name() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Variable.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Variable.name)
}

// optional string value = 2;
void Variable::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Variable::value() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Variable.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Variable.value)
}
void Variable::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Variable.value)
}
void Variable::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Variable.value)
}
::std::string* Variable::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Variable.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Variable::release_value() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Variable.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Variable.value)
}

// optional string type = 6;
void Variable::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Variable::type() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Variable.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Variable.type)
}
void Variable::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Variable.type)
}
void Variable::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Variable.type)
}
::std::string* Variable::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Variable.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Variable::release_type() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Variable.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Variable::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Variable.type)
}

// repeated .google.devtools.clouddebugger.v2.Variable members = 3;
int Variable::members_size() const {
  return members_.size();
}
void Variable::clear_members() {
  members_.Clear();
}
const ::google::devtools::clouddebugger::v2::Variable& Variable::members(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Variable.members)
  return members_.Get(index);
}
::google::devtools::clouddebugger::v2::Variable* Variable::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Variable.members)
  return members_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Variable* Variable::add_members() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.Variable.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >*
Variable::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.Variable.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >&
Variable::members() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.Variable.members)
  return members_;
}

// optional .google.protobuf.Int32Value var_table_index = 4;
bool Variable::has_var_table_index() const {
  return this != internal_default_instance() && var_table_index_ != NULL;
}
void Variable::clear_var_table_index() {
  if (GetArenaNoVirtual() == NULL && var_table_index_ != NULL) delete var_table_index_;
  var_table_index_ = NULL;
}
const ::google::protobuf::Int32Value& Variable::var_table_index() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Variable.var_table_index)
  return var_table_index_ != NULL ? *var_table_index_
                         : *::google::protobuf::Int32Value::internal_default_instance();
}
::google::protobuf::Int32Value* Variable::mutable_var_table_index() {
  
  if (var_table_index_ == NULL) {
    var_table_index_ = new ::google::protobuf::Int32Value;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Variable.var_table_index)
  return var_table_index_;
}
::google::protobuf::Int32Value* Variable::release_var_table_index() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Variable.var_table_index)
  
  ::google::protobuf::Int32Value* temp = var_table_index_;
  var_table_index_ = NULL;
  return temp;
}
void Variable::set_allocated_var_table_index(::google::protobuf::Int32Value* var_table_index) {
  delete var_table_index_;
  if (var_table_index != NULL && var_table_index->GetArena() != NULL) {
    ::google::protobuf::Int32Value* new_var_table_index = new ::google::protobuf::Int32Value;
    new_var_table_index->CopyFrom(*var_table_index);
    var_table_index = new_var_table_index;
  }
  var_table_index_ = var_table_index;
  if (var_table_index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Variable.var_table_index)
}

// optional .google.devtools.clouddebugger.v2.StatusMessage status = 5;
bool Variable::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
void Variable::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::google::devtools::clouddebugger::v2::StatusMessage& Variable::status() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Variable.status)
  return status_ != NULL ? *status_
                         : *::google::devtools::clouddebugger::v2::StatusMessage::internal_default_instance();
}
::google::devtools::clouddebugger::v2::StatusMessage* Variable::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::devtools::clouddebugger::v2::StatusMessage;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Variable.status)
  return status_;
}
::google::devtools::clouddebugger::v2::StatusMessage* Variable::release_status() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Variable.status)
  
  ::google::devtools::clouddebugger::v2::StatusMessage* temp = status_;
  status_ = NULL;
  return temp;
}
void Variable::set_allocated_status(::google::devtools::clouddebugger::v2::StatusMessage* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Variable.status)
}

inline const Variable* Variable::internal_default_instance() {
  return &Variable_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StackFrame::kFunctionFieldNumber;
const int StackFrame::kLocationFieldNumber;
const int StackFrame::kArgumentsFieldNumber;
const int StackFrame::kLocalsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StackFrame::StackFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.StackFrame)
}

void StackFrame::InitAsDefaultInstance() {
  location_ = const_cast< ::google::devtools::clouddebugger::v2::SourceLocation*>(
      ::google::devtools::clouddebugger::v2::SourceLocation::internal_default_instance());
}

StackFrame::StackFrame(const StackFrame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.StackFrame)
}

void StackFrame::SharedCtor() {
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = NULL;
  _cached_size_ = 0;
}

StackFrame::~StackFrame() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.StackFrame)
  SharedDtor();
}

void StackFrame::SharedDtor() {
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &StackFrame_default_instance_.get()) {
    delete location_;
  }
}

void StackFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StackFrame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StackFrame_descriptor_;
}

const StackFrame& StackFrame::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StackFrame> StackFrame_default_instance_;

StackFrame* StackFrame::New(::google::protobuf::Arena* arena) const {
  StackFrame* n = new StackFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StackFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.StackFrame)
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
  arguments_.Clear();
  locals_.Clear();
}

bool StackFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.StackFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string function = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), this->function().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.StackFrame.function"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
      case 2: {
        if (tag == 18) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_arguments;
        break;
      }

      // repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;
      case 3: {
        if (tag == 26) {
         parse_arguments:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arguments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_arguments;
        if (input->ExpectTag(34)) goto parse_loop_locals;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.devtools.clouddebugger.v2.Variable locals = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_locals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_locals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_locals;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.StackFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.StackFrame)
  return false;
#undef DO_
}

void StackFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.StackFrame)
  // optional string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), this->function().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.StackFrame.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->function(), output);
  }

  // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->location_, output);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->arguments(i), output);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable locals = 4;
  for (unsigned int i = 0, n = this->locals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->locals(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.StackFrame)
}

::google::protobuf::uint8* StackFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.StackFrame)
  // optional string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), this->function().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.StackFrame.function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->function(), target);
  }

  // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->location_, false, target);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;
  for (unsigned int i = 0, n = this->arguments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->arguments(i), false, target);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable locals = 4;
  for (unsigned int i = 0, n = this->locals_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->locals(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.StackFrame)
  return target;
}

size_t StackFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.StackFrame)
  size_t total_size = 0;

  // optional string function = 1;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->location_);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;
  {
    unsigned int count = this->arguments_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arguments(i));
    }
  }

  // repeated .google.devtools.clouddebugger.v2.Variable locals = 4;
  {
    unsigned int count = this->locals_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->locals(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StackFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.StackFrame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StackFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StackFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.StackFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.StackFrame)
    UnsafeMergeFrom(*source);
  }
}

void StackFrame::MergeFrom(const StackFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.StackFrame)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StackFrame::UnsafeMergeFrom(const StackFrame& from) {
  GOOGLE_DCHECK(&from != this);
  arguments_.MergeFrom(from.arguments_);
  locals_.MergeFrom(from.locals_);
  if (from.function().size() > 0) {

    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  if (from.has_location()) {
    mutable_location()->::google::devtools::clouddebugger::v2::SourceLocation::MergeFrom(from.location());
  }
}

void StackFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.StackFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StackFrame::CopyFrom(const StackFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.StackFrame)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StackFrame::IsInitialized() const {

  return true;
}

void StackFrame::Swap(StackFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StackFrame::InternalSwap(StackFrame* other) {
  function_.Swap(&other->function_);
  std::swap(location_, other->location_);
  arguments_.UnsafeArenaSwap(&other->arguments_);
  locals_.UnsafeArenaSwap(&other->locals_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StackFrame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StackFrame_descriptor_;
  metadata.reflection = StackFrame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StackFrame

// optional string function = 1;
void StackFrame::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StackFrame::function() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.StackFrame.function)
  return function_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StackFrame::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.StackFrame.function)
}
void StackFrame::set_function(const char* value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.StackFrame.function)
}
void StackFrame::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.StackFrame.function)
}
::std::string* StackFrame::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.StackFrame.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StackFrame::release_function() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.StackFrame.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StackFrame::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.StackFrame.function)
}

// optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
bool StackFrame::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void StackFrame::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::google::devtools::clouddebugger::v2::SourceLocation& StackFrame::location() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.StackFrame.location)
  return location_ != NULL ? *location_
                         : *::google::devtools::clouddebugger::v2::SourceLocation::internal_default_instance();
}
::google::devtools::clouddebugger::v2::SourceLocation* StackFrame::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::google::devtools::clouddebugger::v2::SourceLocation;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.StackFrame.location)
  return location_;
}
::google::devtools::clouddebugger::v2::SourceLocation* StackFrame::release_location() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.StackFrame.location)
  
  ::google::devtools::clouddebugger::v2::SourceLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void StackFrame::set_allocated_location(::google::devtools::clouddebugger::v2::SourceLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.StackFrame.location)
}

// repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;
int StackFrame::arguments_size() const {
  return arguments_.size();
}
void StackFrame::clear_arguments() {
  arguments_.Clear();
}
const ::google::devtools::clouddebugger::v2::Variable& StackFrame::arguments(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.StackFrame.arguments)
  return arguments_.Get(index);
}
::google::devtools::clouddebugger::v2::Variable* StackFrame::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.StackFrame.arguments)
  return arguments_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Variable* StackFrame::add_arguments() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.StackFrame.arguments)
  return arguments_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >*
StackFrame::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.StackFrame.arguments)
  return &arguments_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >&
StackFrame::arguments() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.StackFrame.arguments)
  return arguments_;
}

// repeated .google.devtools.clouddebugger.v2.Variable locals = 4;
int StackFrame::locals_size() const {
  return locals_.size();
}
void StackFrame::clear_locals() {
  locals_.Clear();
}
const ::google::devtools::clouddebugger::v2::Variable& StackFrame::locals(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.StackFrame.locals)
  return locals_.Get(index);
}
::google::devtools::clouddebugger::v2::Variable* StackFrame::mutable_locals(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.StackFrame.locals)
  return locals_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Variable* StackFrame::add_locals() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.StackFrame.locals)
  return locals_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >*
StackFrame::mutable_locals() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.StackFrame.locals)
  return &locals_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >&
StackFrame::locals() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.StackFrame.locals)
  return locals_;
}

inline const StackFrame* StackFrame::internal_default_instance() {
  return &StackFrame_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Breakpoint_Action_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Breakpoint_Action_descriptor_;
}
bool Breakpoint_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Breakpoint_Action Breakpoint::CAPTURE;
const Breakpoint_Action Breakpoint::LOG;
const Breakpoint_Action Breakpoint::Action_MIN;
const Breakpoint_Action Breakpoint::Action_MAX;
const int Breakpoint::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Breakpoint_LogLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Breakpoint_LogLevel_descriptor_;
}
bool Breakpoint_LogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Breakpoint_LogLevel Breakpoint::INFO;
const Breakpoint_LogLevel Breakpoint::WARNING;
const Breakpoint_LogLevel Breakpoint::ERROR;
const Breakpoint_LogLevel Breakpoint::LogLevel_MIN;
const Breakpoint_LogLevel Breakpoint::LogLevel_MAX;
const int Breakpoint::LogLevel_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Breakpoint::kIdFieldNumber;
const int Breakpoint::kActionFieldNumber;
const int Breakpoint::kLocationFieldNumber;
const int Breakpoint::kConditionFieldNumber;
const int Breakpoint::kExpressionsFieldNumber;
const int Breakpoint::kLogMessageFormatFieldNumber;
const int Breakpoint::kLogLevelFieldNumber;
const int Breakpoint::kIsFinalStateFieldNumber;
const int Breakpoint::kCreateTimeFieldNumber;
const int Breakpoint::kFinalTimeFieldNumber;
const int Breakpoint::kUserEmailFieldNumber;
const int Breakpoint::kStatusFieldNumber;
const int Breakpoint::kStackFramesFieldNumber;
const int Breakpoint::kEvaluatedExpressionsFieldNumber;
const int Breakpoint::kVariableTableFieldNumber;
const int Breakpoint::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Breakpoint::Breakpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.Breakpoint)
}

void Breakpoint::InitAsDefaultInstance() {
  location_ = const_cast< ::google::devtools::clouddebugger::v2::SourceLocation*>(
      ::google::devtools::clouddebugger::v2::SourceLocation::internal_default_instance());
  create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  final_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  status_ = const_cast< ::google::devtools::clouddebugger::v2::StatusMessage*>(
      ::google::devtools::clouddebugger::v2::StatusMessage::internal_default_instance());
}

Breakpoint::Breakpoint(const Breakpoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.Breakpoint)
}

void Breakpoint::SharedCtor() {
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &::google::devtools::clouddebugger::v2::Breakpoint_LabelsEntry_descriptor_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  condition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_message_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = NULL;
  create_time_ = NULL;
  final_time_ = NULL;
  status_ = NULL;
  ::memset(&action_, 0, reinterpret_cast<char*>(&is_final_state_) -
    reinterpret_cast<char*>(&action_) + sizeof(is_final_state_));
  _cached_size_ = 0;
}

Breakpoint::~Breakpoint() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.Breakpoint)
  SharedDtor();
}

void Breakpoint::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  condition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_message_format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Breakpoint_default_instance_.get()) {
    delete location_;
    delete create_time_;
    delete final_time_;
    delete status_;
  }
}

void Breakpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Breakpoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Breakpoint_descriptor_;
}

const Breakpoint& Breakpoint::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Breakpoint> Breakpoint_default_instance_;

Breakpoint* Breakpoint::New(::google::protobuf::Arena* arena) const {
  Breakpoint* n = new Breakpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Breakpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.Breakpoint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Breakpoint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Breakpoint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(action_, is_final_state_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
  condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_message_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && final_time_ != NULL) delete final_time_;
  final_time_ = NULL;
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  expressions_.Clear();
  stack_frames_.Clear();
  evaluated_expressions_.Clear();
  variable_table_.Clear();
  labels_.Clear();
}

bool Breakpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.Breakpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Breakpoint.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
      case 2: {
        if (tag == 18) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_condition;
        break;
      }

      // optional string condition = 3;
      case 3: {
        if (tag == 26) {
         parse_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_condition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->condition().data(), this->condition().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Breakpoint.condition"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_expressions;
        break;
      }

      // repeated string expressions = 4;
      case 4: {
        if (tag == 34) {
         parse_expressions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_expressions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expressions(this->expressions_size() - 1).data(),
            this->expressions(this->expressions_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Breakpoint.expressions"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_expressions;
        if (input->ExpectTag(40)) goto parse_is_final_state;
        break;
      }

      // optional bool is_final_state = 5;
      case 5: {
        if (tag == 40) {
         parse_is_final_state:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_final_state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_stack_frames;
        break;
      }

      // repeated .google.devtools.clouddebugger.v2.StackFrame stack_frames = 7;
      case 7: {
        if (tag == 58) {
         parse_stack_frames:
          DO_(input->IncrementRecursionDepth());
         parse_loop_stack_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stack_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_stack_frames;
        if (input->ExpectTag(66)) goto parse_loop_evaluated_expressions;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.devtools.clouddebugger.v2.Variable evaluated_expressions = 8;
      case 8: {
        if (tag == 66) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_evaluated_expressions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_evaluated_expressions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_evaluated_expressions;
        if (input->ExpectTag(74)) goto parse_loop_variable_table;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.devtools.clouddebugger.v2.Variable variable_table = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_variable_table:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_variable_table()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_variable_table;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(82)) goto parse_status;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.StatusMessage status = 10;
      case 10: {
        if (tag == 82) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_create_time;
        break;
      }

      // optional .google.protobuf.Timestamp create_time = 11;
      case 11: {
        if (tag == 90) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_final_time;
        break;
      }

      // optional .google.protobuf.Timestamp final_time = 12;
      case 12: {
        if (tag == 98) {
         parse_final_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_final_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_action;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.Breakpoint.Action action = 13;
      case 13: {
        if (tag == 104) {
         parse_action:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::google::devtools::clouddebugger::v2::Breakpoint_Action >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_log_message_format;
        break;
      }

      // optional string log_message_format = 14;
      case 14: {
        if (tag == 114) {
         parse_log_message_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_message_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_message_format().data(), this->log_message_format().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Breakpoint.log_message_format"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_log_level;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.Breakpoint.LogLevel log_level = 15;
      case 15: {
        if (tag == 120) {
         parse_log_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_level(static_cast< ::google::devtools::clouddebugger::v2::Breakpoint_LogLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_user_email;
        break;
      }

      // optional string user_email = 16;
      case 16: {
        if (tag == 130) {
         parse_user_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_email().data(), this->user_email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Breakpoint.user_email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_labels;
        break;
      }

      // map<string, string> labels = 17;
      case 17: {
        if (tag == 138) {
         parse_labels:
          DO_(input->IncrementRecursionDepth());
         parse_loop_labels:
          Breakpoint_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Breakpoint.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Breakpoint.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_loop_labels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.Breakpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.Breakpoint)
  return false;
#undef DO_
}

void Breakpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.Breakpoint)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->location_, output);
  }

  // optional string condition = 3;
  if (this->condition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->condition().data(), this->condition().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.condition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->condition(), output);
  }

  // repeated string expressions = 4;
  for (int i = 0; i < this->expressions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expressions(i).data(), this->expressions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.expressions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->expressions(i), output);
  }

  // optional bool is_final_state = 5;
  if (this->is_final_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_final_state(), output);
  }

  // repeated .google.devtools.clouddebugger.v2.StackFrame stack_frames = 7;
  for (unsigned int i = 0, n = this->stack_frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->stack_frames(i), output);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable evaluated_expressions = 8;
  for (unsigned int i = 0, n = this->evaluated_expressions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->evaluated_expressions(i), output);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable variable_table = 9;
  for (unsigned int i = 0, n = this->variable_table_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->variable_table(i), output);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 10;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->status_, output);
  }

  // optional .google.protobuf.Timestamp create_time = 11;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->create_time_, output);
  }

  // optional .google.protobuf.Timestamp final_time = 12;
  if (this->has_final_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->final_time_, output);
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint.Action action = 13;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->action(), output);
  }

  // optional string log_message_format = 14;
  if (this->log_message_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_message_format().data(), this->log_message_format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.log_message_format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->log_message_format(), output);
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint.LogLevel log_level = 15;
  if (this->log_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->log_level(), output);
  }

  // optional string user_email = 16;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), this->user_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.user_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->user_email(), output);
  }

  // map<string, string> labels = 17;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Breakpoint.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Breakpoint.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Breakpoint_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            17, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Breakpoint_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            17, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.Breakpoint)
}

::google::protobuf::uint8* Breakpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.Breakpoint)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->location_, false, target);
  }

  // optional string condition = 3;
  if (this->condition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->condition().data(), this->condition().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.condition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->condition(), target);
  }

  // repeated string expressions = 4;
  for (int i = 0; i < this->expressions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expressions(i).data(), this->expressions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.expressions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->expressions(i), target);
  }

  // optional bool is_final_state = 5;
  if (this->is_final_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_final_state(), target);
  }

  // repeated .google.devtools.clouddebugger.v2.StackFrame stack_frames = 7;
  for (unsigned int i = 0, n = this->stack_frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->stack_frames(i), false, target);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable evaluated_expressions = 8;
  for (unsigned int i = 0, n = this->evaluated_expressions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->evaluated_expressions(i), false, target);
  }

  // repeated .google.devtools.clouddebugger.v2.Variable variable_table = 9;
  for (unsigned int i = 0, n = this->variable_table_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->variable_table(i), false, target);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 10;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->status_, false, target);
  }

  // optional .google.protobuf.Timestamp create_time = 11;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->create_time_, false, target);
  }

  // optional .google.protobuf.Timestamp final_time = 12;
  if (this->has_final_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->final_time_, false, target);
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint.Action action = 13;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->action(), target);
  }

  // optional string log_message_format = 14;
  if (this->log_message_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_message_format().data(), this->log_message_format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.log_message_format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->log_message_format(), target);
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint.LogLevel log_level = 15;
  if (this->log_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->log_level(), target);
  }

  // optional string user_email = 16;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), this->user_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Breakpoint.user_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->user_email(), target);
  }

  // map<string, string> labels = 17;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Breakpoint.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Breakpoint.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Breakpoint_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       17, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Breakpoint_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       17, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.Breakpoint)
  return target;
}

size_t Breakpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.Breakpoint)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint.Action action = 13;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->location_);
  }

  // optional string condition = 3;
  if (this->condition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->condition());
  }

  // optional string log_message_format = 14;
  if (this->log_message_format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_message_format());
  }

  // optional .google.devtools.clouddebugger.v2.Breakpoint.LogLevel log_level = 15;
  if (this->log_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_level());
  }

  // optional bool is_final_state = 5;
  if (this->is_final_state() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.protobuf.Timestamp create_time = 11;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->create_time_);
  }

  // optional .google.protobuf.Timestamp final_time = 12;
  if (this->has_final_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->final_time_);
  }

  // optional string user_email = 16;
  if (this->user_email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_email());
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 10;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated string expressions = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->expressions_size());
  for (int i = 0; i < this->expressions_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->expressions(i));
  }

  // repeated .google.devtools.clouddebugger.v2.StackFrame stack_frames = 7;
  {
    unsigned int count = this->stack_frames_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stack_frames(i));
    }
  }

  // repeated .google.devtools.clouddebugger.v2.Variable evaluated_expressions = 8;
  {
    unsigned int count = this->evaluated_expressions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->evaluated_expressions(i));
    }
  }

  // repeated .google.devtools.clouddebugger.v2.Variable variable_table = 9;
  {
    unsigned int count = this->variable_table_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variable_table(i));
    }
  }

  // map<string, string> labels = 17;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<Breakpoint_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Breakpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.Breakpoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Breakpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Breakpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.Breakpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.Breakpoint)
    UnsafeMergeFrom(*source);
  }
}

void Breakpoint::MergeFrom(const Breakpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.Breakpoint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Breakpoint::UnsafeMergeFrom(const Breakpoint& from) {
  GOOGLE_DCHECK(&from != this);
  expressions_.UnsafeMergeFrom(from.expressions_);
  stack_frames_.MergeFrom(from.stack_frames_);
  evaluated_expressions_.MergeFrom(from.evaluated_expressions_);
  variable_table_.MergeFrom(from.variable_table_);
  labels_.MergeFrom(from.labels_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.has_location()) {
    mutable_location()->::google::devtools::clouddebugger::v2::SourceLocation::MergeFrom(from.location());
  }
  if (from.condition().size() > 0) {

    condition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.condition_);
  }
  if (from.log_message_format().size() > 0) {

    log_message_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_message_format_);
  }
  if (from.log_level() != 0) {
    set_log_level(from.log_level());
  }
  if (from.is_final_state() != 0) {
    set_is_final_state(from.is_final_state());
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_final_time()) {
    mutable_final_time()->::google::protobuf::Timestamp::MergeFrom(from.final_time());
  }
  if (from.user_email().size() > 0) {

    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  if (from.has_status()) {
    mutable_status()->::google::devtools::clouddebugger::v2::StatusMessage::MergeFrom(from.status());
  }
}

void Breakpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.Breakpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Breakpoint::CopyFrom(const Breakpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.Breakpoint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Breakpoint::IsInitialized() const {

  return true;
}

void Breakpoint::Swap(Breakpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Breakpoint::InternalSwap(Breakpoint* other) {
  id_.Swap(&other->id_);
  std::swap(action_, other->action_);
  std::swap(location_, other->location_);
  condition_.Swap(&other->condition_);
  expressions_.UnsafeArenaSwap(&other->expressions_);
  log_message_format_.Swap(&other->log_message_format_);
  std::swap(log_level_, other->log_level_);
  std::swap(is_final_state_, other->is_final_state_);
  std::swap(create_time_, other->create_time_);
  std::swap(final_time_, other->final_time_);
  user_email_.Swap(&other->user_email_);
  std::swap(status_, other->status_);
  stack_frames_.UnsafeArenaSwap(&other->stack_frames_);
  evaluated_expressions_.UnsafeArenaSwap(&other->evaluated_expressions_);
  variable_table_.UnsafeArenaSwap(&other->variable_table_);
  labels_.Swap(&other->labels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Breakpoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Breakpoint_descriptor_;
  metadata.reflection = Breakpoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Breakpoint

// optional string id = 1;
void Breakpoint::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Breakpoint::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.id)
}
void Breakpoint::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Breakpoint.id)
}
void Breakpoint::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Breakpoint.id)
}
::std::string* Breakpoint::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Breakpoint::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.id)
}

// optional .google.devtools.clouddebugger.v2.Breakpoint.Action action = 13;
void Breakpoint::clear_action() {
  action_ = 0;
}
::google::devtools::clouddebugger::v2::Breakpoint_Action Breakpoint::action() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.action)
  return static_cast< ::google::devtools::clouddebugger::v2::Breakpoint_Action >(action_);
}
void Breakpoint::set_action(::google::devtools::clouddebugger::v2::Breakpoint_Action value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.action)
}

// optional .google.devtools.clouddebugger.v2.SourceLocation location = 2;
bool Breakpoint::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void Breakpoint::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::google::devtools::clouddebugger::v2::SourceLocation& Breakpoint::location() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.location)
  return location_ != NULL ? *location_
                         : *::google::devtools::clouddebugger::v2::SourceLocation::internal_default_instance();
}
::google::devtools::clouddebugger::v2::SourceLocation* Breakpoint::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::google::devtools::clouddebugger::v2::SourceLocation;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.location)
  return location_;
}
::google::devtools::clouddebugger::v2::SourceLocation* Breakpoint::release_location() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.location)
  
  ::google::devtools::clouddebugger::v2::SourceLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void Breakpoint::set_allocated_location(::google::devtools::clouddebugger::v2::SourceLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.location)
}

// optional string condition = 3;
void Breakpoint::clear_condition() {
  condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Breakpoint::condition() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.condition)
  return condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_condition(const ::std::string& value) {
  
  condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.condition)
}
void Breakpoint::set_condition(const char* value) {
  
  condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Breakpoint.condition)
}
void Breakpoint::set_condition(const char* value, size_t size) {
  
  condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Breakpoint.condition)
}
::std::string* Breakpoint::mutable_condition() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.condition)
  return condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Breakpoint::release_condition() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.condition)
  
  return condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_allocated_condition(::std::string* condition) {
  if (condition != NULL) {
    
  } else {
    
  }
  condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), condition);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.condition)
}

// repeated string expressions = 4;
int Breakpoint::expressions_size() const {
  return expressions_.size();
}
void Breakpoint::clear_expressions() {
  expressions_.Clear();
}
const ::std::string& Breakpoint::expressions(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.expressions)
  return expressions_.Get(index);
}
::std::string* Breakpoint::mutable_expressions(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.expressions)
  return expressions_.Mutable(index);
}
void Breakpoint::set_expressions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.expressions)
  expressions_.Mutable(index)->assign(value);
}
void Breakpoint::set_expressions(int index, const char* value) {
  expressions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Breakpoint.expressions)
}
void Breakpoint::set_expressions(int index, const char* value, size_t size) {
  expressions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Breakpoint.expressions)
}
::std::string* Breakpoint::add_expressions() {
  // @@protoc_insertion_point(field_add_mutable:google.devtools.clouddebugger.v2.Breakpoint.expressions)
  return expressions_.Add();
}
void Breakpoint::add_expressions(const ::std::string& value) {
  expressions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.Breakpoint.expressions)
}
void Breakpoint::add_expressions(const char* value) {
  expressions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.devtools.clouddebugger.v2.Breakpoint.expressions)
}
void Breakpoint::add_expressions(const char* value, size_t size) {
  expressions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.devtools.clouddebugger.v2.Breakpoint.expressions)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Breakpoint::expressions() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.Breakpoint.expressions)
  return expressions_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Breakpoint::mutable_expressions() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.Breakpoint.expressions)
  return &expressions_;
}

// optional string log_message_format = 14;
void Breakpoint::clear_log_message_format() {
  log_message_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Breakpoint::log_message_format() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.log_message_format)
  return log_message_format_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_log_message_format(const ::std::string& value) {
  
  log_message_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.log_message_format)
}
void Breakpoint::set_log_message_format(const char* value) {
  
  log_message_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Breakpoint.log_message_format)
}
void Breakpoint::set_log_message_format(const char* value, size_t size) {
  
  log_message_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Breakpoint.log_message_format)
}
::std::string* Breakpoint::mutable_log_message_format() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.log_message_format)
  return log_message_format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Breakpoint::release_log_message_format() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.log_message_format)
  
  return log_message_format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_allocated_log_message_format(::std::string* log_message_format) {
  if (log_message_format != NULL) {
    
  } else {
    
  }
  log_message_format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_message_format);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.log_message_format)
}

// optional .google.devtools.clouddebugger.v2.Breakpoint.LogLevel log_level = 15;
void Breakpoint::clear_log_level() {
  log_level_ = 0;
}
::google::devtools::clouddebugger::v2::Breakpoint_LogLevel Breakpoint::log_level() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.log_level)
  return static_cast< ::google::devtools::clouddebugger::v2::Breakpoint_LogLevel >(log_level_);
}
void Breakpoint::set_log_level(::google::devtools::clouddebugger::v2::Breakpoint_LogLevel value) {
  
  log_level_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.log_level)
}

// optional bool is_final_state = 5;
void Breakpoint::clear_is_final_state() {
  is_final_state_ = false;
}
bool Breakpoint::is_final_state() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.is_final_state)
  return is_final_state_;
}
void Breakpoint::set_is_final_state(bool value) {
  
  is_final_state_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.is_final_state)
}

// optional .google.protobuf.Timestamp create_time = 11;
bool Breakpoint::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
void Breakpoint::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
const ::google::protobuf::Timestamp& Breakpoint::create_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Breakpoint::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.create_time)
  return create_time_;
}
::google::protobuf::Timestamp* Breakpoint::release_create_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
void Breakpoint::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  delete create_time_;
  if (create_time != NULL && create_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_create_time = new ::google::protobuf::Timestamp;
    new_create_time->CopyFrom(*create_time);
    create_time = new_create_time;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.create_time)
}

// optional .google.protobuf.Timestamp final_time = 12;
bool Breakpoint::has_final_time() const {
  return this != internal_default_instance() && final_time_ != NULL;
}
void Breakpoint::clear_final_time() {
  if (GetArenaNoVirtual() == NULL && final_time_ != NULL) delete final_time_;
  final_time_ = NULL;
}
const ::google::protobuf::Timestamp& Breakpoint::final_time() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.final_time)
  return final_time_ != NULL ? *final_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Breakpoint::mutable_final_time() {
  
  if (final_time_ == NULL) {
    final_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.final_time)
  return final_time_;
}
::google::protobuf::Timestamp* Breakpoint::release_final_time() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.final_time)
  
  ::google::protobuf::Timestamp* temp = final_time_;
  final_time_ = NULL;
  return temp;
}
void Breakpoint::set_allocated_final_time(::google::protobuf::Timestamp* final_time) {
  delete final_time_;
  if (final_time != NULL && final_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_final_time = new ::google::protobuf::Timestamp;
    new_final_time->CopyFrom(*final_time);
    final_time = new_final_time;
  }
  final_time_ = final_time;
  if (final_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.final_time)
}

// optional string user_email = 16;
void Breakpoint::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Breakpoint::user_email() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.user_email)
  return user_email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Breakpoint.user_email)
}
void Breakpoint::set_user_email(const char* value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Breakpoint.user_email)
}
void Breakpoint::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Breakpoint.user_email)
}
::std::string* Breakpoint::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Breakpoint::release_user_email() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Breakpoint::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.user_email)
}

// optional .google.devtools.clouddebugger.v2.StatusMessage status = 10;
bool Breakpoint::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
void Breakpoint::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::google::devtools::clouddebugger::v2::StatusMessage& Breakpoint::status() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.status)
  return status_ != NULL ? *status_
                         : *::google::devtools::clouddebugger::v2::StatusMessage::internal_default_instance();
}
::google::devtools::clouddebugger::v2::StatusMessage* Breakpoint::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::devtools::clouddebugger::v2::StatusMessage;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.status)
  return status_;
}
::google::devtools::clouddebugger::v2::StatusMessage* Breakpoint::release_status() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Breakpoint.status)
  
  ::google::devtools::clouddebugger::v2::StatusMessage* temp = status_;
  status_ = NULL;
  return temp;
}
void Breakpoint::set_allocated_status(::google::devtools::clouddebugger::v2::StatusMessage* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Breakpoint.status)
}

// repeated .google.devtools.clouddebugger.v2.StackFrame stack_frames = 7;
int Breakpoint::stack_frames_size() const {
  return stack_frames_.size();
}
void Breakpoint::clear_stack_frames() {
  stack_frames_.Clear();
}
const ::google::devtools::clouddebugger::v2::StackFrame& Breakpoint::stack_frames(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.stack_frames)
  return stack_frames_.Get(index);
}
::google::devtools::clouddebugger::v2::StackFrame* Breakpoint::mutable_stack_frames(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.stack_frames)
  return stack_frames_.Mutable(index);
}
::google::devtools::clouddebugger::v2::StackFrame* Breakpoint::add_stack_frames() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.Breakpoint.stack_frames)
  return stack_frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::StackFrame >*
Breakpoint::mutable_stack_frames() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.Breakpoint.stack_frames)
  return &stack_frames_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::StackFrame >&
Breakpoint::stack_frames() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.Breakpoint.stack_frames)
  return stack_frames_;
}

// repeated .google.devtools.clouddebugger.v2.Variable evaluated_expressions = 8;
int Breakpoint::evaluated_expressions_size() const {
  return evaluated_expressions_.size();
}
void Breakpoint::clear_evaluated_expressions() {
  evaluated_expressions_.Clear();
}
const ::google::devtools::clouddebugger::v2::Variable& Breakpoint::evaluated_expressions(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.evaluated_expressions)
  return evaluated_expressions_.Get(index);
}
::google::devtools::clouddebugger::v2::Variable* Breakpoint::mutable_evaluated_expressions(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.evaluated_expressions)
  return evaluated_expressions_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Variable* Breakpoint::add_evaluated_expressions() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.Breakpoint.evaluated_expressions)
  return evaluated_expressions_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >*
Breakpoint::mutable_evaluated_expressions() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.Breakpoint.evaluated_expressions)
  return &evaluated_expressions_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >&
Breakpoint::evaluated_expressions() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.Breakpoint.evaluated_expressions)
  return evaluated_expressions_;
}

// repeated .google.devtools.clouddebugger.v2.Variable variable_table = 9;
int Breakpoint::variable_table_size() const {
  return variable_table_.size();
}
void Breakpoint::clear_variable_table() {
  variable_table_.Clear();
}
const ::google::devtools::clouddebugger::v2::Variable& Breakpoint::variable_table(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Breakpoint.variable_table)
  return variable_table_.Get(index);
}
::google::devtools::clouddebugger::v2::Variable* Breakpoint::mutable_variable_table(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Breakpoint.variable_table)
  return variable_table_.Mutable(index);
}
::google::devtools::clouddebugger::v2::Variable* Breakpoint::add_variable_table() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.Breakpoint.variable_table)
  return variable_table_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >*
Breakpoint::mutable_variable_table() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.Breakpoint.variable_table)
  return &variable_table_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::clouddebugger::v2::Variable >&
Breakpoint::variable_table() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.Breakpoint.variable_table)
  return variable_table_;
}

// map<string, string> labels = 17;
int Breakpoint::labels_size() const {
  return labels_.size();
}
void Breakpoint::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Breakpoint::labels() const {
  // @@protoc_insertion_point(field_map:google.devtools.clouddebugger.v2.Breakpoint.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Breakpoint::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.clouddebugger.v2.Breakpoint.labels)
  return labels_.MutableMap();
}

inline const Breakpoint* Breakpoint::internal_default_instance() {
  return &Breakpoint_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Debuggee::kIdFieldNumber;
const int Debuggee::kProjectFieldNumber;
const int Debuggee::kUniquifierFieldNumber;
const int Debuggee::kDescriptionFieldNumber;
const int Debuggee::kIsInactiveFieldNumber;
const int Debuggee::kAgentVersionFieldNumber;
const int Debuggee::kIsDisabledFieldNumber;
const int Debuggee::kStatusFieldNumber;
const int Debuggee::kSourceContextsFieldNumber;
const int Debuggee::kExtSourceContextsFieldNumber;
const int Debuggee::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Debuggee::Debuggee()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.devtools.clouddebugger.v2.Debuggee)
}

void Debuggee::InitAsDefaultInstance() {
  status_ = const_cast< ::google::devtools::clouddebugger::v2::StatusMessage*>(
      ::google::devtools::clouddebugger::v2::StatusMessage::internal_default_instance());
}

Debuggee::Debuggee(const Debuggee& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.devtools.clouddebugger.v2.Debuggee)
}

void Debuggee::SharedCtor() {
  labels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  labels_.SetEntryDescriptor(
      &::google::devtools::clouddebugger::v2::Debuggee_LabelsEntry_descriptor_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uniquifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
  ::memset(&is_inactive_, 0, reinterpret_cast<char*>(&is_disabled_) -
    reinterpret_cast<char*>(&is_inactive_) + sizeof(is_disabled_));
  _cached_size_ = 0;
}

Debuggee::~Debuggee() {
  // @@protoc_insertion_point(destructor:google.devtools.clouddebugger.v2.Debuggee)
  SharedDtor();
}

void Debuggee::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uniquifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Debuggee_default_instance_.get()) {
    delete status_;
  }
}

void Debuggee::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Debuggee::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Debuggee_descriptor_;
}

const Debuggee& Debuggee::default_instance() {
  protobuf_InitDefaults_google_2fdevtools_2fclouddebugger_2fv2_2fdata_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Debuggee> Debuggee_default_instance_;

Debuggee* Debuggee::New(::google::protobuf::Arena* arena) const {
  Debuggee* n = new Debuggee;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Debuggee::Clear() {
// @@protoc_insertion_point(message_clear_start:google.devtools.clouddebugger.v2.Debuggee)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Debuggee, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Debuggee*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(is_inactive_, is_disabled_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uniquifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  source_contexts_.Clear();
  ext_source_contexts_.Clear();
  labels_.Clear();
}

bool Debuggee::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.devtools.clouddebugger.v2.Debuggee)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Debuggee.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_project;
        break;
      }

      // optional string project = 2;
      case 2: {
        if (tag == 18) {
         parse_project:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), this->project().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Debuggee.project"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uniquifier;
        break;
      }

      // optional string uniquifier = 3;
      case 3: {
        if (tag == 26) {
         parse_uniquifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniquifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uniquifier().data(), this->uniquifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Debuggee.uniquifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }

      // optional string description = 4;
      case 4: {
        if (tag == 34) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Debuggee.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_inactive;
        break;
      }

      // optional bool is_inactive = 5;
      case 5: {
        if (tag == 40) {
         parse_is_inactive:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inactive_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_agent_version;
        break;
      }

      // optional string agent_version = 6;
      case 6: {
        if (tag == 50) {
         parse_agent_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->agent_version().data(), this->agent_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Debuggee.agent_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_is_disabled;
        break;
      }

      // optional bool is_disabled = 7;
      case 7: {
        if (tag == 56) {
         parse_is_disabled:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_disabled_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_status;
        break;
      }

      // optional .google.devtools.clouddebugger.v2.StatusMessage status = 8;
      case 8: {
        if (tag == 66) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_source_contexts;
        break;
      }

      // repeated .google.devtools.source.v1.SourceContext source_contexts = 9;
      case 9: {
        if (tag == 74) {
         parse_source_contexts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_source_contexts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_source_contexts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_source_contexts;
        if (input->ExpectTag(90)) goto parse_loop_labels;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, string> labels = 11;
      case 11: {
        if (tag == 90) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_labels:
          Debuggee_LabelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Debuggee.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.devtools.clouddebugger.v2.Debuggee.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_labels;
        if (input->ExpectTag(106)) goto parse_loop_ext_source_contexts;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .google.devtools.source.v1.ExtendedSourceContext ext_source_contexts = 13;
      case 13: {
        if (tag == 106) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ext_source_contexts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ext_source_contexts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_ext_source_contexts;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.devtools.clouddebugger.v2.Debuggee)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.devtools.clouddebugger.v2.Debuggee)
  return false;
#undef DO_
}

void Debuggee::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.devtools.clouddebugger.v2.Debuggee)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string project = 2;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), this->project().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project(), output);
  }

  // optional string uniquifier = 3;
  if (this->uniquifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uniquifier().data(), this->uniquifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.uniquifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uniquifier(), output);
  }

  // optional string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional bool is_inactive = 5;
  if (this->is_inactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_inactive(), output);
  }

  // optional string agent_version = 6;
  if (this->agent_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->agent_version().data(), this->agent_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.agent_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->agent_version(), output);
  }

  // optional bool is_disabled = 7;
  if (this->is_disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_disabled(), output);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 8;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->status_, output);
  }

  // repeated .google.devtools.source.v1.SourceContext source_contexts = 9;
  for (unsigned int i = 0, n = this->source_contexts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->source_contexts(i), output);
  }

  // map<string, string> labels = 11;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Debuggee.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Debuggee.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Debuggee_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Debuggee_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            11, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .google.devtools.source.v1.ExtendedSourceContext ext_source_contexts = 13;
  for (unsigned int i = 0, n = this->ext_source_contexts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->ext_source_contexts(i), output);
  }

  // @@protoc_insertion_point(serialize_end:google.devtools.clouddebugger.v2.Debuggee)
}

::google::protobuf::uint8* Debuggee::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.devtools.clouddebugger.v2.Debuggee)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string project = 2;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), this->project().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project(), target);
  }

  // optional string uniquifier = 3;
  if (this->uniquifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uniquifier().data(), this->uniquifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.uniquifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uniquifier(), target);
  }

  // optional string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional bool is_inactive = 5;
  if (this->is_inactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_inactive(), target);
  }

  // optional string agent_version = 6;
  if (this->agent_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->agent_version().data(), this->agent_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.devtools.clouddebugger.v2.Debuggee.agent_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->agent_version(), target);
  }

  // optional bool is_disabled = 7;
  if (this->is_disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_disabled(), target);
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 8;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->status_, false, target);
  }

  // repeated .google.devtools.source.v1.SourceContext source_contexts = 9;
  for (unsigned int i = 0, n = this->source_contexts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->source_contexts(i), false, target);
  }

  // map<string, string> labels = 11;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Debuggee.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.devtools.clouddebugger.v2.Debuggee.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Debuggee_LabelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Debuggee_LabelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       11, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .google.devtools.source.v1.ExtendedSourceContext ext_source_contexts = 13;
  for (unsigned int i = 0, n = this->ext_source_contexts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->ext_source_contexts(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.devtools.clouddebugger.v2.Debuggee)
  return target;
}

size_t Debuggee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.devtools.clouddebugger.v2.Debuggee)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string project = 2;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // optional string uniquifier = 3;
  if (this->uniquifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uniquifier());
  }

  // optional string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional bool is_inactive = 5;
  if (this->is_inactive() != 0) {
    total_size += 1 + 1;
  }

  // optional string agent_version = 6;
  if (this->agent_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->agent_version());
  }

  // optional bool is_disabled = 7;
  if (this->is_disabled() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.devtools.clouddebugger.v2.StatusMessage status = 8;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_);
  }

  // repeated .google.devtools.source.v1.SourceContext source_contexts = 9;
  {
    unsigned int count = this->source_contexts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->source_contexts(i));
    }
  }

  // repeated .google.devtools.source.v1.ExtendedSourceContext ext_source_contexts = 13;
  {
    unsigned int count = this->ext_source_contexts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ext_source_contexts(i));
    }
  }

  // map<string, string> labels = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<Debuggee_LabelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Debuggee::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.devtools.clouddebugger.v2.Debuggee)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Debuggee* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Debuggee>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.devtools.clouddebugger.v2.Debuggee)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.devtools.clouddebugger.v2.Debuggee)
    UnsafeMergeFrom(*source);
  }
}

void Debuggee::MergeFrom(const Debuggee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.devtools.clouddebugger.v2.Debuggee)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Debuggee::UnsafeMergeFrom(const Debuggee& from) {
  GOOGLE_DCHECK(&from != this);
  source_contexts_.MergeFrom(from.source_contexts_);
  ext_source_contexts_.MergeFrom(from.ext_source_contexts_);
  labels_.MergeFrom(from.labels_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.uniquifier().size() > 0) {

    uniquifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uniquifier_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.is_inactive() != 0) {
    set_is_inactive(from.is_inactive());
  }
  if (from.agent_version().size() > 0) {

    agent_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_version_);
  }
  if (from.is_disabled() != 0) {
    set_is_disabled(from.is_disabled());
  }
  if (from.has_status()) {
    mutable_status()->::google::devtools::clouddebugger::v2::StatusMessage::MergeFrom(from.status());
  }
}

void Debuggee::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.devtools.clouddebugger.v2.Debuggee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Debuggee::CopyFrom(const Debuggee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.devtools.clouddebugger.v2.Debuggee)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Debuggee::IsInitialized() const {

  return true;
}

void Debuggee::Swap(Debuggee* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Debuggee::InternalSwap(Debuggee* other) {
  id_.Swap(&other->id_);
  project_.Swap(&other->project_);
  uniquifier_.Swap(&other->uniquifier_);
  description_.Swap(&other->description_);
  std::swap(is_inactive_, other->is_inactive_);
  agent_version_.Swap(&other->agent_version_);
  std::swap(is_disabled_, other->is_disabled_);
  std::swap(status_, other->status_);
  source_contexts_.UnsafeArenaSwap(&other->source_contexts_);
  ext_source_contexts_.UnsafeArenaSwap(&other->ext_source_contexts_);
  labels_.Swap(&other->labels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Debuggee::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Debuggee_descriptor_;
  metadata.reflection = Debuggee_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Debuggee

// optional string id = 1;
void Debuggee::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Debuggee::id() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Debuggee.id)
}
void Debuggee::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Debuggee.id)
}
void Debuggee::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Debuggee.id)
}
::std::string* Debuggee::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Debuggee::release_id() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Debuggee.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Debuggee.id)
}

// optional string project = 2;
void Debuggee::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Debuggee::project() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.project)
  return project_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Debuggee.project)
}
void Debuggee::set_project(const char* value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Debuggee.project)
}
void Debuggee::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Debuggee.project)
}
::std::string* Debuggee::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Debuggee::release_project() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Debuggee.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_allocated_project(::std::string* project) {
  if (project != NULL) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Debuggee.project)
}

// optional string uniquifier = 3;
void Debuggee::clear_uniquifier() {
  uniquifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Debuggee::uniquifier() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.uniquifier)
  return uniquifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_uniquifier(const ::std::string& value) {
  
  uniquifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Debuggee.uniquifier)
}
void Debuggee::set_uniquifier(const char* value) {
  
  uniquifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Debuggee.uniquifier)
}
void Debuggee::set_uniquifier(const char* value, size_t size) {
  
  uniquifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Debuggee.uniquifier)
}
::std::string* Debuggee::mutable_uniquifier() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.uniquifier)
  return uniquifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Debuggee::release_uniquifier() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Debuggee.uniquifier)
  
  return uniquifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_allocated_uniquifier(::std::string* uniquifier) {
  if (uniquifier != NULL) {
    
  } else {
    
  }
  uniquifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uniquifier);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Debuggee.uniquifier)
}

// optional string description = 4;
void Debuggee::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Debuggee::description() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Debuggee.description)
}
void Debuggee::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Debuggee.description)
}
void Debuggee::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Debuggee.description)
}
::std::string* Debuggee::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Debuggee::release_description() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Debuggee.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Debuggee.description)
}

// optional bool is_inactive = 5;
void Debuggee::clear_is_inactive() {
  is_inactive_ = false;
}
bool Debuggee::is_inactive() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.is_inactive)
  return is_inactive_;
}
void Debuggee::set_is_inactive(bool value) {
  
  is_inactive_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Debuggee.is_inactive)
}

// optional string agent_version = 6;
void Debuggee::clear_agent_version() {
  agent_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Debuggee::agent_version() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.agent_version)
  return agent_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_agent_version(const ::std::string& value) {
  
  agent_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Debuggee.agent_version)
}
void Debuggee::set_agent_version(const char* value) {
  
  agent_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.devtools.clouddebugger.v2.Debuggee.agent_version)
}
void Debuggee::set_agent_version(const char* value, size_t size) {
  
  agent_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.devtools.clouddebugger.v2.Debuggee.agent_version)
}
::std::string* Debuggee::mutable_agent_version() {
  
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.agent_version)
  return agent_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Debuggee::release_agent_version() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Debuggee.agent_version)
  
  return agent_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Debuggee::set_allocated_agent_version(::std::string* agent_version) {
  if (agent_version != NULL) {
    
  } else {
    
  }
  agent_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_version);
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Debuggee.agent_version)
}

// optional bool is_disabled = 7;
void Debuggee::clear_is_disabled() {
  is_disabled_ = false;
}
bool Debuggee::is_disabled() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.is_disabled)
  return is_disabled_;
}
void Debuggee::set_is_disabled(bool value) {
  
  is_disabled_ = value;
  // @@protoc_insertion_point(field_set:google.devtools.clouddebugger.v2.Debuggee.is_disabled)
}

// optional .google.devtools.clouddebugger.v2.StatusMessage status = 8;
bool Debuggee::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
void Debuggee::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
const ::google::devtools::clouddebugger::v2::StatusMessage& Debuggee::status() const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.status)
  return status_ != NULL ? *status_
                         : *::google::devtools::clouddebugger::v2::StatusMessage::internal_default_instance();
}
::google::devtools::clouddebugger::v2::StatusMessage* Debuggee::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::devtools::clouddebugger::v2::StatusMessage;
  }
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.status)
  return status_;
}
::google::devtools::clouddebugger::v2::StatusMessage* Debuggee::release_status() {
  // @@protoc_insertion_point(field_release:google.devtools.clouddebugger.v2.Debuggee.status)
  
  ::google::devtools::clouddebugger::v2::StatusMessage* temp = status_;
  status_ = NULL;
  return temp;
}
void Debuggee::set_allocated_status(::google::devtools::clouddebugger::v2::StatusMessage* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.devtools.clouddebugger.v2.Debuggee.status)
}

// repeated .google.devtools.source.v1.SourceContext source_contexts = 9;
int Debuggee::source_contexts_size() const {
  return source_contexts_.size();
}
void Debuggee::clear_source_contexts() {
  source_contexts_.Clear();
}
const ::google::devtools::source::v1::SourceContext& Debuggee::source_contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.source_contexts)
  return source_contexts_.Get(index);
}
::google::devtools::source::v1::SourceContext* Debuggee::mutable_source_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.source_contexts)
  return source_contexts_.Mutable(index);
}
::google::devtools::source::v1::SourceContext* Debuggee::add_source_contexts() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.Debuggee.source_contexts)
  return source_contexts_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::source::v1::SourceContext >*
Debuggee::mutable_source_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.Debuggee.source_contexts)
  return &source_contexts_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::source::v1::SourceContext >&
Debuggee::source_contexts() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.Debuggee.source_contexts)
  return source_contexts_;
}

// repeated .google.devtools.source.v1.ExtendedSourceContext ext_source_contexts = 13;
int Debuggee::ext_source_contexts_size() const {
  return ext_source_contexts_.size();
}
void Debuggee::clear_ext_source_contexts() {
  ext_source_contexts_.Clear();
}
const ::google::devtools::source::v1::ExtendedSourceContext& Debuggee::ext_source_contexts(int index) const {
  // @@protoc_insertion_point(field_get:google.devtools.clouddebugger.v2.Debuggee.ext_source_contexts)
  return ext_source_contexts_.Get(index);
}
::google::devtools::source::v1::ExtendedSourceContext* Debuggee::mutable_ext_source_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:google.devtools.clouddebugger.v2.Debuggee.ext_source_contexts)
  return ext_source_contexts_.Mutable(index);
}
::google::devtools::source::v1::ExtendedSourceContext* Debuggee::add_ext_source_contexts() {
  // @@protoc_insertion_point(field_add:google.devtools.clouddebugger.v2.Debuggee.ext_source_contexts)
  return ext_source_contexts_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::devtools::source::v1::ExtendedSourceContext >*
Debuggee::mutable_ext_source_contexts() {
  // @@protoc_insertion_point(field_mutable_list:google.devtools.clouddebugger.v2.Debuggee.ext_source_contexts)
  return &ext_source_contexts_;
}
const ::google::protobuf::RepeatedPtrField< ::google::devtools::source::v1::ExtendedSourceContext >&
Debuggee::ext_source_contexts() const {
  // @@protoc_insertion_point(field_list:google.devtools.clouddebugger.v2.Debuggee.ext_source_contexts)
  return ext_source_contexts_;
}

// map<string, string> labels = 11;
int Debuggee::labels_size() const {
  return labels_.size();
}
void Debuggee::clear_labels() {
  labels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Debuggee::labels() const {
  // @@protoc_insertion_point(field_map:google.devtools.clouddebugger.v2.Debuggee.labels)
  return labels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Debuggee::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.devtools.clouddebugger.v2.Debuggee.labels)
  return labels_.MutableMap();
}

inline const Debuggee* Debuggee::internal_default_instance() {
  return &Debuggee_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace clouddebugger
}  // namespace devtools
}  // namespace google

// @@protoc_insertion_point(global_scope)
