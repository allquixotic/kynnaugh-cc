// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_table_admin.proto

#ifndef PROTOBUF_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto__INCLUDED
#define PROTOBUF_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/bigtable/admin/v2/table.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
void protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

class CreateTableRequest;
class CreateTableRequest_Split;
class DeleteTableRequest;
class DropRowRangeRequest;
class GetTableRequest;
class ListTablesRequest;
class ListTablesResponse;
class ModifyColumnFamiliesRequest;
class ModifyColumnFamiliesRequest_Modification;

// ===================================================================

class CreateTableRequest_Split : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.CreateTableRequest.Split) */ {
 public:
  CreateTableRequest_Split();
  virtual ~CreateTableRequest_Split();

  CreateTableRequest_Split(const CreateTableRequest_Split& from);

  inline CreateTableRequest_Split& operator=(const CreateTableRequest_Split& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableRequest_Split& default_instance();

  static const CreateTableRequest_Split* internal_default_instance();

  void Swap(CreateTableRequest_Split* other);

  // implements Message ----------------------------------------------

  inline CreateTableRequest_Split* New() const { return New(NULL); }

  CreateTableRequest_Split* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTableRequest_Split& from);
  void MergeFrom(const CreateTableRequest_Split& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateTableRequest_Split* other);
  void UnsafeMergeFrom(const CreateTableRequest_Split& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateTableRequest.Split)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest_Split> CreateTableRequest_Split_default_instance_;

// -------------------------------------------------------------------

class CreateTableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.CreateTableRequest) */ {
 public:
  CreateTableRequest();
  virtual ~CreateTableRequest();

  CreateTableRequest(const CreateTableRequest& from);

  inline CreateTableRequest& operator=(const CreateTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableRequest& default_instance();

  static const CreateTableRequest* internal_default_instance();

  void Swap(CreateTableRequest* other);

  // implements Message ----------------------------------------------

  inline CreateTableRequest* New() const { return New(NULL); }

  CreateTableRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTableRequest& from);
  void MergeFrom(const CreateTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateTableRequest* other);
  void UnsafeMergeFrom(const CreateTableRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreateTableRequest_Split Split;

  // accessors -------------------------------------------------------

  // optional string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // optional string table_id = 2;
  void clear_table_id();
  static const int kTableIdFieldNumber = 2;
  const ::std::string& table_id() const;
  void set_table_id(const ::std::string& value);
  void set_table_id(const char* value);
  void set_table_id(const char* value, size_t size);
  ::std::string* mutable_table_id();
  ::std::string* release_table_id();
  void set_allocated_table_id(::std::string* table_id);

  // optional .google.bigtable.admin.v2.Table table = 3;
  bool has_table() const;
  void clear_table();
  static const int kTableFieldNumber = 3;
  const ::google::bigtable::admin::v2::Table& table() const;
  ::google::bigtable::admin::v2::Table* mutable_table();
  ::google::bigtable::admin::v2::Table* release_table();
  void set_allocated_table(::google::bigtable::admin::v2::Table* table);

  // repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
  int initial_splits_size() const;
  void clear_initial_splits();
  static const int kInitialSplitsFieldNumber = 4;
  const ::google::bigtable::admin::v2::CreateTableRequest_Split& initial_splits(int index) const;
  ::google::bigtable::admin::v2::CreateTableRequest_Split* mutable_initial_splits(int index);
  ::google::bigtable::admin::v2::CreateTableRequest_Split* add_initial_splits();
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::CreateTableRequest_Split >*
      mutable_initial_splits();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::CreateTableRequest_Split >&
      initial_splits() const;

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateTableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::CreateTableRequest_Split > initial_splits_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr table_id_;
  ::google::bigtable::admin::v2::Table* table_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateTableRequest> CreateTableRequest_default_instance_;

// -------------------------------------------------------------------

class DropRowRangeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.DropRowRangeRequest) */ {
 public:
  DropRowRangeRequest();
  virtual ~DropRowRangeRequest();

  DropRowRangeRequest(const DropRowRangeRequest& from);

  inline DropRowRangeRequest& operator=(const DropRowRangeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropRowRangeRequest& default_instance();

  enum TargetCase {
    kRowKeyPrefix = 2,
    kDeleteAllDataFromTable = 3,
    TARGET_NOT_SET = 0,
  };

  static const DropRowRangeRequest* internal_default_instance();

  void Swap(DropRowRangeRequest* other);

  // implements Message ----------------------------------------------

  inline DropRowRangeRequest* New() const { return New(NULL); }

  DropRowRangeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropRowRangeRequest& from);
  void MergeFrom(const DropRowRangeRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DropRowRangeRequest* other);
  void UnsafeMergeFrom(const DropRowRangeRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes row_key_prefix = 2;
  private:
  bool has_row_key_prefix() const;
  public:
  void clear_row_key_prefix();
  static const int kRowKeyPrefixFieldNumber = 2;
  const ::std::string& row_key_prefix() const;
  void set_row_key_prefix(const ::std::string& value);
  void set_row_key_prefix(const char* value);
  void set_row_key_prefix(const void* value, size_t size);
  ::std::string* mutable_row_key_prefix();
  ::std::string* release_row_key_prefix();
  void set_allocated_row_key_prefix(::std::string* row_key_prefix);

  // optional bool delete_all_data_from_table = 3;
  private:
  bool has_delete_all_data_from_table() const;
  public:
  void clear_delete_all_data_from_table();
  static const int kDeleteAllDataFromTableFieldNumber = 3;
  bool delete_all_data_from_table() const;
  void set_delete_all_data_from_table(bool value);

  TargetCase target_case() const;
  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DropRowRangeRequest)
 private:
  inline void set_has_row_key_prefix();
  inline void set_has_delete_all_data_from_table();

  inline bool has_target() const;
  void clear_target();
  inline void clear_has_target();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  union TargetUnion {
    TargetUnion() {}
    ::google::protobuf::internal::ArenaStringPtr row_key_prefix_;
    bool delete_all_data_from_table_;
  } target_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DropRowRangeRequest> DropRowRangeRequest_default_instance_;

// -------------------------------------------------------------------

class ListTablesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListTablesRequest) */ {
 public:
  ListTablesRequest();
  virtual ~ListTablesRequest();

  ListTablesRequest(const ListTablesRequest& from);

  inline ListTablesRequest& operator=(const ListTablesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTablesRequest& default_instance();

  static const ListTablesRequest* internal_default_instance();

  void Swap(ListTablesRequest* other);

  // implements Message ----------------------------------------------

  inline ListTablesRequest* New() const { return New(NULL); }

  ListTablesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTablesRequest& from);
  void MergeFrom(const ListTablesRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListTablesRequest* other);
  void UnsafeMergeFrom(const ListTablesRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  void clear_view();
  static const int kViewFieldNumber = 2;
  ::google::bigtable::admin::v2::Table_View view() const;
  void set_view(::google::bigtable::admin::v2::Table_View value);

  // optional string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListTablesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  int view_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListTablesRequest> ListTablesRequest_default_instance_;

// -------------------------------------------------------------------

class ListTablesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListTablesResponse) */ {
 public:
  ListTablesResponse();
  virtual ~ListTablesResponse();

  ListTablesResponse(const ListTablesResponse& from);

  inline ListTablesResponse& operator=(const ListTablesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTablesResponse& default_instance();

  static const ListTablesResponse* internal_default_instance();

  void Swap(ListTablesResponse* other);

  // implements Message ----------------------------------------------

  inline ListTablesResponse* New() const { return New(NULL); }

  ListTablesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTablesResponse& from);
  void MergeFrom(const ListTablesResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListTablesResponse* other);
  void UnsafeMergeFrom(const ListTablesResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.bigtable.admin.v2.Table tables = 1;
  int tables_size() const;
  void clear_tables();
  static const int kTablesFieldNumber = 1;
  const ::google::bigtable::admin::v2::Table& tables(int index) const;
  ::google::bigtable::admin::v2::Table* mutable_tables(int index);
  ::google::bigtable::admin::v2::Table* add_tables();
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Table >*
      mutable_tables();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Table >&
      tables() const;

  // optional string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListTablesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Table > tables_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListTablesResponse> ListTablesResponse_default_instance_;

// -------------------------------------------------------------------

class GetTableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.GetTableRequest) */ {
 public:
  GetTableRequest();
  virtual ~GetTableRequest();

  GetTableRequest(const GetTableRequest& from);

  inline GetTableRequest& operator=(const GetTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableRequest& default_instance();

  static const GetTableRequest* internal_default_instance();

  void Swap(GetTableRequest* other);

  // implements Message ----------------------------------------------

  inline GetTableRequest* New() const { return New(NULL); }

  GetTableRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableRequest& from);
  void MergeFrom(const GetTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTableRequest* other);
  void UnsafeMergeFrom(const GetTableRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .google.bigtable.admin.v2.Table.View view = 2;
  void clear_view();
  static const int kViewFieldNumber = 2;
  ::google::bigtable::admin::v2::Table_View view() const;
  void set_view(::google::bigtable::admin::v2::Table_View value);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GetTableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int view_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetTableRequest> GetTableRequest_default_instance_;

// -------------------------------------------------------------------

class DeleteTableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.DeleteTableRequest) */ {
 public:
  DeleteTableRequest();
  virtual ~DeleteTableRequest();

  DeleteTableRequest(const DeleteTableRequest& from);

  inline DeleteTableRequest& operator=(const DeleteTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteTableRequest& default_instance();

  static const DeleteTableRequest* internal_default_instance();

  void Swap(DeleteTableRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteTableRequest* New() const { return New(NULL); }

  DeleteTableRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteTableRequest& from);
  void MergeFrom(const DeleteTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteTableRequest* other);
  void UnsafeMergeFrom(const DeleteTableRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DeleteTableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteTableRequest> DeleteTableRequest_default_instance_;

// -------------------------------------------------------------------

class ModifyColumnFamiliesRequest_Modification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification) */ {
 public:
  ModifyColumnFamiliesRequest_Modification();
  virtual ~ModifyColumnFamiliesRequest_Modification();

  ModifyColumnFamiliesRequest_Modification(const ModifyColumnFamiliesRequest_Modification& from);

  inline ModifyColumnFamiliesRequest_Modification& operator=(const ModifyColumnFamiliesRequest_Modification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyColumnFamiliesRequest_Modification& default_instance();

  enum ModCase {
    kCreate = 2,
    kUpdate = 3,
    kDrop = 4,
    MOD_NOT_SET = 0,
  };

  static const ModifyColumnFamiliesRequest_Modification* internal_default_instance();

  void Swap(ModifyColumnFamiliesRequest_Modification* other);

  // implements Message ----------------------------------------------

  inline ModifyColumnFamiliesRequest_Modification* New() const { return New(NULL); }

  ModifyColumnFamiliesRequest_Modification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyColumnFamiliesRequest_Modification& from);
  void MergeFrom(const ModifyColumnFamiliesRequest_Modification& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModifyColumnFamiliesRequest_Modification* other);
  void UnsafeMergeFrom(const ModifyColumnFamiliesRequest_Modification& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .google.bigtable.admin.v2.ColumnFamily create = 2;
  bool has_create() const;
  void clear_create();
  static const int kCreateFieldNumber = 2;
  const ::google::bigtable::admin::v2::ColumnFamily& create() const;
  ::google::bigtable::admin::v2::ColumnFamily* mutable_create();
  ::google::bigtable::admin::v2::ColumnFamily* release_create();
  void set_allocated_create(::google::bigtable::admin::v2::ColumnFamily* create);

  // optional .google.bigtable.admin.v2.ColumnFamily update = 3;
  bool has_update() const;
  void clear_update();
  static const int kUpdateFieldNumber = 3;
  const ::google::bigtable::admin::v2::ColumnFamily& update() const;
  ::google::bigtable::admin::v2::ColumnFamily* mutable_update();
  ::google::bigtable::admin::v2::ColumnFamily* release_update();
  void set_allocated_update(::google::bigtable::admin::v2::ColumnFamily* update);

  // optional bool drop = 4;
  private:
  bool has_drop() const;
  public:
  void clear_drop();
  static const int kDropFieldNumber = 4;
  bool drop() const;
  void set_drop(bool value);

  ModCase mod_case() const;
  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
 private:
  inline void set_has_create();
  inline void set_has_update();
  inline void set_has_drop();

  inline bool has_mod() const;
  void clear_mod();
  inline void clear_has_mod();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  union ModUnion {
    ModUnion() {}
    ::google::bigtable::admin::v2::ColumnFamily* create_;
    ::google::bigtable::admin::v2::ColumnFamily* update_;
    bool drop_;
  } mod_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ModifyColumnFamiliesRequest_Modification> ModifyColumnFamiliesRequest_Modification_default_instance_;

// -------------------------------------------------------------------

class ModifyColumnFamiliesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ModifyColumnFamiliesRequest) */ {
 public:
  ModifyColumnFamiliesRequest();
  virtual ~ModifyColumnFamiliesRequest();

  ModifyColumnFamiliesRequest(const ModifyColumnFamiliesRequest& from);

  inline ModifyColumnFamiliesRequest& operator=(const ModifyColumnFamiliesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyColumnFamiliesRequest& default_instance();

  static const ModifyColumnFamiliesRequest* internal_default_instance();

  void Swap(ModifyColumnFamiliesRequest* other);

  // implements Message ----------------------------------------------

  inline ModifyColumnFamiliesRequest* New() const { return New(NULL); }

  ModifyColumnFamiliesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyColumnFamiliesRequest& from);
  void MergeFrom(const ModifyColumnFamiliesRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModifyColumnFamiliesRequest* other);
  void UnsafeMergeFrom(const ModifyColumnFamiliesRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ModifyColumnFamiliesRequest_Modification Modification;

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
  int modifications_size() const;
  void clear_modifications();
  static const int kModificationsFieldNumber = 2;
  const ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification& modifications(int index) const;
  ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification* mutable_modifications(int index);
  ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification* add_modifications();
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification >*
      mutable_modifications();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification >&
      modifications() const;

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification > modifications_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void  protobuf_AddDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto_impl();
  friend void protobuf_AssignDesc_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();
  friend void protobuf_ShutdownFile_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ModifyColumnFamiliesRequest> ModifyColumnFamiliesRequest_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateTableRequest_Split

// optional bytes key = 1;
inline void CreateTableRequest_Split::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateTableRequest_Split::key() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.Split.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableRequest_Split::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}
inline void CreateTableRequest_Split::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}
inline void CreateTableRequest_Split::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}
inline ::std::string* CreateTableRequest_Split::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.Split.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTableRequest_Split::release_key() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.Split.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableRequest_Split::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.Split.key)
}

inline const CreateTableRequest_Split* CreateTableRequest_Split::internal_default_instance() {
  return &CreateTableRequest_Split_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateTableRequest

// optional string parent = 1;
inline void CreateTableRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateTableRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateTableRequest.parent)
}
inline void CreateTableRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateTableRequest.parent)
}
inline void CreateTableRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateTableRequest.parent)
}
inline ::std::string* CreateTableRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTableRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.parent)
}

// optional string table_id = 2;
inline void CreateTableRequest::clear_table_id() {
  table_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateTableRequest::table_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.table_id)
  return table_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableRequest::set_table_id(const ::std::string& value) {
  
  table_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateTableRequest.table_id)
}
inline void CreateTableRequest::set_table_id(const char* value) {
  
  table_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateTableRequest.table_id)
}
inline void CreateTableRequest::set_table_id(const char* value, size_t size) {
  
  table_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateTableRequest.table_id)
}
inline ::std::string* CreateTableRequest::mutable_table_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.table_id)
  return table_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTableRequest::release_table_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.table_id)
  
  return table_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableRequest::set_allocated_table_id(::std::string* table_id) {
  if (table_id != NULL) {
    
  } else {
    
  }
  table_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.table_id)
}

// optional .google.bigtable.admin.v2.Table table = 3;
inline bool CreateTableRequest::has_table() const {
  return this != internal_default_instance() && table_ != NULL;
}
inline void CreateTableRequest::clear_table() {
  if (GetArenaNoVirtual() == NULL && table_ != NULL) delete table_;
  table_ = NULL;
}
inline const ::google::bigtable::admin::v2::Table& CreateTableRequest::table() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.table)
  return table_ != NULL ? *table_
                         : *::google::bigtable::admin::v2::Table::internal_default_instance();
}
inline ::google::bigtable::admin::v2::Table* CreateTableRequest::mutable_table() {
  
  if (table_ == NULL) {
    table_ = new ::google::bigtable::admin::v2::Table;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.table)
  return table_;
}
inline ::google::bigtable::admin::v2::Table* CreateTableRequest::release_table() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateTableRequest.table)
  
  ::google::bigtable::admin::v2::Table* temp = table_;
  table_ = NULL;
  return temp;
}
inline void CreateTableRequest::set_allocated_table(::google::bigtable::admin::v2::Table* table) {
  delete table_;
  table_ = table;
  if (table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateTableRequest.table)
}

// repeated .google.bigtable.admin.v2.CreateTableRequest.Split initial_splits = 4;
inline int CreateTableRequest::initial_splits_size() const {
  return initial_splits_.size();
}
inline void CreateTableRequest::clear_initial_splits() {
  initial_splits_.Clear();
}
inline const ::google::bigtable::admin::v2::CreateTableRequest_Split& CreateTableRequest::initial_splits(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_.Get(index);
}
inline ::google::bigtable::admin::v2::CreateTableRequest_Split* CreateTableRequest::mutable_initial_splits(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_.Mutable(index);
}
inline ::google::bigtable::admin::v2::CreateTableRequest_Split* CreateTableRequest::add_initial_splits() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::CreateTableRequest_Split >*
CreateTableRequest::mutable_initial_splits() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return &initial_splits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::CreateTableRequest_Split >&
CreateTableRequest::initial_splits() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.CreateTableRequest.initial_splits)
  return initial_splits_;
}

inline const CreateTableRequest* CreateTableRequest::internal_default_instance() {
  return &CreateTableRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DropRowRangeRequest

// optional string name = 1;
inline void DropRowRangeRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropRowRangeRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DropRowRangeRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropRowRangeRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.name)
}
inline void DropRowRangeRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DropRowRangeRequest.name)
}
inline void DropRowRangeRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DropRowRangeRequest.name)
}
inline ::std::string* DropRowRangeRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DropRowRangeRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropRowRangeRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DropRowRangeRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropRowRangeRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DropRowRangeRequest.name)
}

// optional bytes row_key_prefix = 2;
inline bool DropRowRangeRequest::has_row_key_prefix() const {
  return target_case() == kRowKeyPrefix;
}
inline void DropRowRangeRequest::set_has_row_key_prefix() {
  _oneof_case_[0] = kRowKeyPrefix;
}
inline void DropRowRangeRequest::clear_row_key_prefix() {
  if (has_row_key_prefix()) {
    target_.row_key_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_target();
  }
}
inline const ::std::string& DropRowRangeRequest::row_key_prefix() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  if (has_row_key_prefix()) {
    return target_.row_key_prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void DropRowRangeRequest::set_row_key_prefix(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_.row_key_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}
inline void DropRowRangeRequest::set_row_key_prefix(const char* value) {
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_.row_key_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}
inline void DropRowRangeRequest::set_row_key_prefix(const void* value, size_t size) {
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_.row_key_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}
inline ::std::string* DropRowRangeRequest::mutable_row_key_prefix() {
  if (!has_row_key_prefix()) {
    clear_target();
    set_has_row_key_prefix();
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  return target_.row_key_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropRowRangeRequest::release_row_key_prefix() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
  if (has_row_key_prefix()) {
    clear_has_target();
    return target_.row_key_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void DropRowRangeRequest::set_allocated_row_key_prefix(::std::string* row_key_prefix) {
  if (!has_row_key_prefix()) {
    target_.row_key_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_target();
  if (row_key_prefix != NULL) {
    set_has_row_key_prefix();
    target_.row_key_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        row_key_prefix);
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix)
}

// optional bool delete_all_data_from_table = 3;
inline bool DropRowRangeRequest::has_delete_all_data_from_table() const {
  return target_case() == kDeleteAllDataFromTable;
}
inline void DropRowRangeRequest::set_has_delete_all_data_from_table() {
  _oneof_case_[0] = kDeleteAllDataFromTable;
}
inline void DropRowRangeRequest::clear_delete_all_data_from_table() {
  if (has_delete_all_data_from_table()) {
    target_.delete_all_data_from_table_ = false;
    clear_has_target();
  }
}
inline bool DropRowRangeRequest::delete_all_data_from_table() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DropRowRangeRequest.delete_all_data_from_table)
  if (has_delete_all_data_from_table()) {
    return target_.delete_all_data_from_table_;
  }
  return false;
}
inline void DropRowRangeRequest::set_delete_all_data_from_table(bool value) {
  if (!has_delete_all_data_from_table()) {
    clear_target();
    set_has_delete_all_data_from_table();
  }
  target_.delete_all_data_from_table_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DropRowRangeRequest.delete_all_data_from_table)
}

inline bool DropRowRangeRequest::has_target() const {
  return target_case() != TARGET_NOT_SET;
}
inline void DropRowRangeRequest::clear_has_target() {
  _oneof_case_[0] = TARGET_NOT_SET;
}
inline DropRowRangeRequest::TargetCase DropRowRangeRequest::target_case() const {
  return DropRowRangeRequest::TargetCase(_oneof_case_[0]);
}
inline const DropRowRangeRequest* DropRowRangeRequest::internal_default_instance() {
  return &DropRowRangeRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListTablesRequest

// optional string parent = 1;
inline void ListTablesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTablesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesRequest.parent)
  return parent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTablesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesRequest.parent)
}
inline void ListTablesRequest::set_parent(const char* value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListTablesRequest.parent)
}
inline void ListTablesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListTablesRequest.parent)
}
inline ::std::string* ListTablesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTablesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListTablesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTablesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListTablesRequest.parent)
}

// optional .google.bigtable.admin.v2.Table.View view = 2;
inline void ListTablesRequest::clear_view() {
  view_ = 0;
}
inline ::google::bigtable::admin::v2::Table_View ListTablesRequest::view() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesRequest.view)
  return static_cast< ::google::bigtable::admin::v2::Table_View >(view_);
}
inline void ListTablesRequest::set_view(::google::bigtable::admin::v2::Table_View value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesRequest.view)
}

// optional string page_token = 3;
inline void ListTablesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTablesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesRequest.page_token)
  return page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTablesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesRequest.page_token)
}
inline void ListTablesRequest::set_page_token(const char* value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListTablesRequest.page_token)
}
inline void ListTablesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListTablesRequest.page_token)
}
inline ::std::string* ListTablesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTablesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListTablesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTablesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListTablesRequest.page_token)
}

inline const ListTablesRequest* ListTablesRequest::internal_default_instance() {
  return &ListTablesRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ListTablesResponse

// repeated .google.bigtable.admin.v2.Table tables = 1;
inline int ListTablesResponse::tables_size() const {
  return tables_.size();
}
inline void ListTablesResponse::clear_tables() {
  tables_.Clear();
}
inline const ::google::bigtable::admin::v2::Table& ListTablesResponse::tables(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_.Get(index);
}
inline ::google::bigtable::admin::v2::Table* ListTablesResponse::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_.Mutable(index);
}
inline ::google::bigtable::admin::v2::Table* ListTablesResponse::add_tables() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Table >*
ListTablesResponse::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListTablesResponse.tables)
  return &tables_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Table >&
ListTablesResponse::tables() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListTablesResponse.tables)
  return tables_;
}

// optional string next_page_token = 2;
inline void ListTablesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTablesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
  return next_page_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTablesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}
inline void ListTablesResponse::set_next_page_token(const char* value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}
inline void ListTablesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}
inline ::std::string* ListTablesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTablesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTablesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListTablesResponse.next_page_token)
}

inline const ListTablesResponse* ListTablesResponse::internal_default_instance() {
  return &ListTablesResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// GetTableRequest

// optional string name = 1;
inline void GetTableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetTableRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetTableRequest.name)
}
inline void GetTableRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.GetTableRequest.name)
}
inline void GetTableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.GetTableRequest.name)
}
inline ::std::string* GetTableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.GetTableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.GetTableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.GetTableRequest.name)
}

// optional .google.bigtable.admin.v2.Table.View view = 2;
inline void GetTableRequest::clear_view() {
  view_ = 0;
}
inline ::google::bigtable::admin::v2::Table_View GetTableRequest::view() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetTableRequest.view)
  return static_cast< ::google::bigtable::admin::v2::Table_View >(view_);
}
inline void GetTableRequest::set_view(::google::bigtable::admin::v2::Table_View value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetTableRequest.view)
}

inline const GetTableRequest* GetTableRequest::internal_default_instance() {
  return &GetTableRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteTableRequest

// optional string name = 1;
inline void DeleteTableRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteTableRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteTableRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteTableRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteTableRequest.name)
}
inline void DeleteTableRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DeleteTableRequest.name)
}
inline void DeleteTableRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DeleteTableRequest.name)
}
inline ::std::string* DeleteTableRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DeleteTableRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteTableRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DeleteTableRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteTableRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DeleteTableRequest.name)
}

inline const DeleteTableRequest* DeleteTableRequest::internal_default_instance() {
  return &DeleteTableRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ModifyColumnFamiliesRequest_Modification

// optional string id = 1;
inline void ModifyColumnFamiliesRequest_Modification::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyColumnFamiliesRequest_Modification::id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyColumnFamiliesRequest_Modification::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}
inline void ModifyColumnFamiliesRequest_Modification::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}
inline void ModifyColumnFamiliesRequest_Modification::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}
inline ::std::string* ModifyColumnFamiliesRequest_Modification::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyColumnFamiliesRequest_Modification::release_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyColumnFamiliesRequest_Modification::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id)
}

// optional .google.bigtable.admin.v2.ColumnFamily create = 2;
inline bool ModifyColumnFamiliesRequest_Modification::has_create() const {
  return mod_case() == kCreate;
}
inline void ModifyColumnFamiliesRequest_Modification::set_has_create() {
  _oneof_case_[0] = kCreate;
}
inline void ModifyColumnFamiliesRequest_Modification::clear_create() {
  if (has_create()) {
    delete mod_.create_;
    clear_has_mod();
  }
}
inline  const ::google::bigtable::admin::v2::ColumnFamily& ModifyColumnFamiliesRequest_Modification::create() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
  return has_create()
      ? *mod_.create_
      : ::google::bigtable::admin::v2::ColumnFamily::default_instance();
}
inline ::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::mutable_create() {
  if (!has_create()) {
    clear_mod();
    set_has_create();
    mod_.create_ = new ::google::bigtable::admin::v2::ColumnFamily;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
  return mod_.create_;
}
inline ::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::release_create() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
  if (has_create()) {
    clear_has_mod();
    ::google::bigtable::admin::v2::ColumnFamily* temp = mod_.create_;
    mod_.create_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ModifyColumnFamiliesRequest_Modification::set_allocated_create(::google::bigtable::admin::v2::ColumnFamily* create) {
  clear_mod();
  if (create) {
    set_has_create();
    mod_.create_ = create;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create)
}

// optional .google.bigtable.admin.v2.ColumnFamily update = 3;
inline bool ModifyColumnFamiliesRequest_Modification::has_update() const {
  return mod_case() == kUpdate;
}
inline void ModifyColumnFamiliesRequest_Modification::set_has_update() {
  _oneof_case_[0] = kUpdate;
}
inline void ModifyColumnFamiliesRequest_Modification::clear_update() {
  if (has_update()) {
    delete mod_.update_;
    clear_has_mod();
  }
}
inline  const ::google::bigtable::admin::v2::ColumnFamily& ModifyColumnFamiliesRequest_Modification::update() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
  return has_update()
      ? *mod_.update_
      : ::google::bigtable::admin::v2::ColumnFamily::default_instance();
}
inline ::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::mutable_update() {
  if (!has_update()) {
    clear_mod();
    set_has_update();
    mod_.update_ = new ::google::bigtable::admin::v2::ColumnFamily;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
  return mod_.update_;
}
inline ::google::bigtable::admin::v2::ColumnFamily* ModifyColumnFamiliesRequest_Modification::release_update() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
  if (has_update()) {
    clear_has_mod();
    ::google::bigtable::admin::v2::ColumnFamily* temp = mod_.update_;
    mod_.update_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ModifyColumnFamiliesRequest_Modification::set_allocated_update(::google::bigtable::admin::v2::ColumnFamily* update) {
  clear_mod();
  if (update) {
    set_has_update();
    mod_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update)
}

// optional bool drop = 4;
inline bool ModifyColumnFamiliesRequest_Modification::has_drop() const {
  return mod_case() == kDrop;
}
inline void ModifyColumnFamiliesRequest_Modification::set_has_drop() {
  _oneof_case_[0] = kDrop;
}
inline void ModifyColumnFamiliesRequest_Modification::clear_drop() {
  if (has_drop()) {
    mod_.drop_ = false;
    clear_has_mod();
  }
}
inline bool ModifyColumnFamiliesRequest_Modification::drop() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.drop)
  if (has_drop()) {
    return mod_.drop_;
  }
  return false;
}
inline void ModifyColumnFamiliesRequest_Modification::set_drop(bool value) {
  if (!has_drop()) {
    clear_mod();
    set_has_drop();
  }
  mod_.drop_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.drop)
}

inline bool ModifyColumnFamiliesRequest_Modification::has_mod() const {
  return mod_case() != MOD_NOT_SET;
}
inline void ModifyColumnFamiliesRequest_Modification::clear_has_mod() {
  _oneof_case_[0] = MOD_NOT_SET;
}
inline ModifyColumnFamiliesRequest_Modification::ModCase ModifyColumnFamiliesRequest_Modification::mod_case() const {
  return ModifyColumnFamiliesRequest_Modification::ModCase(_oneof_case_[0]);
}
inline const ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest_Modification::internal_default_instance() {
  return &ModifyColumnFamiliesRequest_Modification_default_instance_.get();
}
// -------------------------------------------------------------------

// ModifyColumnFamiliesRequest

// optional string name = 1;
inline void ModifyColumnFamiliesRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModifyColumnFamiliesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyColumnFamiliesRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}
inline void ModifyColumnFamiliesRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}
inline void ModifyColumnFamiliesRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}
inline ::std::string* ModifyColumnFamiliesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModifyColumnFamiliesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModifyColumnFamiliesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name)
}

// repeated .google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification modifications = 2;
inline int ModifyColumnFamiliesRequest::modifications_size() const {
  return modifications_.size();
}
inline void ModifyColumnFamiliesRequest::clear_modifications() {
  modifications_.Clear();
}
inline const ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification& ModifyColumnFamiliesRequest::modifications(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_.Get(index);
}
inline ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest::mutable_modifications(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_.Mutable(index);
}
inline ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification* ModifyColumnFamiliesRequest::add_modifications() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification >*
ModifyColumnFamiliesRequest::mutable_modifications() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return &modifications_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest_Modification >&
ModifyColumnFamiliesRequest::modifications() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications)
  return modifications_;
}

inline const ModifyColumnFamiliesRequest* ModifyColumnFamiliesRequest::internal_default_instance() {
  return &ModifyColumnFamiliesRequest_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fbigtable_2fadmin_2fv2_2fbigtable_5ftable_5fadmin_2eproto__INCLUDED
